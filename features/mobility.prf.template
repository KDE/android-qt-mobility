
!symbian {
    INCLUDEPATH += $${MOBILITY_INCLUDE}
} else {
    load(data_caging_paths)
    contains(MOBILITY, contacts|versit|organizer) {
        INCLUDEPATH+=$$APP_LAYER_SYSTEMINCLUDE
    }

    INCLUDEPATH+=$$MW_LAYER_SYSTEMINCLUDE
}
mac: LIBS += -F$${MOBILITY_LIB}

LIBS+= -L$${MOBILITY_LIB}
QMAKE_RPATHDIR+=$${MOBILITY_LIB}

# versit depends on contacts
contains(MOBILITY, versit) {
    MOBILITY += contacts
}

simulator: qtAddLibrary(QtMobilitySimulator)

contains(MOBILITY, bearer) {
    DEFINES += QT_MOBILITY_BEARER
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtBearer
    qtAddLibrary(QtBearer)
    !equals(QT_MAJOR_VERSION,4)|!equals(QT_MINOR_VERSION, 6) {
        message(Qt Mobility Bearer API is deprecated when using Qt 4.7 or higher.)
        message(Please use source compatible replacement Bearer API in QtNetwork.)
    }
}

#for includes from src/global
INCLUDEPATH += $${MOBILITY_INCLUDE}/QtMobility

contains(MOBILITY, publishsubscribe) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtPublishSubscribe
    qtAddLibrary(QtPublishSubscribe)
}

contains(MOBILITY, location) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtLocation
    qtAddLibrary(QtLocation)
}

contains(MOBILITY, serviceframework) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtServiceFramework
    qtAddLibrary(QtServiceFramework)
}

contains(MOBILITY, systeminfo) {
    #QSystemInfo header requires QNetworkInterface
    QT += network
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtSystemInfo
    qtAddLibrary(QtSystemInfo)
}

contains(MOBILITY, multimedia) {
    QT += network
    contains(QT_CONFIG, opengl): QT += opengl
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtMultimediaKit
    qtAddLibrary(QtMultimediaKit)
}

contains(MOBILITY, contacts) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtContacts
    qtAddLibrary(QtContacts)
}

contains(MOBILITY, messaging) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtMessaging
    qtAddLibrary(QtMessaging)
}

contains(MOBILITY, versit) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtVersit
    qtAddLibrary(QtVersit)
    contains(MOBILITY, organizer) {
        INCLUDEPATH += $${MOBILITY_INCLUDE}/QtVersitOrganizer
        qtAddLibrary(QtVersitOrganizer)
    }
}

contains(MOBILITY, sensors) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtSensors
    qtAddLibrary(QtSensors)
}

contains(MOBILITY, feedback) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtFeedback
    qtAddLibrary(QtFeedback)
}

contains(MOBILITY, gallery) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtGallery
    qtAddLibrary(QtGallery)
}

contains(MOBILITY, organizer) {
    INCLUDEPATH += $${MOBILITY_INCLUDE}/QtOrganizer
    qtAddLibrary(QtOrganizer)
}

# Add dependency to QtMobility package to all projects besides QtMobility package itself.
# Mobility libs have UID3 0x2002AC89
# self-signed Mobility libs have UID3 0xE002AC89
symbian:contains(CONFIG, mobility):!isEmpty(default_deployment.pkg_prerules):!contains(TARGET.UID3, 0x2002AC89):!contains(TARGET.UID3, 0xE002AC89) {
    mobility_default_deployment.pkg_prerules += \
        "; Default dependency to QtMobility libraries" \
        "(0x2002AC89), 1, 1, 3, {\"QtMobility\"}"
    DEPLOYMENT += mobility_default_deployment
}
