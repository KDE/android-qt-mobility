/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a llcprequestor_adaptor_p.h:llcprequestor_adaptor.cpp com.nokia.nfc.LLCPRequestor.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef LLCPREQUESTOR_ADAPTOR_P_H_1294121544
#define LLCPREQUESTOR_ADAPTOR_P_H_1294121544

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface com.nokia.nfc.LLCPRequestor
 */
class LLCPRequestorAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.nokia.nfc.LLCPRequestor")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.nokia.nfc.LLCPRequestor\">\n"
"    <method name=\"Accept\">\n"
"      <arg direction=\"in\" type=\"o\"/>\n"
"      <arg direction=\"in\" type=\"v\"/>\n"
"      <arg direction=\"in\" type=\"v\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"Connect\">\n"
"      <arg direction=\"in\" type=\"o\"/>\n"
"      <arg direction=\"in\" type=\"v\"/>\n"
"      <arg direction=\"in\" type=\"v\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"Socket\">\n"
"      <arg direction=\"in\" type=\"o\"/>\n"
"      <arg direction=\"in\" type=\"v\"/>\n"
"      <arg direction=\"in\" type=\"v\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    LLCPRequestorAdaptor(QObject *parent);
    virtual ~LLCPRequestorAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void Accept(const QDBusObjectPath &in0, const QDBusVariant &in1, const QDBusVariant &in2, int in3);
    void Connect(const QDBusObjectPath &in0, const QDBusVariant &in1, const QDBusVariant &in2, int in3);
    void Socket(const QDBusObjectPath &in0, const QDBusVariant &in1, const QDBusVariant &in2, int in3);
Q_SIGNALS: // SIGNALS
};

#endif
