/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in a
** written agreement between you and Nokia.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

\page feedback.html
\title Feedback

\brief An API enabling a client to control the vibration of the device (when a vibrator is used)
 or the piezo feedback from the screen.

\ingroup mobility

The Feedback API enables a client to control the vibration of the device (when a vibrator is used)
or the piezo feedback from the screen. This is part of the Qt Mobility Project.

\tableofcontents

\section1 Namespace

The QtMobility APIs are placed into the \i{QtMobility} namespace. This is done
to facilitate the future migration of Mobility APIs into Qt. See the
\l {Quickstart Example}{Quickstart guide} for an example on how the
namespace impacts on application development.

\section1 Overview
The Feedback API provides an abstract feedback effect class \l{QFeedbackEffect} and a set of concrete feedback effect classes
(\l{QFeedbackHapticsEffect},\l{QFeedbackFileEffect}) which allow clients to play different kinds of feedback effects.

Device backends can implement these effects by implementing the related  \l{QFeedbackInterface} interfaces as plugins:

\list
    \o \l{QFeedbackHapticsInterface} for \l{QFeedbackHapticsEffect}
    \o \l{QFeedbackFileInterface} for \l{QFeedbackFileEffect}
    \o \l{QFeedbackThemeInterface} for the builtin theme effects (\l{QFeedbackEffect::ThemeEffect}).
\endlist

\section1 Usage
\snippet ../../doc/src/snippets/qtfeedbackdocsample/qtfeedbackdocsample.cpp Complete example

\section1 Main Classes
\list
    \o \l{QFeedbackEffect}
    \o \l{QFeedbackHapticsEffect}
    \o \l{QFeedbackFileEffect}
    \o \l{QFeedbackActuator}
    \o \l{QFeedbackInterface}
\endlist
*/
