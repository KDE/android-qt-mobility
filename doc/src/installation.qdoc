/****************************************************************************
**
** Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page installation.html

\title Installation Guide
\tableofcontents

\section1 Get the Qt Mobility API Package
To begin, obtain the most recent distrubution package from 
\l {http://get.qt.nokia.com}

\section1 Pre-requisites & Dependencies
To install Qt Mobility you must already have installed
Qt 4.6 or higher, visit \l {http://get.qt.nokia.com} to obtain
a copy.

Qt Mobility Project APIs are comprised of a number of domains. Some of
these domains have dependencies and these are outlined below:

\table 80%
\header
    \o API  \o Dependency
\row
    \o  Messaging
    \o
        The linux backend depends on QMF.
        For more information on QMF visit
        \l {http://labs.trolltech.com/blogs/category/qtmessaging}
        {QMF Labs article}

        The Windows Mobile backend depends on ActiveSync version 4.5.

        While not supported for this release the Windows Desktop backend 
        requires Microsoft Outlook 2003 or later, and Microsoft Windows XP 
        to be installed.

        The messaging API SMS/MMS functionality requires that the platform 
        provides SMS/MMS facilites. Email functionality requires that an email 
        account is available on the platform.
\row
    \o  Service Framework
    \o 
        The service framework depends on SQLite version 3 and that
        Qt has been built with an sqlite driver.  Building
        the driver by Qt is most easily achieved by
        using one of the following configure options:
        \c {-qt-sql-sqlite, -plugin-sql-sqlite or -system-sqlite}
\row
    \o  Multimedia
    \o
        The multimedia component depends on the QtMultimedia
        module in Qt.  Qt by default is configured to make this
        module with the \c {-multimedia} option.

        The Symbian backend requires a Media Player SDK Plug-in
        http://wiki.forum.nokia.com/index.php/SDK_API_Plugin.  For
        version 3.1 the Media Player Engine API is required and for
        versions 3.2 and 5.0 the Media Player Utility API is
        required.  The Media Player Engine API for version 3.1 does
        not include libraries for the emulator, so for that version
        the Symbian backend can only be compiled for a device.

        The linux X11 backend requires that gstreamer be installed, including
        libgstreamer, gstreamer-devel, plugins-base and plugins-good packages. 
        The linux backend was tested with gstreamer 0.10.19 and newer versions.
\row
    \o Systeminfo
    \o
       The Linux backend depands on QDBus, HAL and NetworkManager, although Systeminfo will compile 
       without them, there will be reduced functionality.
       
       On Mac OS X, Systeminfo depends on the 10.6 SDK (XCode 3.2.1), although it will compile
       with older SDK's there will be reduced functionality.
\endtable

\section1 Unpacking
Unpack the Qt Mobility archive if you have not done so already,
on Unix (X11 and Mac):
\code
        cd /tmp
        gunzip %DISTNAME%.tar.gz        #uncompress the archive
        tar xvf %DISTNAME%.tar          #unpack it
\endcode

This creates the directory \c {/tmp/%DISTNAME%} containing the files
from the archive.  We only support the GNU version of the tar
archiving utility.  Note on some systems it is called gtar.

On windows, uncompress the zip file into the directory you want
Qt Mobility Project installed, extracting to \c {C:\QtMobility}
will create the directory \c {C:\QtMobility\%DISTNAME%}

NOTE: The install path must not contain any spaces.

\section1 Building
\section2 Building On Unix

To configure the Qt Mobility libraries for your machine, run the
\c./configure script in the package directory.

To specify the installation directory you may use the -prefix
option.  Not passing a prefix installs the
mobility libraries into $PWD/install.

\code
    cd /tmp/%DISTNAME%
    ./configure -prefix $TARGET_DIR
\endcode
    
    Type \c {./configure -help} to get a list of all available options.
    To create all the libraries and tools, type:
\code
    make
\endcode

    To install the libraries and tools to $TARGET_DIR, type:
\code
    make install
\endcode

    If you have specified an install directory with root ownership,
    you will need to type:
\code
    su -c "make install"
        or
    sudo make install
\endcode
   
    and enter in the appropriate password.

    Note that on some systems the make utility is named differently,
    e.g. gmake.  The configure script tells you which make utility to
    use.

\section2 Building On Windows
    To configure the Qt Mobility libraries for your machine, run
    configure in the package directory.

    To specify the installation directory you may use the -prefix
    option.  Not passing a prefix installs the mobility
    libraries into an install directory within the current working
    directory.

    \code
        cd c:\QtMobility\%DISTNAME%
        configure -prefix %TARGET_DIR%
    \endcode

    Type \c {configure -help} to get a list of all available options.

    The actual commands needed to build and install Qt Mobility depends on your
    development system.  For Microsoft Visual Studio to create and install the 
    libraries and tools type:
\code 
    nmake
    nmake install
\endcode

\section2 Building Individual Qt Mobility Components

    Qt Mobility is comprised of several components but all of
    these may not need to be built.  To build a single component,
    perform the configure step as outlined above,
    and then perform the make step in the appropriate directory
    to create the desired library.

    The directory structure will look something like
\code
    ./src/bearer
    ./src/contacts
    ...
    ./src/systeminfo
\endcode

    e.g. To build bearer on Unix:
\code
    cd ./src/bearer
    make
    make install
\endcode

    or on Windows:
\code
    cd src\bearer
    nmake
    nmake install
\endcode

\section1 Environment Variables
In order to use QtMobility some environment variables
need to be extended to locate the libraries, which are
placed in the lib directory of the install path.

On Unix:
LD_LIBRARY_PATH should be extended to include:
\c {$TARGET_DIR/lib}

In .profile (if your Unix shell is bash,ksh,zsh or sh),
add the following lines
\code   
    LD_LIBRARY_PATH=$TARGET_DIR/lib:$LD_LIBRARY_PATH
    export LD_LIBRARY_PATH
\endcode

In .login (incase your shell is csh or tcsh), add the following
line:
\code
    setenv LD_LIBRARY_PATH=$TARGET_DIR/lib:$LD_LIBRARY_PATH
\endcode

If you use a different Unix shell, please modify your
your environment variables accordingly.

On Windows:
PATH should be extended to include:
\c {C:\%TARGET_DIR%\lib}

For newer versions of windows, PATH can be extended
through "Start->Settings->Control Panel->System->Advanced->
Environment variables" and for older versions by 
editing \c{C:\autoexec.bat}

And now the installation is complete, we hope you enjoy 
using Qt Mobility.
*/
