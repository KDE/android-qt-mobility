/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \group qml-organizer
    \title QML Organizer Plugin
    QML Support for the QtMobility Project Organizer API.

*/

/*!
    \page qml-organizer.html

    \title Organizer QML Plugin

    \brief A QML plugin for the QtMobility Project Organizer API.


    \section1 Overview
    The identifying string for this component is \i {"QtMobility.organizer"}.
    Use this in the QML \i {import} statement.

    The Organizer API enables a client to request calendar, schedule and
    personal data from local or remote backends. The QML Organizer Plugin
    delivers these capabilities in an easy to use form.

    \section2 Organizer Items
    The \l {OrganizerItem} element provides a generic interface for accessing
    events, todos, journals and notes. To actually access specific fields
    of an item, convenience sub elements of OrganizerItem are offered.
    These are Event, Todo, Journal and Note. Additionally, EventOccurrence
    and TodoOccurrence can be used for manipulating occurrences of event or
    todos.

    \section2 Recurring Items
    A recurring item is an item that occurs more than once; for example, a
    meeting that occurs every week for the next 10 weeks. A recurring item
    is created by creating an Event or Todo and setting a RecurrenceRule
    on it to specify the rules for when it should recur. See
    \l {Recurrence} and \l {RecurrenceRule} for detail references.

    \section2 Collections
    Every item stored in a organizer store belongs to exactly one
    collection. A collection can have properties such as a name, a "color",
    a specified icon, a description, and so on. Collections may be added or
    removed if the backend store supports those operations, or modified.
    There will always be at least one collection in an organizer, and the
    organizer manager will always have a default collection into which
    items are saved if no other collection is specified.

    \section2 Organizer Item Details
    Several sub elements of ItemDetail are provided as part of the
    QtMobility Organizer API. They are general in design but are intended
    to fulfill specific use-cases. Please note that certain backends may
    choose not to support one or more of these elements as they appear
    here; they may offer their own which provide similar functionality.

    \section2 Organizer Filters
    The Organizer QML plugin supplies filters to search for organizer items
    with particular values for various properties in the organizer item details.

    \section2 Times in Organizer
    All time type properties in QML Organizer such as OrganizerItem.itemEndTime etc
    are returned in local time. But when assign new values to these properties, the
    time specs remain the same while saving these values into backend organizer engines.
    \sa {OrganizerItem::isFloatingTime}.
 
    \section2 Organizer Elements

    \annotatedlist qml-organizer
*/


