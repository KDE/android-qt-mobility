/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example querymessages
    \title Query Messages Example



    This simple example shows how to query messages stored in the system,
    using the QtMobility Messaging API.

    Messages are queried by using the QMessageManager interface which
    provides access to the message data stored in the system.  We will
    use the \l{QMessageManager::queryMessages()}{queryMessages} function to
    locate messages that match a filter object which defines the
    properties of the messages we would like to find.

    We define our query properties like this:

    \snippet    ../../examples/querymessages/main.cpp setup-query

    Then we use these properties to extract the set of matching message
    identifiers from the QMessageManager instance:

    \snippet    ../../examples/querymessages/main.cpp perform-query

    Now we can iterate over our list of message identifiers, retrieving
    a QMessage instance containing the details of each message in turn:

    \snippet    ../../examples/querymessages/main.cpp iterate-results

    For each message we located, we now generate an output element
    corresponding to each data item requested at the command line:

    \snippet    ../../examples/querymessages/main.cpp generate-output

    Finally, we print the results accumulated for each message that
    matched our query.

    \snippet    ../../examples/querymessages/main.cpp print-result

*/


