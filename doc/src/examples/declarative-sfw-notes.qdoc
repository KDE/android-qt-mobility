/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Solutions Commercial License Agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** Please note Third Party Software included with Qt Solutions may impose
** additional restrictions and it is the user's responsibility to ensure
** that they have met the licensing requirements of the GPL, LGPL, or Qt
** Solutions Commercial license and the relevant license of the Third
** Party Software they are using.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\example declarative-sfw-notes

\title Declarative Service Framework Notes Manager

This example demonstrates how to use the \l{notesmanagerplugin}{Notes Manager service plugin}
to implement a notes managing application with QML as the declarative user-interface.  There
is also a non-QML counterpart which demonstrates an identical application using standard Qt
user-interface tools.  See \l{sfw-notes}{Service Framework Notes Manager} for more details.


\bold {Explanation}

The QServiceManager and QServiceInterfaceDescriptor API are provided to QML through the use
of a plugin-based system. The resulting class is referred to as QDeclarativeService, which
provides users with the ability of accessing services by loading the interfaces specified
using the QML element 'Service'.

This example demonstrates how QML can be used to completely control the logic of the 
application, using a combination of declarative elements and Javascript in the QML file. To run
the application refer to the README file supplied which
includes instructions on how to setup and run the QML file demonstrating service framework 
capabilities.

There is also  another service framework example that demonstrates how to use the QML library 
plugin browse a list of services to select for dialing usage. See 
\l{declarative-sfw-dialer}{Declarative Service Framework Dialer} for a detailed explanation.

The section below explains how QML can be used to emulate to exact functionality of the
alternate Qt/C++ example.


\bold {QML File}

The very first step is to import our registered types with the following:
\snippet declarative-sfw-notes/declarative-sfw-notes.qml 0

Now to obtain the default service with a specific interface name from within QML we can
use the Service wrapper item as follows:
\snippet declarative-sfw-notes/declarative-sfw-notes.qml 6

In most cases we will need the service to be available to all parts of the QML file, meaning
the actual QObject returned from the service wrapper needs to be a global property.
\snippet declarative-sfw-notes/declarative-sfw-notes.qml 1

The interfaceName property of the Service item has READ and WRITE methods which can be used
to obtain a new service instance and check if there was a valid default service.
\snippet declarative-sfw-notes/declarative-sfw-notes.qml 2

With a valid reference which points to the service plugin class we can now invoke methods 
directly from the Notes Manager plugin. The example below shows how to obtain a list of
notes and delete one from the notes manager database through QML.
\snippet declarative-sfw-notes/declarative-sfw-notes.qml 3

The Notes Manager plugin also provides readable functions which return the values of a
single note and can be utilized to display on the UI as follows:
\snippet declarative-sfw-notes/declarative-sfw-notes.qml 4
\snippet declarative-sfw-notes/declarative-sfw-notes.qml 5

*/
