/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example sysinfo
    \title System Information Example


    \image sysinfo.png


    The System Information example uses a tabbed dialog, with each tab
    representing a particular type of data: versions, network and so on.

    To access the information, the example creates objects belonging to the System Information classes

    \annotatedlist systeminfo

    Here are some examples that show how the example application reads the
    device information.

    The current language

    \snippet ../../examples/sysinfo/dialog.cpp  lang

    Device information, starting with the battery level

    \snippet ../../examples/sysinfo/dialog.cpp  batterystatus1

    \dots

    \snippet ../../examples/sysinfo/dialog.cpp  batterystatus2

    The battery status is an enum, \l {QSystemBatteryInfo::BatteryStatus}, that indicates
    various battery levels and their significance, e.g., QSystemBatteryInfo::BatteryVeryLow.

    The manufacturer id and the product name

    \snippet ../../examples/sysinfo/dialog.cpp  manuf-id
    \dots
    \snippet ../../examples/sysinfo/dialog.cpp  productName

    Other information is stored as bitwise flags. The following code shows
    the input methods being determined using flags.

    \snippet ../../examples/sysinfo/dialog.cpp  inputMethod flags

    Various capabilities of the device can be found by testing for features.
    In the example a Feature combo box, on the General tab, has a hard coded
    list of features. When a listed feature is selected the getFeature()
    function is called with the index which is handled by applying a test to
    the corresponding feature.

    \snippet ../../examples/sysinfo/dialog.cpp  feature
    \dots
    \snippet ../../examples/sysinfo/dialog.cpp  feature-bluetooth
    \dots
    \snippet ../../examples/sysinfo/dialog.cpp  feature test


*/



