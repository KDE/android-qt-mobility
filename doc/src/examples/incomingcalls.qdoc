/****************************************************************************
**
** Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example incomingcalls
    \title Incoming Call Simulator

    \tableofcontents

    \section1 Incoming Calls

    This example shows how to access contact information asynchronously using the \l{Contacts}{Contacts API}.
    It generates a large number of contacts automatically, saves them to an in-memory, anonymous contacts store,
    and allows the user to view them in a model view.  It then simulates incoming calls from random phone numbers,
    and displays information about the contact calling if the random phone number matches a phone number of a
    generated contact.

    \section2 Motivation
    This application was written to provide an example to developers of how to use the Qt Contacts API.
    It uses an asynchronous method to retrieve details of contacts on demand, and displays them in a model view.
    It also provides an example of simple string matching on contact phone numbers to perform identification.

    \section2 Use Case
    A real address book may contain hundreds or even thousands of contacts.  Being able to load a small portion
    of those contacts on-demand as required (for example, those visible in the UI currently, plus some cached),
    as opposed to the entire dataset, is a vital requirement.

    \section2 Interface
    The application is not very interactive.  The only allowable user interaction is the ability to scroll around
    the list of contacts, and to view the details of contacts from which a simulated phone call is coming.

    \section2 Known Issues
    The example is not intended to be feature complete.  Also, the example model view and result caching engine
    performs superfluous asynchronous requests (i.e., for data already contained in the contact cache).
*/
