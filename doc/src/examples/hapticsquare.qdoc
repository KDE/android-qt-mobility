/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Solutions Commercial License Agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** Please note Third Party Software included with Qt Solutions may impose
** additional restrictions and it is the user's responsibility to ensure
** that they have met the licensing requirements of the GPL, LGPL, or Qt
** Solutions Commercial license and the relevant license of the Third
** Party Software they are using.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example hapticsquare
    \title Hapticsquare

    \tableofcontents

    \section1 Overview

    This example shows how to use simple haptic effects in an application via
    the \l{Feedback}{Qt Mobility Feedback API}.

    It provides an example of how to use the Qt Mobility libraries to:
    \list
    \o play "system theme" haptic effects corresponding to certain predefined events
    \o play a custom effect, single or repeating
    \endlist

    \section2 Use Case

    Compelling applications attempt to immerse the user in the application
    experience.  There are many elements to an immersive experience, including
    a consistent and beautiful graphical user interface design, unobtrusive yet
    informative sound design, and intuitive program flow.  Another important
    aspect of immersive applications in tactile feedback and haptic effects.

    The \l{Feedback}{Qt Mobility Feedback API} allows application developers to
    include tactile feedback into their application via a simple to use and
    extensible API.  Some common uses for tactile feedback are:
    \list
    \o maintain consistency with system theme for tactile feedback about interface events (button clicks, scrolling, etc)
    \o notify the user of an application-specific event (invalid operation, status change, etc)
    \o multisensory user interface (status can be "read" by touching the screen, tactile interfaces, etc)
    \o immersive gaming experiences (explosions, impacts, collisions, etc)
    \endlist

    This example application provides some short snippets which illustrate how
    the first two of those use cases may be fulfilled.

    \section2 Interface
    The application is designed to work on desktop and mobile platforms with
    minimal differences in code between the platforms.  The interface consists
    of four buttons arranged into a square, each of which causes a different
    tactile effect to be played by the default tactile effect provider plugin
    on the platform.

    The buttons are labeled "Rumble!", "Ocean", "Click" and "Oops!".
    \list
    \o "Rumble!" plays a non-repeating rumble with symmetric attack and decay
    \o "Ocean" is a toggle button which plays a repeating ocean wave-like effect
    \o "Click" plays the system theme effect for a basic button click
    \o "Oops!" plays the system theme effect for a negative or invalid response
    \endlist

    \section2 Known Issues
    The example is not intended to exercise the entire API.  Instead, it is a
    simple example which illustrates some simple uses of the API.
    Also, the example will not work correctly on platforms which do not have a
    QFeedbackHapticInterface (haptic effect provider) plugin loaded.  On such
    platforms, clicking the buttons will have no effect.

    In particular, the Maemo5 platform currently has no haptic effect provider
    plugin; it is a work in progress.
*/
