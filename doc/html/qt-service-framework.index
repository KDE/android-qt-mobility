<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="Qt Service Framework Reference Documentation" version="">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="" module="">
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractSecuritySession" href="qabstractsecuritysession.html" location="qabstractsecuritysession.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractSecuritySession" fullname="QAbstractSecuritySession::QAbstractSecuritySession" href="qabstractsecuritysession.html#QAbstractSecuritySession" location="qabstractsecuritysession.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractSecuritySession(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractSecuritySession" fullname="QAbstractSecuritySession::~QAbstractSecuritySession" href="qabstractsecuritysession.html#dtor.QAbstractSecuritySession" location="qabstractsecuritysession.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractSecuritySession()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAllowed" fullname="QAbstractSecuritySession::isAllowed" href="qabstractsecuritysession.html#isAllowed" location="qabstractsecuritysession.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isAllowed(const QStringList &amp; capabilities)">
                <parameter left="const QStringList &amp;" right="" name="capabilities" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServiceManager" href="qservicemanager.html" location="qservicemanager.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Scope" fullname="QServiceManager::Scope" href="qservicemanager.html#Scope-enum" location="qservicemanager.h">
                <value name="UserScope" value="0"></value>
                <value name="SystemScope" value="1"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QServiceManager::Error" href="qservicemanager.html#Error-enum" location="qservicemanager.h">
                <value name="NoError" value="0"></value>
                <value name="StorageAccessError" value="1"></value>
                <value name="InvalidServiceLocation" value="2"></value>
                <value name="InvalidServiceXml" value="3"></value>
                <value name="InvalidServiceInterfaceDescriptor" value="4"></value>
                <value name="ServiceAlreadyExists" value="5"></value>
                <value name="ImplementationAlreadyExists" value="6"></value>
                <value name="PluginLoadingFailed" value="7"></value>
                <value name="ComponentNotFound" value="8"></value>
                <value name="ServiceCapabilityDenied" value="9"></value>
                <value name="UnknownError" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceManager" fullname="QServiceManager::QServiceManager" href="qservicemanager.html#QServiceManager" location="qservicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceManager" fullname="QServiceManager::QServiceManager" href="qservicemanager.html#QServiceManager-2" location="qservicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QServiceManager(Scope scope, QObject * parent)">
                <parameter left="Scope" right="" name="scope" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceManager" fullname="QServiceManager::~QServiceManager" href="qservicemanager.html#dtor.QServiceManager" location="qservicemanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceManager()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QServiceManager::scope" href="qservicemanager.html#scope" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Scope" signature="scope() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findServices" fullname="QServiceManager::findServices" href="qservicemanager.html#findServices" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="findServices(const QString &amp; interfaceName) const">
                <parameter left="const QString &amp;" right="" name="interfaceName" default="QString()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findInterfaces" fullname="QServiceManager::findInterfaces" href="qservicemanager.html#findInterfaces" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QServiceInterfaceDescriptor&gt;" signature="findInterfaces(const QServiceFilter &amp; filter) const">
                <parameter left="const QServiceFilter &amp;" right="" name="filter" default="QServiceFilter()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findInterfaces" fullname="QServiceManager::findInterfaces" href="qservicemanager.html#findInterfaces-2" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QServiceInterfaceDescriptor&gt;" signature="findInterfaces(const QString &amp; serviceName) const">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadInterface" fullname="QServiceManager::loadInterface" href="qservicemanager.html#loadInterface" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QObject *" signature="loadInterface(const QString &amp; interfaceName, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
                <parameter left="QServiceContext *" right="" name="context" default="0"></parameter>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadInterface" fullname="QServiceManager::loadInterface" href="qservicemanager.html#loadInterface-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QObject *" signature="loadInterface(const QServiceInterfaceDescriptor &amp; descriptor, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="descriptor" default=""></parameter>
                <parameter left="QServiceContext *" right="" name="context" default="0"></parameter>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getInterface" fullname="QServiceManager::getInterface" href="qservicemanager.html#getInterface" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="T *" signature="getInterface(const QString &amp; interfaceName, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
                <parameter left="QServiceContext *" right="" name="context" default="0"></parameter>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getInterface" fullname="QServiceManager::getInterface" href="qservicemanager.html#getInterface-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="T *" signature="getInterface(const QServiceInterfaceDescriptor &amp; serviceDescriptor, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="serviceDescriptor" default=""></parameter>
                <parameter left="QServiceContext *" right="" name="context" default=""></parameter>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addService" fullname="QServiceManager::addService" href="qservicemanager.html#addService" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addService(const QString &amp; xmlFilePath)">
                <parameter left="const QString &amp;" right="" name="xmlFilePath" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addService" fullname="QServiceManager::addService" href="qservicemanager.html#addService-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="addService(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeService" fullname="QServiceManager::removeService" href="qservicemanager.html#removeService" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeService(const QString &amp; serviceName)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInterfaceDefault" fullname="QServiceManager::setInterfaceDefault" href="qservicemanager.html#setInterfaceDefault" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setInterfaceDefault(const QString &amp; service, const QString &amp; interfaceName)">
                <parameter left="const QString &amp;" right="" name="service" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInterfaceDefault" fullname="QServiceManager::setInterfaceDefault" href="qservicemanager.html#setInterfaceDefault-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="setInterfaceDefault(const QServiceInterfaceDescriptor &amp; descriptor)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="descriptor" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceDefault" fullname="QServiceManager::interfaceDefault" href="qservicemanager.html#interfaceDefault" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QServiceInterfaceDescriptor" signature="interfaceDefault(const QString &amp; interfaceName) const">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QServiceManager::error" href="qservicemanager.html#error" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceAdded" fullname="QServiceManager::serviceAdded" href="qservicemanager.html#serviceAdded" location="qservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="serviceAdded(const QString &amp; serviceName, QServiceManager::Scope scope)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""></parameter>
                <parameter left="QServiceManager::Scope" right="" name="scope" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceRemoved" fullname="QServiceManager::serviceRemoved" href="qservicemanager.html#serviceRemoved" location="qservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="serviceRemoved(const QString &amp; serviceName, QServiceManager::Scope scope)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""></parameter>
                <parameter left="QServiceManager::Scope" right="" name="scope" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServicePluginInterface" href="qserviceplugininterface.html" location="qserviceplugininterface.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="createInstance" fullname="QServicePluginInterface::createInstance" href="qserviceplugininterface.html#createInstance" location="qserviceplugininterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QObject *" signature="createInstance(const QServiceInterfaceDescriptor &amp; descriptor, QServiceContext * context, QAbstractSecuritySession * securitySession)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="descriptor" default=""></parameter>
                <parameter left="QServiceContext *" right="" name="context" default=""></parameter>
                <parameter left="QAbstractSecuritySession *" right="" name="securitySession" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installService" fullname="QServicePluginInterface::installService" href="qserviceplugininterface.html#installService" location="qserviceplugininterface.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="installService()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uninstallService" fullname="QServicePluginInterface::uninstallService" href="qserviceplugininterface.html#uninstallService" location="qserviceplugininterface.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="uninstallService()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html" location="qserviceinterfacedescriptor.h" bases="" module="">
            <contents name="namespaces" title="Namespaces" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PropertyKey" fullname="QServiceInterfaceDescriptor::PropertyKey" href="qserviceinterfacedescriptor.html#PropertyKey-enum" location="qserviceinterfacedescriptor.h">
                <value name="Capabilities" value="0"></value>
                <value name="Location" value="1"></value>
                <value name="ServiceDescription" value="2"></value>
                <value name="InterfaceDescription" value="3"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceInterfaceDescriptor" fullname="QServiceInterfaceDescriptor::QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html#QServiceInterfaceDescriptor" location="qserviceinterfacedescriptor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceInterfaceDescriptor()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceInterfaceDescriptor" fullname="QServiceInterfaceDescriptor::QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html#QServiceInterfaceDescriptor-2" location="qserviceinterfacedescriptor.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QServiceInterfaceDescriptor(const QServiceInterfaceDescriptor &amp; other)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceInterfaceDescriptor" fullname="QServiceInterfaceDescriptor::~QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html#dtor.QServiceInterfaceDescriptor" location="qserviceinterfacedescriptor.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceInterfaceDescriptor()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QServiceInterfaceDescriptor::operator=" href="qserviceinterfacedescriptor.html#operator=" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QServiceInterfaceDescriptor &amp;" signature="operator=(const QServiceInterfaceDescriptor &amp; other)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QServiceInterfaceDescriptor::operator==" href="qserviceinterfacedescriptor.html#operator==" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QServiceInterfaceDescriptor &amp; other) const">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QServiceInterfaceDescriptor::operator!=" href="qserviceinterfacedescriptor.html#operator!=" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QServiceInterfaceDescriptor &amp; other) const">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceName" fullname="QServiceInterfaceDescriptor::serviceName" href="qserviceinterfacedescriptor.html#serviceName" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceName" fullname="QServiceInterfaceDescriptor::interfaceName" href="qserviceinterfacedescriptor.html#interfaceName" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="interfaceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="majorVersion" fullname="QServiceInterfaceDescriptor::majorVersion" href="qserviceinterfacedescriptor.html#majorVersion" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="majorVersion() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minorVersion" fullname="QServiceInterfaceDescriptor::minorVersion" href="qserviceinterfacedescriptor.html#minorVersion" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="minorVersion() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QServiceInterfaceDescriptor::isValid" href="qserviceinterfacedescriptor.html#isValid" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inSystemScope" fullname="QServiceInterfaceDescriptor::inSystemScope" href="qserviceinterfacedescriptor.html#inSystemScope" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="inSystemScope() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QServiceInterfaceDescriptor::property" href="qserviceinterfacedescriptor.html#property" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="property(QServiceInterfaceDescriptor::PropertyKey key) const">
                <parameter left="QServiceInterfaceDescriptor::PropertyKey" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customProperty" fullname="QServiceInterfaceDescriptor::customProperty" href="qserviceinterfacedescriptor.html#customProperty" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="customProperty(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" href="qserviceinterfacedescriptor.html#operator&lt;&lt;" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QServiceInterfaceDescriptor" type="QDataStream &amp;" signature="operator&lt;&lt;(QDataStream &amp; out, const QServiceInterfaceDescriptor &amp; dc)">
            <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
            <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="dc" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;&gt;" href="qserviceinterfacedescriptor.html#operator&gt;&gt;" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QServiceInterfaceDescriptor" type="QDataStream &amp;" signature="operator&gt;&gt;(QDataStream &amp; in, QServiceInterfaceDescriptor &amp; dc)">
            <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
            <parameter left="QServiceInterfaceDescriptor &amp;" right="" name="dc" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServiceContext" href="qservicecontext.html" location="qservicecontext.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="clientId" fullname="QServiceContext::clientId" href="qservicecontext.html#clientId-prop" location="qservicecontext.h" type="QString">
                <getter name="clientId"></getter>
                <setter name="setClientId"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="clientName" fullname="QServiceContext::clientName" href="qservicecontext.html#clientName-prop" location="qservicecontext.h" type="QString">
                <getter name="clientName"></getter>
                <setter name="setClientName"></setter>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ContextType" fullname="QServiceContext::ContextType" href="qservicecontext.html#ContextType-enum" location="qservicecontext.h">
                <value name="DisplayContext" value="0"></value>
                <value name="ScriptContext" value="1"></value>
                <value name="UserDefined" value="100"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceContext" fullname="QServiceContext::QServiceContext" href="qservicecontext.html#QServiceContext" location="qservicecontext.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceContext(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceContext" fullname="QServiceContext::~QServiceContext" href="qservicecontext.html#dtor.QServiceContext" location="qservicecontext.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceContext()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notify" fullname="QServiceContext::notify" href="qservicecontext.html#notify" location="qservicecontext.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="notify(ContextType type, const QVariant &amp; data)">
                <parameter left="ContextType" right="" name="type" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="data" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clientId" fullname="QServiceContext::clientId" href="qservicecontext.html#clientId-prop" location="qservicecontext.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="clientId" type="QString" signature="clientId() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setClientId" fullname="QServiceContext::setClientId" href="qservicecontext.html#clientId-prop" location="qservicecontext.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="clientId" type="void" signature="setClientId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clientName" fullname="QServiceContext::clientName" href="qservicecontext.html#clientName-prop" location="qservicecontext.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="clientName" type="QString" signature="clientName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setClientName" fullname="QServiceContext::setClientName" href="qservicecontext.html#clientName-prop" location="qservicecontext.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="clientName" type="void" signature="setClientName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" href="qservicefilter.html" location="qservicefilter.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="VersionMatchRule" fullname="QServiceFilter::VersionMatchRule" href="qservicefilter.html#VersionMatchRule-enum" location="qservicefilter.h">
                <value name="ExactVersionMatch" value="0"></value>
                <value name="MinimumVersionMatch" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" fullname="QServiceFilter::QServiceFilter" href="qservicefilter.html#QServiceFilter" location="qservicefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceFilter" fullname="QServiceFilter::~QServiceFilter" href="qservicefilter.html#dtor.QServiceFilter" location="qservicefilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceFilter()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" fullname="QServiceFilter::QServiceFilter" href="qservicefilter.html#QServiceFilter-2" location="qservicefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QServiceFilter(const QServiceFilter &amp; other)">
                <parameter left="const QServiceFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" fullname="QServiceFilter::QServiceFilter" href="qservicefilter.html#QServiceFilter-3" location="qservicefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QServiceFilter(const QString &amp; interfaceName, const QString &amp; version, QServiceFilter::VersionMatchRule rule)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="version" default="QString()"></parameter>
                <parameter left="QServiceFilter::VersionMatchRule" right="" name="rule" default="QServiceFilter::MinimumVersionMatch"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QServiceFilter::operator=" href="qservicefilter.html#operator=" location="qservicefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QServiceFilter &amp;" signature="operator=(const QServiceFilter &amp; other)">
                <parameter left="const QServiceFilter &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInterface" fullname="QServiceFilter::setInterface" href="qservicefilter.html#setInterface" location="qservicefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInterface(const QString &amp; interfaceName, const QString &amp; version, QServiceFilter::VersionMatchRule rule)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="version" default="QString()"></parameter>
                <parameter left="QServiceFilter::VersionMatchRule" right="" name="rule" default="QServiceFilter::MinimumVersionMatch"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceName" fullname="QServiceFilter::setServiceName" href="qservicefilter.html#setServiceName" location="qservicefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServiceName(const QString &amp; serviceName)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceName" fullname="QServiceFilter::serviceName" href="qservicefilter.html#serviceName" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceName" fullname="QServiceFilter::interfaceName" href="qservicefilter.html#interfaceName" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="interfaceName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceMajorVersion" fullname="QServiceFilter::interfaceMajorVersion" href="qservicefilter.html#interfaceMajorVersion" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="interfaceMajorVersion() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceMinorVersion" fullname="QServiceFilter::interfaceMinorVersion" href="qservicefilter.html#interfaceMinorVersion" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="interfaceMinorVersion() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="versionMatchRule" fullname="QServiceFilter::versionMatchRule" href="qservicefilter.html#versionMatchRule" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="VersionMatchRule" signature="versionMatchRule() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customKeys" fullname="QServiceFilter::customKeys" href="qservicefilter.html#customKeys" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="customKeys() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customProperty" fullname="QServiceFilter::customProperty" href="qservicefilter.html#customProperty" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="customProperty(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomProperty" fullname="QServiceFilter::setCustomProperty" href="qservicefilter.html#setCustomProperty" location="qservicefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomProperty(const QString &amp; key, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
                <parameter left="const QString &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeCustomProperty" fullname="QServiceFilter::removeCustomProperty" href="qservicefilter.html#removeCustomProperty" location="qservicefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeCustomProperty(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearCustomProperties" fullname="QServiceFilter::clearCustomProperties" href="qservicefilter.html#clearCustomProperties" location="qservicefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearCustomProperties()"></function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" href="qservicefilter.html#operator&lt;&lt;-3" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" relates="QServiceFilter" type="QDataStream &amp;" signature="operator&lt;&lt;(QDataStream &amp; out, const QServiceFilter &amp; sf)">
            <parameter left="QDataStream &amp;" right="" name="out" default=""></parameter>
            <parameter left="const QServiceFilter &amp;" right="" name="sf" default=""></parameter>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&gt;&gt;" href="qservicefilter.html#operator&gt;&gt;-2" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" relates="QServiceFilter" type="QDataStream &amp;" signature="operator&gt;&gt;(QDataStream &amp; in, QServiceFilter &amp; sf)">
            <parameter left="QDataStream &amp;" right="" name="in" default=""></parameter>
            <parameter left="QServiceFilter &amp;" right="" name="sf" default=""></parameter>
        </function>
        <page access="public" status="commendable" name="bluetoothtransferplugin" href="bluetoothtransferplugin.html" subtype="example" title="Bluetooth Transfer Plugin Example" fulltitle="Bluetooth Transfer Plugin Example" subtitle="" location="bluetoothtransferplugin.qdoc">
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransfer.cpp" href="bluetoothtransferplugin-bluetoothtransfer-cpp.html" subtype="file" title="" fulltitle="bluetoothtransfer.cpp Example File" subtitle="bluetoothtransferplugin/bluetoothtransfer.cpp" location=""></page>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransfer.h" href="bluetoothtransferplugin-bluetoothtransfer-h.html" subtype="file" title="" fulltitle="bluetoothtransfer.h Example File" subtitle="bluetoothtransferplugin/bluetoothtransfer.h" location=""></page>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferplugin.cpp" href="bluetoothtransferplugin-bluetoothtransferplugin-cpp.html" subtype="file" title="" fulltitle="bluetoothtransferplugin.cpp Example File" subtitle="bluetoothtransferplugin/bluetoothtransferplugin.cpp" location=""></page>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferplugin.h" href="bluetoothtransferplugin-bluetoothtransferplugin-h.html" subtype="file" title="" fulltitle="bluetoothtransferplugin.h Example File" subtitle="bluetoothtransferplugin/bluetoothtransferplugin.h" location=""></page>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferservice.xml" href="bluetoothtransferplugin-bluetoothtransferservice-xml.html" subtype="file" title="" fulltitle="bluetoothtransferservice.xml Example File" subtitle="bluetoothtransferplugin/bluetoothtransferservice.xml" location=""></page>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferplugin.pro" href="bluetoothtransferplugin-bluetoothtransferplugin-pro.html" subtype="file" title="" fulltitle="bluetoothtransferplugin.pro Example File" subtitle="bluetoothtransferplugin/bluetoothtransferplugin.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="filemanagerplugin" href="filemanagerplugin.html" subtype="example" title="File Manager Plugin Example" fulltitle="File Manager Plugin Example" subtitle="" location="filemanagerplugin.qdoc">
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerplugin.cpp" href="filemanagerplugin-filemanagerplugin-cpp.html" subtype="file" title="" fulltitle="filemanagerplugin.cpp Example File" subtitle="filemanagerplugin/filemanagerplugin.cpp" location=""></page>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerplugin.h" href="filemanagerplugin-filemanagerplugin-h.html" subtype="file" title="" fulltitle="filemanagerplugin.h Example File" subtitle="filemanagerplugin/filemanagerplugin.h" location=""></page>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerservice.xml" href="filemanagerplugin-filemanagerservice-xml.html" subtype="file" title="" fulltitle="filemanagerservice.xml Example File" subtitle="filemanagerplugin/filemanagerservice.xml" location=""></page>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerstorage.cpp" href="filemanagerplugin-filemanagerstorage-cpp.html" subtype="file" title="" fulltitle="filemanagerstorage.cpp Example File" subtitle="filemanagerplugin/filemanagerstorage.cpp" location=""></page>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerstorage.h" href="filemanagerplugin-filemanagerstorage-h.html" subtype="file" title="" fulltitle="filemanagerstorage.h Example File" subtitle="filemanagerplugin/filemanagerstorage.h" location=""></page>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagertransfer.cpp" href="filemanagerplugin-filemanagertransfer-cpp.html" subtype="file" title="" fulltitle="filemanagertransfer.cpp Example File" subtitle="filemanagerplugin/filemanagertransfer.cpp" location=""></page>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagertransfer.h" href="filemanagerplugin-filemanagertransfer-h.html" subtype="file" title="" fulltitle="filemanagertransfer.h Example File" subtitle="filemanagerplugin/filemanagertransfer.h" location=""></page>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerplugin.pro" href="filemanagerplugin-filemanagerplugin-pro.html" subtype="file" title="" fulltitle="filemanagerplugin.pro Example File" subtitle="filemanagerplugin/filemanagerplugin.pro" location=""></page>
        </page>
        <page access="public" status="commendable" name="index.html" href="index.html" subtype="page" title="Qt Service Framework Developer Resources" fulltitle="Qt Service Framework Developer Resources" subtitle="" location="index.qdoc">
            <contents name="introduction" title="Introduction" level="1"></contents>
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="using-the-framework" title="Using the framework" level="1"></contents>
            <contents name="verbose-lookup" title="Verbose lookup" level="2"></contents>
            <contents name="default-lookup" title="Default lookup" level="2"></contents>
            <contents name="header-lookup" title="Header lookup" level="2"></contents>
            <contents name="database-scope" title="Database scope" level="2"></contents>
            <contents name="user-scope" title="User scope" level="3"></contents>
            <contents name="system-scope" title="System scope" level="3"></contents>
            <contents name="adding-and-removing-of-services" title="Adding and removing of services" level="1"></contents>
            <contents name="xml-format" title="XML format" level="2"></contents>
            <contents name="installing-the-service-at-runtime" title="Installing the service at runtime" level="2"></contents>
            <contents name="identifying-services" title="Identifying services" level="1"></contents>
            <contents name="upgrading-services" title="Upgrading services" level="1"></contents>
            <contents name="building-and-compiling" title="Building and compiling" level="1"></contents>
            <contents name="reference-documentation" title="Reference documentation" level="1"></contents>
            <contents name="main-classes" title="Main classes" level="2"></contents>
            <contents name="examples" title="Examples" level="2"></contents>
        </page>
        <page access="public" status="commendable" name="servicebrowser" href="servicebrowser.html" subtype="example" title="Service Browser Example" fulltitle="Service Browser Example" subtitle="" location="servicebrowser.qdoc">
            <contents name="servicebrowser-class-definition" title="ServiceBrowser Class Definition" level="1"></contents>
            <contents name="servicebrowser-class-implementation" title="ServiceBrowser Class Implementation" level="1"></contents>
            <contents name="invoking-attributes-an-example" title="Invoking attributes: an example" level="2"></contents>
            <page access="public" status="commendable" name="servicebrowser/servicebrowser.cpp" href="servicebrowser-servicebrowser-cpp.html" subtype="file" title="" fulltitle="servicebrowser.cpp Example File" subtitle="servicebrowser/servicebrowser.cpp" location=""></page>
            <page access="public" status="commendable" name="servicebrowser/servicebrowser.h" href="servicebrowser-servicebrowser-h.html" subtype="file" title="" fulltitle="servicebrowser.h Example File" subtitle="servicebrowser/servicebrowser.h" location=""></page>
            <page access="public" status="commendable" name="servicebrowser/main.cpp" href="servicebrowser-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="servicebrowser/main.cpp" location=""></page>
            <page access="public" status="commendable" name="servicebrowser/servicebrowser.pro" href="servicebrowser-servicebrowser-pro.html" subtype="file" title="" fulltitle="servicebrowser.pro Example File" subtitle="servicebrowser/servicebrowser.pro" location=""></page>
        </page>
    </namespace>
</INDEX>
