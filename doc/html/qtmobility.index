<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="http://qt.nokia.com/doc/qtmobility-1.1" title="Qt Mobility Project Library Reference Documentation" version="1.1">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="" module="">
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkAttributeFilter" href="qlandmarkattributefilter.html" location="qlandmarkattributefilter.h" bases="QLandmarkFilter" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkAttributeFilter" fullname="QLandmarkAttributeFilter::QLandmarkAttributeFilter" href="qlandmarkattributefilter.html#QLandmarkAttributeFilter" location="qlandmarkattributefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkAttributeFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkAttributeFilter" fullname="QLandmarkAttributeFilter::QLandmarkAttributeFilter" href="qlandmarkattributefilter.html#QLandmarkAttributeFilter-2" location="qlandmarkattributefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkAttributeFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkAttributeFilter" fullname="QLandmarkAttributeFilter::~QLandmarkAttributeFilter" href="qlandmarkattributefilter.html#dtor.QLandmarkAttributeFilter" location="qlandmarkattributefilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkAttributeFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QLandmarkAttributeFilter::attribute" href="qlandmarkattributefilter.html#attribute" location="qlandmarkattributefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attribute(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QLandmarkAttributeFilter::setAttribute" href="qlandmarkattributefilter.html#setAttribute" location="qlandmarkattributefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QLandmarkAttributeFilter::removeAttribute" href="qlandmarkattributefilter.html#removeAttribute" location="qlandmarkattributefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAttribute(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAttributes" fullname="QLandmarkAttributeFilter::clearAttributes" href="qlandmarkattributefilter.html#clearAttributes" location="qlandmarkattributefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAttributes()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributeKeys" fullname="QLandmarkAttributeFilter::attributeKeys" href="qlandmarkattributefilter.html#attributeKeys" location="qlandmarkattributefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="attributeKeys() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkSession" href="qnetworksession.html" location="qnetworksession.h" bases="" module="QtNetwork">
            <contents name="roaming" title="Roaming" level="1"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QNetworkSession::State" href="qnetworksession.html#State-enum" location="qnetworksession.h">
                <value name="Invalid" value="0"/>
                <value name="NotAvailable" value="1"/>
                <value name="Connecting" value="2"/>
                <value name="Connected" value="3"/>
                <value name="Closing" value="4"/>
                <value name="Disconnected" value="5"/>
                <value name="Roaming" value="6"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SessionError" fullname="QNetworkSession::SessionError" href="qnetworksession.html#SessionError-enum" location="qnetworksession.h">
                <value name="UnknownSessionError" value="0"/>
                <value name="SessionAbortedError" value="1"/>
                <value name="RoamingError" value="2"/>
                <value name="OperationNotSupportedError" value="3"/>
                <value name="InvalidConfigurationError" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkSession" fullname="QNetworkSession::QNetworkSession" href="qnetworksession.html#QNetworkSession" location="qnetworksession.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkSession(const QNetworkConfiguration &amp; connectionConfig, QObject * parent)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="connectionConfig" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkSession" fullname="QNetworkSession::~QNetworkSession" href="qnetworksession.html#dtor.QNetworkSession" location="qnetworksession.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkSession()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isOpen" fullname="QNetworkSession::isOpen" href="qnetworksession.html#isOpen" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isOpen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="configuration" fullname="QNetworkSession::configuration" href="qnetworksession.html#configuration" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="configuration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interface" fullname="QNetworkSession::interface" href="qnetworksession.html#interface" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkInterface" signature="interface() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QNetworkSession::state" href="qnetworksession.html#state" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QNetworkSession::error" href="qnetworksession.html#error" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SessionError" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QNetworkSession::errorString" href="qnetworksession.html#errorString" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sessionProperty" fullname="QNetworkSession::sessionProperty" href="qnetworksession.html#sessionProperty" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="sessionProperty(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSessionProperty" fullname="QNetworkSession::setSessionProperty" href="qnetworksession.html#setSessionProperty" location="qnetworksession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSessionProperty(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesWritten" fullname="QNetworkSession::bytesWritten" href="qnetworksession.html#bytesWritten" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint64" signature="bytesWritten() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesReceived" fullname="QNetworkSession::bytesReceived" href="qnetworksession.html#bytesReceived" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint64" signature="bytesReceived() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeTime" fullname="QNetworkSession::activeTime" href="qnetworksession.html#activeTime" location="qnetworksession.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="quint64" signature="activeTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForOpened" fullname="QNetworkSession::waitForOpened" href="qnetworksession.html#waitForOpened" location="qnetworksession.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForOpened(int msecs)">
                <parameter left="int" right="" name="msecs" default="30000"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="open" fullname="QNetworkSession::open" href="qnetworksession.html#open" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="open()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QNetworkSession::close" href="qnetworksession.html#close" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="close()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QNetworkSession::stop" href="qnetworksession.html#stop" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="migrate" fullname="QNetworkSession::migrate" href="qnetworksession.html#migrate" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="migrate()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ignore" fullname="QNetworkSession::ignore" href="qnetworksession.html#ignore" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="ignore()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="accept" fullname="QNetworkSession::accept" href="qnetworksession.html#accept" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="accept()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reject" fullname="QNetworkSession::reject" href="qnetworksession.html#reject" location="qnetworksession.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="reject()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QNetworkSession::stateChanged" href="qnetworksession.html#stateChanged" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QNetworkSession::State state)">
                <parameter left="QNetworkSession::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="opened" fullname="QNetworkSession::opened" href="qnetworksession.html#opened" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="opened()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="closed" fullname="QNetworkSession::closed" href="qnetworksession.html#closed" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="closed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QNetworkSession::error" href="qnetworksession.html#error-2" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QNetworkSession::SessionError error)">
                <parameter left="QNetworkSession::SessionError" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredConfigurationChanged" fullname="QNetworkSession::preferredConfigurationChanged" href="qnetworksession.html#preferredConfigurationChanged" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="preferredConfigurationChanged(const QNetworkConfiguration &amp; config, bool isSeamless)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
                <parameter left="bool" right="" name="isSeamless" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="newConfigurationActivated" fullname="QNetworkSession::newConfigurationActivated" href="qnetworksession.html#newConfigurationActivated" location="qnetworksession.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="newConfigurationActivated()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaStreamsControl" href="qmediastreamscontrol.html" location="qmediastreamscontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="StreamType" fullname="QMediaStreamsControl::StreamType" href="qmediastreamscontrol.html#StreamType-enum" location="qmediastreamscontrol.h">
                <value name="UnknownStream" value="0"/>
                <value name="VideoStream" value="1"/>
                <value name="AudioStream" value="2"/>
                <value name="SubPictureStream" value="3"/>
                <value name="DataStream" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaStreamsControl" fullname="QMediaStreamsControl::~QMediaStreamsControl" href="qmediastreamscontrol.html#dtor.QMediaStreamsControl" location="qmediastreamscontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaStreamsControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="streamCount" fullname="QMediaStreamsControl::streamCount" href="qmediastreamscontrol.html#streamCount" location="qmediastreamscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="int" signature="streamCount()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="streamType" fullname="QMediaStreamsControl::streamType" href="qmediastreamscontrol.html#streamType" location="qmediastreamscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="StreamType" signature="streamType(int stream)">
                <parameter left="int" right="" name="stream" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QMediaStreamsControl::metaData" href="qmediastreamscontrol.html#metaData" location="qmediastreamscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="metaData(int stream, QtMultimediaKit::MetaData key)">
                <parameter left="int" right="" name="stream" default=""/>
                <parameter left="QtMultimediaKit::MetaData" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QMediaStreamsControl::isActive" href="qmediastreamscontrol.html#isActive" location="qmediastreamscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isActive(int stream)">
                <parameter left="int" right="" name="stream" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActive" fullname="QMediaStreamsControl::setActive" href="qmediastreamscontrol.html#setActive" location="qmediastreamscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setActive(int stream, bool state)">
                <parameter left="int" right="" name="stream" default=""/>
                <parameter left="bool" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="streamsChanged" fullname="QMediaStreamsControl::streamsChanged" href="qmediastreamscontrol.html#streamsChanged" location="qmediastreamscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="streamsChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeStreamsChanged" fullname="QMediaStreamsControl::activeStreamsChanged" href="qmediastreamscontrol.html#activeStreamsChanged" location="qmediastreamscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeStreamsChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaStreamsControl" fullname="QMediaStreamsControl::QMediaStreamsControl" href="qmediastreamscontrol.html#QMediaStreamsControl" location="qmediastreamscontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaStreamsControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitResourceHandler" href="qversitresourcehandler.html" location="qversitresourcehandler.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitResourceHandler" fullname="QVersitResourceHandler::~QVersitResourceHandler" href="qversitresourcehandler.html#dtor.QVersitResourceHandler" location="qversitresourcehandler.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitResourceHandler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadResource" fullname="QVersitResourceHandler::loadResource" href="qversitresourcehandler.html#loadResource" location="qversitresourcehandler.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="loadResource(const QString &amp; location, QByteArray * contents, QString * mimeType)">
                <parameter left="const QString &amp;" right="" name="location" default=""/>
                <parameter left="QByteArray *" right="" name="contents" default=""/>
                <parameter left="QString *" right="" name="mimeType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveResource" fullname="QVersitResourceHandler::saveResource" href="qversitresourcehandler.html#saveResource" location="qversitresourcehandler.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveResource(const QByteArray &amp; contents, const QVersitProperty &amp; property, QString * location)">
                <parameter left="const QByteArray &amp;" right="" name="contents" default=""/>
                <parameter left="const QVersitProperty &amp;" right="" name="property" default=""/>
                <parameter left="QString *" right="" name="location" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitDefaultResourceHandler" href="qversitdefaultresourcehandler.html" location="qversitresourcehandler.h" bases="QVersitResourceHandler" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitDefaultResourceHandler" fullname="QVersitDefaultResourceHandler::QVersitDefaultResourceHandler" href="qversitdefaultresourcehandler.html#QVersitDefaultResourceHandler" location="qversitresourcehandler.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVersitDefaultResourceHandler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitDefaultResourceHandler" fullname="QVersitDefaultResourceHandler::~QVersitDefaultResourceHandler" href="qversitdefaultresourcehandler.html#dtor.QVersitDefaultResourceHandler" location="qversitresourcehandler.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitDefaultResourceHandler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadResource" fullname="QVersitDefaultResourceHandler::loadResource" href="qversitdefaultresourcehandler.html#loadResource" location="qversitresourcehandler.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="loadResource(const QString &amp; location, QByteArray * contents, QString * mimeType)">
                <parameter left="const QString &amp;" right="" name="location" default=""/>
                <parameter left="QByteArray *" right="" name="contents" default=""/>
                <parameter left="QString *" right="" name="mimeType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveResource" fullname="QVersitDefaultResourceHandler::saveResource" href="qversitdefaultresourcehandler.html#saveResource" location="qversitresourcehandler.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveResource(const QByteArray &amp; contents, const QVersitProperty &amp; property, QString * location)">
                <parameter left="const QByteArray &amp;" right="" name="contents" default=""/>
                <parameter left="const QVersitProperty &amp;" right="" name="property" default=""/>
                <parameter left="QString *" right="" name="location" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d" fullname="QVersitDefaultResourceHandler::d" href="qversitdefaultresourcehandler.html#d-var" location="qversitresourcehandler.h" type="QVersitDefaultResourceHandlerPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItem" href="qorganizeritem.html" location="qorganizeritem.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItem" fullname="QOrganizerItem::QOrganizerItem" href="qorganizeritem.html#QOrganizerItem" location="qorganizeritem.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItem()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItem" fullname="QOrganizerItem::~QOrganizerItem" href="qorganizeritem.html#dtor.QOrganizerItem" location="qorganizeritem.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItem()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItem" fullname="QOrganizerItem::QOrganizerItem" href="qorganizeritem.html#QOrganizerItem-2" location="qorganizeritem.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItem(const QOrganizerItem &amp; other)">
                <parameter left="const QOrganizerItem &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItem::operator=" href="qorganizeritem.html#operator=" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItem &amp;" signature="operator=(const QOrganizerItem &amp; other)">
                <parameter left="const QOrganizerItem &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOrganizerItem::operator==" href="qorganizeritem.html#operator==" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOrganizerItem &amp; other) const">
                <parameter left="const QOrganizerItem &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QOrganizerItem::operator!=" href="qorganizeritem.html#operator!=" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QOrganizerItem &amp; other) const">
                <parameter left="const QOrganizerItem &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QOrganizerItem::id" href="qorganizeritem.html#id" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemId" signature="id() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QOrganizerItem::setId" href="qorganizeritem.html#setId" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(const QOrganizerItemId &amp; id)">
                <parameter left="const QOrganizerItemId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localId" fullname="QOrganizerItem::localId" href="qorganizeritem.html#localId" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemLocalId" signature="localId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QOrganizerItem::isEmpty" href="qorganizeritem.html#isEmpty" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearDetails" fullname="QOrganizerItem::clearDetails" href="qorganizeritem.html#clearDetails" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearDetails()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detail" fullname="QOrganizerItem::detail" href="qorganizeritem.html#detail" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemDetail" signature="detail(const QString &amp; definitionName) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QOrganizerItem::details" href="qorganizeritem.html#details" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemDetail&gt;" signature="details(const QString &amp; definitionName) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QOrganizerItem::details" href="qorganizeritem.html#details-2" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QOrganizerItemDetail&gt;" signature="details(const QString &amp; definitionName, const QString &amp; fieldName, const QString &amp; value) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detail" fullname="QOrganizerItem::detail" href="qorganizeritem.html#detail-3" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QOrganizerItemDetail" signature="detail(const QLatin1Constant &amp; definitionName) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QOrganizerItem::details" href="qorganizeritem.html#details-5" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="5" type="QList&lt;QOrganizerItemDetail&gt;" signature="details(const QLatin1Constant &amp; definitionName) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QOrganizerItem::details" href="qorganizeritem.html#details-6" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="QList&lt;QOrganizerItemDetail&gt;" signature="details(const QLatin1Constant &amp; definitionName, const QLatin1Constant &amp; fieldName, const QString &amp; value)">
                <parameter left="const QLatin1Constant &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QLatin1Constant &amp;" right="" name="fieldName" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QOrganizerItem::details" href="qorganizeritem.html#details-7" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="7" type="QList&lt;T&gt;" signature="details() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QOrganizerItem::details" href="qorganizeritem.html#details-8" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="8" type="QList&lt;T&gt;" signature="details(const QString &amp; fieldName, const QString &amp; value) const">
                <parameter left="const QString &amp;" right="" name="fieldName" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detail" fullname="QOrganizerItem::detail" href="qorganizeritem.html#detail-4" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="4" type="T" signature="detail() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveDetail" fullname="QOrganizerItem::saveDetail" href="qorganizeritem.html#saveDetail" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveDetail(QOrganizerItemDetail * detail)">
                <parameter left="QOrganizerItemDetail *" right="" name="detail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetail" fullname="QOrganizerItem::removeDetail" href="qorganizeritem.html#removeDetail" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetail(QOrganizerItemDetail * detail)">
                <parameter left="QOrganizerItemDetail *" right="" name="detail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QOrganizerItem::type" href="qorganizeritem.html#type" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QOrganizerItem::setType" href="qorganizeritem.html#setType" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QOrganizerItem::setType" href="qorganizeritem.html#setType-2" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setType(const QOrganizerItemType &amp; type)">
                <parameter left="const QOrganizerItemType &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayLabel" fullname="QOrganizerItem::displayLabel" href="qorganizeritem.html#displayLabel" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayLabel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayLabel" fullname="QOrganizerItem::setDisplayLabel" href="qorganizeritem.html#setDisplayLabel" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDisplayLabel(const QString &amp; label)">
                <parameter left="const QString &amp;" right="" name="label" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayLabel" fullname="QOrganizerItem::setDisplayLabel" href="qorganizeritem.html#setDisplayLabel-2" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setDisplayLabel(const QOrganizerItemDisplayLabel &amp; label)">
                <parameter left="const QOrganizerItemDisplayLabel &amp;" right="" name="label" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QOrganizerItem::description" href="qorganizeritem.html#description" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QOrganizerItem::setDescription" href="qorganizeritem.html#setDescription" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QOrganizerItem::setDescription" href="qorganizeritem.html#setDescription-2" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setDescription(const QOrganizerItemDescription &amp; description)">
                <parameter left="const QOrganizerItemDescription &amp;" right="" name="description" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="comments" fullname="QOrganizerItem::comments" href="qorganizeritem.html#comments" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="comments() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearComments" fullname="QOrganizerItem::clearComments" href="qorganizeritem.html#clearComments" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearComments()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addComment" fullname="QOrganizerItem::addComment" href="qorganizeritem.html#addComment" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addComment(const QString &amp; comment)">
                <parameter left="const QString &amp;" right="" name="comment" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="guid" fullname="QOrganizerItem::guid" href="qorganizeritem.html#guid" location="qorganizeritem.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="guid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGuid" fullname="QOrganizerItem::setGuid" href="qorganizeritem.html#setGuid" location="qorganizeritem.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGuid(const QString &amp; guid)">
                <parameter left="const QString &amp;" right="" name="guid" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d" fullname="QOrganizerItem::d" href="qorganizeritem.html#d-var" location="qorganizeritem.h" type="QSharedDataPointer&lt;QOrganizerItemData&gt;" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkRemoveRequest" href="qlandmarkremoverequest.html" location="qlandmarkremoverequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkRemoveRequest" fullname="QLandmarkRemoveRequest::QLandmarkRemoveRequest" href="qlandmarkremoverequest.html#QLandmarkRemoveRequest" location="qlandmarkremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkRemoveRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkRemoveRequest" fullname="QLandmarkRemoveRequest::~QLandmarkRemoveRequest" href="qlandmarkremoverequest.html#dtor.QLandmarkRemoveRequest" location="qlandmarkremoverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkRemoveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkRemoveRequest::landmarkIds" href="qlandmarkremoverequest.html#landmarkIds" location="qlandmarkremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmarkIds" fullname="QLandmarkRemoveRequest::setLandmarkIds" href="qlandmarkremoverequest.html#setLandmarkIds" location="qlandmarkremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmarkIds(const QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmarkId" fullname="QLandmarkRemoveRequest::setLandmarkId" href="qlandmarkremoverequest.html#setLandmarkId" location="qlandmarkremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmarkId(const QLandmarkId &amp; landmarkId)">
                <parameter left="const QLandmarkId &amp;" right="" name="landmarkId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QLandmarkRemoveRequest::errorMap" href="qlandmarkremoverequest.html#errorMap" location="qlandmarkremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QLandmarkManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistReader" href="qmediaplaylistreader.html" location="qmediaplaylistioplugin.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistReader" fullname="QMediaPlaylistReader::~QMediaPlaylistReader" href="qmediaplaylistreader.html#dtor.QMediaPlaylistReader" location="qmediaplaylistioplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistReader()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="atEnd" fullname="QMediaPlaylistReader::atEnd" href="qmediaplaylistreader.html#atEnd" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="atEnd() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="readItem" fullname="QMediaPlaylistReader::readItem" href="qmediaplaylistreader.html#readItem" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaContent" signature="readItem()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QMediaPlaylistReader::close" href="qmediaplaylistreader.html#close" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistWriter" href="qmediaplaylistwriter.html" location="qmediaplaylistioplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistWriter" fullname="QMediaPlaylistWriter::~QMediaPlaylistWriter" href="qmediaplaylistwriter.html#dtor.QMediaPlaylistWriter" location="qmediaplaylistioplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistWriter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeItem" fullname="QMediaPlaylistWriter::writeItem" href="qmediaplaylistwriter.html#writeItem" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="writeItem(const QMediaContent &amp; media)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QMediaPlaylistWriter::close" href="qmediaplaylistwriter.html#close" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="close()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistIOPlugin" href="qmediaplaylistioplugin.html" location="qmediaplaylistioplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistIOPlugin" fullname="QMediaPlaylistIOPlugin::QMediaPlaylistIOPlugin" href="qmediaplaylistioplugin.html#QMediaPlaylistIOPlugin" location="qmediaplaylistioplugin.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistIOPlugin(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistIOPlugin" fullname="QMediaPlaylistIOPlugin::~QMediaPlaylistIOPlugin" href="qmediaplaylistioplugin.html#dtor.QMediaPlaylistIOPlugin" location="qmediaplaylistioplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistIOPlugin()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canRead" fullname="QMediaPlaylistIOPlugin::canRead" href="qmediaplaylistioplugin.html#canRead" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canRead(QIODevice * device, const QByteArray &amp; format) const">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canRead" fullname="QMediaPlaylistIOPlugin::canRead" href="qmediaplaylistioplugin.html#canRead-2" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="canRead(const QUrl &amp; location, const QByteArray &amp; format) const">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canWrite" fullname="QMediaPlaylistIOPlugin::canWrite" href="qmediaplaylistioplugin.html#canWrite" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="canWrite(QIODevice * device, const QByteArray &amp; format) const">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QMediaPlaylistIOPlugin::keys" href="qmediaplaylistioplugin.html#keys" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="createReader" fullname="QMediaPlaylistIOPlugin::createReader" href="qmediaplaylistioplugin.html#createReader" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaPlaylistReader *" signature="createReader(QIODevice * device, const QByteArray &amp; format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createReader" fullname="QMediaPlaylistIOPlugin::createReader" href="qmediaplaylistioplugin.html#createReader-2" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QMediaPlaylistReader *" signature="createReader(const QUrl &amp; location, const QByteArray &amp; format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createWriter" fullname="QMediaPlaylistIOPlugin::createWriter" href="qmediaplaylistioplugin.html#createWriter" location="qmediaplaylistioplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaPlaylistWriter *" signature="createWriter(QIODevice * device, const QByteArray &amp; format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoRoutingManagerEngine" href="qgeoroutingmanagerengine.html" location="qgeoroutingmanagerengine.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRoutingManagerEngine" fullname="QGeoRoutingManagerEngine::QGeoRoutingManagerEngine" href="qgeoroutingmanagerengine.html#QGeoRoutingManagerEngine" location="qgeoroutingmanagerengine.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoRoutingManagerEngine(const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoRoutingManagerEngine" fullname="QGeoRoutingManagerEngine::~QGeoRoutingManagerEngine" href="qgeoroutingmanagerengine.html#dtor.QGeoRoutingManagerEngine" location="qgeoroutingmanagerengine.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoRoutingManagerEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QGeoRoutingManagerEngine::managerName" href="qgeoroutingmanagerengine.html#managerName" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QGeoRoutingManagerEngine::managerParameters" href="qgeoroutingmanagerengine.html#managerParameters" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QGeoRoutingManagerEngine::managerVersion" href="qgeoroutingmanagerengine.html#managerVersion" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="calculateRoute" fullname="QGeoRoutingManagerEngine::calculateRoute" href="qgeoroutingmanagerengine.html#calculateRoute" location="qgeoroutingmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QGeoRouteReply *" signature="calculateRoute(const QGeoRouteRequest &amp; request)">
                <parameter left="const QGeoRouteRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRoute" fullname="QGeoRoutingManagerEngine::updateRoute" href="qgeoroutingmanagerengine.html#updateRoute" location="qgeoroutingmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QGeoRouteReply *" signature="updateRoute(const QGeoRoute &amp; route, const QGeoCoordinate &amp; position)">
                <parameter left="const QGeoRoute &amp;" right="" name="route" default=""/>
                <parameter left="const QGeoCoordinate &amp;" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsRouteUpdates" fullname="QGeoRoutingManagerEngine::supportsRouteUpdates" href="qgeoroutingmanagerengine.html#supportsRouteUpdates" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsRouteUpdates() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsAlternativeRoutes" fullname="QGeoRoutingManagerEngine::supportsAlternativeRoutes" href="qgeoroutingmanagerengine.html#supportsAlternativeRoutes" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsAlternativeRoutes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsExcludeAreas" fullname="QGeoRoutingManagerEngine::supportsExcludeAreas" href="qgeoroutingmanagerengine.html#supportsExcludeAreas" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsExcludeAreas() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedTravelModes" fullname="QGeoRoutingManagerEngine::supportedTravelModes" href="qgeoroutingmanagerengine.html#supportedTravelModes" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::TravelModes" signature="supportedTravelModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedAvoidFeatureTypes" fullname="QGeoRoutingManagerEngine::supportedAvoidFeatureTypes" href="qgeoroutingmanagerengine.html#supportedAvoidFeatureTypes" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::AvoidFeatureTypes" signature="supportedAvoidFeatureTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedRouteOptimizations" fullname="QGeoRoutingManagerEngine::supportedRouteOptimizations" href="qgeoroutingmanagerengine.html#supportedRouteOptimizations" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::RouteOptimizations" signature="supportedRouteOptimizations() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSegmentDetails" fullname="QGeoRoutingManagerEngine::supportedSegmentDetails" href="qgeoroutingmanagerengine.html#supportedSegmentDetails" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::SegmentDetails" signature="supportedSegmentDetails() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedInstructionDetails" fullname="QGeoRoutingManagerEngine::supportedInstructionDetails" href="qgeoroutingmanagerengine.html#supportedInstructionDetails" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::InstructionDetails" signature="supportedInstructionDetails() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGeoRoutingManagerEngine::finished" href="qgeoroutingmanagerengine.html#finished" location="qgeoroutingmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished(QGeoRouteReply * reply)">
                <parameter left="QGeoRouteReply *" right="" name="reply" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoRoutingManagerEngine::error" href="qgeoroutingmanagerengine.html#error" location="qgeoroutingmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(QGeoRouteReply * reply, QGeoRouteReply::Error error, QString errorString)">
                <parameter left="QGeoRouteReply *" right="" name="reply" default=""/>
                <parameter left="QGeoRouteReply::Error" right="" name="error" default=""/>
                <parameter left="QString" right="" name="errorString" default="QString()"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportsRouteUpdates" fullname="QGeoRoutingManagerEngine::setSupportsRouteUpdates" href="qgeoroutingmanagerengine.html#setSupportsRouteUpdates" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportsRouteUpdates(bool supported)">
                <parameter left="bool" right="" name="supported" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportsAlternativeRoutes" fullname="QGeoRoutingManagerEngine::setSupportsAlternativeRoutes" href="qgeoroutingmanagerengine.html#setSupportsAlternativeRoutes" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportsAlternativeRoutes(bool supported)">
                <parameter left="bool" right="" name="supported" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportsExcludeAreas" fullname="QGeoRoutingManagerEngine::setSupportsExcludeAreas" href="qgeoroutingmanagerengine.html#setSupportsExcludeAreas" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportsExcludeAreas(bool supported)">
                <parameter left="bool" right="" name="supported" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedTravelModes" fullname="QGeoRoutingManagerEngine::setSupportedTravelModes" href="qgeoroutingmanagerengine.html#setSupportedTravelModes" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedTravelModes(QFlags&lt;QGeoRouteRequest::TravelMode&gt; travelModes)">
                <parameter left="QFlags&lt;QGeoRouteRequest::TravelMode&gt;" right="" name="travelModes" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedAvoidFeatureTypes" fullname="QGeoRoutingManagerEngine::setSupportedAvoidFeatureTypes" href="qgeoroutingmanagerengine.html#setSupportedAvoidFeatureTypes" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedAvoidFeatureTypes(QFlags&lt;QGeoRouteRequest::AvoidFeatureType&gt; avoidFeatureTypes)">
                <parameter left="QFlags&lt;QGeoRouteRequest::AvoidFeatureType&gt;" right="" name="avoidFeatureTypes" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedRouteOptimizations" fullname="QGeoRoutingManagerEngine::setSupportedRouteOptimizations" href="qgeoroutingmanagerengine.html#setSupportedRouteOptimizations" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedRouteOptimizations(QFlags&lt;QGeoRouteRequest::RouteOptimization&gt; optimizations)">
                <parameter left="QFlags&lt;QGeoRouteRequest::RouteOptimization&gt;" right="" name="optimizations" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedSegmentDetails" fullname="QGeoRoutingManagerEngine::setSupportedSegmentDetails" href="qgeoroutingmanagerengine.html#setSupportedSegmentDetails" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedSegmentDetails(QFlags&lt;QGeoRouteRequest::SegmentDetail&gt; segmentDetails)">
                <parameter left="QFlags&lt;QGeoRouteRequest::SegmentDetail&gt;" right="" name="segmentDetails" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedInstructionDetails" fullname="QGeoRoutingManagerEngine::setSupportedInstructionDetails" href="qgeoroutingmanagerengine.html#setSupportedInstructionDetails" location="qgeoroutingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedInstructionDetails(QFlags&lt;QGeoRouteRequest::InstructionDetail&gt; instructionDetails)">
                <parameter left="QFlags&lt;QGeoRouteRequest::InstructionDetail&gt;" right="" name="instructionDetails" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioDeviceInfo" href="qaudiodeviceinfo.html" location="qaudiodeviceinfo.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioDeviceInfo" fullname="QAudioDeviceInfo::QAudioDeviceInfo" href="qaudiodeviceinfo.html#QAudioDeviceInfo" location="qaudiodeviceinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioDeviceInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioDeviceInfo" fullname="QAudioDeviceInfo::QAudioDeviceInfo" href="qaudiodeviceinfo.html#QAudioDeviceInfo-2" location="qaudiodeviceinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioDeviceInfo(const QAudioDeviceInfo &amp; other)">
                <parameter left="const QAudioDeviceInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioDeviceInfo" fullname="QAudioDeviceInfo::~QAudioDeviceInfo" href="qaudiodeviceinfo.html#dtor.QAudioDeviceInfo" location="qaudiodeviceinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioDeviceInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAudioDeviceInfo::operator=" href="qaudiodeviceinfo.html#operator=" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAudioDeviceInfo &amp;" signature="operator=(const QAudioDeviceInfo &amp; other)">
                <parameter left="const QAudioDeviceInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QAudioDeviceInfo::isNull" href="qaudiodeviceinfo.html#isNull" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceName" fullname="QAudioDeviceInfo::deviceName" href="qaudiodeviceinfo.html#deviceName" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFormatSupported" fullname="QAudioDeviceInfo::isFormatSupported" href="qaudiodeviceinfo.html#isFormatSupported" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFormatSupported(const QAudioFormat &amp; settings) const">
                <parameter left="const QAudioFormat &amp;" right="" name="settings" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredFormat" fullname="QAudioDeviceInfo::preferredFormat" href="qaudiodeviceinfo.html#preferredFormat" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat" signature="preferredFormat() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nearestFormat" fullname="QAudioDeviceInfo::nearestFormat" href="qaudiodeviceinfo.html#nearestFormat" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat" signature="nearestFormat(const QAudioFormat &amp; settings) const">
                <parameter left="const QAudioFormat &amp;" right="" name="settings" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedCodecs" fullname="QAudioDeviceInfo::supportedCodecs" href="qaudiodeviceinfo.html#supportedCodecs" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="obsolete" name="supportedFrequencies" fullname="QAudioDeviceInfo::supportedFrequencies" href="qaudiodeviceinfo-obsolete.html#supportedFrequencies" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedFrequencies() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSampleRates" fullname="QAudioDeviceInfo::supportedSampleRates" href="qaudiodeviceinfo.html#supportedSampleRates" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedSampleRates() const"/>
            <function access="public" threadsafety="unspecified" status="obsolete" name="supportedChannels" fullname="QAudioDeviceInfo::supportedChannels" href="qaudiodeviceinfo-obsolete.html#supportedChannels" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedChannels() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedChannelCounts" fullname="QAudioDeviceInfo::supportedChannelCounts" href="qaudiodeviceinfo.html#supportedChannelCounts" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedChannelCounts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSampleSizes" fullname="QAudioDeviceInfo::supportedSampleSizes" href="qaudiodeviceinfo.html#supportedSampleSizes" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedSampleSizes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedByteOrders" fullname="QAudioDeviceInfo::supportedByteOrders" href="qaudiodeviceinfo.html#supportedByteOrders" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QAudioFormat::Endian&gt;" signature="supportedByteOrders() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSampleTypes" fullname="QAudioDeviceInfo::supportedSampleTypes" href="qaudiodeviceinfo.html#supportedSampleTypes" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QAudioFormat::SampleType&gt;" signature="supportedSampleTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultInputDevice" fullname="QAudioDeviceInfo::defaultInputDevice" href="qaudiodeviceinfo.html#defaultInputDevice" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QAudioDeviceInfo" signature="defaultInputDevice()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultOutputDevice" fullname="QAudioDeviceInfo::defaultOutputDevice" href="qaudiodeviceinfo.html#defaultOutputDevice" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QAudioDeviceInfo" signature="defaultOutputDevice()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableDevices" fullname="QAudioDeviceInfo::availableDevices" href="qaudiodeviceinfo.html#availableDevices" location="qaudiodeviceinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QAudioDeviceInfo&gt;" signature="availableDevices(QAudio::Mode mode)">
                <parameter left="QAudio::Mode" right="" name="mode" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlayer" href="qmediaplayer.html" location="qmediaplayer.h" bases="QMediaObject" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlayer::media" href="qmediaplayer.html#media-prop" location="qmediaplayer.h" type="QMediaContent">
                <getter name="media"/>
                <setter name="setMedia"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="playlist" fullname="QMediaPlayer::playlist" href="qmediaplayer.html#playlist-prop" location="qmediaplayer.h" type="QMediaPlaylist *">
                <getter name="playlist"/>
                <setter name="setPlaylist"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration-prop" location="qmediaplayer.h" type="qint64">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position-prop" location="qmediaplayer.h" type="qint64">
                <getter name="position"/>
                <setter name="setPosition"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayer::volume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.h" type="int">
                <getter name="volume"/>
                <setter name="setVolume"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="QMediaPlayer::muted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.h" type="bool">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayer::bufferStatus" href="qmediaplayer.html#bufferStatus-prop" location="qmediaplayer.h" type="int">
                <getter name="bufferStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="audioAvailable" fullname="QMediaPlayer::audioAvailable" href="qmediaplayer.html#audioAvailable-prop" location="qmediaplayer.h" type="bool">
                <getter name="isAudioAvailable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoAvailable" fullname="QMediaPlayer::videoAvailable" href="qmediaplayer.html#videoAvailable-prop" location="qmediaplayer.h" type="bool">
                <getter name="isVideoAvailable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="seekable" fullname="QMediaPlayer::seekable" href="qmediaplayer.html#seekable-prop" location="qmediaplayer.h" type="bool">
                <getter name="isSeekable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.h" type="qreal">
                <getter name="playbackRate"/>
                <setter name="setPlaybackRate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayer::state" href="qmediaplayer.html#state-prop" location="qmediaplayer.h" type="State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" location="qmediaplayer.h" type="MediaStatus">
                <getter name="mediaStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error-prop" location="qmediaplayer.h" type="QString">
                <getter name="errorString"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaPlayer::State" href="qmediaplayer.html#State-enum" location="qmediaplayer.h">
                <value name="StoppedState" value="0"/>
                <value name="PlayingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MediaStatus" fullname="QMediaPlayer::MediaStatus" href="qmediaplayer.html#MediaStatus-enum" location="qmediaplayer.h">
                <value name="UnknownMediaStatus" value="0"/>
                <value name="NoMedia" value="1"/>
                <value name="LoadingMedia" value="2"/>
                <value name="LoadedMedia" value="3"/>
                <value name="StalledMedia" value="4"/>
                <value name="BufferingMedia" value="5"/>
                <value name="BufferedMedia" value="6"/>
                <value name="EndOfMedia" value="7"/>
                <value name="InvalidMedia" value="8"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Flag" fullname="QMediaPlayer::Flag" href="qmediaplayer.html#Flag-enum" location="qmediaplayer.h" typedef="QMediaPlayer::Flags">
                <value name="LowLatency" value="0x01"/>
                <value name="StreamPlayback" value="0x02"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Flags" fullname="QMediaPlayer::Flags" href="qmediaplayer.html#Flags-typedef" location="qmediaplayer.h" enum="QMediaPlayer::Flag"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMediaPlayer::Error" href="qmediaplayer.html#Error-enum" location="qmediaplayer.h">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
                <value name="NetworkError" value="3"/>
                <value name="AccessDeniedError" value="4"/>
                <value name="ServiceMissingError" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlayer" fullname="QMediaPlayer::QMediaPlayer" href="qmediaplayer.html#QMediaPlayer" location="qmediaplayer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlayer(QObject * parent, QFlags&lt;QMediaPlayer::Flag&gt; flags, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QFlags&lt;QMediaPlayer::Flag&gt;" right="" name="flags" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlayer" fullname="QMediaPlayer::~QMediaPlayer" href="qmediaplayer.html#dtor.QMediaPlayer" location="qmediaplayer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlayer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasSupport" fullname="QMediaPlayer::hasSupport" href="qmediaplayer.html#hasSupport" location="qmediaplayer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QtMultimediaKit::SupportEstimate" signature="hasSupport(const QString &amp; mimeType, const QStringList &amp; codecs, QFlags&lt;QMediaPlayer::Flag&gt; flags)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""/>
                <parameter left="const QStringList &amp;" right="" name="codecs" default="QStringList()"/>
                <parameter left="QFlags&lt;QMediaPlayer::Flag&gt;" right="" name="flags" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMimeTypes" fullname="QMediaPlayer::supportedMimeTypes" href="qmediaplayer.html#supportedMimeTypes" location="qmediaplayer.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="supportedMimeTypes(QFlags&lt;QMediaPlayer::Flag&gt; flags)">
                <parameter left="QFlags&lt;QMediaPlayer::Flag&gt;" right="" name="flags" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoOutput" fullname="QMediaPlayer::setVideoOutput" href="qmediaplayer.html#setVideoOutput" location="qmediaplayer.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoOutput(QVideoWidget * output)">
                <parameter left="QVideoWidget *" right="" name="output" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoOutput" fullname="QMediaPlayer::setVideoOutput" href="qmediaplayer.html#setVideoOutput-2" location="qmediaplayer.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setVideoOutput(QGraphicsVideoItem * output)">
                <parameter left="QGraphicsVideoItem *" right="" name="output" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlayer::media" href="qmediaplayer.html#media-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="media" type="QMediaContent" signature="media() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStream" fullname="QMediaPlayer::mediaStream" href="qmediaplayer.html#mediaStream" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QIODevice *" signature="mediaStream() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlist" fullname="QMediaPlayer::playlist" href="qmediaplayer.html#playlist-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playlist" type="QMediaPlaylist *" signature="playlist() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayer::state" href="qmediaplayer.html#state-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="mediaStatus" type="MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="position" type="qint64" signature="position() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayer::volume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="volume" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaPlayer::isMuted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="muted" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAudioAvailable" fullname="QMediaPlayer::isAudioAvailable" href="qmediaplayer.html#audioAvailable-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="audioAvailable" type="bool" signature="isAudioAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVideoAvailable" fullname="QMediaPlayer::isVideoAvailable" href="qmediaplayer.html#videoAvailable-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoAvailable" type="bool" signature="isVideoAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayer::bufferStatus" href="qmediaplayer.html#bufferStatus-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="bufferStatus" type="int" signature="bufferStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSeekable" fullname="QMediaPlayer::isSeekable" href="qmediaplayer.html#seekable-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="seekable" type="bool" signature="isSeekable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playbackRate" type="qreal" signature="playbackRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaPlayer::errorString" href="qmediaplayer.html#error-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="error" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaPlayer::play" href="qmediaplayer.html#play" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaPlayer::pause" href="qmediaplayer.html#pause" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaPlayer::stop" href="qmediaplayer.html#stop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPosition" fullname="QMediaPlayer::setPosition" href="qmediaplayer.html#position-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="position" type="void" signature="setPosition(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaPlayer::setVolume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="volume" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaPlayer::setMuted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="muted" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackRate" fullname="QMediaPlayer::setPlaybackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="playbackRate" type="void" signature="setPlaybackRate(qreal rate)">
                <parameter left="qreal" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMedia" fullname="QMediaPlayer::setMedia" href="qmediaplayer.html#media-prop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="media" type="void" signature="setMedia(const QMediaContent &amp; media, QIODevice * stream)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
                <parameter left="QIODevice *" right="" name="stream" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylist" fullname="QMediaPlayer::setPlaylist" href="qmediaplayer.html#playlist-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="playlist" type="void" signature="setPlaylist(QMediaPlaylist * playlist)">
                <parameter left="QMediaPlaylist *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaChanged" fullname="QMediaPlayer::mediaChanged" href="qmediaplayer.html#mediaChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaChanged(const QMediaContent &amp; media)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaPlayer::stateChanged" href="qmediaplayer.html#stateChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaPlayer::State state)">
                <parameter left="QMediaPlayer::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaPlayer::mediaStatusChanged" href="qmediaplayer.html#mediaStatusChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaPlayer::MediaStatus status)">
                <parameter left="QMediaPlayer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaPlayer::durationChanged" href="qmediaplayer.html#durationChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaPlayer::positionChanged" href="qmediaplayer.html#positionChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaPlayer::volumeChanged" href="qmediaplayer.html#volumeChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutedChanged" fullname="QMediaPlayer::mutedChanged" href="qmediaplayer.html#mutedChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutedChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioAvailableChanged" fullname="QMediaPlayer::audioAvailableChanged" href="qmediaplayer.html#audioAvailableChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="audioAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoAvailableChanged" fullname="QMediaPlayer::videoAvailableChanged" href="qmediaplayer.html#videoAvailableChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoAvailableChanged(bool videoAvailable)">
                <parameter left="bool" right="" name="videoAvailable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatusChanged" fullname="QMediaPlayer::bufferStatusChanged" href="qmediaplayer.html#bufferStatusChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bufferStatusChanged(int percentFilled)">
                <parameter left="int" right="" name="percentFilled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seekableChanged" fullname="QMediaPlayer::seekableChanged" href="qmediaplayer.html#seekableChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="seekableChanged(bool seekable)">
                <parameter left="bool" right="" name="seekable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRateChanged" fullname="QMediaPlayer::playbackRateChanged" href="qmediaplayer.html#playbackRateChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackRateChanged(qreal rate)">
                <parameter left="qreal" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error-2" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QMediaPlayer::Error error)">
                <parameter left="QMediaPlayer::Error" right="" name="error" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoAreaMonitor" href="qgeoareamonitor.html" location="qgeoareamonitor.h" bases="" module="QtLocation">
            <property access="public" threadsafety="unspecified" status="commendable" name="center" fullname="QGeoAreaMonitor::center" href="qgeoareamonitor.html#center-prop" location="qgeoareamonitor.h" type="QGeoCoordinate">
                <getter name="center"/>
                <setter name="setCenter"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="radius" fullname="QGeoAreaMonitor::radius" href="qgeoareamonitor.html#radius-prop" location="qgeoareamonitor.h" type="qreal">
                <getter name="radius"/>
                <setter name="setRadius"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoAreaMonitor" fullname="QGeoAreaMonitor::QGeoAreaMonitor" href="qgeoareamonitor.html#QGeoAreaMonitor" location="qgeoareamonitor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoAreaMonitor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoAreaMonitor" fullname="QGeoAreaMonitor::~QGeoAreaMonitor" href="qgeoareamonitor.html#dtor.QGeoAreaMonitor" location="qgeoareamonitor.h" virtual="pure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoAreaMonitor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCenter" fullname="QGeoAreaMonitor::setCenter" href="qgeoareamonitor.html#center-prop" location="qgeoareamonitor.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="center" type="void" signature="setCenter(const QGeoCoordinate &amp; coordinate)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="center" fullname="QGeoAreaMonitor::center" href="qgeoareamonitor.html#center-prop" location="qgeoareamonitor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="center" type="QGeoCoordinate" signature="center() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRadius" fullname="QGeoAreaMonitor::setRadius" href="qgeoareamonitor.html#radius-prop" location="qgeoareamonitor.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="radius" type="void" signature="setRadius(qreal radius)">
                <parameter left="qreal" right="" name="radius" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="radius" fullname="QGeoAreaMonitor::radius" href="qgeoareamonitor.html#radius-prop" location="qgeoareamonitor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="radius" type="qreal" signature="radius() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="createDefaultMonitor" fullname="QGeoAreaMonitor::createDefaultMonitor" href="qgeoareamonitor.html#createDefaultMonitor" location="qgeoareamonitor.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QGeoAreaMonitor *" signature="createDefaultMonitor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="areaEntered" fullname="QGeoAreaMonitor::areaEntered" href="qgeoareamonitor.html#areaEntered" location="qgeoareamonitor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="areaEntered(const QGeoPositionInfo &amp; update)">
                <parameter left="const QGeoPositionInfo &amp;" right="" name="update" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="areaExited" fullname="QGeoAreaMonitor::areaExited" href="qgeoareamonitor.html#areaExited" location="qgeoareamonitor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="areaExited(const QGeoPositionInfo &amp; update)">
                <parameter left="const QGeoPositionInfo &amp;" right="" name="update" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmark" href="qlandmark.html" location="qlandmark.h" bases="QGeoPlace" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmark" fullname="QLandmark::QLandmark" href="qlandmark.html#QLandmark" location="qlandmark.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmark()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmark" fullname="QLandmark::QLandmark" href="qlandmark.html#QLandmark-2" location="qlandmark.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmark(const QGeoPlace &amp; other)">
                <parameter left="const QGeoPlace &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmark" fullname="QLandmark::QLandmark" href="qlandmark.html#QLandmark-3" location="qlandmark.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QLandmark(const QLandmark &amp; other)">
                <parameter left="const QLandmark &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmark" fullname="QLandmark::~QLandmark" href="qlandmark.html#dtor.QLandmark" location="qlandmark.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmark()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QLandmark::operator=" href="qlandmark.html#operator=" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmark &amp;" signature="operator=(const QLandmark &amp; other)">
                <parameter left="const QLandmark &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QLandmark::operator==" href="qlandmark.html#operator==" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QLandmark &amp; other) const">
                <parameter left="const QLandmark &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QLandmark::operator!=" href="qlandmark.html#operator!=" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QLandmark &amp; other) const">
                <parameter left="const QLandmark &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QLandmark::name" href="qlandmark.html#name" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QLandmark::setName" href="qlandmark.html#setName" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryIds" fullname="QLandmark::categoryIds" href="qlandmark.html#categoryIds" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategoryId&gt;" signature="categoryIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryIds" fullname="QLandmark::setCategoryIds" href="qlandmark.html#setCategoryIds" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryIds(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addCategoryId" fullname="QLandmark::addCategoryId" href="qlandmark.html#addCategoryId" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addCategoryId(const QLandmarkCategoryId &amp; categoryId)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeCategoryId" fullname="QLandmark::removeCategoryId" href="qlandmark.html#removeCategoryId" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeCategoryId(const QLandmarkCategoryId &amp; categoryId)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QLandmark::description" href="qlandmark.html#description" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QLandmark::setDescription" href="qlandmark.html#setDescription" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconUrl" fullname="QLandmark::iconUrl" href="qlandmark.html#iconUrl" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="iconUrl() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconUrl" fullname="QLandmark::setIconUrl" href="qlandmark.html#setIconUrl" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="radius" fullname="QLandmark::radius" href="qlandmark.html#radius" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="radius() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRadius" fullname="QLandmark::setRadius" href="qlandmark.html#setRadius" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRadius(double radius)">
                <parameter left="double" right="" name="radius" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QLandmark::attribute" href="qlandmark.html#attribute" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attribute(const QString &amp; key, const QVariant &amp; defaultValue) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="defaultValue" default="QVariant()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QLandmark::setAttribute" href="qlandmark.html#setAttribute" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributeKeys" fullname="QLandmark::attributeKeys" href="qlandmark.html#attributeKeys" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="attributeKeys() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="phone" fullname="QLandmark::phone" href="qlandmark.html#phone" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="phone() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPhone" fullname="QLandmark::setPhone" href="qlandmark.html#setPhone" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPhone(const QString &amp; phone)">
                <parameter left="const QString &amp;" right="" name="phone" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QLandmark::url" href="qlandmark.html#url" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="url() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUrl" fullname="QLandmark::setUrl" href="qlandmark.html#setUrl" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkId" fullname="QLandmark::landmarkId" href="qlandmark.html#landmarkId" location="qlandmark.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkId" signature="landmarkId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmarkId" fullname="QLandmark::setLandmarkId" href="qlandmark.html#setLandmarkId" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmarkId(const QLandmarkId &amp; id)">
                <parameter left="const QLandmarkId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QLandmark::clear" href="qlandmark.html#clear" location="qlandmark.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <namespace access="public" threadsafety="unspecified" status="commendable" name="QtMultimediaKit" href="qtmultimediakit.html" location="qtmedianamespace.h" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MetaData" fullname="QtMultimediaKit::MetaData" href="qtmultimediakit.html#MetaData-enum" location="qtmedianamespace.h">
                <value name="Title" value="0"/>
                <value name="SubTitle" value="1"/>
                <value name="Author" value="2"/>
                <value name="Comment" value="3"/>
                <value name="Description" value="4"/>
                <value name="Category" value="5"/>
                <value name="Genre" value="6"/>
                <value name="Year" value="7"/>
                <value name="Date" value="8"/>
                <value name="UserRating" value="9"/>
                <value name="Keywords" value="10"/>
                <value name="Language" value="11"/>
                <value name="Publisher" value="12"/>
                <value name="Copyright" value="13"/>
                <value name="ParentalRating" value="14"/>
                <value name="RatingOrganisation" value="15"/>
                <value name="Size" value="16"/>
                <value name="MediaType" value="17"/>
                <value name="Duration" value="18"/>
                <value name="AudioBitRate" value="19"/>
                <value name="AudioCodec" value="20"/>
                <value name="AverageLevel" value="21"/>
                <value name="ChannelCount" value="22"/>
                <value name="PeakValue" value="23"/>
                <value name="SampleRate" value="24"/>
                <value name="AlbumTitle" value="25"/>
                <value name="AlbumArtist" value="26"/>
                <value name="ContributingArtist" value="27"/>
                <value name="Composer" value="28"/>
                <value name="Conductor" value="29"/>
                <value name="Lyrics" value="30"/>
                <value name="Mood" value="31"/>
                <value name="TrackNumber" value="32"/>
                <value name="TrackCount" value="33"/>
                <value name="CoverArtUrlSmall" value="34"/>
                <value name="CoverArtUrlLarge" value="35"/>
                <value name="Resolution" value="36"/>
                <value name="PixelAspectRatio" value="37"/>
                <value name="VideoFrameRate" value="38"/>
                <value name="VideoBitRate" value="39"/>
                <value name="VideoCodec" value="40"/>
                <value name="PosterUrl" value="41"/>
                <value name="ChapterNumber" value="42"/>
                <value name="Director" value="43"/>
                <value name="LeadPerformer" value="44"/>
                <value name="Writer" value="45"/>
                <value name="CameraManufacturer" value="46"/>
                <value name="CameraModel" value="47"/>
                <value name="Event" value="48"/>
                <value name="Subject" value="49"/>
                <value name="Orientation" value="50"/>
                <value name="ExposureTime" value="51"/>
                <value name="FNumber" value="52"/>
                <value name="ExposureProgram" value="53"/>
                <value name="ISOSpeedRatings" value="54"/>
                <value name="ExposureBiasValue" value="55"/>
                <value name="DateTimeOriginal" value="56"/>
                <value name="DateTimeDigitized" value="57"/>
                <value name="SubjectDistance" value="58"/>
                <value name="MeteringMode" value="59"/>
                <value name="LightSource" value="60"/>
                <value name="Flash" value="61"/>
                <value name="FocalLength" value="62"/>
                <value name="ExposureMode" value="63"/>
                <value name="WhiteBalance" value="64"/>
                <value name="DigitalZoomRatio" value="65"/>
                <value name="FocalLengthIn35mmFilm" value="66"/>
                <value name="SceneCaptureType" value="67"/>
                <value name="GainControl" value="68"/>
                <value name="Contrast" value="69"/>
                <value name="Saturation" value="70"/>
                <value name="Sharpness" value="71"/>
                <value name="DeviceSettingDescription" value="72"/>
                <value name="PosterImage" value="73"/>
                <value name="CoverArtImage" value="74"/>
                <value name="ThumbnailImage" value="75"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SupportEstimate" fullname="QtMultimediaKit::SupportEstimate" href="qtmultimediakit.html#SupportEstimate-enum" location="qtmedianamespace.h">
                <value name="NotSupported" value="0"/>
                <value name="MaybeSupported" value="1"/>
                <value name="ProbablySupported" value="2"/>
                <value name="PreferredService" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="EncodingQuality" fullname="QtMultimediaKit::EncodingQuality" href="qtmultimediakit.html#EncodingQuality-enum" location="qtmedianamespace.h">
                <value name="VeryLowQuality" value="0"/>
                <value name="LowQuality" value="1"/>
                <value name="NormalQuality" value="2"/>
                <value name="HighQuality" value="3"/>
                <value name="VeryHighQuality" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="EncodingMode" fullname="QtMultimediaKit::EncodingMode" href="qtmultimediakit.html#EncodingMode-enum" location="qtmedianamespace.h">
                <value name="ConstantQualityEncoding" value="0"/>
                <value name="ConstantBitRateEncoding" value="1"/>
                <value name="AverageBitRateEncoding" value="2"/>
                <value name="TwoPassEncoding" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AvailabilityError" fullname="QtMultimediaKit::AvailabilityError" href="qtmultimediakit.html#AvailabilityError-enum" location="qtmedianamespace.h">
                <value name="NoError" value="0"/>
                <value name="ServiceMissingError" value="1"/>
                <value name="BusyError" value="2"/>
                <value name="ResourceError" value="3"/>
            </enum>
        </namespace>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRemoteServiceControl" href="qremoteservicecontrol.html" location="qremoteservicecontrol.h" bases="" module="QtServiceFramework">
            <function access="public" threadsafety="unspecified" status="commendable" name="QRemoteServiceControl" fullname="QRemoteServiceControl::QRemoteServiceControl" href="qremoteservicecontrol.html#QRemoteServiceControl" location="qremoteservicecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRemoteServiceControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRemoteServiceControl" fullname="QRemoteServiceControl::~QRemoteServiceControl" href="qremoteservicecontrol.html#dtor.QRemoteServiceControl" location="qremoteservicecontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRemoteServiceControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="publishServices" fullname="QRemoteServiceControl::publishServices" href="qremoteservicecontrol.html#publishServices" location="qremoteservicecontrol.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="publishServices(const QString &amp; ident)">
                <parameter left="const QString &amp;" right="" name="ident" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaControl" href="qmediacontrol.html" location="qmediacontrol.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaControl" fullname="QMediaControl::~QMediaControl" href="qmediacontrol.html#dtor.QMediaControl" location="qmediacontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaControl()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaControl" fullname="QMediaControl::QMediaControl" href="qmediacontrol.html#QMediaControl" location="qmediacontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaControl::d_ptr" href="qmediacontrol.html#d_ptr-var" location="qmediacontrol.h" type="QMediaControlPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkManagerEngineFactory" href="qlandmarkmanagerenginefactory.html" location="qlandmarkmanagerenginefactory.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedImplementationVersions" fullname="QLandmarkManagerEngineFactory::supportedImplementationVersions" href="qlandmarkmanagerenginefactory.html#supportedImplementationVersions" location="qlandmarkmanagerenginefactory.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedImplementationVersions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkManagerEngineFactory" fullname="QLandmarkManagerEngineFactory::~QLandmarkManagerEngineFactory" href="qlandmarkmanagerenginefactory.html#dtor.QLandmarkManagerEngineFactory" location="qlandmarkmanagerenginefactory.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkManagerEngineFactory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="engine" fullname="QLandmarkManagerEngineFactory::engine" href="qlandmarkmanagerenginefactory.html#engine" location="qlandmarkmanagerenginefactory.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QLandmarkManagerEngine *" signature="engine(const QMap&lt;QString, QString&gt; &amp; parameters, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QLandmarkManagerEngineFactory::managerName" href="qlandmarkmanagerenginefactory.html#managerName" location="qlandmarkmanagerenginefactory.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkSaveRequest" href="qlandmarksaverequest.html" location="qlandmarksaverequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkSaveRequest" fullname="QLandmarkSaveRequest::QLandmarkSaveRequest" href="qlandmarksaverequest.html#QLandmarkSaveRequest" location="qlandmarksaverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkSaveRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkSaveRequest" fullname="QLandmarkSaveRequest::~QLandmarkSaveRequest" href="qlandmarksaverequest.html#dtor.QLandmarkSaveRequest" location="qlandmarksaverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkSaveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarks" fullname="QLandmarkSaveRequest::landmarks" href="qlandmarksaverequest.html#landmarks" location="qlandmarksaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmark&gt;" signature="landmarks() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmarks" fullname="QLandmarkSaveRequest::setLandmarks" href="qlandmarksaverequest.html#setLandmarks" location="qlandmarksaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmarks(const QList&lt;QLandmark&gt; &amp; landmarks)">
                <parameter left="const QList&lt;QLandmark&gt; &amp;" right="" name="landmarks" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmark" fullname="QLandmarkSaveRequest::setLandmark" href="qlandmarksaverequest.html#setLandmark" location="qlandmarksaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmark(const QLandmark &amp; landmark)">
                <parameter left="const QLandmark &amp;" right="" name="landmark" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QLandmarkSaveRequest::errorMap" href="qlandmarksaverequest.html#errorMap" location="qlandmarksaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QLandmarkManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactInvalidFilter" href="qcontactinvalidfilter.html" location="qcontactinvalidfilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactInvalidFilter" fullname="QContactInvalidFilter::QContactInvalidFilter" href="qcontactinvalidfilter.html#QContactInvalidFilter" location="qcontactinvalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactInvalidFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactInvalidFilter" fullname="QContactInvalidFilter::QContactInvalidFilter" href="qcontactinvalidfilter.html#QContactInvalidFilter-2" location="qcontactinvalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactInvalidFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServicePluginInterface" href="qserviceplugininterface.html" location="qserviceplugininterface.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="createInstance" fullname="QServicePluginInterface::createInstance" href="qserviceplugininterface.html#createInstance" location="qserviceplugininterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QObject *" signature="createInstance(const QServiceInterfaceDescriptor &amp; descriptor, QServiceContext * context, QAbstractSecuritySession * securitySession)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="descriptor" default=""/>
                <parameter left="QServiceContext *" right="" name="context" default=""/>
                <parameter left="QAbstractSecuritySession *" right="" name="securitySession" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="installService" fullname="QServicePluginInterface::installService" href="qserviceplugininterface.html#installService" location="qserviceplugininterface.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="installService()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="uninstallService" fullname="QServicePluginInterface::uninstallService" href="qserviceplugininterface.html#uninstallService" location="qserviceplugininterface.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="uninstallService()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactIntersectionFilter" href="qcontactintersectionfilter.html" location="qcontactintersectionfilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactIntersectionFilter" fullname="QContactIntersectionFilter::QContactIntersectionFilter" href="qcontactintersectionfilter.html#QContactIntersectionFilter" location="qcontactintersectionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactIntersectionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactIntersectionFilter" fullname="QContactIntersectionFilter::QContactIntersectionFilter" href="qcontactintersectionfilter.html#QContactIntersectionFilter-2" location="qcontactintersectionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactIntersectionFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilters" fullname="QContactIntersectionFilter::setFilters" href="qcontactintersectionfilter.html#setFilters" location="qcontactintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilters(const QList&lt;QContactFilter&gt; &amp; filters)">
                <parameter left="const QList&lt;QContactFilter&gt; &amp;" right="" name="filters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepend" fullname="QContactIntersectionFilter::prepend" href="qcontactintersectionfilter.html#prepend" location="qcontactintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="prepend(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QContactIntersectionFilter::append" href="qcontactintersectionfilter.html#append" location="qcontactintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QContactIntersectionFilter::remove" href="qcontactintersectionfilter.html#remove" location="qcontactintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QContactIntersectionFilter::operator&lt;&lt;" href="qcontactintersectionfilter.html#operator&lt;&lt;" location="qcontactintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactIntersectionFilter &amp;" signature="operator&lt;&lt;(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QContactIntersectionFilter::filters" href="qcontactintersectionfilter.html#filters" location="qcontactintersectionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactFilter&gt;" signature="filters() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistNavigator" href="qmediaplaylistnavigator.html" location="qmediaplaylistnavigator.h" bases="" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylistNavigator::playbackMode" href="qmediaplaylistnavigator.html#playbackMode-prop" location="qmediaplaylistnavigator.h" type="QMediaPlaylist::PlaybackMode">
                <getter name="playbackMode"/>
                <setter name="setPlaybackMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentIndex" fullname="QMediaPlaylistNavigator::currentIndex" href="qmediaplaylistnavigator.html#currentIndex-prop" location="qmediaplaylistnavigator.h" type="int">
                <getter name="currentIndex"/>
                <setter name="jump"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentItem" fullname="QMediaPlaylistNavigator::currentItem" href="qmediaplaylistnavigator.html#currentItem-prop" location="qmediaplaylistnavigator.h" type="QMediaContent">
                <getter name="currentItem"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistNavigator" fullname="QMediaPlaylistNavigator::QMediaPlaylistNavigator" href="qmediaplaylistnavigator.html#QMediaPlaylistNavigator" location="qmediaplaylistnavigator.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistNavigator(QMediaPlaylistProvider * playlist, QObject * parent)">
                <parameter left="QMediaPlaylistProvider *" right="" name="playlist" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistNavigator" fullname="QMediaPlaylistNavigator::~QMediaPlaylistNavigator" href="qmediaplaylistnavigator.html#dtor.QMediaPlaylistNavigator" location="qmediaplaylistnavigator.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistNavigator()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlist" fullname="QMediaPlaylistNavigator::playlist" href="qmediaplaylistnavigator.html#playlist" location="qmediaplaylistnavigator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylistProvider *" signature="playlist() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylist" fullname="QMediaPlaylistNavigator::setPlaylist" href="qmediaplaylistnavigator.html#setPlaylist" location="qmediaplaylistnavigator.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaylist(QMediaPlaylistProvider * playlist)">
                <parameter left="QMediaPlaylistProvider *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylistNavigator::playbackMode" href="qmediaplaylistnavigator.html#playbackMode-prop" location="qmediaplaylistnavigator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playbackMode" type="QMediaPlaylist::PlaybackMode" signature="playbackMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentItem" fullname="QMediaPlaylistNavigator::currentItem" href="qmediaplaylistnavigator.html#currentItem-prop" location="qmediaplaylistnavigator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentItem" type="QMediaContent" signature="currentItem() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextItem" fullname="QMediaPlaylistNavigator::nextItem" href="qmediaplaylistnavigator.html#nextItem" location="qmediaplaylistnavigator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent" signature="nextItem(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousItem" fullname="QMediaPlaylistNavigator::previousItem" href="qmediaplaylistnavigator.html#previousItem" location="qmediaplaylistnavigator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent" signature="previousItem(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemAt" fullname="QMediaPlaylistNavigator::itemAt" href="qmediaplaylistnavigator.html#itemAt" location="qmediaplaylistnavigator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent" signature="itemAt(int position) const">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentIndex" fullname="QMediaPlaylistNavigator::currentIndex" href="qmediaplaylistnavigator.html#currentIndex-prop" location="qmediaplaylistnavigator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentIndex" type="int" signature="currentIndex() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextIndex" fullname="QMediaPlaylistNavigator::nextIndex" href="qmediaplaylistnavigator.html#nextIndex" location="qmediaplaylistnavigator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="nextIndex(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousIndex" fullname="QMediaPlaylistNavigator::previousIndex" href="qmediaplaylistnavigator.html#previousIndex" location="qmediaplaylistnavigator.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="previousIndex(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="next" fullname="QMediaPlaylistNavigator::next" href="qmediaplaylistnavigator.html#next" location="qmediaplaylistnavigator.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="next()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="previous" fullname="QMediaPlaylistNavigator::previous" href="qmediaplaylistnavigator.html#previous" location="qmediaplaylistnavigator.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="previous()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="jump" fullname="QMediaPlaylistNavigator::jump" href="qmediaplaylistnavigator.html#currentIndex-prop" location="qmediaplaylistnavigator.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="currentIndex" type="void" signature="jump(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackMode" fullname="QMediaPlaylistNavigator::setPlaybackMode" href="qmediaplaylistnavigator.html#playbackMode-prop" location="qmediaplaylistnavigator.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="playbackMode" type="void" signature="setPlaybackMode(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activated" fullname="QMediaPlaylistNavigator::activated" href="qmediaplaylistnavigator.html#activated" location="qmediaplaylistnavigator.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activated(const QMediaContent &amp; media)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentIndexChanged" fullname="QMediaPlaylistNavigator::currentIndexChanged" href="qmediaplaylistnavigator.html#currentIndexChanged" location="qmediaplaylistnavigator.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentIndexChanged(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackModeChanged" fullname="QMediaPlaylistNavigator::playbackModeChanged" href="qmediaplaylistnavigator.html#playbackModeChanged" location="qmediaplaylistnavigator.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackModeChanged(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="surroundingItemsChanged" fullname="QMediaPlaylistNavigator::surroundingItemsChanged" href="qmediaplaylistnavigator.html#surroundingItemsChanged" location="qmediaplaylistnavigator.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="surroundingItemsChanged()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaPlaylistNavigator::d_ptr" href="qmediaplaylistnavigator.html#d_ptr-var" location="qmediaplaylistnavigator.h" type="QMediaPlaylistNavigatorPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinition" href="qorganizeritemdetaildefinition.html" location="qorganizeritemdetaildefinition.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinition" fullname="QOrganizerItemDetailDefinition::QOrganizerItemDetailDefinition" href="qorganizeritemdetaildefinition.html#QOrganizerItemDetailDefinition" location="qorganizeritemdetaildefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetailDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemDetailDefinition" fullname="QOrganizerItemDetailDefinition::~QOrganizerItemDetailDefinition" href="qorganizeritemdetaildefinition.html#dtor.QOrganizerItemDetailDefinition" location="qorganizeritemdetaildefinition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemDetailDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinition" fullname="QOrganizerItemDetailDefinition::QOrganizerItemDetailDefinition" href="qorganizeritemdetaildefinition.html#QOrganizerItemDetailDefinition-2" location="qorganizeritemdetaildefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemDetailDefinition(const QOrganizerItemDetailDefinition &amp; other)">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemDetailDefinition::operator=" href="qorganizeritemdetaildefinition.html#operator=" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemDetailDefinition &amp;" signature="operator=(const QOrganizerItemDetailDefinition &amp; other)">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOrganizerItemDetailDefinition::operator==" href="qorganizeritemdetaildefinition.html#operator==" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOrganizerItemDetailDefinition &amp; other) const">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QOrganizerItemDetailDefinition::operator!=" href="qorganizeritemdetaildefinition.html#operator!=" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QOrganizerItemDetailDefinition &amp; other) const">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QOrganizerItemDetailDefinition::isEmpty" href="qorganizeritemdetaildefinition.html#isEmpty" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QOrganizerItemDetailDefinition::setName" href="qorganizeritemdetaildefinition.html#setName" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; definitionName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QOrganizerItemDetailDefinition::name" href="qorganizeritemdetaildefinition.html#name" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUnique" fullname="QOrganizerItemDetailDefinition::setUnique" href="qorganizeritemdetaildefinition.html#setUnique" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUnique(bool unique)">
                <parameter left="bool" right="" name="unique" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isUnique" fullname="QOrganizerItemDetailDefinition::isUnique" href="qorganizeritemdetaildefinition.html#isUnique" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isUnique() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFields" fullname="QOrganizerItemDetailDefinition::setFields" href="qorganizeritemdetaildefinition.html#setFields" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFields(const QMap&lt;QString, QOrganizerItemDetailFieldDefinition&gt; &amp; fields)">
                <parameter left="const QMap&lt;QString, QOrganizerItemDetailFieldDefinition&gt; &amp;" right="" name="fields" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fields" fullname="QOrganizerItemDetailDefinition::fields" href="qorganizeritemdetaildefinition.html#fields" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QOrganizerItemDetailFieldDefinition&gt;" signature="fields() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertField" fullname="QOrganizerItemDetailDefinition::insertField" href="qorganizeritemdetaildefinition.html#insertField" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertField(const QString &amp; key, const QOrganizerItemDetailFieldDefinition &amp; field)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QOrganizerItemDetailFieldDefinition &amp;" right="" name="field" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeField" fullname="QOrganizerItemDetailDefinition::removeField" href="qorganizeritemdetaildefinition.html#removeField" location="qorganizeritemdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeField(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactId" href="qcontactid.html" location="qcontactid.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactId" fullname="QContactId::QContactId" href="qcontactid.html#QContactId" location="qcontactid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactId" fullname="QContactId::~QContactId" href="qcontactid.html#dtor.QContactId" location="qcontactid.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactId" fullname="QContactId::QContactId" href="qcontactid.html#QContactId-2" location="qcontactid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactId(const QContactId &amp; other)">
                <parameter left="const QContactId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactId::operator=" href="qcontactid.html#operator=" location="qcontactid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactId &amp;" signature="operator=(const QContactId &amp; other)">
                <parameter left="const QContactId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactId::operator==" href="qcontactid.html#operator==" location="qcontactid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactId &amp; other) const">
                <parameter left="const QContactId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactId::operator!=" href="qcontactid.html#operator!=" location="qcontactid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactId &amp; other) const">
                <parameter left="const QContactId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QContactId::operator&lt;" href="qcontactid.html#operator&lt;" location="qcontactid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QContactId &amp; other) const">
                <parameter left="const QContactId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QContactId::managerUri" href="qcontactid.html#managerUri" location="qcontactid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localId" fullname="QContactId::localId" href="qcontactid.html#localId" location="qcontactid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactLocalId" signature="localId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManagerUri" fullname="QContactId::setManagerUri" href="qcontactid.html#setManagerUri" location="qcontactid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManagerUri(const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="uri" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalId" fullname="QContactId::setLocalId" href="qcontactid.html#setLocalId" location="qcontactid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalId(const QContactLocalId &amp; id)">
                <parameter left="const QContactLocalId &amp;" right="" name="id" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactLocalIdFetchRequest" href="qcontactlocalidfetchrequest.html" location="qcontactlocalidfetchrequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactLocalIdFetchRequest" fullname="QContactLocalIdFetchRequest::QContactLocalIdFetchRequest" href="qcontactlocalidfetchrequest.html#QContactLocalIdFetchRequest" location="qcontactlocalidfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactLocalIdFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactLocalIdFetchRequest" fullname="QContactLocalIdFetchRequest::~QContactLocalIdFetchRequest" href="qcontactlocalidfetchrequest.html#dtor.QContactLocalIdFetchRequest" location="qcontactlocalidfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactLocalIdFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QContactLocalIdFetchRequest::setFilter" href="qcontactlocalidfetchrequest.html#setFilter" location="qcontactlocalidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QContactLocalIdFetchRequest::setSorting" href="qcontactlocalidfetchrequest.html#setSorting" location="qcontactlocalidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QList&lt;QContactSortOrder&gt; &amp; sorting)">
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QContactLocalIdFetchRequest::filter" href="qcontactlocalidfetchrequest.html#filter" location="qcontactlocalidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QContactLocalIdFetchRequest::sorting" href="qcontactlocalidfetchrequest.html#sorting" location="qcontactlocalidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactSortOrder&gt;" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="ids" fullname="QContactLocalIdFetchRequest::ids" href="qcontactlocalidfetchrequest.html#ids" location="qcontactlocalidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactLocalId&gt;" signature="ids() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistSourceControl" href="qmediaplaylistsourcecontrol.html" location="qmediaplaylistsourcecontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistSourceControl" fullname="QMediaPlaylistSourceControl::~QMediaPlaylistSourceControl" href="qmediaplaylistsourcecontrol.html#dtor.QMediaPlaylistSourceControl" location="qmediaplaylistsourcecontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistSourceControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlist" fullname="QMediaPlaylistSourceControl::playlist" href="qmediaplaylistsourcecontrol.html#playlist" location="qmediaplaylistsourcecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylist *" signature="playlist() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylist" fullname="QMediaPlaylistSourceControl::setPlaylist" href="qmediaplaylistsourcecontrol.html#setPlaylist" location="qmediaplaylistsourcecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaylist(QMediaPlaylist * playlist)">
                <parameter left="QMediaPlaylist *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistChanged" fullname="QMediaPlaylistSourceControl::playlistChanged" href="qmediaplaylistsourcecontrol.html#playlistChanged" location="qmediaplaylistsourcecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistChanged(QMediaPlaylist * playlist)">
                <parameter left="QMediaPlaylist *" right="" name="playlist" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlaylistSourceControl" fullname="QMediaPlaylistSourceControl::QMediaPlaylistSourceControl" href="qmediaplaylistsourcecontrol.html#QMediaPlaylistSourceControl" location="qmediaplaylistsourcecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistSourceControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryItemList" href="qgalleryitemlist.html" location="qgalleryitemlist.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="cursorPosition" fullname="QGalleryItemList::cursorPosition" href="qgalleryitemlist.html#cursorPosition-prop" location="qgalleryitemlist.h" type="int">
                <getter name="cursorPosition"/>
                <setter name="setCursorPosition"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="minimumPagedItems" fullname="QGalleryItemList::minimumPagedItems" href="qgalleryitemlist.html#minimumPagedItems-prop" location="qgalleryitemlist.h" type="int">
                <getter name="minimumPagedItems"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ItemStatusFlag" fullname="QGalleryItemList::ItemStatusFlag" href="qgalleryitemlist.html#ItemStatusFlag-enum" location="qgalleryitemlist.h" typedef="QGalleryItemList::ItemStatus">
                <value name="OutOfRange" value="0x01"/>
                <value name="Reading" value="0x02"/>
                <value name="Writing" value="0x04"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ItemStatus" fullname="QGalleryItemList::ItemStatus" href="qgalleryitemlist.html#ItemStatus-typedef" location="qgalleryitemlist.h" enum="QGalleryItemList::ItemStatusFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryItemList" fullname="QGalleryItemList::QGalleryItemList" href="qgalleryitemlist.html#QGalleryItemList" location="qgalleryitemlist.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryItemList(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryItemList" fullname="QGalleryItemList::~QGalleryItemList" href="qgalleryitemlist.html#dtor.QGalleryItemList" location="qgalleryitemlist.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryItemList()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyNames" fullname="QGalleryItemList::propertyNames" href="qgalleryitemlist.html#propertyNames" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="propertyNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyKey" fullname="QGalleryItemList::propertyKey" href="qgalleryitemlist.html#propertyKey" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="propertyKey(const QString &amp; propertyName) const">
                <parameter left="const QString &amp;" right="" name="propertyName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyAttributes" fullname="QGalleryItemList::propertyAttributes" href="qgalleryitemlist.html#propertyAttributes" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QGalleryProperty::Attributes" signature="propertyAttributes(int key) const">
                <parameter left="int" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyType" fullname="QGalleryItemList::propertyType" href="qgalleryitemlist.html#propertyType" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant::Type" signature="propertyType(int key) const">
                <parameter left="int" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cursorPosition" fullname="QGalleryItemList::cursorPosition" href="qgalleryitemlist.html#cursorPosition-prop" location="qgalleryitemlist.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="cursorPosition" type="int" signature="cursorPosition() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumPagedItems" fullname="QGalleryItemList::minimumPagedItems" href="qgalleryitemlist.html#minimumPagedItems-prop" location="qgalleryitemlist.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" associated-property="minimumPagedItems" type="int" signature="minimumPagedItems() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QGalleryItemList::count" href="qgalleryitemlist.html#count" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="count() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QGalleryItemList::id" href="qgalleryitemlist.html#id" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="id(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QGalleryItemList::url" href="qgalleryitemlist.html#url" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="url(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QGalleryItemList::type" href="qgalleryitemlist.html#type" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="type(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QGalleryItemList::resources" href="qgalleryitemlist.html#resources" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGalleryResource&gt;" signature="resources(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QGalleryItemList::status" href="qgalleryitemlist.html#status" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="ItemStatus" signature="status(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QGalleryItemList::metaData" href="qgalleryitemlist.html#metaData" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metaData(int index, int key) const">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetaData" fullname="QGalleryItemList::setMetaData" href="qgalleryitemlist.html#setMetaData" location="qgalleryitemlist.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMetaData(int index, int key, const QVariant &amp; value)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QGalleryItemList::metaData" href="qgalleryitemlist.html#metaData-2" location="qgalleryitemlist.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QVariant" signature="metaData(int index, const QString &amp; property) const">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QString &amp;" right="" name="property" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetaData" fullname="QGalleryItemList::setMetaData" href="qgalleryitemlist.html#setMetaData-2" location="qgalleryitemlist.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setMetaData(int index, const QString &amp; property, const QVariant &amp; value)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QString &amp;" right="" name="property" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCursorPosition" fullname="QGalleryItemList::setCursorPosition" href="qgalleryitemlist.html#cursorPosition-prop" location="qgalleryitemlist.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="cursorPosition" type="void" signature="setCursorPosition(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inserted" fullname="QGalleryItemList::inserted" href="qgalleryitemlist.html#inserted" location="qgalleryitemlist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="inserted(int index, int count)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removed" fullname="QGalleryItemList::removed" href="qgalleryitemlist.html#removed" location="qgalleryitemlist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="removed(int index, int count)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="moved" fullname="QGalleryItemList::moved" href="qgalleryitemlist.html#moved" location="qgalleryitemlist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="moved(int from, int to, int count)">
                <parameter left="int" right="" name="from" default=""/>
                <parameter left="int" right="" name="to" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="statusChanged" fullname="QGalleryItemList::statusChanged" href="qgalleryitemlist.html#statusChanged" location="qgalleryitemlist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="statusChanged(int index, int count)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QGalleryItemList::metaDataChanged" href="qgalleryitemlist.html#metaDataChanged" location="qgalleryitemlist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged(int index, int count, const QList&lt;int&gt; &amp; keys)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="count" default=""/>
                <parameter left="const QList&lt;int&gt; &amp;" right="" name="keys" default="QList&lt;int&gt; ()"/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QGalleryItemList::d_ptr" href="qgalleryitemlist.html#d_ptr-var" location="qgalleryitemlist.h" type="QScopedPointer&lt;QGalleryItemListPrivate&gt;" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraImageProcessingControl" href="qcameraimageprocessingcontrol.html" location="qcameraimageprocessingcontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraImageProcessingControl" fullname="QCameraImageProcessingControl::~QCameraImageProcessingControl" href="qcameraimageprocessingcontrol.html#dtor.QCameraImageProcessingControl" location="qcameraimageprocessingcontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraImageProcessingControl()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ProcessingParameter" fullname="QCameraImageProcessingControl::ProcessingParameter" href="qcameraimageprocessingcontrol.html#ProcessingParameter-enum" location="qcameraimageprocessingcontrol.h">
                <value name="Contrast" value="0"/>
                <value name="Saturation" value="1"/>
                <value name="Brightness" value="2"/>
                <value name="Sharpening" value="3"/>
                <value name="Denoising" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="whiteBalanceMode" fullname="QCameraImageProcessingControl::whiteBalanceMode" href="qcameraimageprocessingcontrol.html#whiteBalanceMode" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraImageProcessing::WhiteBalanceMode" signature="whiteBalanceMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWhiteBalanceMode" fullname="QCameraImageProcessingControl::setWhiteBalanceMode" href="qcameraimageprocessingcontrol.html#setWhiteBalanceMode" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setWhiteBalanceMode(QCameraImageProcessing::WhiteBalanceMode mode)">
                <parameter left="QCameraImageProcessing::WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isWhiteBalanceModeSupported" fullname="QCameraImageProcessingControl::isWhiteBalanceModeSupported" href="qcameraimageprocessingcontrol.html#isWhiteBalanceModeSupported" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isWhiteBalanceModeSupported(QCameraImageProcessing::WhiteBalanceMode mode) const">
                <parameter left="QCameraImageProcessing::WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="manualWhiteBalance" fullname="QCameraImageProcessingControl::manualWhiteBalance" href="qcameraimageprocessingcontrol.html#manualWhiteBalance" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="manualWhiteBalance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualWhiteBalance" fullname="QCameraImageProcessingControl::setManualWhiteBalance" href="qcameraimageprocessingcontrol.html#setManualWhiteBalance" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualWhiteBalance(int colorTemperature)">
                <parameter left="int" right="" name="colorTemperature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isProcessingParameterSupported" fullname="QCameraImageProcessingControl::isProcessingParameterSupported" href="qcameraimageprocessingcontrol.html#isProcessingParameterSupported" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isProcessingParameterSupported(ProcessingParameter parameter) const">
                <parameter left="ProcessingParameter" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="processingParameter" fullname="QCameraImageProcessingControl::processingParameter" href="qcameraimageprocessingcontrol.html#processingParameter" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="processingParameter(ProcessingParameter parameter) const">
                <parameter left="ProcessingParameter" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProcessingParameter" fullname="QCameraImageProcessingControl::setProcessingParameter" href="qcameraimageprocessingcontrol.html#setProcessingParameter" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setProcessingParameter(ProcessingParameter parameter, QVariant value)">
                <parameter left="ProcessingParameter" right="" name="parameter" default=""/>
                <parameter left="QVariant" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedPresets" fullname="QCameraImageProcessingControl::supportedPresets" href="qcameraimageprocessingcontrol.html#supportedPresets" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="supportedPresets() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="presetDescription" fullname="QCameraImageProcessingControl::presetDescription" href="qcameraimageprocessingcontrol.html#presetDescription" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="presetDescription(const QByteArray &amp; preset) const">
                <parameter left="const QByteArray &amp;" right="" name="preset" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preset" fullname="QCameraImageProcessingControl::preset" href="qcameraimageprocessingcontrol.html#preset" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="preset() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPreset" fullname="QCameraImageProcessingControl::setPreset" href="qcameraimageprocessingcontrol.html#setPreset" location="qcameraimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPreset(const QByteArray &amp; preset)">
                <parameter left="const QByteArray &amp;" right="" name="preset" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraImageProcessingControl" fullname="QCameraImageProcessingControl::QCameraImageProcessingControl" href="qcameraimageprocessingcontrol.html#QCameraImageProcessingControl" location="qcameraimageprocessingcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraImageProcessingControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIdFetchRequest" href="qlandmarkidfetchrequest.html" location="qlandmarkidfetchrequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIdFetchRequest" fullname="QLandmarkIdFetchRequest::QLandmarkIdFetchRequest" href="qlandmarkidfetchrequest.html#QLandmarkIdFetchRequest" location="qlandmarkidfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkIdFetchRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkIdFetchRequest" fullname="QLandmarkIdFetchRequest::~QLandmarkIdFetchRequest" href="qlandmarkidfetchrequest.html#dtor.QLandmarkIdFetchRequest" location="qlandmarkidfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkIdFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QLandmarkIdFetchRequest::filter" href="qlandmarkidfetchrequest.html#filter" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QLandmarkIdFetchRequest::setFilter" href="qlandmarkidfetchrequest.html#setFilter" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QLandmarkIdFetchRequest::sorting" href="qlandmarkidfetchrequest.html#sorting" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkSortOrder&gt;" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QLandmarkIdFetchRequest::setSorting" href="qlandmarkidfetchrequest.html#setSorting" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QList&lt;QLandmarkSortOrder&gt; &amp; sorting)">
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QLandmarkIdFetchRequest::setSorting" href="qlandmarkidfetchrequest.html#setSorting-2" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setSorting(const QLandmarkSortOrder &amp; sorting)">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fetchHint" fullname="QLandmarkIdFetchRequest::fetchHint" href="qlandmarkidfetchrequest.html#fetchHint" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkFetchHint" signature="fetchHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFetchHint" fullname="QLandmarkIdFetchRequest::setFetchHint" href="qlandmarkidfetchrequest.html#setFetchHint" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFetchHint(const QLandmarkFetchHint &amp; fetchHint)">
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkIdFetchRequest::landmarkIds" href="qlandmarkidfetchrequest.html#landmarkIds" location="qlandmarkidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFetchHint" href="qorganizeritemfetchhint.html" location="qorganizeritemfetchhint.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFetchHint" fullname="QOrganizerItemFetchHint::QOrganizerItemFetchHint" href="qorganizeritemfetchhint.html#QOrganizerItemFetchHint" location="qorganizeritemfetchhint.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemFetchHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFetchHint" fullname="QOrganizerItemFetchHint::QOrganizerItemFetchHint" href="qorganizeritemfetchhint.html#QOrganizerItemFetchHint-2" location="qorganizeritemfetchhint.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemFetchHint(const QOrganizerItemFetchHint &amp; other)">
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemFetchHint" fullname="QOrganizerItemFetchHint::~QOrganizerItemFetchHint" href="qorganizeritemfetchhint.html#dtor.QOrganizerItemFetchHint" location="qorganizeritemfetchhint.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemFetchHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemFetchHint::operator=" href="qorganizeritemfetchhint.html#operator=" location="qorganizeritemfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemFetchHint &amp;" signature="operator=(const QOrganizerItemFetchHint &amp; other)">
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionsHint" fullname="QOrganizerItemFetchHint::detailDefinitionsHint" href="qorganizeritemfetchhint.html#detailDefinitionsHint" location="qorganizeritemfetchhint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="detailDefinitionsHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionsHint" fullname="QOrganizerItemFetchHint::setDetailDefinitionsHint" href="qorganizeritemfetchhint.html#setDetailDefinitionsHint" location="qorganizeritemfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionsHint(const QStringList &amp; definitionNames)">
                <parameter left="const QStringList &amp;" right="" name="definitionNames" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="OptimizationHint" fullname="QOrganizerItemFetchHint::OptimizationHint" href="qorganizeritemfetchhint.html#OptimizationHint-enum" location="qorganizeritemfetchhint.h" typedef="QOrganizerItemFetchHint::OptimizationHints">
                <value name="AllRequired" value="0x0"/>
                <value name="NoActionPreferences" value="0x2"/>
                <value name="NoBinaryBlobs" value="0x4"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="OptimizationHints" fullname="QOrganizerItemFetchHint::OptimizationHints" href="qorganizeritemfetchhint.html#OptimizationHints-typedef" location="qorganizeritemfetchhint.h" enum="QOrganizerItemFetchHint::OptimizationHint"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="optimizationHints" fullname="QOrganizerItemFetchHint::optimizationHints" href="qorganizeritemfetchhint.html#optimizationHints" location="qorganizeritemfetchhint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="OptimizationHints" signature="optimizationHints() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOptimizationHints" fullname="QOrganizerItemFetchHint::setOptimizationHints" href="qorganizeritemfetchhint.html#setOptimizationHints" location="qorganizeritemfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOptimizationHints(QFlags&lt;QOrganizerItemFetchHint::OptimizationHint&gt; hints)">
                <parameter left="QFlags&lt;QOrganizerItemFetchHint::OptimizationHint&gt;" right="" name="hints" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactChangeLogFilter" href="qcontactchangelogfilter.html" location="qcontactchangelogfilter.h" bases="QContactFilter" module="QtContacts">
            <enum access="public" threadsafety="unspecified" status="commendable" name="EventType" fullname="QContactChangeLogFilter::EventType" href="qcontactchangelogfilter.html#EventType-enum" location="qcontactchangelogfilter.h">
                <value name="EventAdded" value="0"/>
                <value name="EventChanged" value="1"/>
                <value name="EventRemoved" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactChangeLogFilter" fullname="QContactChangeLogFilter::QContactChangeLogFilter" href="qcontactchangelogfilter.html#QContactChangeLogFilter" location="qcontactchangelogfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactChangeLogFilter(QContactChangeLogFilter::EventType type)">
                <parameter left="QContactChangeLogFilter::EventType" right="" name="type" default="QContactChangeLogFilter::EventAdded"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactChangeLogFilter" fullname="QContactChangeLogFilter::QContactChangeLogFilter" href="qcontactchangelogfilter.html#QContactChangeLogFilter-2" location="qcontactchangelogfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactChangeLogFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEventType" fullname="QContactChangeLogFilter::setEventType" href="qcontactchangelogfilter.html#setEventType" location="qcontactchangelogfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEventType(QContactChangeLogFilter::EventType type)">
                <parameter left="QContactChangeLogFilter::EventType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSince" fullname="QContactChangeLogFilter::setSince" href="qcontactchangelogfilter.html#setSince" location="qcontactchangelogfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSince(const QDateTime &amp; since)">
                <parameter left="const QDateTime &amp;" right="" name="since" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="since" fullname="QContactChangeLogFilter::since" href="qcontactchangelogfilter.html#since" location="qcontactchangelogfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="since() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="eventType" fullname="QContactChangeLogFilter::eventType" href="qcontactchangelogfilter.html#eventType" location="qcontactchangelogfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactChangeLogFilter::EventType" signature="eventType() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryAbstractResponse" href="qgalleryabstractresponse.html" location="qgalleryabstractresponse.h" bases="QGalleryItemList" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryAbstractResponse" fullname="QGalleryAbstractResponse::QGalleryAbstractResponse" href="qgalleryabstractresponse.html#QGalleryAbstractResponse" location="qgalleryabstractresponse.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryAbstractResponse(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryAbstractResponse" fullname="QGalleryAbstractResponse::~QGalleryAbstractResponse" href="qgalleryabstractresponse.html#dtor.QGalleryAbstractResponse" location="qgalleryabstractresponse.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryAbstractResponse()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="result" fullname="QGalleryAbstractResponse::result" href="qgalleryabstractresponse.html#result" location="qgalleryabstractresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="result() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isIdle" fullname="QGalleryAbstractResponse::isIdle" href="qgalleryabstractresponse.html#isIdle" location="qgalleryabstractresponse.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isIdle() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QGalleryAbstractResponse::cancel" href="qgalleryabstractresponse.html#cancel" location="qgalleryabstractresponse.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForFinished" fullname="QGalleryAbstractResponse::waitForFinished" href="qgalleryabstractresponse.html#waitForFinished" location="qgalleryabstractresponse.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForFinished(int msecs)">
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGalleryAbstractResponse::finished" href="qgalleryabstractresponse.html#finished" location="qgalleryabstractresponse.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="progressChanged" fullname="QGalleryAbstractResponse::progressChanged" href="qgalleryabstractresponse.html#progressChanged" location="qgalleryabstractresponse.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="progressChanged(int current, int maximum)">
                <parameter left="int" right="" name="current" default=""/>
                <parameter left="int" right="" name="maximum" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="finish" fullname="QGalleryAbstractResponse::finish" href="qgalleryabstractresponse.html#finish" location="qgalleryabstractresponse.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="finish(int result, bool idle)">
                <parameter left="int" right="" name="result" default=""/>
                <parameter left="bool" right="" name="idle" default="false"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRemoteServiceClassRegister" href="qremoteserviceclassregister.html" location="qremoteserviceclassregister.h" bases="" module="QtServiceFramework">
            <enum access="public" threadsafety="unspecified" status="commendable" name="InstanceType" fullname="QRemoteServiceClassRegister::InstanceType" href="qremoteserviceclassregister.html#InstanceType-enum" location="qremoteserviceclassregister.h">
                <value name="SharedInstance" value="0"/>
                <value name="UniqueInstance" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="types" fullname="QRemoteServiceClassRegister::types" href="qremoteserviceclassregister.html#types" location="qremoteserviceclassregister.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QRemoteServiceIdentifier&gt;" signature="types() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerType" fullname="QRemoteServiceClassRegister::registerType" href="qremoteserviceclassregister.html#registerType" location="qremoteserviceclassregister.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="registerType(QRemoteServiceClassRegister::InstanceType type)">
                <parameter left="QRemoteServiceClassRegister::InstanceType" right="" name="type" default="UniqueInstance"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkUnionFilter" href="qlandmarkunionfilter.html" location="qlandmarkunionfilter.h" bases="QLandmarkFilter" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkUnionFilter" fullname="QLandmarkUnionFilter::QLandmarkUnionFilter" href="qlandmarkunionfilter.html#QLandmarkUnionFilter" location="qlandmarkunionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkUnionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkUnionFilter" fullname="QLandmarkUnionFilter::QLandmarkUnionFilter" href="qlandmarkunionfilter.html#QLandmarkUnionFilter-2" location="qlandmarkunionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkUnionFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkUnionFilter" fullname="QLandmarkUnionFilter::~QLandmarkUnionFilter" href="qlandmarkunionfilter.html#dtor.QLandmarkUnionFilter" location="qlandmarkunionfilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkUnionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilters" fullname="QLandmarkUnionFilter::setFilters" href="qlandmarkunionfilter.html#setFilters" location="qlandmarkunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilters(const QList&lt;QLandmarkFilter&gt; &amp; filters)">
                <parameter left="const QList&lt;QLandmarkFilter&gt; &amp;" right="" name="filters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepend" fullname="QLandmarkUnionFilter::prepend" href="qlandmarkunionfilter.html#prepend" location="qlandmarkunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="prepend(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QLandmarkUnionFilter::append" href="qlandmarkunionfilter.html#append" location="qlandmarkunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QLandmarkUnionFilter::remove" href="qlandmarkunionfilter.html#remove" location="qlandmarkunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QLandmarkUnionFilter::clear" href="qlandmarkunionfilter.html#clear" location="qlandmarkunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QLandmarkUnionFilter::operator&lt;&lt;" href="qlandmarkunionfilter.html#operator&lt;&lt;" location="qlandmarkunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkUnionFilter &amp;" signature="operator&lt;&lt;(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QLandmarkUnionFilter::filters" href="qlandmarkunionfilter.html#filters" location="qlandmarkunionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkFilter&gt;" signature="filters() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategorySaveRequest" href="qlandmarkcategorysaverequest.html" location="qlandmarkcategorysaverequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategorySaveRequest" fullname="QLandmarkCategorySaveRequest::QLandmarkCategorySaveRequest" href="qlandmarkcategorysaverequest.html#QLandmarkCategorySaveRequest" location="qlandmarkcategorysaverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkCategorySaveRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkCategorySaveRequest" fullname="QLandmarkCategorySaveRequest::~QLandmarkCategorySaveRequest" href="qlandmarkcategorysaverequest.html#dtor.QLandmarkCategorySaveRequest" location="qlandmarkcategorysaverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkCategorySaveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QLandmarkCategorySaveRequest::categories" href="qlandmarkcategorysaverequest.html#categories" location="qlandmarkcategorysaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategory&gt;" signature="categories() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategories" fullname="QLandmarkCategorySaveRequest::setCategories" href="qlandmarkcategorysaverequest.html#setCategories" location="qlandmarkcategorysaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategories(const QList&lt;QLandmarkCategory&gt; &amp; categories)">
                <parameter left="const QList&lt;QLandmarkCategory&gt; &amp;" right="" name="categories" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategory" fullname="QLandmarkCategorySaveRequest::setCategory" href="qlandmarkcategorysaverequest.html#setCategory" location="qlandmarkcategorysaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategory(const QLandmarkCategory &amp; category)">
                <parameter left="const QLandmarkCategory &amp;" right="" name="category" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QLandmarkCategorySaveRequest::errorMap" href="qlandmarkcategorysaverequest.html#errorMap" location="qlandmarkcategorysaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QLandmarkManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRadioTuner" href="qradiotuner.html" location="qradiotuner.h" bases="QMediaObject" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QRadioTuner::state" href="qradiotuner.html#state-prop" location="qradiotuner.h" type="State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioTuner::band" href="qradiotuner.html#band-prop" location="qradiotuner.h" type="Band">
                <getter name="band"/>
                <setter name="setBand"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioTuner::frequency" href="qradiotuner.html#frequency-prop" location="qradiotuner.h" type="int">
                <getter name="frequency"/>
                <setter name="setFrequency"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="stereo" fullname="QRadioTuner::stereo" href="qradiotuner.html#stereo-prop" location="qradiotuner.h" type="bool">
                <getter name="isStereo"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="stereoMode" fullname="QRadioTuner::stereoMode" href="qradiotuner.html#stereoMode-prop" location="qradiotuner.h" type="StereoMode">
                <getter name="stereoMode"/>
                <setter name="setStereoMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioTuner::signalStrength" href="qradiotuner.html#signalStrength-prop" location="qradiotuner.h" type="int">
                <getter name="signalStrength"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioTuner::volume" href="qradiotuner.html#volume-prop" location="qradiotuner.h" type="int">
                <getter name="volume"/>
                <setter name="setVolume"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="QRadioTuner::muted" href="qradiotuner.html#muted-prop" location="qradiotuner.h" type="bool">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="searching" fullname="QRadioTuner::searching" href="qradiotuner.html#searching-prop" location="qradiotuner.h" type="bool">
                <getter name="isSearching"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QRadioTuner::State" href="qradiotuner.html#State-enum" location="qradiotuner.h">
                <value name="ActiveState" value="0"/>
                <value name="StoppedState" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Band" fullname="QRadioTuner::Band" href="qradiotuner.html#Band-enum" location="qradiotuner.h">
                <value name="AM" value="0"/>
                <value name="FM" value="1"/>
                <value name="SW" value="2"/>
                <value name="LW" value="3"/>
                <value name="FM2" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QRadioTuner::Error" href="qradiotuner.html#Error-enum" location="qradiotuner.h">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="OpenError" value="2"/>
                <value name="OutOfRangeError" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="StereoMode" fullname="QRadioTuner::StereoMode" href="qradiotuner.html#StereoMode-enum" location="qradiotuner.h">
                <value name="ForceStereo" value="0"/>
                <value name="ForceMono" value="1"/>
                <value name="Auto" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QRadioTuner" fullname="QRadioTuner::QRadioTuner" href="qradiotuner.html#QRadioTuner" location="qradiotuner.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRadioTuner(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRadioTuner" fullname="QRadioTuner::~QRadioTuner" href="qradiotuner.html#dtor.QRadioTuner" location="qradiotuner.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRadioTuner()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QRadioTuner::isAvailable" href="qradiotuner.html#isAvailable" location="qradiotuner.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityError" fullname="QRadioTuner::availabilityError" href="qradiotuner.html#availabilityError" location="qradiotuner.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::AvailabilityError" signature="availabilityError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QRadioTuner::state" href="qradiotuner.html#state-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioTuner::band" href="qradiotuner.html#band-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="band" type="Band" signature="band() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isBandSupported" fullname="QRadioTuner::isBandSupported" href="qradiotuner.html#isBandSupported" location="qradiotuner.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isBandSupported(Band band) const">
                <parameter left="Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioTuner::frequency" href="qradiotuner.html#frequency-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="frequency" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyStep" fullname="QRadioTuner::frequencyStep" href="qradiotuner.html#frequencyStep" location="qradiotuner.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequencyStep(Band band) const">
                <parameter left="Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyRange" fullname="QRadioTuner::frequencyRange" href="qradiotuner.html#frequencyRange" location="qradiotuner.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;int, int&gt;" signature="frequencyRange(Band band) const">
                <parameter left="Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStereo" fullname="QRadioTuner::isStereo" href="qradiotuner.html#stereo-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="stereo" type="bool" signature="isStereo() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStereoMode" fullname="QRadioTuner::setStereoMode" href="qradiotuner.html#stereoMode-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="stereoMode" type="void" signature="setStereoMode(QRadioTuner::StereoMode mode)">
                <parameter left="QRadioTuner::StereoMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoMode" fullname="QRadioTuner::stereoMode" href="qradiotuner.html#stereoMode-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="stereoMode" type="StereoMode" signature="stereoMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioTuner::signalStrength" href="qradiotuner.html#signalStrength-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="signalStrength" type="int" signature="signalStrength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioTuner::volume" href="qradiotuner.html#volume-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="volume" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QRadioTuner::isMuted" href="qradiotuner.html#muted-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="muted" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSearching" fullname="QRadioTuner::isSearching" href="qradiotuner.html#searching-prop" location="qradiotuner.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="searching" type="bool" signature="isSearching() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QRadioTuner::error" href="qradiotuner.html#error" location="qradiotuner.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QRadioTuner::errorString" href="qradiotuner.html#errorString" location="qradiotuner.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchForward" fullname="QRadioTuner::searchForward" href="qradiotuner.html#searchForward" location="qradiotuner.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="searchForward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchBackward" fullname="QRadioTuner::searchBackward" href="qradiotuner.html#searchBackward" location="qradiotuner.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="searchBackward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelSearch" fullname="QRadioTuner::cancelSearch" href="qradiotuner.html#cancelSearch" location="qradiotuner.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancelSearch()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBand" fullname="QRadioTuner::setBand" href="qradiotuner.html#band-prop" location="qradiotuner.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="band" type="void" signature="setBand(Band band)">
                <parameter left="Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QRadioTuner::setFrequency" href="qradiotuner.html#frequency-prop" location="qradiotuner.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="frequency" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QRadioTuner::setVolume" href="qradiotuner.html#volume-prop" location="qradiotuner.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="volume" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QRadioTuner::setMuted" href="qradiotuner.html#muted-prop" location="qradiotuner.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="muted" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QRadioTuner::start" href="qradiotuner.html#start" location="qradiotuner.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QRadioTuner::stop" href="qradiotuner.html#stop" location="qradiotuner.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QRadioTuner::stateChanged" href="qradiotuner.html#stateChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QRadioTuner::State state)">
                <parameter left="QRadioTuner::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bandChanged" fullname="QRadioTuner::bandChanged" href="qradiotuner.html#bandChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bandChanged(QRadioTuner::Band band)">
                <parameter left="QRadioTuner::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyChanged" fullname="QRadioTuner::frequencyChanged" href="qradiotuner.html#frequencyChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="frequencyChanged(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoStatusChanged" fullname="QRadioTuner::stereoStatusChanged" href="qradiotuner.html#stereoStatusChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stereoStatusChanged(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchingChanged" fullname="QRadioTuner::searchingChanged" href="qradiotuner.html#searchingChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchingChanged(bool searching)">
                <parameter left="bool" right="" name="searching" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrengthChanged" fullname="QRadioTuner::signalStrengthChanged" href="qradiotuner.html#signalStrengthChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="signalStrengthChanged(int strength)">
                <parameter left="int" right="" name="strength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QRadioTuner::volumeChanged" href="qradiotuner.html#volumeChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutedChanged" fullname="QRadioTuner::mutedChanged" href="qradiotuner.html#mutedChanged" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutedChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QRadioTuner::error" href="qradiotuner.html#error-2" location="qradiotuner.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(Error error)">
                <parameter left="Error" right="" name="error" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSensorPluginInterface" href="qsensorplugininterface.html" location="qsensorplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="registerSensors" fullname="QSensorPluginInterface::registerSensors" href="qsensorplugininterface.html#registerSensors" location="qsensorplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="registerSensors()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaService" href="qmediaservice.html" location="qmediaservice.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaService" fullname="QMediaService::~QMediaService" href="qmediaservice.html#dtor.QMediaService" location="qmediaservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaService()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestControl" fullname="QMediaService::requestControl" href="qmediaservice.html#requestControl" location="qmediaservice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaControl *" signature="requestControl(const char * interface)">
                <parameter left="const char *" right="" name="interface" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestControl" fullname="QMediaService::requestControl" href="qmediaservice.html#requestControl-2" location="qmediaservice.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="T" signature="requestControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseControl" fullname="QMediaService::releaseControl" href="qmediaservice.html#releaseControl" location="qmediaservice.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="releaseControl(QMediaControl * control)">
                <parameter left="QMediaControl *" right="" name="control" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaService" fullname="QMediaService::QMediaService" href="qmediaservice.html#QMediaService" location="qmediaservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaService::d_ptr" href="qmediaservice.html#d_ptr-var" location="qmediaservice.h" type="QMediaServicePrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraFocus" href="qcamerafocus.html" location="qcamerafocus.h" bases="" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="focusPointMode" fullname="QCameraFocus::focusPointMode" href="qcamerafocus.html#focusPointMode-prop" location="qcamerafocus.h" type="FocusPointMode">
                <getter name="focusPointMode"/>
                <setter name="setFocusPointMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="customFocusPoint" fullname="QCameraFocus::customFocusPoint" href="qcamerafocus.html#customFocusPoint-prop" location="qcamerafocus.h" type="QPointF">
                <getter name="customFocusPoint"/>
                <setter name="setCustomFocusPoint"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="focusZones" fullname="QCameraFocus::focusZones" href="qcamerafocus.html#focusZones-prop" location="qcamerafocus.h" type="QCameraFocusZoneList">
                <getter name="focusZones"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FocusMode" fullname="QCameraFocus::FocusMode" href="qcamerafocus.html#FocusMode-enum" location="qcamerafocus.h" typedef="QCameraFocus::FocusModes">
                <value name="ManualFocus" value="0x1"/>
                <value name="HyperfocalFocus" value="0x02"/>
                <value name="InfinityFocus" value="0x04"/>
                <value name="AutoFocus" value="0x8"/>
                <value name="ContinuousFocus" value="0x10"/>
                <value name="MacroFocus" value="0x20"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FocusModes" fullname="QCameraFocus::FocusModes" href="qcamerafocus.html#FocusModes-typedef" location="qcamerafocus.h" enum="QCameraFocus::FocusMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FocusPointMode" fullname="QCameraFocus::FocusPointMode" href="qcamerafocus.html#FocusPointMode-enum" location="qcamerafocus.h">
                <value name="FocusPointAuto" value="0"/>
                <value name="FocusPointCenter" value="1"/>
                <value name="FocusPointFaceDetection" value="2"/>
                <value name="FocusPointCustom" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QCameraFocus::isAvailable" href="qcamerafocus.html#isAvailable" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusMode" fullname="QCameraFocus::focusMode" href="qcamerafocus.html#focusMode" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FocusMode" signature="focusMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusMode" fullname="QCameraFocus::setFocusMode" href="qcamerafocus.html#setFocusMode" location="qcamerafocus.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusMode(FocusMode mode)">
                <parameter left="FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusModeSupported" fullname="QCameraFocus::isFocusModeSupported" href="qcamerafocus.html#isFocusModeSupported" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusModeSupported(FocusMode mode) const">
                <parameter left="FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusPointMode" fullname="QCameraFocus::focusPointMode" href="qcamerafocus.html#focusPointMode-prop" location="qcamerafocus.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="focusPointMode" type="FocusPointMode" signature="focusPointMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusPointMode" fullname="QCameraFocus::setFocusPointMode" href="qcamerafocus.html#focusPointMode-prop" location="qcamerafocus.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="focusPointMode" type="void" signature="setFocusPointMode(FocusPointMode mode)">
                <parameter left="FocusPointMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusPointModeSupported" fullname="QCameraFocus::isFocusPointModeSupported" href="qcamerafocus.html#isFocusPointModeSupported" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusPointModeSupported(FocusPointMode mode) const">
                <parameter left="FocusPointMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customFocusPoint" fullname="QCameraFocus::customFocusPoint" href="qcamerafocus.html#customFocusPoint-prop" location="qcamerafocus.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="customFocusPoint" type="QPointF" signature="customFocusPoint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomFocusPoint" fullname="QCameraFocus::setCustomFocusPoint" href="qcamerafocus.html#customFocusPoint-prop" location="qcamerafocus.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="customFocusPoint" type="void" signature="setCustomFocusPoint(const QPointF &amp; point)">
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusZones" fullname="QCameraFocus::focusZones" href="qcamerafocus.html#focusZones-prop" location="qcamerafocus.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="focusZones" type="QCameraFocusZoneList" signature="focusZones() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumOpticalZoom" fullname="QCameraFocus::maximumOpticalZoom" href="qcamerafocus.html#maximumOpticalZoom" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumOpticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumDigitalZoom" fullname="QCameraFocus::maximumDigitalZoom" href="qcamerafocus.html#maximumDigitalZoom" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumDigitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="opticalZoom" fullname="QCameraFocus::opticalZoom" href="qcamerafocus.html#opticalZoom" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="opticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="digitalZoom" fullname="QCameraFocus::digitalZoom" href="qcamerafocus.html#digitalZoom" location="qcamerafocus.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="digitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomTo" fullname="QCameraFocus::zoomTo" href="qcamerafocus.html#zoomTo" location="qcamerafocus.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="zoomTo(qreal optical, qreal digital)">
                <parameter left="qreal" right="" name="optical" default=""/>
                <parameter left="qreal" right="" name="digital" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="opticalZoomChanged" fullname="QCameraFocus::opticalZoomChanged" href="qcamerafocus.html#opticalZoomChanged" location="qcamerafocus.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="opticalZoomChanged(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="digitalZoomChanged" fullname="QCameraFocus::digitalZoomChanged" href="qcamerafocus.html#digitalZoomChanged" location="qcamerafocus.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="digitalZoomChanged(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusZonesChanged" fullname="QCameraFocus::focusZonesChanged" href="qcamerafocus.html#focusZonesChanged" location="qcamerafocus.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusZonesChanged()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaBindableInterface" href="qmediabindableinterface.html" location="qmediabindableinterface.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaBindableInterface" fullname="QMediaBindableInterface::~QMediaBindableInterface" href="qmediabindableinterface.html#dtor.QMediaBindableInterface" location="qmediabindableinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaBindableInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QMediaBindableInterface::mediaObject" href="qmediabindableinterface.html#mediaObject" location="qmediabindableinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaObject *" signature="mediaObject() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMediaObject" fullname="QMediaBindableInterface::setMediaObject" href="qmediabindableinterface.html#setMediaObject" location="qmediabindableinterface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setMediaObject(QMediaObject * object)">
                <parameter left="QMediaObject *" right="" name="object" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteReply" href="qgeoroutereply.html" location="qgeoroutereply.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QGeoRouteReply::Error" href="qgeoroutereply.html#Error-enum" location="qgeoroutereply.h">
                <value name="NoError" value="0"/>
                <value name="EngineNotSetError" value="1"/>
                <value name="CommunicationError" value="2"/>
                <value name="ParseError" value="3"/>
                <value name="UnsupportedOptionError" value="4"/>
                <value name="UnknownError" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteReply" fullname="QGeoRouteReply::QGeoRouteReply" href="qgeoroutereply.html#QGeoRouteReply" location="qgeoroutereply.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoRouteReply(Error error, const QString &amp; errorString, QObject * parent)">
                <parameter left="Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoRouteReply" fullname="QGeoRouteReply::~QGeoRouteReply" href="qgeoroutereply.html#dtor.QGeoRouteReply" location="qgeoroutereply.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoRouteReply()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QGeoRouteReply::isFinished" href="qgeoroutereply.html#isFinished" location="qgeoroutereply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoRouteReply::error" href="qgeoroutereply.html#error" location="qgeoroutereply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QGeoRouteReply::errorString" href="qgeoroutereply.html#errorString" location="qgeoroutereply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="request" fullname="QGeoRouteReply::request" href="qgeoroutereply.html#request" location="qgeoroutereply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest" signature="request() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="routes" fullname="QGeoRouteReply::routes" href="qgeoroutereply.html#routes" location="qgeoroutereply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoRoute&gt;" signature="routes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QGeoRouteReply::abort" href="qgeoroutereply.html#abort" location="qgeoroutereply.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGeoRouteReply::finished" href="qgeoroutereply.html#finished" location="qgeoroutereply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoRouteReply::error" href="qgeoroutereply.html#error-2" location="qgeoroutereply.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QGeoRouteReply::Error error, const QString &amp; errorString)">
                <parameter left="QGeoRouteReply::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default="QString()"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QGeoRouteReply" fullname="QGeoRouteReply::QGeoRouteReply" href="qgeoroutereply.html#QGeoRouteReply-2" location="qgeoroutereply.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoRouteReply(const QGeoRouteRequest &amp; request, QObject * parent)">
                <parameter left="const QGeoRouteRequest &amp;" right="" name="request" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setError" fullname="QGeoRouteReply::setError" href="qgeoroutereply.html#setError" location="qgeoroutereply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setError(Error error, const QString &amp; errorString)">
                <parameter left="Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setFinished" fullname="QGeoRouteReply::setFinished" href="qgeoroutereply.html#setFinished" location="qgeoroutereply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFinished(bool finished)">
                <parameter left="bool" right="" name="finished" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setRoutes" fullname="QGeoRouteReply::setRoutes" href="qgeoroutereply.html#setRoutes" location="qgeoroutereply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRoutes(const QList&lt;QGeoRoute&gt; &amp; routes)">
                <parameter left="const QList&lt;QGeoRoute&gt; &amp;" right="" name="routes" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioEncoderControl" href="qaudioencodercontrol.html" location="qaudioencodercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioEncoderControl" fullname="QAudioEncoderControl::~QAudioEncoderControl" href="qaudioencodercontrol.html#dtor.QAudioEncoderControl" location="qaudioencodercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioEncoderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedAudioCodecs" fullname="QAudioEncoderControl::supportedAudioCodecs" href="qaudioencodercontrol.html#supportedAudioCodecs" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedAudioCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="codecDescription" fullname="QAudioEncoderControl::codecDescription" href="qaudioencodercontrol.html#codecDescription" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="codecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSampleRates" fullname="QAudioEncoderControl::supportedSampleRates" href="qaudioencodercontrol.html#supportedSampleRates" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedSampleRates(const QAudioEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="settings" default=""/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioSettings" fullname="QAudioEncoderControl::audioSettings" href="qaudioencodercontrol.html#audioSettings" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QAudioEncoderSettings" signature="audioSettings() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioSettings" fullname="QAudioEncoderControl::setAudioSettings" href="qaudioencodercontrol.html#setAudioSettings" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioSettings(const QAudioEncoderSettings &amp; settings)">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="settings" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedEncodingOptions" fullname="QAudioEncoderControl::supportedEncodingOptions" href="qaudioencodercontrol.html#supportedEncodingOptions" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedEncodingOptions(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodingOption" fullname="QAudioEncoderControl::encodingOption" href="qaudioencodercontrol.html#encodingOption" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="encodingOption(const QString &amp; codec, const QString &amp; option) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
                <parameter left="const QString &amp;" right="" name="option" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEncodingOption" fullname="QAudioEncoderControl::setEncodingOption" href="qaudioencodercontrol.html#setEncodingOption" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setEncodingOption(const QString &amp; codec, const QString &amp; option, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
                <parameter left="const QString &amp;" right="" name="option" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAudioEncoderControl" fullname="QAudioEncoderControl::QAudioEncoderControl" href="qaudioencodercontrol.html#QAudioEncoderControl" location="qaudioencodercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioEncoderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactFetchHint" href="qcontactfetchhint.html" location="qcontactfetchhint.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactFetchHint" fullname="QContactFetchHint::QContactFetchHint" href="qcontactfetchhint.html#QContactFetchHint" location="qcontactfetchhint.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactFetchHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactFetchHint" fullname="QContactFetchHint::QContactFetchHint" href="qcontactfetchhint.html#QContactFetchHint-2" location="qcontactfetchhint.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactFetchHint(const QContactFetchHint &amp; other)">
                <parameter left="const QContactFetchHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactFetchHint" fullname="QContactFetchHint::~QContactFetchHint" href="qcontactfetchhint.html#dtor.QContactFetchHint" location="qcontactfetchhint.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactFetchHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactFetchHint::operator=" href="qcontactfetchhint.html#operator=" location="qcontactfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactFetchHint &amp;" signature="operator=(const QContactFetchHint &amp; other)">
                <parameter left="const QContactFetchHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionsHint" fullname="QContactFetchHint::detailDefinitionsHint" href="qcontactfetchhint.html#detailDefinitionsHint" location="qcontactfetchhint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="detailDefinitionsHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionsHint" fullname="QContactFetchHint::setDetailDefinitionsHint" href="qcontactfetchhint.html#setDetailDefinitionsHint" location="qcontactfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionsHint(const QStringList &amp; definitionNames)">
                <parameter left="const QStringList &amp;" right="" name="definitionNames" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipTypesHint" fullname="QContactFetchHint::relationshipTypesHint" href="qcontactfetchhint.html#relationshipTypesHint" location="qcontactfetchhint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="relationshipTypesHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationshipTypesHint" fullname="QContactFetchHint::setRelationshipTypesHint" href="qcontactfetchhint.html#setRelationshipTypesHint" location="qcontactfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationshipTypesHint(const QStringList &amp; relationshipTypes)">
                <parameter left="const QStringList &amp;" right="" name="relationshipTypes" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="OptimizationHint" fullname="QContactFetchHint::OptimizationHint" href="qcontactfetchhint.html#OptimizationHint-enum" location="qcontactfetchhint.h" typedef="QContactFetchHint::OptimizationHints">
                <value name="AllRequired" value="0x0"/>
                <value name="NoRelationships" value="0x1"/>
                <value name="NoActionPreferences" value="0x2"/>
                <value name="NoBinaryBlobs" value="0x4"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="OptimizationHints" fullname="QContactFetchHint::OptimizationHints" href="qcontactfetchhint.html#OptimizationHints-typedef" location="qcontactfetchhint.h" enum="QContactFetchHint::OptimizationHint"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="optimizationHints" fullname="QContactFetchHint::optimizationHints" href="qcontactfetchhint.html#optimizationHints" location="qcontactfetchhint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="OptimizationHints" signature="optimizationHints() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOptimizationHints" fullname="QContactFetchHint::setOptimizationHints" href="qcontactfetchhint.html#setOptimizationHints" location="qcontactfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOptimizationHints(QFlags&lt;QContactFetchHint::OptimizationHint&gt; hints)">
                <parameter left="QFlags&lt;QContactFetchHint::OptimizationHint&gt;" right="" name="hints" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemChangeLogFilter" href="qorganizeritemchangelogfilter.html" location="qorganizeritemchangelogfilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <enum access="public" threadsafety="unspecified" status="commendable" name="EventType" fullname="QOrganizerItemChangeLogFilter::EventType" href="qorganizeritemchangelogfilter.html#EventType-enum" location="qorganizeritemchangelogfilter.h">
                <value name="EventAdded" value="0"/>
                <value name="EventChanged" value="1"/>
                <value name="EventRemoved" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemChangeLogFilter" fullname="QOrganizerItemChangeLogFilter::QOrganizerItemChangeLogFilter" href="qorganizeritemchangelogfilter.html#QOrganizerItemChangeLogFilter" location="qorganizeritemchangelogfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemChangeLogFilter(QOrganizerItemChangeLogFilter::EventType type)">
                <parameter left="QOrganizerItemChangeLogFilter::EventType" right="" name="type" default="QOrganizerItemChangeLogFilter::EventAdded"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemChangeLogFilter" fullname="QOrganizerItemChangeLogFilter::QOrganizerItemChangeLogFilter" href="qorganizeritemchangelogfilter.html#QOrganizerItemChangeLogFilter-2" location="qorganizeritemchangelogfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemChangeLogFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEventType" fullname="QOrganizerItemChangeLogFilter::setEventType" href="qorganizeritemchangelogfilter.html#setEventType" location="qorganizeritemchangelogfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEventType(QOrganizerItemChangeLogFilter::EventType type)">
                <parameter left="QOrganizerItemChangeLogFilter::EventType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSince" fullname="QOrganizerItemChangeLogFilter::setSince" href="qorganizeritemchangelogfilter.html#setSince" location="qorganizeritemchangelogfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSince(const QDateTime &amp; since)">
                <parameter left="const QDateTime &amp;" right="" name="since" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="since" fullname="QOrganizerItemChangeLogFilter::since" href="qorganizeritemchangelogfilter.html#since" location="qorganizeritemchangelogfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="since() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="eventType" fullname="QOrganizerItemChangeLogFilter::eventType" href="qorganizeritemchangelogfilter.html#eventType" location="qorganizeritemchangelogfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemChangeLogFilter::EventType" signature="eventType() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGraphicsVideoItem" href="qgraphicsvideoitem.html" location="qgraphicsvideoitem.h" bases="QMediaBindableInterface" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QGraphicsVideoItem::mediaObject" href="qgraphicsvideoitem.html#mediaObject-prop" location="qgraphicsvideoitem.h" type="QMediaObject *">
                <getter name="mediaObject"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="aspectRatioMode" fullname="QGraphicsVideoItem::aspectRatioMode" href="qgraphicsvideoitem.html#aspectRatioMode-prop" location="qgraphicsvideoitem.h" type="Qt::AspectRatioMode">
                <getter name="aspectRatioMode"/>
                <setter name="setAspectRatioMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="offset" fullname="QGraphicsVideoItem::offset" href="qgraphicsvideoitem.html#offset-prop" location="qgraphicsvideoitem.h" type="QPointF">
                <getter name="offset"/>
                <setter name="setOffset"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QGraphicsVideoItem::size" href="qgraphicsvideoitem.html#size-prop" location="qgraphicsvideoitem.h" type="QSizeF">
                <getter name="size"/>
                <setter name="setSize"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="nativeSize" fullname="QGraphicsVideoItem::nativeSize" href="qgraphicsvideoitem.html#nativeSize-prop" location="qgraphicsvideoitem.h" type="QSizeF">
                <getter name="nativeSize"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGraphicsVideoItem" fullname="QGraphicsVideoItem::QGraphicsVideoItem" href="qgraphicsvideoitem.html#QGraphicsVideoItem" location="qgraphicsvideoitem_maemo5.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGraphicsVideoItem(QGraphicsItem * parent)">
                <parameter left="QGraphicsItem *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGraphicsVideoItem" fullname="QGraphicsVideoItem::~QGraphicsVideoItem" href="qgraphicsvideoitem.html#dtor.QGraphicsVideoItem" location="qgraphicsvideoitem_maemo5.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGraphicsVideoItem()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QGraphicsVideoItem::mediaObject" href="qgraphicsvideoitem.html#mediaObject-prop" location="qgraphicsvideoitem.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" associated-property="mediaObject" type="QMediaObject *" signature="mediaObject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatioMode" fullname="QGraphicsVideoItem::aspectRatioMode" href="qgraphicsvideoitem.html#aspectRatioMode-prop" location="qgraphicsvideoitem.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="aspectRatioMode" type="Qt::AspectRatioMode" signature="aspectRatioMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatioMode" fullname="QGraphicsVideoItem::setAspectRatioMode" href="qgraphicsvideoitem.html#aspectRatioMode-prop" location="qgraphicsvideoitem.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="aspectRatioMode" type="void" signature="setAspectRatioMode(Qt::AspectRatioMode mode)">
                <parameter left="Qt::AspectRatioMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="offset" fullname="QGraphicsVideoItem::offset" href="qgraphicsvideoitem.html#offset-prop" location="qgraphicsvideoitem.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="offset" type="QPointF" signature="offset() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOffset" fullname="QGraphicsVideoItem::setOffset" href="qgraphicsvideoitem.html#offset-prop" location="qgraphicsvideoitem.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="offset" type="void" signature="setOffset(const QPointF &amp; offset)">
                <parameter left="const QPointF &amp;" right="" name="offset" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QGraphicsVideoItem::size" href="qgraphicsvideoitem.html#size-prop" location="qgraphicsvideoitem.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="size" type="QSizeF" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSize" fullname="QGraphicsVideoItem::setSize" href="qgraphicsvideoitem.html#size-prop" location="qgraphicsvideoitem.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="size" type="void" signature="setSize(const QSizeF &amp; size)">
                <parameter left="const QSizeF &amp;" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSize" fullname="QGraphicsVideoItem::nativeSize" href="qgraphicsvideoitem.html#nativeSize-prop" location="qgraphicsvideoitem.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="nativeSize" type="QSizeF" signature="nativeSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="boundingRect" fullname="QGraphicsVideoItem::boundingRect" href="qgraphicsvideoitem.html#boundingRect" location="qgraphicsvideoitem_maemo5.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRectF" signature="boundingRect() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="paint" fullname="QGraphicsVideoItem::paint" href="qgraphicsvideoitem.html#paint" location="qgraphicsvideoitem_maemo5.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget)">
                <parameter left="QPainter *" right="" name="painter" default=""/>
                <parameter left="const QStyleOptionGraphicsItem *" right="" name="option" default=""/>
                <parameter left="QWidget *" right="" name="widget" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSizeChanged" fullname="QGraphicsVideoItem::nativeSizeChanged" href="qgraphicsvideoitem.html#nativeSizeChanged" location="qgraphicsvideoitem.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="nativeSizeChanged(const QSizeF &amp; size)">
                <parameter left="const QSizeF &amp;" right="" name="size" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QGraphicsVideoItem::d_ptr" href="qgraphicsvideoitem.html#d_ptr-var" location="qgraphicsvideoitem.h" type="QGraphicsVideoItemPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageManager" href="qmessagemanager.html" location="qmessagemanager.h" bases="" module="QtMessaging">
            <enum access="public" threadsafety="unspecified" status="commendable" name="RemovalOption" fullname="QMessageManager::RemovalOption" href="qmessagemanager.html#RemovalOption-enum" location="qmessagemanager.h">
                <value name="RemoveLocalCopyOnly" value="1"/>
                <value name="RemoveOnOriginatingServer" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMessageManager::Error" href="qmessagemanager.html#Error-enum" location="qmessagemanager.h">
                <value name="NoError" value="0"/>
                <value name="InvalidId" value="1"/>
                <value name="ConstraintFailure" value="2"/>
                <value name="ContentInaccessible" value="3"/>
                <value name="NotYetImplemented" value="4"/>
                <value name="FrameworkFault" value="5"/>
                <value name="WorkingMemoryOverflow" value="6"/>
                <value name="Busy" value="7"/>
                <value name="RequestIncomplete" value="8"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="NotificationFilterId" fullname="QMessageManager::NotificationFilterId" href="qmessagemanager.html#NotificationFilterId-typedef" location="qmessagemanager.h"/>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="NotificationFilterIdSet" fullname="QMessageManager::NotificationFilterIdSet" href="qmessagemanager.html#NotificationFilterIdSet-typedef" location="qmessagemanager.h"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageManager" fullname="QMessageManager::QMessageManager" href="qmessagemanager.html#QMessageManager" location="qmessagemanager.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageManager" fullname="QMessageManager::~QMessageManager" href="qmessagemanager.html#dtor.QMessageManager" location="qmessagemanager.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMessageManager::error" href="qmessagemanager.html#error" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageManager::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryMessages" fullname="QMessageManager::queryMessages" href="qmessagemanager.html#queryMessages" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageIdList" signature="queryMessages(const QMessageFilter &amp; filter, const QMessageSortOrder &amp; sortOrder, uint limit, uint offset) const">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default="QMessageFilter()"/>
                <parameter left="const QMessageSortOrder &amp;" right="" name="sortOrder" default="QMessageSortOrder()"/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryMessages" fullname="QMessageManager::queryMessages" href="qmessagemanager.html#queryMessages-2" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QMessageIdList" signature="queryMessages(const QMessageFilter &amp; filter, const QList&lt;QMessageSortOrder&gt; &amp; sortOrders, uint limit, uint offset) const">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QMessageSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryMessages" fullname="QMessageManager::queryMessages" href="qmessagemanager.html#queryMessages-3" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QMessageIdList" signature="queryMessages(const QMessageFilter &amp; filter, const QString &amp; body, QMessageDataComparator::MatchFlags matchFlags, const QMessageSortOrder &amp; sortOrder, uint limit, uint offset) const">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QString &amp;" right="" name="body" default=""/>
                <parameter left="QMessageDataComparator::MatchFlags" right="" name="matchFlags" default="0"/>
                <parameter left="const QMessageSortOrder &amp;" right="" name="sortOrder" default="QMessageSortOrder()"/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryMessages" fullname="QMessageManager::queryMessages" href="qmessagemanager.html#queryMessages-4" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="4" type="QMessageIdList" signature="queryMessages(const QMessageFilter &amp; filter, const QString &amp; body, QMessageDataComparator::MatchFlags matchFlags, const QList&lt;QMessageSortOrder&gt; &amp; sortOrders, uint limit, uint offset) const">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QString &amp;" right="" name="body" default=""/>
                <parameter left="QMessageDataComparator::MatchFlags" right="" name="matchFlags" default=""/>
                <parameter left="const QList&lt;QMessageSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryFolders" fullname="QMessageManager::queryFolders" href="qmessagemanager.html#queryFolders" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderIdList" signature="queryFolders(const QMessageFolderFilter &amp; filter, const QMessageFolderSortOrder &amp; sortOrder, uint limit, uint offset) const">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default="QMessageFolderFilter()"/>
                <parameter left="const QMessageFolderSortOrder &amp;" right="" name="sortOrder" default="QMessageFolderSortOrder()"/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryFolders" fullname="QMessageManager::queryFolders" href="qmessagemanager.html#queryFolders-2" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QMessageFolderIdList" signature="queryFolders(const QMessageFolderFilter &amp; filter, const QList&lt;QMessageFolderSortOrder&gt; &amp; sortOrders, uint limit, uint offset) const">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QMessageFolderSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryAccounts" fullname="QMessageManager::queryAccounts" href="qmessagemanager.html#queryAccounts" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccountIdList" signature="queryAccounts(const QMessageAccountFilter &amp; filter, const QMessageAccountSortOrder &amp; sortOrder, uint limit, uint offset) const">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="filter" default="QMessageAccountFilter()"/>
                <parameter left="const QMessageAccountSortOrder &amp;" right="" name="sortOrder" default="QMessageAccountSortOrder()"/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryAccounts" fullname="QMessageManager::queryAccounts" href="qmessagemanager.html#queryAccounts-2" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QMessageAccountIdList" signature="queryAccounts(const QMessageAccountFilter &amp; filter, const QList&lt;QMessageAccountSortOrder&gt; &amp; sortOrders, uint limit, uint offset) const">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QMessageAccountSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countMessages" fullname="QMessageManager::countMessages" href="qmessagemanager.html#countMessages" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="countMessages(const QMessageFilter &amp; filter) const">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default="QMessageFilter()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countFolders" fullname="QMessageManager::countFolders" href="qmessagemanager.html#countFolders" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="countFolders(const QMessageFolderFilter &amp; filter) const">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default="QMessageFolderFilter()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countAccounts" fullname="QMessageManager::countAccounts" href="qmessagemanager.html#countAccounts" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="countAccounts(const QMessageAccountFilter &amp; filter) const">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="filter" default="QMessageAccountFilter()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMessage" fullname="QMessageManager::addMessage" href="qmessagemanager.html#addMessage" location="qmessagemanager.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addMessage(QMessage * message)">
                <parameter left="QMessage *" right="" name="message" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMessage" fullname="QMessageManager::updateMessage" href="qmessagemanager.html#updateMessage" location="qmessagemanager.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="updateMessage(QMessage * message)">
                <parameter left="QMessage *" right="" name="message" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMessage" fullname="QMessageManager::removeMessage" href="qmessagemanager.html#removeMessage" location="qmessagemanager.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeMessage(const QMessageId &amp; id, RemovalOption option)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
                <parameter left="RemovalOption" right="" name="option" default="RemoveOnOriginatingServer"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMessages" fullname="QMessageManager::removeMessages" href="qmessagemanager.html#removeMessages" location="qmessagemanager.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeMessages(const QMessageFilter &amp; filter, RemovalOption option)">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default=""/>
                <parameter left="RemovalOption" right="" name="option" default="RemoveOnOriginatingServer"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="message" fullname="QMessageManager::message" href="qmessagemanager.html#message" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessage" signature="message(const QMessageId &amp; id) const">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="folder" fullname="QMessageManager::folder" href="qmessagemanager.html#folder" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolder" signature="folder(const QMessageFolderId &amp; id) const">
                <parameter left="const QMessageFolderId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="account" fullname="QMessageManager::account" href="qmessagemanager.html#account" location="qmessagemanager.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccount" signature="account(const QMessageAccountId &amp; id) const">
                <parameter left="const QMessageAccountId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="registerNotificationFilter" fullname="QMessageManager::registerNotificationFilter" href="qmessagemanager.html#registerNotificationFilter" location="qmessagemanager.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="NotificationFilterId" signature="registerNotificationFilter(const QMessageFilter &amp; filter)">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unregisterNotificationFilter" fullname="QMessageManager::unregisterNotificationFilter" href="qmessagemanager.html#unregisterNotificationFilter" location="qmessagemanager.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unregisterNotificationFilter(NotificationFilterId notificationFilterId)">
                <parameter left="NotificationFilterId" right="" name="notificationFilterId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageAdded" fullname="QMessageManager::messageAdded" href="qmessagemanager.html#messageAdded" location="qmessagemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messageAdded(const QMessageId &amp; id, const QMessageManager::NotificationFilterIdSet &amp; matchingFilterIds)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
                <parameter left="const QMessageManager::NotificationFilterIdSet &amp;" right="" name="matchingFilterIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageRemoved" fullname="QMessageManager::messageRemoved" href="qmessagemanager.html#messageRemoved" location="qmessagemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messageRemoved(const QMessageId &amp; id, const QMessageManager::NotificationFilterIdSet &amp; matchingFilterIds)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
                <parameter left="const QMessageManager::NotificationFilterIdSet &amp;" right="" name="matchingFilterIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageUpdated" fullname="QMessageManager::messageUpdated" href="qmessagemanager.html#messageUpdated" location="qmessagemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messageUpdated(const QMessageId &amp; id, const QMessageManager::NotificationFilterIdSet &amp; matchingFilterIds)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
                <parameter left="const QMessageManager::NotificationFilterIdSet &amp;" right="" name="matchingFilterIds" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDateTimePeriodFilter" href="qorganizeritemdatetimeperiodfilter.html" location="qorganizeritemdatetimeperiodfilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDateTimePeriodFilter" fullname="QOrganizerItemDateTimePeriodFilter::QOrganizerItemDateTimePeriodFilter" href="qorganizeritemdatetimeperiodfilter.html#QOrganizerItemDateTimePeriodFilter" location="qorganizeritemdatetimeperiodfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDateTimePeriodFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDateTimePeriodFilter" fullname="QOrganizerItemDateTimePeriodFilter::QOrganizerItemDateTimePeriodFilter" href="qorganizeritemdatetimeperiodfilter.html#QOrganizerItemDateTimePeriodFilter-2" location="qorganizeritemdatetimeperiodfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemDateTimePeriodFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStartPeriod" fullname="QOrganizerItemDateTimePeriodFilter::setStartPeriod" href="qorganizeritemdatetimeperiodfilter.html#setStartPeriod" location="qorganizeritemdatetimeperiodfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStartPeriod(const QDateTime &amp; start)">
                <parameter left="const QDateTime &amp;" right="" name="start" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEndPeriod" fullname="QOrganizerItemDateTimePeriodFilter::setEndPeriod" href="qorganizeritemdatetimeperiodfilter.html#setEndPeriod" location="qorganizeritemdatetimeperiodfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEndPeriod(const QDateTime &amp; end)">
                <parameter left="const QDateTime &amp;" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startPeriod" fullname="QOrganizerItemDateTimePeriodFilter::startPeriod" href="qorganizeritemdatetimeperiodfilter.html#startPeriod" location="qorganizeritemdatetimeperiodfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="startPeriod() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="endPeriod" fullname="QOrganizerItemDateTimePeriodFilter::endPeriod" href="qorganizeritemdatetimeperiodfilter.html#endPeriod" location="qorganizeritemdatetimeperiodfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="endPeriod() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="deprecated" name="QVersitContactExporterDetailHandler" href="qversitcontactexporterdetailhandler.html" location="qversitcontactexporter.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitContactExporterDetailHandler" fullname="QVersitContactExporterDetailHandler::~QVersitContactExporterDetailHandler" href="qversitcontactexporterdetailhandler.html#dtor.QVersitContactExporterDetailHandler" location="qversitcontactexporter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitContactExporterDetailHandler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="preProcessDetail" fullname="QVersitContactExporterDetailHandler::preProcessDetail" href="qversitcontactexporterdetailhandler.html#preProcessDetail" location="qversitcontactexporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="preProcessDetail(const QContact &amp; contact, const QContactDetail &amp; detail, QVersitDocument * document)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="const QContactDetail &amp;" right="" name="detail" default=""/>
                <parameter left="QVersitDocument *" right="" name="document" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="postProcessDetail" fullname="QVersitContactExporterDetailHandler::postProcessDetail" href="qversitcontactexporterdetailhandler.html#postProcessDetail" location="qversitcontactexporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="postProcessDetail(const QContact &amp; contact, const QContactDetail &amp; detail, bool alreadyProcessed, QVersitDocument * document)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="const QContactDetail &amp;" right="" name="detail" default=""/>
                <parameter left="bool" right="" name="alreadyProcessed" default=""/>
                <parameter left="QVersitDocument *" right="" name="document" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitContactExporterDetailHandlerV2" href="qversitcontactexporterdetailhandlerv2.html" location="qversitcontactexporter.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="createBackupHandler" fullname="QVersitContactExporterDetailHandlerV2::createBackupHandler" href="qversitcontactexporterdetailhandlerv2.html#createBackupHandler" location="qversitcontactexporter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QVersitContactExporterDetailHandlerV2 *" signature="createBackupHandler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitContactExporterDetailHandlerV2" fullname="QVersitContactExporterDetailHandlerV2::~QVersitContactExporterDetailHandlerV2" href="qversitcontactexporterdetailhandlerv2.html#dtor.QVersitContactExporterDetailHandlerV2" location="qversitcontactexporter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitContactExporterDetailHandlerV2()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailProcessed" fullname="QVersitContactExporterDetailHandlerV2::detailProcessed" href="qversitcontactexporterdetailhandlerv2.html#detailProcessed" location="qversitcontactexporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="detailProcessed(const QContact &amp; contact, const QContactDetail &amp; detail, const QSet&lt;QString&gt; &amp; processedFields, const QVersitDocument &amp; document, QList&lt;QVersitProperty&gt; * toBeRemoved, QList&lt;QVersitProperty&gt; * toBeAdded)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="const QContactDetail &amp;" right="" name="detail" default=""/>
                <parameter left="const QSet&lt;QString&gt; &amp;" right="" name="processedFields" default=""/>
                <parameter left="const QVersitDocument &amp;" right="" name="document" default=""/>
                <parameter left="QList&lt;QVersitProperty&gt; *" right="" name="toBeRemoved" default=""/>
                <parameter left="QList&lt;QVersitProperty&gt; *" right="" name="toBeAdded" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactProcessed" fullname="QVersitContactExporterDetailHandlerV2::contactProcessed" href="qversitcontactexporterdetailhandlerv2.html#contactProcessed" location="qversitcontactexporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="contactProcessed(const QContact &amp; contact, QVersitDocument * document)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="QVersitDocument *" right="" name="document" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QVersitContactExporterDetailHandlerV2::version" href="qversitcontactexporterdetailhandlerv2.html#version" location="qversitcontactexporter.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="version() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitContactExporter" href="qversitcontactexporter.html" location="qversitcontactexporter.h" bases="" module="">
            <contents name="exporting-group-relationships" title="Exporting group relationships" level="1"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QVersitContactExporter::Error" href="qversitcontactexporter.html#Error-enum" location="qversitcontactexporter.h">
                <value name="NoError" value="0"/>
                <value name="EmptyContactError" value="1"/>
                <value name="NoNameError" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitContactExporter" fullname="QVersitContactExporter::QVersitContactExporter" href="qversitcontactexporter.html#QVersitContactExporter" location="qversitcontactexporter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVersitContactExporter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitContactExporter" fullname="QVersitContactExporter::~QVersitContactExporter" href="qversitcontactexporter.html#dtor.QVersitContactExporter" location="qversitcontactexporter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitContactExporter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportContacts" fullname="QVersitContactExporter::exportContacts" href="qversitcontactexporter.html#exportContacts" location="qversitcontactexporter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="exportContacts(const QList&lt;QContact&gt; &amp; contacts, QVersitDocument::VersitType versitType)">
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="contacts" default=""/>
                <parameter left="QVersitDocument::VersitType" right="" name="versitType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documents" fullname="QVersitContactExporter::documents" href="qversitcontactexporter.html#documents" location="qversitcontactexporter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVersitDocument&gt;" signature="documents() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errors" fullname="QVersitContactExporter::errors" href="qversitcontactexporter.html#errors" location="qversitcontactexporter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, Error&gt;" signature="errors() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailHandler" fullname="QVersitContactExporter::setDetailHandler" href="qversitcontactexporter.html#setDetailHandler" location="qversitcontactexporter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailHandler(QVersitContactExporterDetailHandlerV2 * handler)">
                <parameter left="QVersitContactExporterDetailHandlerV2 *" right="" name="handler" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResourceHandler" fullname="QVersitContactExporter::setResourceHandler" href="qversitcontactexporter.html#setResourceHandler" location="qversitcontactexporter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResourceHandler(QVersitResourceHandler * handler)">
                <parameter left="QVersitResourceHandler *" right="" name="handler" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resourceHandler" fullname="QVersitContactExporter::resourceHandler" href="qversitcontactexporter.html#resourceHandler" location="qversitcontactexporter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVersitResourceHandler *" signature="resourceHandler() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinitionFetchRequest" href="qorganizeritemdetaildefinitionfetchrequest.html" location="qorganizeritemdetaildefinitionfetchrequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinitionFetchRequest" fullname="QOrganizerItemDetailDefinitionFetchRequest::QOrganizerItemDetailDefinitionFetchRequest" href="qorganizeritemdetaildefinitionfetchrequest.html#QOrganizerItemDetailDefinitionFetchRequest" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetailDefinitionFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionName" fullname="QOrganizerItemDetailDefinitionFetchRequest::setDefinitionName" href="qorganizeritemdetaildefinitionfetchrequest.html#setDefinitionName" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionName(const QString &amp; definitionName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionNames" fullname="QOrganizerItemDetailDefinitionFetchRequest::setDefinitionNames" href="qorganizeritemdetaildefinitionfetchrequest.html#setDefinitionNames" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionNames(const QStringList &amp; names)">
                <parameter left="const QStringList &amp;" right="" name="names" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitionNames" fullname="QOrganizerItemDetailDefinitionFetchRequest::definitionNames" href="qorganizeritemdetaildefinitionfetchrequest.html#definitionNames" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="definitionNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemType" fullname="QOrganizerItemDetailDefinitionFetchRequest::setItemType" href="qorganizeritemdetaildefinitionfetchrequest.html#setItemType" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItemType(const QString &amp; organizeritemType)">
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QOrganizerItemDetailDefinitionFetchRequest::itemType" href="qorganizeritemdetaildefinitionfetchrequest.html#itemType" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="itemType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitions" fullname="QOrganizerItemDetailDefinitionFetchRequest::definitions" href="qorganizeritemdetaildefinitionfetchrequest.html#definitions" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QOrganizerItemDetailDefinition&gt;" signature="definitions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QOrganizerItemDetailDefinitionFetchRequest::errorMap" href="qorganizeritemdetaildefinitionfetchrequest.html#errorMap" location="qorganizeritemdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QOrganizerItemManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoCoordinate" href="qgeocoordinate.html" location="qgeocoordinate.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="CoordinateType" fullname="QGeoCoordinate::CoordinateType" href="qgeocoordinate.html#CoordinateType-enum" location="qgeocoordinate.h">
                <value name="InvalidCoordinate" value="0"/>
                <value name="Coordinate2D" value="1"/>
                <value name="Coordinate3D" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CoordinateFormat" fullname="QGeoCoordinate::CoordinateFormat" href="qgeocoordinate.html#CoordinateFormat-enum" location="qgeocoordinate.h">
                <value name="Degrees" value="0"/>
                <value name="DegreesWithHemisphere" value="1"/>
                <value name="DegreesMinutes" value="2"/>
                <value name="DegreesMinutesWithHemisphere" value="3"/>
                <value name="DegreesMinutesSeconds" value="4"/>
                <value name="DegreesMinutesSecondsWithHemisphere" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoCoordinate" fullname="QGeoCoordinate::QGeoCoordinate" href="qgeocoordinate.html#QGeoCoordinate" location="qgeocoordinate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoCoordinate()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoCoordinate" fullname="QGeoCoordinate::QGeoCoordinate" href="qgeocoordinate.html#QGeoCoordinate-2" location="qgeocoordinate.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoCoordinate(double latitude, double longitude)">
                <parameter left="double" right="" name="latitude" default=""/>
                <parameter left="double" right="" name="longitude" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoCoordinate" fullname="QGeoCoordinate::QGeoCoordinate" href="qgeocoordinate.html#QGeoCoordinate-3" location="qgeocoordinate.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGeoCoordinate(double latitude, double longitude, double altitude)">
                <parameter left="double" right="" name="latitude" default=""/>
                <parameter left="double" right="" name="longitude" default=""/>
                <parameter left="double" right="" name="altitude" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoCoordinate" fullname="QGeoCoordinate::QGeoCoordinate" href="qgeocoordinate.html#QGeoCoordinate-4" location="qgeocoordinate.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QGeoCoordinate(const QGeoCoordinate &amp; other)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoCoordinate" fullname="QGeoCoordinate::~QGeoCoordinate" href="qgeocoordinate.html#dtor.QGeoCoordinate" location="qgeocoordinate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoCoordinate()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoCoordinate::operator=" href="qgeocoordinate.html#operator=" location="qgeocoordinate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoCoordinate &amp;" signature="operator=(const QGeoCoordinate &amp; other)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGeoCoordinate::operator==" href="qgeocoordinate.html#operator==" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGeoCoordinate &amp; other) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGeoCoordinate::operator!=" href="qgeocoordinate.html#operator!=" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGeoCoordinate &amp; other) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGeoCoordinate::isValid" href="qgeocoordinate.html#isValid" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QGeoCoordinate::type" href="qgeocoordinate.html#type" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="CoordinateType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLatitude" fullname="QGeoCoordinate::setLatitude" href="qgeocoordinate.html#setLatitude" location="qgeocoordinate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLatitude(double latitude)">
                <parameter left="double" right="" name="latitude" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="latitude" fullname="QGeoCoordinate::latitude" href="qgeocoordinate.html#latitude" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="latitude() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLongitude" fullname="QGeoCoordinate::setLongitude" href="qgeocoordinate.html#setLongitude" location="qgeocoordinate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLongitude(double longitude)">
                <parameter left="double" right="" name="longitude" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="longitude" fullname="QGeoCoordinate::longitude" href="qgeocoordinate.html#longitude" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="longitude() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAltitude" fullname="QGeoCoordinate::setAltitude" href="qgeocoordinate.html#setAltitude" location="qgeocoordinate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAltitude(double altitude)">
                <parameter left="double" right="" name="altitude" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="altitude" fullname="QGeoCoordinate::altitude" href="qgeocoordinate.html#altitude" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="altitude() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="distanceTo" fullname="QGeoCoordinate::distanceTo" href="qgeocoordinate.html#distanceTo" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="distanceTo(const QGeoCoordinate &amp; other) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="azimuthTo" fullname="QGeoCoordinate::azimuthTo" href="qgeocoordinate.html#azimuthTo" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="azimuthTo(const QGeoCoordinate &amp; other) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QGeoCoordinate::toString" href="qgeocoordinate.html#toString" location="qgeocoordinate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString(CoordinateFormat format) const">
                <parameter left="CoordinateFormat" right="" name="format" default="DegreesMinutesSecondsWithHemisphere"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitDocument" href="qversitdocument.html" location="qversitdocument.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="VersitType" fullname="QVersitDocument::VersitType" href="qversitdocument.html#VersitType-enum" location="qversitdocument.h">
                <value name="InvalidType" value="0"/>
                <value name="VCard21Type" value="1"/>
                <value name="VCard30Type" value="2"/>
                <value name="ICalendar20Type" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitDocument" fullname="QVersitDocument::QVersitDocument" href="qversitdocument.html#QVersitDocument" location="qversitdocument.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVersitDocument()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitDocument" fullname="QVersitDocument::QVersitDocument" href="qversitdocument.html#QVersitDocument-2" location="qversitdocument.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVersitDocument(const QVersitDocument &amp; other)">
                <parameter left="const QVersitDocument &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitDocument" fullname="QVersitDocument::QVersitDocument" href="qversitdocument.html#QVersitDocument-3" location="qversitdocument.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QVersitDocument(VersitType type)">
                <parameter left="VersitType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitDocument" fullname="QVersitDocument::~QVersitDocument" href="qversitdocument.html#dtor.QVersitDocument" location="qversitdocument.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitDocument()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QVersitDocument::operator=" href="qversitdocument.html#operator=" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVersitDocument &amp;" signature="operator=(const QVersitDocument &amp; other)">
                <parameter left="const QVersitDocument &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QVersitDocument::operator==" href="qversitdocument.html#operator==" location="qversitdocument.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QVersitDocument &amp; other) const">
                <parameter left="const QVersitDocument &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QVersitDocument::operator!=" href="qversitdocument.html#operator!=" location="qversitdocument.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QVersitDocument &amp; other) const">
                <parameter left="const QVersitDocument &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QVersitDocument::setType" href="qversitdocument.html#setType" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(VersitType type)">
                <parameter left="VersitType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QVersitDocument::type" href="qversitdocument.html#type" location="qversitdocument.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="VersitType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setComponentType" fullname="QVersitDocument::setComponentType" href="qversitdocument.html#setComponentType" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setComponentType(QString componentType)">
                <parameter left="QString" right="" name="componentType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="componentType" fullname="QVersitDocument::componentType" href="qversitdocument.html#componentType" location="qversitdocument.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="componentType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addProperty" fullname="QVersitDocument::addProperty" href="qversitdocument.html#addProperty" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addProperty(const QVersitProperty &amp; property)">
                <parameter left="const QVersitProperty &amp;" right="" name="property" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeProperty" fullname="QVersitDocument::removeProperty" href="qversitdocument.html#removeProperty" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeProperty(const QVersitProperty &amp; property)">
                <parameter left="const QVersitProperty &amp;" right="" name="property" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeProperties" fullname="QVersitDocument::removeProperties" href="qversitdocument.html#removeProperties" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeProperties(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="properties" fullname="QVersitDocument::properties" href="qversitdocument.html#properties" location="qversitdocument.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVersitProperty&gt;" signature="properties() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSubDocument" fullname="QVersitDocument::addSubDocument" href="qversitdocument.html#addSubDocument" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addSubDocument(const QVersitDocument &amp; subdocument)">
                <parameter left="const QVersitDocument &amp;" right="" name="subdocument" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSubDocuments" fullname="QVersitDocument::setSubDocuments" href="qversitdocument.html#setSubDocuments" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSubDocuments(const QList&lt;QVersitDocument&gt; &amp; documents)">
                <parameter left="const QList&lt;QVersitDocument&gt; &amp;" right="" name="documents" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subDocuments" fullname="QVersitDocument::subDocuments" href="qversitdocument.html#subDocuments" location="qversitdocument.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVersitDocument&gt;" signature="subDocuments() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QVersitDocument::isEmpty" href="qversitdocument.html#isEmpty" location="qversitdocument.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QVersitDocument::clear" href="qversitdocument.html#clear" location="qversitdocument.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactManagerEngine" href="qcontactmanagerengine.html" location="qcontactmanagerengine.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactManagerEngine" fullname="QContactManagerEngine::QContactManagerEngine" href="qcontactmanagerengine.html#QContactManagerEngine" location="qcontactmanagerengine.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactManagerEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QContactManagerEngine::managerName" href="qcontactmanagerengine.html#managerName" location="qcontactmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QContactManagerEngine::managerParameters" href="qcontactmanagerengine.html#managerParameters" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QContactManagerEngine::managerVersion" href="qcontactmanagerengine.html#managerVersion" location="qcontactmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QContactManagerEngine::managerUri" href="qcontactmanagerengine.html#managerUri" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactIds" fullname="QContactManagerEngine::contactIds" href="qcontactmanagerengine.html#contactIds" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactLocalId&gt;" signature="contactIds(const QContactFilter &amp; filter, const QList&lt;QContactSortOrder&gt; &amp; sortOrders, QContactManager::Error * error) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contacts" fullname="QContactManagerEngine::contacts" href="qcontactmanagerengine.html#contacts" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="contacts(const QContactFilter &amp; filter, const QList&lt;QContactSortOrder&gt; &amp; sortOrders, const QContactFetchHint &amp; fetchHint, QContactManager::Error * error) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QContactManagerEngine::contact" href="qcontactmanagerengine.html#contact" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContact" signature="contact(const QContactLocalId &amp; contactId, const QContactFetchHint &amp; fetchHint, QContactManager::Error * error) const">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveContact" fullname="QContactManagerEngine::saveContact" href="qcontactmanagerengine.html#saveContact" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveContact(QContact * contact, QContactManager::Error * error)">
                <parameter left="QContact *" right="" name="contact" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContact" fullname="QContactManagerEngine::removeContact" href="qcontactmanagerengine.html#removeContact" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeContact(const QContactLocalId &amp; contactId, QContactManager::Error * error)">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveRelationship" fullname="QContactManagerEngine::saveRelationship" href="qcontactmanagerengine.html#saveRelationship" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveRelationship(QContactRelationship * relationship, QContactManager::Error * error)">
                <parameter left="QContactRelationship *" right="" name="relationship" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRelationship" fullname="QContactManagerEngine::removeRelationship" href="qcontactmanagerengine.html#removeRelationship" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRelationship(const QContactRelationship &amp; relationship, QContactManager::Error * error)">
                <parameter left="const QContactRelationship &amp;" right="" name="relationship" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveContacts" fullname="QContactManagerEngine::saveContacts" href="qcontactmanagerengine.html#saveContacts" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveContacts(QList&lt;QContact&gt; * contacts, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="QList&lt;QContact&gt; *" right="" name="contacts" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContacts" fullname="QContactManagerEngine::removeContacts" href="qcontactmanagerengine.html#removeContacts" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeContacts(const QList&lt;QContactLocalId&gt; &amp; contactIds, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compatibleContact" fullname="QContactManagerEngine::compatibleContact" href="qcontactmanagerengine.html#compatibleContact" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContact" signature="compatibleContact(const QContact &amp; original, QContactManager::Error * error) const">
                <parameter left="const QContact &amp;" right="" name="original" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="synthesizedDisplayLabel" fullname="QContactManagerEngine::synthesizedDisplayLabel" href="qcontactmanagerengine.html#synthesizedDisplayLabel" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="synthesizedDisplayLabel(const QContact &amp; contact, QContactManager::Error * error) const">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelfContactId" fullname="QContactManagerEngine::setSelfContactId" href="qcontactmanagerengine.html#setSelfContactId" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSelfContactId(const QContactLocalId &amp; contactId, QContactManager::Error * error)">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selfContactId" fullname="QContactManagerEngine::selfContactId" href="qcontactmanagerengine.html#selfContactId" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContactLocalId" signature="selfContactId(QContactManager::Error * error) const">
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContactManagerEngine::relationships" href="qcontactmanagerengine.html#relationships" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactRelationship&gt;" signature="relationships(const QString &amp; relationshipType, const QContactId &amp; participantId, QContactRelationship::Role role, QContactManager::Error * error) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
                <parameter left="const QContactId &amp;" right="" name="participantId" default=""/>
                <parameter left="QContactRelationship::Role" right="" name="role" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveRelationships" fullname="QContactManagerEngine::saveRelationships" href="qcontactmanagerengine.html#saveRelationships" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveRelationships(QList&lt;QContactRelationship&gt; * relationships, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="QList&lt;QContactRelationship&gt; *" right="" name="relationships" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRelationships" fullname="QContactManagerEngine::removeRelationships" href="qcontactmanagerengine.html#removeRelationships" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRelationships(const QList&lt;QContactRelationship&gt; &amp; relationships, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="relationships" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="validateContact" fullname="QContactManagerEngine::validateContact" href="qcontactmanagerengine.html#validateContact" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="validateContact(const QContact &amp; contact, QContactManager::Error * error) const">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="validateDefinition" fullname="QContactManagerEngine::validateDefinition" href="qcontactmanagerengine.html#validateDefinition" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="validateDefinition(const QContactDetailDefinition &amp; definition, QContactManager::Error * error) const">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="definition" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitions" fullname="QContactManagerEngine::detailDefinitions" href="qcontactmanagerengine.html#detailDefinitions" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QContactDetailDefinition&gt;" signature="detailDefinitions(const QString &amp; contactType, QContactManager::Error * error) const">
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinition" fullname="QContactManagerEngine::detailDefinition" href="qcontactmanagerengine.html#detailDefinition" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContactDetailDefinition" signature="detailDefinition(const QString &amp; definitionName, const QString &amp; contactType, QContactManager::Error * error) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveDetailDefinition" fullname="QContactManagerEngine::saveDetailDefinition" href="qcontactmanagerengine.html#saveDetailDefinition" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveDetailDefinition(const QContactDetailDefinition &amp; def, const QString &amp; contactType, QContactManager::Error * error)">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="def" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetailDefinition" fullname="QContactManagerEngine::removeDetailDefinition" href="qcontactmanagerengine.html#removeDetailDefinition" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetailDefinition(const QString &amp; definitionName, const QString &amp; contactType, QContactManager::Error * error)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestDestroyed" fullname="QContactManagerEngine::requestDestroyed" href="qcontactmanagerengine.html#requestDestroyed" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="requestDestroyed(QContactAbstractRequest * req)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startRequest" fullname="QContactManagerEngine::startRequest" href="qcontactmanagerengine.html#startRequest" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startRequest(QContactAbstractRequest * req)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelRequest" fullname="QContactManagerEngine::cancelRequest" href="qcontactmanagerengine.html#cancelRequest" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="cancelRequest(QContactAbstractRequest * req)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForRequestFinished" fullname="QContactManagerEngine::waitForRequestFinished" href="qcontactmanagerengine.html#waitForRequestFinished" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForRequestFinished(QContactAbstractRequest * req, int msecs)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QContactManagerEngine::hasFeature" href="qcontactmanagerengine.html#hasFeature" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFeature(QContactManager::ManagerFeature feature, const QString &amp; contactType) const">
                <parameter left="QContactManager::ManagerFeature" right="" name="feature" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRelationshipTypeSupported" fullname="QContactManagerEngine::isRelationshipTypeSupported" href="qcontactmanagerengine.html#isRelationshipTypeSupported" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRelationshipTypeSupported(const QString &amp; relationshipType, const QString &amp; contactType) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFilterSupported" fullname="QContactManagerEngine::isFilterSupported" href="qcontactmanagerengine.html#isFilterSupported" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFilterSupported(const QContactFilter &amp; filter) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedDataTypes" fullname="QContactManagerEngine::supportedDataTypes" href="qcontactmanagerengine.html#supportedDataTypes" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVariant::Type&gt;" signature="supportedDataTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedContactTypes" fullname="QContactManagerEngine::supportedContactTypes" href="qcontactmanagerengine.html#supportedContactTypes" location="qcontactmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedContactTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="schemaDefinitions" fullname="QContactManagerEngine::schemaDefinitions" href="qcontactmanagerengine.html#schemaDefinitions" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMap&lt;QString, QMap&lt;QString, QContactDetailDefinition&gt; &gt;" signature="schemaDefinitions()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataChanged" fullname="QContactManagerEngine::dataChanged" href="qcontactmanagerengine.html#dataChanged" location="qcontactmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactsAdded" fullname="QContactManagerEngine::contactsAdded" href="qcontactmanagerengine.html#contactsAdded" location="qcontactmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contactsAdded(const QList&lt;QContactLocalId&gt; &amp; contactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactsChanged" fullname="QContactManagerEngine::contactsChanged" href="qcontactmanagerengine.html#contactsChanged" location="qcontactmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contactsChanged(const QList&lt;QContactLocalId&gt; &amp; contactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactsRemoved" fullname="QContactManagerEngine::contactsRemoved" href="qcontactmanagerengine.html#contactsRemoved" location="qcontactmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contactsRemoved(const QList&lt;QContactLocalId&gt; &amp; contactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipsAdded" fullname="QContactManagerEngine::relationshipsAdded" href="qcontactmanagerengine.html#relationshipsAdded" location="qcontactmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="relationshipsAdded(const QList&lt;QContactLocalId&gt; &amp; affectedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="affectedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipsRemoved" fullname="QContactManagerEngine::relationshipsRemoved" href="qcontactmanagerengine.html#relationshipsRemoved" location="qcontactmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="relationshipsRemoved(const QList&lt;QContactLocalId&gt; &amp; affectedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="affectedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selfContactIdChanged" fullname="QContactManagerEngine::selfContactIdChanged" href="qcontactmanagerengine.html#selfContactIdChanged" location="qcontactmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selfContactIdChanged(const QContactLocalId &amp; oldId, const QContactLocalId &amp; newId)">
                <parameter left="const QContactLocalId &amp;" right="" name="oldId" default=""/>
                <parameter left="const QContactLocalId &amp;" right="" name="newId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRequestState" fullname="QContactManagerEngine::updateRequestState" href="qcontactmanagerengine.html#updateRequestState" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateRequestState(QContactAbstractRequest * req, QContactAbstractRequest::State state)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContactLocalIdFetchRequest" fullname="QContactManagerEngine::updateContactLocalIdFetchRequest" href="qcontactmanagerengine.html#updateContactLocalIdFetchRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateContactLocalIdFetchRequest(QContactLocalIdFetchRequest * req, const QList&lt;QContactLocalId&gt; &amp; result, QContactManager::Error error, QContactAbstractRequest::State newState)">
                <parameter left="QContactLocalIdFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContactFetchRequest" fullname="QContactManagerEngine::updateContactFetchRequest" href="qcontactmanagerengine.html#updateContactFetchRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateContactFetchRequest(QContactFetchRequest * req, const QList&lt;QContact&gt; &amp; result, QContactManager::Error error, QContactAbstractRequest::State newState)">
                <parameter left="QContactFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContactRemoveRequest" fullname="QContactManagerEngine::updateContactRemoveRequest" href="qcontactmanagerengine.html#updateContactRemoveRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateContactRemoveRequest(QContactRemoveRequest * req, QContactManager::Error error, const QMap&lt;int, QContactManager::Error&gt; &amp; errorMap, QContactAbstractRequest::State newState)">
                <parameter left="QContactRemoveRequest *" right="" name="req" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QContactManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateContactSaveRequest" fullname="QContactManagerEngine::updateContactSaveRequest" href="qcontactmanagerengine.html#updateContactSaveRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateContactSaveRequest(QContactSaveRequest * req, const QList&lt;QContact&gt; &amp; result, QContactManager::Error error, const QMap&lt;int, QContactManager::Error&gt; &amp; errorMap, QContactAbstractRequest::State newState)">
                <parameter left="QContactSaveRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QContactManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDefinitionSaveRequest" fullname="QContactManagerEngine::updateDefinitionSaveRequest" href="qcontactmanagerengine.html#updateDefinitionSaveRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateDefinitionSaveRequest(QContactDetailDefinitionSaveRequest * req, const QList&lt;QContactDetailDefinition&gt; &amp; result, QContactManager::Error error, const QMap&lt;int, QContactManager::Error&gt; &amp; errorMap, QContactAbstractRequest::State newState)">
                <parameter left="QContactDetailDefinitionSaveRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QContactDetailDefinition&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QContactManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDefinitionRemoveRequest" fullname="QContactManagerEngine::updateDefinitionRemoveRequest" href="qcontactmanagerengine.html#updateDefinitionRemoveRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateDefinitionRemoveRequest(QContactDetailDefinitionRemoveRequest * req, QContactManager::Error error, const QMap&lt;int, QContactManager::Error&gt; &amp; errorMap, QContactAbstractRequest::State newState)">
                <parameter left="QContactDetailDefinitionRemoveRequest *" right="" name="req" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QContactManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDefinitionFetchRequest" fullname="QContactManagerEngine::updateDefinitionFetchRequest" href="qcontactmanagerengine.html#updateDefinitionFetchRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateDefinitionFetchRequest(QContactDetailDefinitionFetchRequest * req, const QMap&lt;QString, QContactDetailDefinition&gt; &amp; result, QContactManager::Error error, const QMap&lt;int, QContactManager::Error&gt; &amp; errorMap, QContactAbstractRequest::State newState)">
                <parameter left="QContactDetailDefinitionFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QMap&lt;QString, QContactDetailDefinition&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QContactManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRelationshipSaveRequest" fullname="QContactManagerEngine::updateRelationshipSaveRequest" href="qcontactmanagerengine.html#updateRelationshipSaveRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateRelationshipSaveRequest(QContactRelationshipSaveRequest * req, const QList&lt;QContactRelationship&gt; &amp; result, QContactManager::Error error, const QMap&lt;int, QContactManager::Error&gt; &amp; errorMap, QContactAbstractRequest::State newState)">
                <parameter left="QContactRelationshipSaveRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QContactManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRelationshipRemoveRequest" fullname="QContactManagerEngine::updateRelationshipRemoveRequest" href="qcontactmanagerengine.html#updateRelationshipRemoveRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateRelationshipRemoveRequest(QContactRelationshipRemoveRequest * req, QContactManager::Error error, const QMap&lt;int, QContactManager::Error&gt; &amp; errorMap, QContactAbstractRequest::State newState)">
                <parameter left="QContactRelationshipRemoveRequest *" right="" name="req" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QContactManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRelationshipFetchRequest" fullname="QContactManagerEngine::updateRelationshipFetchRequest" href="qcontactmanagerengine.html#updateRelationshipFetchRequest" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateRelationshipFetchRequest(QContactRelationshipFetchRequest * req, const QList&lt;QContactRelationship&gt; &amp; result, QContactManager::Error error, QContactAbstractRequest::State newState)">
                <parameter left="QContactRelationshipFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QContactManager::Error" right="" name="error" default=""/>
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailAccessConstraints" fullname="QContactManagerEngine::setDetailAccessConstraints" href="qcontactmanagerengine.html#setDetailAccessConstraints" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDetailAccessConstraints(QContactDetail * detail, QFlags&lt;QContactDetail::AccessConstraint&gt; constraints)">
                <parameter left="QContactDetail *" right="" name="detail" default=""/>
                <parameter left="QFlags&lt;QContactDetail::AccessConstraint&gt;" right="" name="constraints" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactDisplayLabel" fullname="QContactManagerEngine::setContactDisplayLabel" href="qcontactmanagerengine.html#setContactDisplayLabel" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setContactDisplayLabel(QContact * contact, const QString &amp; displayLabel)">
                <parameter left="QContact *" right="" name="contact" default=""/>
                <parameter left="const QString &amp;" right="" name="displayLabel" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactRelationships" fullname="QContactManagerEngine::setContactRelationships" href="qcontactmanagerengine.html#setContactRelationships" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setContactRelationships(QContact * contact, const QList&lt;QContactRelationship&gt; &amp; relationships)">
                <parameter left="QContact *" right="" name="contact" default=""/>
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="relationships" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compareContact" fullname="QContactManagerEngine::compareContact" href="qcontactmanagerengine.html#compareContact" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="compareContact(const QContact &amp; a, const QContact &amp; b, const QList&lt;QContactSortOrder&gt; &amp; sortOrders)">
                <parameter left="const QContact &amp;" right="" name="a" default=""/>
                <parameter left="const QContact &amp;" right="" name="b" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSorted" fullname="QContactManagerEngine::addSorted" href="qcontactmanagerengine.html#addSorted" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addSorted(QList&lt;QContact&gt; * sorted, const QContact &amp; toAdd, const QList&lt;QContactSortOrder&gt; &amp; sortOrders)">
                <parameter left="QList&lt;QContact&gt; *" right="" name="sorted" default=""/>
                <parameter left="const QContact &amp;" right="" name="toAdd" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compareVariant" fullname="QContactManagerEngine::compareVariant" href="qcontactmanagerengine.html#compareVariant" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="compareVariant(const QVariant &amp; first, const QVariant &amp; second, Qt::CaseSensitivity sensitivity)">
                <parameter left="const QVariant &amp;" right="" name="first" default=""/>
                <parameter left="const QVariant &amp;" right="" name="second" default=""/>
                <parameter left="Qt::CaseSensitivity" right="" name="sensitivity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="testFilter" fullname="QContactManagerEngine::testFilter" href="qcontactmanagerengine.html#testFilter" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="testFilter(const QContactFilter &amp; filter, const QContact &amp; contact)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortContacts" fullname="QContactManagerEngine::sortContacts" href="qcontactmanagerengine.html#sortContacts" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QContactLocalId&gt;" signature="sortContacts(const QList&lt;QContact&gt; &amp; cs, const QList&lt;QContactSortOrder&gt; &amp; sortOrders)">
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="cs" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canonicalizedFilter" fullname="QContactManagerEngine::canonicalizedFilter" href="qcontactmanagerengine.html#canonicalizedFilter" location="qcontactmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContactFilter" signature="canonicalizedFilter(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylist" href="qmediaplaylist.html" location="qmediaplaylist.h" bases="QMediaBindableInterface" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylist::playbackMode" href="qmediaplaylist.html#playbackMode-prop" location="qmediaplaylist.h" type="QMediaPlaylist::PlaybackMode">
                <getter name="playbackMode"/>
                <setter name="setPlaybackMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentMedia" fullname="QMediaPlaylist::currentMedia" href="qmediaplaylist.html#currentMedia-prop" location="qmediaplaylist.h" type="QMediaContent">
                <getter name="currentMedia"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentIndex" fullname="QMediaPlaylist::currentIndex" href="qmediaplaylist.html#currentIndex-prop" location="qmediaplaylist.h" type="int">
                <getter name="currentIndex"/>
                <setter name="setCurrentIndex"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PlaybackMode" fullname="QMediaPlaylist::PlaybackMode" href="qmediaplaylist.html#PlaybackMode-enum" location="qmediaplaylist.h">
                <value name="CurrentItemOnce" value="0"/>
                <value name="CurrentItemInLoop" value="1"/>
                <value name="Sequential" value="2"/>
                <value name="Loop" value="3"/>
                <value name="Random" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMediaPlaylist::Error" href="qmediaplaylist.html#Error-enum" location="qmediaplaylist.h">
                <value name="NoError" value="0"/>
                <value name="FormatError" value="1"/>
                <value name="FormatNotSupportedError" value="2"/>
                <value name="NetworkError" value="3"/>
                <value name="AccessDeniedError" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylist" fullname="QMediaPlaylist::QMediaPlaylist" href="qmediaplaylist.html#QMediaPlaylist" location="qmediaplaylist.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylist(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylist" fullname="QMediaPlaylist::~QMediaPlaylist" href="qmediaplaylist.html#dtor.QMediaPlaylist" location="qmediaplaylist.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylist()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QMediaPlaylist::mediaObject" href="qmediaplaylist.html#mediaObject" location="qmediaplaylist.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaObject *" signature="mediaObject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylist::playbackMode" href="qmediaplaylist.html#playbackMode-prop" location="qmediaplaylist.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playbackMode" type="PlaybackMode" signature="playbackMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackMode" fullname="QMediaPlaylist::setPlaybackMode" href="qmediaplaylist.html#playbackMode-prop" location="qmediaplaylist.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="playbackMode" type="void" signature="setPlaybackMode(PlaybackMode mode)">
                <parameter left="PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentIndex" fullname="QMediaPlaylist::currentIndex" href="qmediaplaylist.html#currentIndex-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentIndex" type="int" signature="currentIndex() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMedia" fullname="QMediaPlaylist::currentMedia" href="qmediaplaylist.html#currentMedia-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentMedia" type="QMediaContent" signature="currentMedia() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextIndex" fullname="QMediaPlaylist::nextIndex" href="qmediaplaylist.html#nextIndex" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="nextIndex(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousIndex" fullname="QMediaPlaylist::previousIndex" href="qmediaplaylist.html#previousIndex" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="previousIndex(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlaylist::media" href="qmediaplaylist.html#media" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaContent" signature="media(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaCount" fullname="QMediaPlaylist::mediaCount" href="qmediaplaylist.html#mediaCount" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="mediaCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMediaPlaylist::isEmpty" href="qmediaplaylist.html#isEmpty" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMediaPlaylist::isReadOnly" href="qmediaplaylist.html#isReadOnly" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMedia" fullname="QMediaPlaylist::addMedia" href="qmediaplaylist.html#addMedia" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addMedia(const QMediaContent &amp; content)">
                <parameter left="const QMediaContent &amp;" right="" name="content" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMedia" fullname="QMediaPlaylist::addMedia" href="qmediaplaylist.html#addMedia-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="addMedia(const QList&lt;QMediaContent&gt; &amp; items)">
                <parameter left="const QList&lt;QMediaContent&gt; &amp;" right="" name="items" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertMedia" fullname="QMediaPlaylist::insertMedia" href="qmediaplaylist.html#insertMedia" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="insertMedia(int pos, const QMediaContent &amp; content)">
                <parameter left="int" right="" name="pos" default=""/>
                <parameter left="const QMediaContent &amp;" right="" name="content" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertMedia" fullname="QMediaPlaylist::insertMedia" href="qmediaplaylist.html#insertMedia-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="insertMedia(int pos, const QList&lt;QMediaContent&gt; &amp; items)">
                <parameter left="int" right="" name="pos" default=""/>
                <parameter left="const QList&lt;QMediaContent&gt; &amp;" right="" name="items" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMedia" fullname="QMediaPlaylist::removeMedia" href="qmediaplaylist.html#removeMedia" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeMedia(int pos)">
                <parameter left="int" right="" name="pos" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMedia" fullname="QMediaPlaylist::removeMedia" href="qmediaplaylist.html#removeMedia-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="removeMedia(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMediaPlaylist::clear" href="qmediaplaylist.html#clear" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylist::load" href="qmediaplaylist.html#load" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="load(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylist::load" href="qmediaplaylist.html#load-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="load(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylist::save" href="qmediaplaylist.html#save" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylist::save" href="qmediaplaylist.html#save-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="save(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlaylist::error" href="qmediaplaylist.html#error" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaPlaylist::errorString" href="qmediaplaylist.html#errorString" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shuffle" fullname="QMediaPlaylist::shuffle" href="qmediaplaylist.html#shuffle" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="shuffle()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="next" fullname="QMediaPlaylist::next" href="qmediaplaylist.html#next" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="next()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="previous" fullname="QMediaPlaylist::previous" href="qmediaplaylist.html#previous" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="previous()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentIndex" fullname="QMediaPlaylist::setCurrentIndex" href="qmediaplaylist.html#currentIndex-prop" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="currentIndex" type="void" signature="setCurrentIndex(int playlistPosition)">
                <parameter left="int" right="" name="playlistPosition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentIndexChanged" fullname="QMediaPlaylist::currentIndexChanged" href="qmediaplaylist.html#currentIndexChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentIndexChanged(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackModeChanged" fullname="QMediaPlaylist::playbackModeChanged" href="qmediaplaylist.html#playbackModeChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackModeChanged(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMediaChanged" fullname="QMediaPlaylist::currentMediaChanged" href="qmediaplaylist.html#currentMediaChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMediaChanged(const QMediaContent &amp; content)">
                <parameter left="const QMediaContent &amp;" right="" name="content" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaAboutToBeInserted" fullname="QMediaPlaylist::mediaAboutToBeInserted" href="qmediaplaylist.html#mediaAboutToBeInserted" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaAboutToBeInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaInserted" fullname="QMediaPlaylist::mediaInserted" href="qmediaplaylist.html#mediaInserted" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaAboutToBeRemoved" fullname="QMediaPlaylist::mediaAboutToBeRemoved" href="qmediaplaylist.html#mediaAboutToBeRemoved" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaAboutToBeRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaRemoved" fullname="QMediaPlaylist::mediaRemoved" href="qmediaplaylist.html#mediaRemoved" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaChanged" fullname="QMediaPlaylist::mediaChanged" href="qmediaplaylist.html#mediaChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaChanged(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loaded" fullname="QMediaPlaylist::loaded" href="qmediaplaylist.html#loaded" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="loaded()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadFailed" fullname="QMediaPlaylist::loadFailed" href="qmediaplaylist.html#loadFailed" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="loadFailed()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaPlaylist::d_ptr" href="qmediaplaylist.html#d_ptr-var" location="qmediaplaylist.h" type="QMediaPlaylistPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryItemListModel" href="qgalleryitemlistmodel.html" location="qgalleryitemlistmodel.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="itemList" fullname="QGalleryItemListModel::itemList" href="qgalleryitemlistmodel.html#itemList-prop" location="qgalleryitemlistmodel.h" type="QGalleryItemList *">
                <getter name="itemList"/>
                <setter name="setItemList"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="autoUpdateCursorPosition" fullname="QGalleryItemListModel::autoUpdateCursorPosition" href="qgalleryitemlistmodel.html#autoUpdateCursorPosition-prop" location="qgalleryitemlistmodel.h" type="bool">
                <getter name="autoUpdateCursorPosition"/>
                <setter name="setAutoUpdateCursorPosition"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryItemListModel" fullname="QGalleryItemListModel::QGalleryItemListModel" href="qgalleryitemlistmodel.html#QGalleryItemListModel" location="qgalleryitemlistmodel.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryItemListModel(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryItemListModel" fullname="QGalleryItemListModel::~QGalleryItemListModel" href="qgalleryitemlistmodel.html#dtor.QGalleryItemListModel" location="qgalleryitemlistmodel.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryItemListModel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemList" fullname="QGalleryItemListModel::itemList" href="qgalleryitemlistmodel.html#itemList-prop" location="qgalleryitemlistmodel.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemList" type="QGalleryItemList *" signature="itemList() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="autoUpdateCursorPosition" fullname="QGalleryItemListModel::autoUpdateCursorPosition" href="qgalleryitemlistmodel.html#autoUpdateCursorPosition-prop" location="qgalleryitemlistmodel.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="autoUpdateCursorPosition" type="bool" signature="autoUpdateCursorPosition() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoUpdateCursorPosition" fullname="QGalleryItemListModel::setAutoUpdateCursorPosition" href="qgalleryitemlistmodel.html#autoUpdateCursorPosition-prop" location="qgalleryitemlistmodel.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="autoUpdateCursorPosition" type="void" signature="setAutoUpdateCursorPosition(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="roleProperties" fullname="QGalleryItemListModel::roleProperties" href="qgalleryitemlistmodel.html#roleProperties" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QHash&lt;int, QString&gt;" signature="roleProperties(int column) const">
                <parameter left="int" right="" name="column" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRoleProperties" fullname="QGalleryItemListModel::setRoleProperties" href="qgalleryitemlistmodel.html#setRoleProperties" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRoleProperties(int column, const QHash&lt;int, QString&gt; &amp; properties)">
                <parameter left="int" right="" name="column" default=""/>
                <parameter left="const QHash&lt;int, QString&gt; &amp;" right="" name="properties" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rowCount" fullname="QGalleryItemListModel::rowCount" href="qgalleryitemlistmodel.html#rowCount" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="rowCount(const QModelIndex &amp; parent) const">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="columnCount" fullname="QGalleryItemListModel::columnCount" href="qgalleryitemlistmodel.html#columnCount" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="columnCount(const QModelIndex &amp; parent) const">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addColumn" fullname="QGalleryItemListModel::addColumn" href="qgalleryitemlistmodel.html#addColumn" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addColumn(const QHash&lt;int, QString&gt; &amp; properties)">
                <parameter left="const QHash&lt;int, QString&gt; &amp;" right="" name="properties" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addColumn" fullname="QGalleryItemListModel::addColumn" href="qgalleryitemlistmodel.html#addColumn-2" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addColumn(const QString &amp; property, int role)">
                <parameter left="const QString &amp;" right="" name="property" default=""/>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertColumn" fullname="QGalleryItemListModel::insertColumn" href="qgalleryitemlistmodel.html#insertColumn" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertColumn(int index, const QHash&lt;int, QString&gt; &amp; properties)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QHash&lt;int, QString&gt; &amp;" right="" name="properties" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertColumn" fullname="QGalleryItemListModel::insertColumn" href="qgalleryitemlistmodel.html#insertColumn-2" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="insertColumn(int index, const QString &amp; property, int role)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QString &amp;" right="" name="property" default=""/>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeColumn" fullname="QGalleryItemListModel::removeColumn" href="qgalleryitemlistmodel.html#removeColumn" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeColumn(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="index" fullname="QGalleryItemListModel::index" href="qgalleryitemlistmodel.html#index" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndex" signature="index(int row, int column, const QModelIndex &amp; parent) const">
                <parameter left="int" right="" name="row" default=""/>
                <parameter left="int" right="" name="column" default=""/>
                <parameter left="const QModelIndex &amp;" right="" name="parent" default="QModelIndex()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parent" fullname="QGalleryItemListModel::parent" href="qgalleryitemlistmodel.html#parent" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QModelIndex" signature="parent(const QModelIndex &amp; parent) const">
                <parameter left="const QModelIndex &amp;" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="data" fullname="QGalleryItemListModel::data" href="qgalleryitemlistmodel.html#data" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="data(const QModelIndex &amp; index, int role) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QGalleryItemListModel::setData" href="qgalleryitemlistmodel.html#setData" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setData(const QModelIndex &amp; index, const QVariant &amp; value, int role)">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
                <parameter left="int" right="" name="role" default="Qt::EditRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerData" fullname="QGalleryItemListModel::headerData" href="qgalleryitemlistmodel.html#headerData" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="headerData(int section, Qt::Orientation orientation, int role) const">
                <parameter left="int" right="" name="section" default=""/>
                <parameter left="Qt::Orientation" right="" name="orientation" default=""/>
                <parameter left="int" right="" name="role" default="Qt::DisplayRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeaderData" fullname="QGalleryItemListModel::setHeaderData" href="qgalleryitemlistmodel.html#setHeaderData" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setHeaderData(int section, Qt::Orientation orientation, const QVariant &amp; value, int role)">
                <parameter left="int" right="" name="section" default=""/>
                <parameter left="Qt::Orientation" right="" name="orientation" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
                <parameter left="int" right="" name="role" default="Qt::EditRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flags" fullname="QGalleryItemListModel::flags" href="qgalleryitemlistmodel.html#flags" location="qgalleryitemlistmodel.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::ItemFlags" signature="flags(const QModelIndex &amp; index) const">
                <parameter left="const QModelIndex &amp;" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemList" fullname="QGalleryItemListModel::setItemList" href="qgalleryitemlistmodel.html#itemList-prop" location="qgalleryitemlistmodel.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="itemList" type="void" signature="setItemList(QGalleryItemList * list)">
                <parameter left="QGalleryItemList *" right="" name="list" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitReader" href="qversitreader.html" location="qversitreader.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QVersitReader::Error" href="qversitreader.html#Error-enum" location="qversitreader.h">
                <value name="NoError" value="0"/>
                <value name="UnspecifiedError" value="1"/>
                <value name="IOError" value="2"/>
                <value name="OutOfMemoryError" value="3"/>
                <value name="NotReadyError" value="4"/>
                <value name="ParseError" value="5"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QVersitReader::State" href="qversitreader.html#State-enum" location="qversitreader.h">
                <value name="InactiveState" value="0"/>
                <value name="ActiveState" value="1"/>
                <value name="CanceledState" value="2"/>
                <value name="FinishedState" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitReader" fullname="QVersitReader::QVersitReader" href="qversitreader.html#QVersitReader" location="qversitreader.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVersitReader()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitReader" fullname="QVersitReader::QVersitReader" href="qversitreader.html#QVersitReader-2" location="qversitreader.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVersitReader(QIODevice * inputDevice)">
                <parameter left="QIODevice *" right="" name="inputDevice" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitReader" fullname="QVersitReader::QVersitReader" href="qversitreader.html#QVersitReader-3" location="qversitreader.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QVersitReader(const QByteArray &amp; inputData)">
                <parameter left="const QByteArray &amp;" right="" name="inputData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitReader" fullname="QVersitReader::~QVersitReader" href="qversitreader.html#dtor.QVersitReader" location="qversitreader.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitReader()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QVersitReader::setDevice" href="qversitreader.html#setDevice" location="qversitreader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QVersitReader::device" href="qversitreader.html#device" location="qversitreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setData" fullname="QVersitReader::setData" href="qversitreader.html#setData" location="qversitreader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setData(const QByteArray &amp; inputData)">
                <parameter left="const QByteArray &amp;" right="" name="inputData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCodec" fullname="QVersitReader::setDefaultCodec" href="qversitreader.html#setDefaultCodec" location="qversitreader.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultCodec(QTextCodec * codec)">
                <parameter left="QTextCodec *" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCodec" fullname="QVersitReader::defaultCodec" href="qversitreader.html#defaultCodec" location="qversitreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTextCodec *" signature="defaultCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="results" fullname="QVersitReader::results" href="qversitreader.html#results" location="qversitreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVersitDocument&gt;" signature="results() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QVersitReader::state" href="qversitreader.html#state" location="qversitreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QVersitReader::error" href="qversitreader.html#error" location="qversitreader.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startReading" fullname="QVersitReader::startReading" href="qversitreader.html#startReading" location="qversitreader.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="startReading()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QVersitReader::cancel" href="qversitreader.html#cancel" location="qversitreader.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QVersitReader::stateChanged" href="qversitreader.html#stateChanged" location="qversitreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QVersitReader::State state)">
                <parameter left="QVersitReader::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resultsAvailable" fullname="QVersitReader::resultsAvailable" href="qversitreader.html#resultsAvailable" location="qversitreader.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resultsAvailable()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoMappingManagerEngine" href="qgeomappingmanagerengine.html" location="qgeomappingmanagerengine.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoMappingManagerEngine" fullname="QGeoMappingManagerEngine::QGeoMappingManagerEngine" href="qgeomappingmanagerengine.html#QGeoMappingManagerEngine" location="qgeomappingmanagerengine.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoMappingManagerEngine(const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoMappingManagerEngine" fullname="QGeoMappingManagerEngine::~QGeoMappingManagerEngine" href="qgeomappingmanagerengine.html#dtor.QGeoMappingManagerEngine" location="qgeomappingmanagerengine.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoMappingManagerEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QGeoMappingManagerEngine::managerName" href="qgeomappingmanagerengine.html#managerName" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QGeoMappingManagerEngine::managerParameters" href="qgeomappingmanagerengine.html#managerParameters" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QGeoMappingManagerEngine::managerVersion" href="qgeomappingmanagerengine.html#managerVersion" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="createMapData" fullname="QGeoMappingManagerEngine::createMapData" href="qgeomappingmanagerengine.html#createMapData" location="qgeomappingmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QGeoMapData *" signature="createMapData(QGeoMapWidget * widget)">
                <parameter left="QGeoMapWidget *" right="" name="widget" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMapData" fullname="QGeoMappingManagerEngine::removeMapData" href="qgeomappingmanagerengine.html#removeMapData" location="qgeomappingmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="removeMapData(QGeoMapData * mapData)">
                <parameter left="QGeoMapData *" right="" name="mapData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMapTypes" fullname="QGeoMappingManagerEngine::supportedMapTypes" href="qgeomappingmanagerengine.html#supportedMapTypes" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoMapWidget::MapType&gt;" signature="supportedMapTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumImageSize" fullname="QGeoMappingManagerEngine::minimumImageSize" href="qgeomappingmanagerengine.html#minimumImageSize" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="minimumImageSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumImageSize" fullname="QGeoMappingManagerEngine::maximumImageSize" href="qgeomappingmanagerengine.html#maximumImageSize" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="maximumImageSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumZoomLevel" fullname="QGeoMappingManagerEngine::minimumZoomLevel" href="qgeomappingmanagerengine.html#minimumZoomLevel" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="minimumZoomLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumZoomLevel" fullname="QGeoMappingManagerEngine::maximumZoomLevel" href="qgeomappingmanagerengine.html#maximumZoomLevel" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumZoomLevel() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedMapTypes" fullname="QGeoMappingManagerEngine::setSupportedMapTypes" href="qgeomappingmanagerengine.html#setSupportedMapTypes" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedMapTypes(const QList&lt;QGeoMapWidget::MapType&gt; &amp; mapTypes)">
                <parameter left="const QList&lt;QGeoMapWidget::MapType&gt; &amp;" right="" name="mapTypes" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMinimumZoomLevel" fullname="QGeoMappingManagerEngine::setMinimumZoomLevel" href="qgeomappingmanagerengine.html#setMinimumZoomLevel" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMinimumZoomLevel(qreal minimumZoom)">
                <parameter left="qreal" right="" name="minimumZoom" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMaximumZoomLevel" fullname="QGeoMappingManagerEngine::setMaximumZoomLevel" href="qgeomappingmanagerengine.html#setMaximumZoomLevel" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaximumZoomLevel(qreal maximumZoom)">
                <parameter left="qreal" right="" name="maximumZoom" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMinimumImageSize" fullname="QGeoMappingManagerEngine::setMinimumImageSize" href="qgeomappingmanagerengine.html#setMinimumImageSize" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMinimumImageSize(const QSize &amp; minimumImageSize)">
                <parameter left="const QSize &amp;" right="" name="minimumImageSize" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMaximumImageSize" fullname="QGeoMappingManagerEngine::setMaximumImageSize" href="qgeomappingmanagerengine.html#setMaximumImageSize" location="qgeomappingmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaximumImageSize(const QSize &amp; maximumImageSize)">
                <parameter left="const QSize &amp;" right="" name="maximumImageSize" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QGeoMappingManagerEngine::d_ptr" href="qgeomappingmanagerengine.html#d_ptr-var" location="qgeomappingmanagerengine.h" type="QGeoMappingManagerEnginePrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QTelephonyCallInfo" href="qtelephonycallinfo.html" location="qtelephonycallinfo.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTelephonyCallInfo" fullname="QTelephonyCallInfo::QTelephonyCallInfo" href="qtelephonycallinfo.html#QTelephonyCallInfo" location="qtelephonycallinfo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTelephonyCallInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTelephonyCallInfo" fullname="QTelephonyCallInfo::QTelephonyCallInfo" href="qtelephonycallinfo.html#QTelephonyCallInfo-2" location="qtelephonycallinfo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QTelephonyCallInfo(const QTelephonyCallInfo &amp; other)">
                <parameter left="const QTelephonyCallInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTelephonyCallInfo" fullname="QTelephonyCallInfo::~QTelephonyCallInfo" href="qtelephonycallinfo.html#dtor.QTelephonyCallInfo" location="qtelephonycallinfo.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTelephonyCallInfo()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallType" fullname="QTelephonyCallInfo::CallType" href="qtelephonycallinfo.html#CallType-enum" location="qtelephonycallinfo.h">
                <value name="Any" value="0"/>
                <value name="Text" value="1"/>
                <value name="Data" value="2"/>
                <value name="Video" value="3"/>
                <value name="Voice" value="4"/>
                <value name="Other" value="5"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CallStatus" fullname="QTelephonyCallInfo::CallStatus" href="qtelephonycallinfo.html#CallStatus-enum" location="qtelephonycallinfo.h">
                <value name="Idle" value="0"/>
                <value name="Dialing" value="1"/>
                <value name="Alerting" value="2"/>
                <value name="Connected" value="3"/>
                <value name="Disconnecting" value="4"/>
                <value name="Incomming" value="5"/>
                <value name="OnHold" value="6"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="remotePartyIdentifier" fullname="QTelephonyCallInfo::remotePartyIdentifier" href="qtelephonycallinfo.html#remotePartyIdentifier" location="qtelephonycallinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="remotePartyIdentifier() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QTelephonyCallInfo::type" href="qtelephonycallinfo.html#type" location="qtelephonycallinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="CallType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="subType" fullname="QTelephonyCallInfo::subType" href="qtelephonycallinfo.html#subType" location="qtelephonycallinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="subType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QTelephonyCallInfo::status" href="qtelephonycallinfo.html#status" location="qtelephonycallinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="CallStatus" signature="status() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QTelephonyCallInfo::value" href="qtelephonycallinfo.html#value" location="qtelephonycallinfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinitionSaveRequest" href="qorganizeritemdetaildefinitionsaverequest.html" location="qorganizeritemdetaildefinitionsaverequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinitionSaveRequest" fullname="QOrganizerItemDetailDefinitionSaveRequest::QOrganizerItemDetailDefinitionSaveRequest" href="qorganizeritemdetaildefinitionsaverequest.html#QOrganizerItemDetailDefinitionSaveRequest" location="qorganizeritemdetaildefinitionsaverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetailDefinitionSaveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinition" fullname="QOrganizerItemDetailDefinitionSaveRequest::setDefinition" href="qorganizeritemdetaildefinitionsaverequest.html#setDefinition" location="qorganizeritemdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinition(const QOrganizerItemDetailDefinition &amp; definition)">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="definition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitions" fullname="QOrganizerItemDetailDefinitionSaveRequest::setDefinitions" href="qorganizeritemdetaildefinitionsaverequest.html#setDefinitions" location="qorganizeritemdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitions(const QList&lt;QOrganizerItemDetailDefinition&gt; &amp; definitions)">
                <parameter left="const QList&lt;QOrganizerItemDetailDefinition&gt; &amp;" right="" name="definitions" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemType" fullname="QOrganizerItemDetailDefinitionSaveRequest::setItemType" href="qorganizeritemdetaildefinitionsaverequest.html#setItemType" location="qorganizeritemdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItemType(const QString &amp; organizeritemType)">
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QOrganizerItemDetailDefinitionSaveRequest::itemType" href="qorganizeritemdetaildefinitionsaverequest.html#itemType" location="qorganizeritemdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="itemType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitions" fullname="QOrganizerItemDetailDefinitionSaveRequest::definitions" href="qorganizeritemdetaildefinitionsaverequest.html#definitions" location="qorganizeritemdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemDetailDefinition&gt;" signature="definitions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QOrganizerItemDetailDefinitionSaveRequest::errorMap" href="qorganizeritemdetaildefinitionsaverequest.html#errorMap" location="qorganizeritemdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QOrganizerItemManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoDeviceControl" href="qvideodevicecontrol.html" location="qvideodevicecontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoDeviceControl" fullname="QVideoDeviceControl::~QVideoDeviceControl" href="qvideodevicecontrol.html#dtor.QVideoDeviceControl" location="qvideodevicecontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoDeviceControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceCount" fullname="QVideoDeviceControl::deviceCount" href="qvideodevicecontrol.html#deviceCount" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="deviceCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceName" fullname="QVideoDeviceControl::deviceName" href="qvideodevicecontrol.html#deviceName" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceName(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceDescription" fullname="QVideoDeviceControl::deviceDescription" href="qvideodevicecontrol.html#deviceDescription" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceDescription(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceIcon" fullname="QVideoDeviceControl::deviceIcon" href="qvideodevicecontrol.html#deviceIcon" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="deviceIcon(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultDevice" fullname="QVideoDeviceControl::defaultDevice" href="qvideodevicecontrol.html#defaultDevice" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="defaultDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QVideoDeviceControl::selectedDevice" href="qvideodevicecontrol.html#selectedDevice" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="selectedDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectedDevice" fullname="QVideoDeviceControl::setSelectedDevice" href="qvideodevicecontrol.html#setSelectedDevice" location="qvideodevicecontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="setSelectedDevice(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QVideoDeviceControl::selectedDeviceChanged" href="qvideodevicecontrol.html#selectedDeviceChanged" location="qvideodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selectedDeviceChanged(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QVideoDeviceControl::selectedDeviceChanged" href="qvideodevicecontrol.html#selectedDeviceChanged-2" location="qvideodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="selectedDeviceChanged(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devicesChanged" fullname="QVideoDeviceControl::devicesChanged" href="qvideodevicecontrol.html#devicesChanged" location="qvideodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="devicesChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVideoDeviceControl" fullname="QVideoDeviceControl::QVideoDeviceControl" href="qvideodevicecontrol.html#QVideoDeviceControl" location="qvideodevicecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoDeviceControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemIntersectionFilter" href="qorganizeritemintersectionfilter.html" location="qorganizeritemintersectionfilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemIntersectionFilter" fullname="QOrganizerItemIntersectionFilter::QOrganizerItemIntersectionFilter" href="qorganizeritemintersectionfilter.html#QOrganizerItemIntersectionFilter" location="qorganizeritemintersectionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemIntersectionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemIntersectionFilter" fullname="QOrganizerItemIntersectionFilter::QOrganizerItemIntersectionFilter" href="qorganizeritemintersectionfilter.html#QOrganizerItemIntersectionFilter-2" location="qorganizeritemintersectionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemIntersectionFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilters" fullname="QOrganizerItemIntersectionFilter::setFilters" href="qorganizeritemintersectionfilter.html#setFilters" location="qorganizeritemintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilters(const QList&lt;QOrganizerItemFilter&gt; &amp; filters)">
                <parameter left="const QList&lt;QOrganizerItemFilter&gt; &amp;" right="" name="filters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepend" fullname="QOrganizerItemIntersectionFilter::prepend" href="qorganizeritemintersectionfilter.html#prepend" location="qorganizeritemintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="prepend(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QOrganizerItemIntersectionFilter::append" href="qorganizeritemintersectionfilter.html#append" location="qorganizeritemintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QOrganizerItemIntersectionFilter::remove" href="qorganizeritemintersectionfilter.html#remove" location="qorganizeritemintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QOrganizerItemIntersectionFilter::operator&lt;&lt;" href="qorganizeritemintersectionfilter.html#operator&lt;&lt;" location="qorganizeritemintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemIntersectionFilter &amp;" signature="operator&lt;&lt;(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QOrganizerItemIntersectionFilter::filters" href="qorganizeritemintersectionfilter.html#filters" location="qorganizeritemintersectionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemFilter&gt;" signature="filters() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactUnionFilter" href="qcontactunionfilter.html" location="qcontactunionfilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactUnionFilter" fullname="QContactUnionFilter::QContactUnionFilter" href="qcontactunionfilter.html#QContactUnionFilter" location="qcontactunionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactUnionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactUnionFilter" fullname="QContactUnionFilter::QContactUnionFilter" href="qcontactunionfilter.html#QContactUnionFilter-2" location="qcontactunionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactUnionFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilters" fullname="QContactUnionFilter::setFilters" href="qcontactunionfilter.html#setFilters" location="qcontactunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilters(const QList&lt;QContactFilter&gt; &amp; filters)">
                <parameter left="const QList&lt;QContactFilter&gt; &amp;" right="" name="filters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepend" fullname="QContactUnionFilter::prepend" href="qcontactunionfilter.html#prepend" location="qcontactunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="prepend(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QContactUnionFilter::append" href="qcontactunionfilter.html#append" location="qcontactunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QContactUnionFilter::remove" href="qcontactunionfilter.html#remove" location="qcontactunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QContactUnionFilter::operator&lt;&lt;" href="qcontactunionfilter.html#operator&lt;&lt;" location="qcontactunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactUnionFilter &amp;" signature="operator&lt;&lt;(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QContactUnionFilter::filters" href="qcontactunionfilter.html#filters" location="qcontactunionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactFilter&gt;" signature="filters() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoServiceProvider" href="qgeoserviceprovider.html" location="qgeoserviceprovider.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QGeoServiceProvider::Error" href="qgeoserviceprovider.html#Error-enum" location="qgeoserviceprovider.h">
                <value name="NoError" value="0"/>
                <value name="NotSupportedError" value="1"/>
                <value name="UnknownParameterError" value="2"/>
                <value name="MissingRequiredParameterError" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableServiceProviders" fullname="QGeoServiceProvider::availableServiceProviders" href="qgeoserviceprovider.html#availableServiceProviders" location="qgeoserviceprovider.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="availableServiceProviders()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoServiceProvider" fullname="QGeoServiceProvider::QGeoServiceProvider" href="qgeoserviceprovider.html#QGeoServiceProvider" location="qgeoserviceprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoServiceProvider(const QString &amp; providerName, const QMap&lt;QString, QString&gt; &amp; parameters, QString )">
                <parameter left="const QString &amp;" right="" name="providerName" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="( QMap&lt;QString"/>
                <parameter left="QString" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoServiceProvider" fullname="QGeoServiceProvider::QGeoServiceProvider" href="qgeoserviceprovider.html#QGeoServiceProvider-2" location="qgeoserviceprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoServiceProvider(const QString &amp; providerName, int providerVersion, const QMap&lt;QString, QString&gt; &amp; parameters, QString )">
                <parameter left="const QString &amp;" right="" name="providerName" default=""/>
                <parameter left="int" right="" name="providerVersion" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="( QMap&lt;QString"/>
                <parameter left="QString" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoServiceProvider" fullname="QGeoServiceProvider::~QGeoServiceProvider" href="qgeoserviceprovider.html#dtor.QGeoServiceProvider" location="qgeoserviceprovider.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoServiceProvider()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchManager" fullname="QGeoServiceProvider::searchManager" href="qgeoserviceprovider.html#searchManager" location="qgeoserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoSearchManager *" signature="searchManager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mappingManager" fullname="QGeoServiceProvider::mappingManager" href="qgeoserviceprovider.html#mappingManager" location="qgeoserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoMappingManager *" signature="mappingManager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="routingManager" fullname="QGeoServiceProvider::routingManager" href="qgeoserviceprovider.html#routingManager" location="qgeoserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRoutingManager *" signature="routingManager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoServiceProvider::error" href="qgeoserviceprovider.html#error" location="qgeoserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QGeoServiceProvider::errorString" href="qgeoserviceprovider.html#errorString" location="qgeoserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaContainerControl" href="qmediacontainercontrol.html" location="qmediacontainercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaContainerControl" fullname="QMediaContainerControl::~QMediaContainerControl" href="qmediacontainercontrol.html#dtor.QMediaContainerControl" location="qmediacontainercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaContainerControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedContainers" fullname="QMediaContainerControl::supportedContainers" href="qmediacontainercontrol.html#supportedContainers" location="qmediacontainercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedContainers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="containerMimeType" fullname="QMediaContainerControl::containerMimeType" href="qmediacontainercontrol.html#containerMimeType" location="qmediacontainercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="containerMimeType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContainerMimeType" fullname="QMediaContainerControl::setContainerMimeType" href="qmediacontainercontrol.html#setContainerMimeType" location="qmediacontainercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContainerMimeType(const QString &amp; mimeType)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="containerDescription" fullname="QMediaContainerControl::containerDescription" href="qmediacontainercontrol.html#containerDescription" location="qmediacontainercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="containerDescription(const QString &amp; mimeType) const">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaContainerControl" fullname="QMediaContainerControl::QMediaContainerControl" href="qmediacontainercontrol.html#QMediaContainerControl" location="qmediacontainercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaContainerControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVideoSurfaceFormat" href="qvideosurfaceformat.html" location="qvideosurfaceformat.h" bases="" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Direction" fullname="QVideoSurfaceFormat::Direction" href="qvideosurfaceformat.html#Direction-enum" location="qvideosurfaceformat.h">
                <value name="TopToBottom" value="0"/>
                <value name="BottomToTop" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="YCbCrColorSpace" fullname="QVideoSurfaceFormat::YCbCrColorSpace" href="qvideosurfaceformat.html#YCbCrColorSpace-enum" location="qvideosurfaceformat.h">
                <value name="YCbCr_Undefined" value="0"/>
                <value name="YCbCr_BT601" value="1"/>
                <value name="YCbCr_BT709" value="2"/>
                <value name="YCbCr_xvYCC601" value="3"/>
                <value name="YCbCr_xvYCC709" value="4"/>
                <value name="YCbCr_JPEG" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoSurfaceFormat" fullname="QVideoSurfaceFormat::QVideoSurfaceFormat" href="qvideosurfaceformat.html#QVideoSurfaceFormat" location="qvideosurfaceformat.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoSurfaceFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoSurfaceFormat" fullname="QVideoSurfaceFormat::QVideoSurfaceFormat" href="qvideosurfaceformat.html#QVideoSurfaceFormat-2" location="qvideosurfaceformat.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVideoSurfaceFormat(const QSize &amp; size, QVideoFrame::PixelFormat format, QAbstractVideoBuffer::HandleType type)">
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
                <parameter left="QVideoFrame::PixelFormat" right="" name="format" default=""/>
                <parameter left="QAbstractVideoBuffer::HandleType" right="" name="type" default="QAbstractVideoBuffer::NoHandle"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoSurfaceFormat" fullname="QVideoSurfaceFormat::QVideoSurfaceFormat" href="qvideosurfaceformat.html#QVideoSurfaceFormat-3" location="qvideosurfaceformat.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QVideoSurfaceFormat(const QVideoSurfaceFormat &amp; other)">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoSurfaceFormat" fullname="QVideoSurfaceFormat::~QVideoSurfaceFormat" href="qvideosurfaceformat.html#dtor.QVideoSurfaceFormat" location="qvideosurfaceformat.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoSurfaceFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QVideoSurfaceFormat::operator=" href="qvideosurfaceformat.html#operator=" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVideoSurfaceFormat &amp;" signature="operator=(const QVideoSurfaceFormat &amp; other)">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QVideoSurfaceFormat::operator==" href="qvideosurfaceformat.html#operator==" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QVideoSurfaceFormat &amp; other) const">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QVideoSurfaceFormat::operator!=" href="qvideosurfaceformat.html#operator!=" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QVideoSurfaceFormat &amp; other) const">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QVideoSurfaceFormat::isValid" href="qvideosurfaceformat.html#isValid" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pixelFormat" fullname="QVideoSurfaceFormat::pixelFormat" href="qvideosurfaceformat.html#pixelFormat" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVideoFrame::PixelFormat" signature="pixelFormat() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleType" fullname="QVideoSurfaceFormat::handleType" href="qvideosurfaceformat.html#handleType" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractVideoBuffer::HandleType" signature="handleType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="frameSize" fullname="QVideoSurfaceFormat::frameSize" href="qvideosurfaceformat.html#frameSize" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="frameSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrameSize" fullname="QVideoSurfaceFormat::setFrameSize" href="qvideosurfaceformat.html#setFrameSize" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrameSize(const QSize &amp; size)">
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrameSize" fullname="QVideoSurfaceFormat::setFrameSize" href="qvideosurfaceformat.html#setFrameSize-2" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setFrameSize(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frameWidth" fullname="QVideoSurfaceFormat::frameWidth" href="qvideosurfaceformat.html#frameWidth" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frameWidth() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="frameHeight" fullname="QVideoSurfaceFormat::frameHeight" href="qvideosurfaceformat.html#frameHeight" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frameHeight() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="viewport" fullname="QVideoSurfaceFormat::viewport" href="qvideosurfaceformat.html#viewport" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRect" signature="viewport() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setViewport" fullname="QVideoSurfaceFormat::setViewport" href="qvideosurfaceformat.html#setViewport" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setViewport(const QRect &amp; viewport)">
                <parameter left="const QRect &amp;" right="" name="viewport" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scanLineDirection" fullname="QVideoSurfaceFormat::scanLineDirection" href="qvideosurfaceformat.html#scanLineDirection" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Direction" signature="scanLineDirection() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setScanLineDirection" fullname="QVideoSurfaceFormat::setScanLineDirection" href="qvideosurfaceformat.html#setScanLineDirection" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setScanLineDirection(Direction direction)">
                <parameter left="Direction" right="" name="direction" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frameRate" fullname="QVideoSurfaceFormat::frameRate" href="qvideosurfaceformat.html#frameRate" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="frameRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrameRate" fullname="QVideoSurfaceFormat::setFrameRate" href="qvideosurfaceformat.html#setFrameRate" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrameRate(qreal rate)">
                <parameter left="qreal" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pixelAspectRatio" fullname="QVideoSurfaceFormat::pixelAspectRatio" href="qvideosurfaceformat.html#pixelAspectRatio" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="pixelAspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPixelAspectRatio" fullname="QVideoSurfaceFormat::setPixelAspectRatio" href="qvideosurfaceformat.html#setPixelAspectRatio" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPixelAspectRatio(const QSize &amp; ratio)">
                <parameter left="const QSize &amp;" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPixelAspectRatio" fullname="QVideoSurfaceFormat::setPixelAspectRatio" href="qvideosurfaceformat.html#setPixelAspectRatio-2" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setPixelAspectRatio(int horizontal, int vertical)">
                <parameter left="int" right="" name="horizontal" default=""/>
                <parameter left="int" right="" name="vertical" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="yCbCrColorSpace" fullname="QVideoSurfaceFormat::yCbCrColorSpace" href="qvideosurfaceformat.html#yCbCrColorSpace" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="YCbCrColorSpace" signature="yCbCrColorSpace() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setYCbCrColorSpace" fullname="QVideoSurfaceFormat::setYCbCrColorSpace" href="qvideosurfaceformat.html#setYCbCrColorSpace" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setYCbCrColorSpace(YCbCrColorSpace space)">
                <parameter left="YCbCrColorSpace" right="" name="space" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sizeHint" fullname="QVideoSurfaceFormat::sizeHint" href="qvideosurfaceformat.html#sizeHint" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="sizeHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyNames" fullname="QVideoSurfaceFormat::propertyNames" href="qvideosurfaceformat.html#propertyNames" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="propertyNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QVideoSurfaceFormat::property" href="qvideosurfaceformat.html#property" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="property(const char * name) const">
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperty" fullname="QVideoSurfaceFormat::setProperty" href="qvideosurfaceformat.html#setProperty" location="qvideosurfaceformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProperty(const char * name, const QVariant &amp; value)">
                <parameter left="const char *" right="" name="name" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageSortOrder" href="qmessagesortorder.html" location="qmessagesortorder.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageSortOrder" fullname="QMessageSortOrder::QMessageSortOrder" href="qmessagesortorder.html#QMessageSortOrder" location="qmessagesortorder_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageSortOrder" fullname="QMessageSortOrder::QMessageSortOrder" href="qmessagesortorder.html#QMessageSortOrder-2" location="qmessagesortorder_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageSortOrder(const QMessageSortOrder &amp; other)">
                <parameter left="const QMessageSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageSortOrder" fullname="QMessageSortOrder::~QMessageSortOrder" href="qmessagesortorder.html#dtor.QMessageSortOrder" location="qmessagesortorder_win.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMessageSortOrder::isEmpty" href="qmessagesortorder.html#isEmpty" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMessageSortOrder::isSupported" href="qmessagesortorder.html#isSupported" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator+" fullname="QMessageSortOrder::operator+" href="qmessagesortorder.html#operator+" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageSortOrder" signature="operator+(const QMessageSortOrder &amp; other) const">
                <parameter left="const QMessageSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator+=" fullname="QMessageSortOrder::operator+=" href="qmessagesortorder.html#operator+=" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMessageSortOrder &amp;" signature="operator+=(const QMessageSortOrder &amp; other)">
                <parameter left="const QMessageSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byType" fullname="QMessageSortOrder::byType" href="qmessagesortorder.html#byType" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="byType(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySender" fullname="QMessageSortOrder::bySender" href="qmessagesortorder.html#bySender" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="bySender(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byRecipients" fullname="QMessageSortOrder::byRecipients" href="qmessagesortorder.html#byRecipients" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="byRecipients(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySubject" fullname="QMessageSortOrder::bySubject" href="qmessagesortorder.html#bySubject" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="bySubject(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byTimeStamp" fullname="QMessageSortOrder::byTimeStamp" href="qmessagesortorder.html#byTimeStamp" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="byTimeStamp(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byReceptionTimeStamp" fullname="QMessageSortOrder::byReceptionTimeStamp" href="qmessagesortorder.html#byReceptionTimeStamp" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="byReceptionTimeStamp(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byStatus" fullname="QMessageSortOrder::byStatus" href="qmessagesortorder.html#byStatus" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="byStatus(QMessage::Status flag, Qt::SortOrder order)">
                <parameter left="QMessage::Status" right="" name="flag" default=""/>
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byPriority" fullname="QMessageSortOrder::byPriority" href="qmessagesortorder.html#byPriority" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="byPriority(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySize" fullname="QMessageSortOrder::bySize" href="qmessagesortorder.html#bySize" location="qmessagesortorder_win.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageSortOrder" signature="bySize(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSystemDeviceInfo" href="qsystemdeviceinfo.html" location="qsystemdeviceinfo.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="currentProfile" fullname="QSystemDeviceInfo::currentProfile" href="qsystemdeviceinfo.html#currentProfile-prop" location="qsystemdeviceinfo.h" type="Profile">
                <getter name="currentProfile"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentPowerState" fullname="QSystemDeviceInfo::currentPowerState" href="qsystemdeviceinfo.html#currentPowerState-prop" location="qsystemdeviceinfo.h" type="PowerState">
                <getter name="currentPowerState"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="simStatus" fullname="QSystemDeviceInfo::simStatus" href="qsystemdeviceinfo.html#simStatus-prop" location="qsystemdeviceinfo.h" type="SimStatus">
                <getter name="simStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="batteryStatus" fullname="QSystemDeviceInfo::batteryStatus" href="qsystemdeviceinfo.html#batteryStatus-prop" location="qsystemdeviceinfo.h" type="BatteryStatus">
                <getter name="batteryStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="inputMethodType" fullname="QSystemDeviceInfo::inputMethodType" href="qsystemdeviceinfo.html#inputMethodType-prop" location="qsystemdeviceinfo.h" type="InputMethodFlags">
                <getter name="inputMethodType"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="imei" fullname="QSystemDeviceInfo::imei" href="qsystemdeviceinfo.html#imei-prop" location="qsystemdeviceinfo.h" type="QString">
                <getter name="imei"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="imsi" fullname="QSystemDeviceInfo::imsi" href="qsystemdeviceinfo.html#imsi-prop" location="qsystemdeviceinfo.h" type="QString">
                <getter name="imsi"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="manufacturer" fullname="QSystemDeviceInfo::manufacturer" href="qsystemdeviceinfo.html#manufacturer-prop" location="qsystemdeviceinfo.h" type="QString">
                <getter name="manufacturer"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="model" fullname="QSystemDeviceInfo::model" href="qsystemdeviceinfo.html#model-prop" location="qsystemdeviceinfo.h" type="QString">
                <getter name="model"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="productName" fullname="QSystemDeviceInfo::productName" href="qsystemdeviceinfo.html#productName-prop" location="qsystemdeviceinfo.h" type="QString">
                <getter name="productName"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="batteryLevel" fullname="QSystemDeviceInfo::batteryLevel" href="qsystemdeviceinfo.html#batteryLevel-prop" location="qsystemdeviceinfo.h" type="int">
                <getter name="batteryLevel"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="isDeviceLocked" fullname="QSystemDeviceInfo::isDeviceLocked" href="qsystemdeviceinfo.html#isDeviceLocked-prop" location="qsystemdeviceinfo.h" type="bool">
                <getter name="isDeviceLocked"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentBluetoothPowerState" fullname="QSystemDeviceInfo::currentBluetoothPowerState" href="qsystemdeviceinfo.html#currentBluetoothPowerState-prop" location="qsystemdeviceinfo.h" type="bool">
                <getter name="currentBluetoothPowerState"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemDeviceInfo" fullname="QSystemDeviceInfo::QSystemDeviceInfo" href="qsystemdeviceinfo.html#QSystemDeviceInfo" location="qsysteminfo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemDeviceInfo(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemDeviceInfo" fullname="QSystemDeviceInfo::~QSystemDeviceInfo" href="qsystemdeviceinfo.html#dtor.QSystemDeviceInfo" location="qsystemdeviceinfo.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemDeviceInfo()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BatteryStatus" fullname="QSystemDeviceInfo::BatteryStatus" href="qsystemdeviceinfo.html#BatteryStatus-enum" location="qsystemdeviceinfo.h">
                <value name="NoBatteryLevel" value="0"/>
                <value name="BatteryCritical" value="1"/>
                <value name="BatteryVeryLow" value="2"/>
                <value name="BatteryLow" value="3"/>
                <value name="BatteryNormal" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PowerState" fullname="QSystemDeviceInfo::PowerState" href="qsystemdeviceinfo.html#PowerState-enum" location="qsystemdeviceinfo.h">
                <value name="UnknownPower" value="0"/>
                <value name="BatteryPower" value="1"/>
                <value name="WallPower" value="2"/>
                <value name="WallPowerChargingBattery" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="InputMethod" fullname="QSystemDeviceInfo::InputMethod" href="qsystemdeviceinfo.html#InputMethod-enum" location="qsystemdeviceinfo.h" typedef="QSystemDeviceInfo::InputMethodFlags">
                <value name="Keys" value="0x0000001"/>
                <value name="Keypad" value="0x0000002"/>
                <value name="Keyboard" value="0x0000004"/>
                <value name="SingleTouch" value="0x0000008"/>
                <value name="MultiTouch" value="0x0000010"/>
                <value name="Mouse" value="0x0000020"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="InputMethodFlags" fullname="QSystemDeviceInfo::InputMethodFlags" href="qsystemdeviceinfo.html#InputMethodFlags-typedef" location="qsystemdeviceinfo.h" enum="QSystemDeviceInfo::InputMethod"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputMethodType" fullname="QSystemDeviceInfo::inputMethodType" href="qsystemdeviceinfo.html#inputMethodType-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="inputMethodType" type="QSystemDeviceInfo::InputMethodFlags" signature="inputMethodType()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="imei" fullname="QSystemDeviceInfo::imei" href="qsystemdeviceinfo.html#imei-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="imei" type="QString" signature="imei()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="imsi" fullname="QSystemDeviceInfo::imsi" href="qsystemdeviceinfo.html#imsi-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="imsi" type="QString" signature="imsi()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manufacturer" fullname="QSystemDeviceInfo::manufacturer" href="qsystemdeviceinfo.html#manufacturer-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="manufacturer" type="QString" signature="manufacturer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="model" fullname="QSystemDeviceInfo::model" href="qsystemdeviceinfo.html#model-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="model" type="QString" signature="model()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="productName" fullname="QSystemDeviceInfo::productName" href="qsystemdeviceinfo.html#productName-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="productName" type="QString" signature="productName()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryLevel" fullname="QSystemDeviceInfo::batteryLevel" href="qsystemdeviceinfo.html#batteryLevel-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="batteryLevel" type="int" signature="batteryLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryStatus" fullname="QSystemDeviceInfo::batteryStatus" href="qsystemdeviceinfo.html#batteryStatus-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="batteryStatus" type="QSystemDeviceInfo::BatteryStatus" signature="batteryStatus()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Profile" fullname="QSystemDeviceInfo::Profile" href="qsystemdeviceinfo.html#Profile-enum" location="qsystemdeviceinfo.h">
                <value name="UnknownProfile" value="0"/>
                <value name="SilentProfile" value="1"/>
                <value name="NormalProfile" value="2"/>
                <value name="LoudProfile" value="3"/>
                <value name="VibProfile" value="4"/>
                <value name="OfflineProfile" value="5"/>
                <value name="PowersaveProfile" value="6"/>
                <value name="CustomProfile" value="7"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SimStatus" fullname="QSystemDeviceInfo::SimStatus" href="qsystemdeviceinfo.html#SimStatus-enum" location="qsystemdeviceinfo.h">
                <value name="SimNotAvailable" value="0"/>
                <value name="SingleSimAvailable" value="1"/>
                <value name="DualSimAvailable" value="2"/>
                <value name="SimLocked" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDeviceLocked" fullname="QSystemDeviceInfo::isDeviceLocked" href="qsystemdeviceinfo.html#isDeviceLocked-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="isDeviceLocked" type="bool" signature="isDeviceLocked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="simStatus" fullname="QSystemDeviceInfo::simStatus" href="qsystemdeviceinfo.html#simStatus-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="simStatus" type="QSystemDeviceInfo::SimStatus" signature="simStatus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentProfile" fullname="QSystemDeviceInfo::currentProfile" href="qsystemdeviceinfo.html#currentProfile-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentProfile" type="QSystemDeviceInfo::Profile" signature="currentProfile()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentPowerState" fullname="QSystemDeviceInfo::currentPowerState" href="qsystemdeviceinfo.html#currentPowerState-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentPowerState" type="QSystemDeviceInfo::PowerState" signature="currentPowerState()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentBluetoothPowerState" fullname="QSystemDeviceInfo::currentBluetoothPowerState" href="qsystemdeviceinfo.html#currentBluetoothPowerState-prop" location="qsystemdeviceinfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentBluetoothPowerState" type="bool" signature="currentBluetoothPowerState()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryLevelChanged" fullname="QSystemDeviceInfo::batteryLevelChanged" href="qsystemdeviceinfo.html#batteryLevelChanged" location="qsystemdeviceinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="batteryLevelChanged(int level)">
                <parameter left="int" right="" name="level" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="batteryStatusChanged" fullname="QSystemDeviceInfo::batteryStatusChanged" href="qsystemdeviceinfo.html#batteryStatusChanged" location="qsystemdeviceinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="batteryStatusChanged(QSystemDeviceInfo::BatteryStatus status)">
                <parameter left="QSystemDeviceInfo::BatteryStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="powerStateChanged" fullname="QSystemDeviceInfo::powerStateChanged" href="qsystemdeviceinfo.html#powerStateChanged" location="qsystemdeviceinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="powerStateChanged(QSystemDeviceInfo::PowerState state)">
                <parameter left="QSystemDeviceInfo::PowerState" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentProfileChanged" fullname="QSystemDeviceInfo::currentProfileChanged" href="qsystemdeviceinfo.html#currentProfileChanged" location="qsystemdeviceinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentProfileChanged(QSystemDeviceInfo::Profile profile)">
                <parameter left="QSystemDeviceInfo::Profile" right="" name="profile" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bluetoothStateChanged" fullname="QSystemDeviceInfo::bluetoothStateChanged" href="qsystemdeviceinfo.html#bluetoothStateChanged" location="qsystemdeviceinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bluetoothStateChanged(bool on)">
                <parameter left="bool" right="" name="on" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoRendererControl" href="qvideorenderercontrol.html" location="qvideorenderercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoRendererControl" fullname="QVideoRendererControl::~QVideoRendererControl" href="qvideorenderercontrol.html#dtor.QVideoRendererControl" location="qvideorenderercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoRendererControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="surface" fullname="QVideoRendererControl::surface" href="qvideorenderercontrol.html#surface" location="qvideorenderercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QAbstractVideoSurface *" signature="surface() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSurface" fullname="QVideoRendererControl::setSurface" href="qvideorenderercontrol.html#setSurface" location="qvideorenderercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSurface(QAbstractVideoSurface * surface)">
                <parameter left="QAbstractVideoSurface *" right="" name="surface" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVideoRendererControl" fullname="QVideoRendererControl::QVideoRendererControl" href="qvideorenderercontrol.html#QVideoRendererControl" location="qvideorenderercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoRendererControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRotationReading" href="qrotationreading.html" location="qrotationsensor.h" bases="QSensorReading" module="">
            <contents name="qrotationreading-units" title="QRotationReading Units" level="2"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="x" fullname="QRotationReading::x" href="qrotationreading.html#x-prop" location="qrotationsensor.h" type="qreal">
                <getter name="x"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="y" fullname="QRotationReading::y" href="qrotationreading.html#y-prop" location="qrotationsensor.h" type="qreal">
                <getter name="y"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="z" fullname="QRotationReading::z" href="qrotationreading.html#z-prop" location="qrotationsensor.h" type="qreal">
                <getter name="z"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="x" fullname="QRotationReading::x" href="qrotationreading.html#x-prop" location="qrotationsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="x" type="qreal" signature="x() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setX" fullname="QRotationReading::setX" href="qrotationreading.html#setX" location="qrotationsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setX(qreal x)">
                <parameter left="qreal" right="" name="x" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="y" fullname="QRotationReading::y" href="qrotationreading.html#y-prop" location="qrotationsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="y" type="qreal" signature="y() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setY" fullname="QRotationReading::setY" href="qrotationreading.html#setY" location="qrotationsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setY(qreal y)">
                <parameter left="qreal" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="z" fullname="QRotationReading::z" href="qrotationreading.html#z-prop" location="qrotationsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="z" type="qreal" signature="z() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZ" fullname="QRotationReading::setZ" href="qrotationreading.html#setZ" location="qrotationsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setZ(qreal z)">
                <parameter left="qreal" right="" name="z" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRotationFilter" href="qrotationfilter.html" location="qrotationsensor.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QRotationFilter::filter" href="qrotationfilter.html#filter" location="qrotationsensor.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QRotationReading * reading)">
                <parameter left="QRotationReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRotationSensor" href="qrotationsensor.html" location="qrotationsensor.h" bases="QSensor" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="hasZ" fullname="QRotationSensor::hasZ" href="qrotationsensor.html#hasZ-prop" location="qrotationsensor.h" type="bool"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QRotationSensor" fullname="QRotationSensor::QRotationSensor" href="qrotationsensor.html#QRotationSensor" location="qrotationsensor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRotationSensor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRotationSensor" fullname="QRotationSensor::~QRotationSensor" href="qrotationsensor.html#dtor.QRotationSensor" location="qrotationsensor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRotationSensor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QRotationSensor::reading" href="qrotationsensor.html#reading" location="qrotationsensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRotationReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QRotationSensor::type" href="qrotationsensor.html#type-var" location="qrotationsensor.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoTiledMapReply" href="qgeotiledmapreply.html" location="qgeotiledmapreply.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QGeoTiledMapReply::Error" href="qgeotiledmapreply.html#Error-enum" location="qgeotiledmapreply.h">
                <value name="NoError" value="0"/>
                <value name="CommunicationError" value="1"/>
                <value name="ParseError" value="2"/>
                <value name="UnknownError" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoTiledMapReply" fullname="QGeoTiledMapReply::QGeoTiledMapReply" href="qgeotiledmapreply.html#QGeoTiledMapReply" location="qgeotiledmapreply.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoTiledMapReply(const QGeoTiledMapRequest &amp; request, QObject * parent)">
                <parameter left="const QGeoTiledMapRequest &amp;" right="" name="request" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoTiledMapReply" fullname="QGeoTiledMapReply::QGeoTiledMapReply" href="qgeotiledmapreply.html#QGeoTiledMapReply-2" location="qgeotiledmapreply.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoTiledMapReply(Error error, const QString &amp; errorString, QObject * parent)">
                <parameter left="Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoTiledMapReply" fullname="QGeoTiledMapReply::~QGeoTiledMapReply" href="qgeotiledmapreply.html#dtor.QGeoTiledMapReply" location="qgeotiledmapreply.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoTiledMapReply()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QGeoTiledMapReply::isFinished" href="qgeotiledmapreply.html#isFinished" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoTiledMapReply::error" href="qgeotiledmapreply.html#error" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QGeoTiledMapReply::errorString" href="qgeotiledmapreply.html#errorString" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCached" fullname="QGeoTiledMapReply::isCached" href="qgeotiledmapreply.html#isCached" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCached() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="request" fullname="QGeoTiledMapReply::request" href="qgeotiledmapreply.html#request" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoTiledMapRequest" signature="request() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapImageData" fullname="QGeoTiledMapReply::mapImageData" href="qgeotiledmapreply.html#mapImageData" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="mapImageData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapImageFormat" fullname="QGeoTiledMapReply::mapImageFormat" href="qgeotiledmapreply.html#mapImageFormat" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="mapImageFormat() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QGeoTiledMapReply::abort" href="qgeotiledmapreply.html#abort" location="qgeotiledmapreply.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGeoTiledMapReply::finished" href="qgeotiledmapreply.html#finished" location="qgeotiledmapreply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoTiledMapReply::error" href="qgeotiledmapreply.html#error-2" location="qgeotiledmapreply.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QGeoTiledMapReply::Error error, const QString &amp; errorString)">
                <parameter left="QGeoTiledMapReply::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default="QString()"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setError" fullname="QGeoTiledMapReply::setError" href="qgeotiledmapreply.html#setError" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setError(Error error, const QString &amp; errorString)">
                <parameter left="Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setFinished" fullname="QGeoTiledMapReply::setFinished" href="qgeotiledmapreply.html#setFinished" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFinished(bool finished)">
                <parameter left="bool" right="" name="finished" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setCached" fullname="QGeoTiledMapReply::setCached" href="qgeotiledmapreply.html#setCached" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCached(bool cached)">
                <parameter left="bool" right="" name="cached" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMapImageData" fullname="QGeoTiledMapReply::setMapImageData" href="qgeotiledmapreply.html#setMapImageData" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMapImageData(const QByteArray &amp; data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMapImageFormat" fullname="QGeoTiledMapReply::setMapImageFormat" href="qgeotiledmapreply.html#setMapImageFormat" location="qgeotiledmapreply.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMapImageFormat(const QString &amp; format)">
                <parameter left="const QString &amp;" right="" name="format" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkNameSort" href="qlandmarknamesort.html" location="qlandmarknamesort.h" bases="QLandmarkSortOrder" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkNameSort" fullname="QLandmarkNameSort::QLandmarkNameSort" href="qlandmarknamesort.html#QLandmarkNameSort" location="qlandmarknamesort.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkNameSort(Qt::SortOrder direction, Qt::CaseSensitivity sensitivity)">
                <parameter left="Qt::SortOrder" right="" name="direction" default="Qt::AscendingOrder"/>
                <parameter left="Qt::CaseSensitivity" right="" name="sensitivity" default="Qt::CaseInsensitive"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkNameSort" fullname="QLandmarkNameSort::QLandmarkNameSort" href="qlandmarknamesort.html#QLandmarkNameSort-2" location="qlandmarknamesort.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkNameSort(const QLandmarkSortOrder &amp; other)">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkNameSort" fullname="QLandmarkNameSort::~QLandmarkNameSort" href="qlandmarknamesort.html#dtor.QLandmarkNameSort" location="qlandmarknamesort.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkNameSort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="caseSensitivity" fullname="QLandmarkNameSort::caseSensitivity" href="qlandmarknamesort.html#caseSensitivity" location="qlandmarknamesort.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::CaseSensitivity" signature="caseSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaseSensitivity" fullname="QLandmarkNameSort::setCaseSensitivity" href="qlandmarknamesort.html#setCaseSensitivity" location="qlandmarknamesort.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaseSensitivity(Qt::CaseSensitivity caseSensitivity)">
                <parameter left="Qt::CaseSensitivity" right="" name="caseSensitivity" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrientationReading" href="qorientationreading.html" location="qorientationsensor.h" bases="QSensorReading" module="">
            <contents name="qorientationreading-units" title="QOrientationReading Units" level="2"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="orientation" fullname="QOrientationReading::orientation" href="qorientationreading.html#orientation-prop" location="qorientationsensor.h" type="Orientation">
                <getter name="orientation"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Orientation" fullname="QOrientationReading::Orientation" href="qorientationreading.html#Orientation-enum" location="qorientationsensor.h">
                <value name="Undefined" value="0"/>
                <value name="TopUp" value="1"/>
                <value name="TopDown" value="2"/>
                <value name="LeftUp" value="3"/>
                <value name="RightUp" value="4"/>
                <value name="FaceUp" value="5"/>
                <value name="FaceDown" value="6"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="orientation" fullname="QOrientationReading::orientation" href="qorientationreading.html#orientation-prop" location="qorientationsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="orientation" type="Orientation" signature="orientation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOrientation" fullname="QOrientationReading::setOrientation" href="qorientationreading.html#setOrientation" location="qorientationsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOrientation(Orientation orientation)">
                <parameter left="Orientation" right="" name="orientation" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrientationFilter" href="qorientationfilter.html" location="qorientationsensor.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QOrientationFilter::filter" href="qorientationfilter.html#filter" location="qorientationsensor.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QOrientationReading * reading)">
                <parameter left="QOrientationReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrientationSensor" href="qorientationsensor.html" location="qorientationsensor.h" bases="QSensor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrientationSensor" fullname="QOrientationSensor::QOrientationSensor" href="qorientationsensor.html#QOrientationSensor" location="qorientationsensor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrientationSensor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrientationSensor" fullname="QOrientationSensor::~QOrientationSensor" href="qorientationsensor.html#dtor.QOrientationSensor" location="qorientationsensor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrientationSensor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QOrientationSensor::reading" href="qorientationsensor.html#reading" location="qorientationsensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrientationReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QOrientationSensor::type" href="qorientationsensor.html#type-var" location="qorientationsensor.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryQueryRequest" href="qgalleryqueryrequest.html" location="qgalleryqueryrequest.h" bases="QGalleryAbstractRequest" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="propertyNames" fullname="QGalleryQueryRequest::propertyNames" href="qgalleryqueryrequest.html#propertyNames-prop" location="qgalleryqueryrequest.h" type="QStringList">
                <getter name="propertyNames"/>
                <setter name="setPropertyNames"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="sortPropertyNames" fullname="QGalleryQueryRequest::sortPropertyNames" href="qgalleryqueryrequest.html#sortPropertyNames-prop" location="qgalleryqueryrequest.h" type="QStringList">
                <getter name="sortPropertyNames"/>
                <setter name="setSortPropertyNames"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="live" fullname="QGalleryQueryRequest::live" href="qgalleryqueryrequest.html#live-prop" location="qgalleryqueryrequest.h" type="bool">
                <getter name="isLive"/>
                <setter name="setLive"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="initialCursorPosition" fullname="QGalleryQueryRequest::initialCursorPosition" href="qgalleryqueryrequest.html#initialCursorPosition-prop" location="qgalleryqueryrequest.h" type="int">
                <getter name="initialCursorPosition"/>
                <setter name="setInitialCursorPosition"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="minimumPagedItems" fullname="QGalleryQueryRequest::minimumPagedItems" href="qgalleryqueryrequest.html#minimumPagedItems-prop" location="qgalleryqueryrequest.h" type="int">
                <getter name="minimumPagedItems"/>
                <setter name="setMinimumPagedItems"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QGalleryQueryRequest::itemType" href="qgalleryqueryrequest.html#itemType-prop" location="qgalleryqueryrequest.h" type="QString">
                <getter name="itemType"/>
                <setter name="setItemType"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QGalleryQueryRequest::filter" href="qgalleryqueryrequest.html#filter-prop" location="qgalleryqueryrequest.h" type="QGalleryFilter">
                <getter name="filter"/>
                <setter name="setFilter"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QGalleryQueryRequest::scope" href="qgalleryqueryrequest.html#scope-prop" location="qgalleryqueryrequest.h" type="QGalleryAbstractRequest::Scope">
                <getter name="scope"/>
                <setter name="setScope"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="scopeItemId" fullname="QGalleryQueryRequest::scopeItemId" href="qgalleryqueryrequest.html#scopeItemId-prop" location="qgalleryqueryrequest.h" type="QVariant">
                <getter name="scopeItemId"/>
                <setter name="setScopeItemId"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QGalleryQueryRequest::items" href="qgalleryqueryrequest.html#items-prop" location="qgalleryqueryrequest.h" type="QGalleryItemList *">
                <getter name="items"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryQueryRequest" fullname="QGalleryQueryRequest::QGalleryQueryRequest" href="qgalleryqueryrequest.html#QGalleryQueryRequest" location="qgalleryqueryrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryQueryRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryQueryRequest" fullname="QGalleryQueryRequest::QGalleryQueryRequest" href="qgalleryqueryrequest.html#QGalleryQueryRequest-2" location="qgalleryqueryrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryQueryRequest(QAbstractGallery * gallery, QObject * parent)">
                <parameter left="QAbstractGallery *" right="" name="gallery" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryQueryRequest" fullname="QGalleryQueryRequest::~QGalleryQueryRequest" href="qgalleryqueryrequest.html#dtor.QGalleryQueryRequest" location="qgalleryqueryrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryQueryRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyNames" fullname="QGalleryQueryRequest::propertyNames" href="qgalleryqueryrequest.html#propertyNames-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="propertyNames" type="QStringList" signature="propertyNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPropertyNames" fullname="QGalleryQueryRequest::setPropertyNames" href="qgalleryqueryrequest.html#propertyNames-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="propertyNames" type="void" signature="setPropertyNames(const QStringList &amp; names)">
                <parameter left="const QStringList &amp;" right="" name="names" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortPropertyNames" fullname="QGalleryQueryRequest::sortPropertyNames" href="qgalleryqueryrequest.html#sortPropertyNames-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="sortPropertyNames" type="QStringList" signature="sortPropertyNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSortPropertyNames" fullname="QGalleryQueryRequest::setSortPropertyNames" href="qgalleryqueryrequest.html#sortPropertyNames-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="sortPropertyNames" type="void" signature="setSortPropertyNames(const QStringList &amp; names)">
                <parameter left="const QStringList &amp;" right="" name="names" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isLive" fullname="QGalleryQueryRequest::isLive" href="qgalleryqueryrequest.html#live-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="live" type="bool" signature="isLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLive" fullname="QGalleryQueryRequest::setLive" href="qgalleryqueryrequest.html#live-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="live" type="void" signature="setLive(bool live)">
                <parameter left="bool" right="" name="live" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialCursorPosition" fullname="QGalleryQueryRequest::initialCursorPosition" href="qgalleryqueryrequest.html#initialCursorPosition-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="initialCursorPosition" type="int" signature="initialCursorPosition() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInitialCursorPosition" fullname="QGalleryQueryRequest::setInitialCursorPosition" href="qgalleryqueryrequest.html#initialCursorPosition-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="initialCursorPosition" type="void" signature="setInitialCursorPosition(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumPagedItems" fullname="QGalleryQueryRequest::minimumPagedItems" href="qgalleryqueryrequest.html#minimumPagedItems-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="minimumPagedItems" type="int" signature="minimumPagedItems() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMinimumPagedItems" fullname="QGalleryQueryRequest::setMinimumPagedItems" href="qgalleryqueryrequest.html#minimumPagedItems-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="minimumPagedItems" type="void" signature="setMinimumPagedItems(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QGalleryQueryRequest::itemType" href="qgalleryqueryrequest.html#itemType-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemType" type="QString" signature="itemType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemType" fullname="QGalleryQueryRequest::setItemType" href="qgalleryqueryrequest.html#itemType-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="itemType" type="void" signature="setItemType(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QGalleryQueryRequest::scope" href="qgalleryqueryrequest.html#scope-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="scope" type="QGalleryAbstractRequest::Scope" signature="scope() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setScope" fullname="QGalleryQueryRequest::setScope" href="qgalleryqueryrequest.html#scope-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="scope" type="void" signature="setScope(QGalleryAbstractRequest::Scope scope)">
                <parameter left="QGalleryAbstractRequest::Scope" right="" name="scope" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scopeItemId" fullname="QGalleryQueryRequest::scopeItemId" href="qgalleryqueryrequest.html#scopeItemId-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="scopeItemId" type="QVariant" signature="scopeItemId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setScopeItemId" fullname="QGalleryQueryRequest::setScopeItemId" href="qgalleryqueryrequest.html#scopeItemId-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="scopeItemId" type="void" signature="setScopeItemId(const QVariant &amp; id)">
                <parameter left="const QVariant &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QGalleryQueryRequest::filter" href="qgalleryqueryrequest.html#filter-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="filter" type="QGalleryFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QGalleryQueryRequest::setFilter" href="qgalleryqueryrequest.html#filter-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="filter" type="void" signature="setFilter(const QGalleryFilter &amp; filter)">
                <parameter left="const QGalleryFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QGalleryQueryRequest::items" href="qgalleryqueryrequest.html#items-prop" location="qgalleryqueryrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="items" type="QGalleryItemList *" signature="items() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsChanged" fullname="QGalleryQueryRequest::itemsChanged" href="qgalleryqueryrequest.html#itemsChanged" location="qgalleryqueryrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsChanged(QGalleryItemList * items)">
                <parameter left="QGalleryItemList *" right="" name="items" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setResponse" fullname="QGalleryQueryRequest::setResponse" href="qgalleryqueryrequest.html#setResponse" location="qgalleryqueryrequest.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setResponse(QGalleryAbstractResponse * response)">
                <parameter left="QGalleryAbstractResponse *" right="" name="response" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNmeaPositionInfoSource" href="qnmeapositioninfosource.html" location="qnmeapositioninfosource.h" bases="QGeoPositionInfoSource" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="UpdateMode" fullname="QNmeaPositionInfoSource::UpdateMode" href="qnmeapositioninfosource.html#UpdateMode-enum" location="qnmeapositioninfosource.h">
                <value name="RealTimeMode" value="1"/>
                <value name="SimulationMode" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNmeaPositionInfoSource" fullname="QNmeaPositionInfoSource::QNmeaPositionInfoSource" href="qnmeapositioninfosource.html#QNmeaPositionInfoSource" location="qnmeapositioninfosource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNmeaPositionInfoSource(UpdateMode updateMode, QObject * parent)">
                <parameter left="UpdateMode" right="" name="updateMode" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNmeaPositionInfoSource" fullname="QNmeaPositionInfoSource::~QNmeaPositionInfoSource" href="qnmeapositioninfosource.html#dtor.QNmeaPositionInfoSource" location="qnmeapositioninfosource.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNmeaPositionInfoSource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateMode" fullname="QNmeaPositionInfoSource::updateMode" href="qnmeapositioninfosource.html#updateMode" location="qnmeapositioninfosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="UpdateMode" signature="updateMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QNmeaPositionInfoSource::setDevice" href="qnmeapositioninfosource.html#setDevice" location="qnmeapositioninfosource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QNmeaPositionInfoSource::device" href="qnmeapositioninfosource.html#device" location="qnmeapositioninfosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUpdateInterval" fullname="QNmeaPositionInfoSource::setUpdateInterval" href="qnmeapositioninfosource.html#setUpdateInterval" location="qnmeapositioninfosource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setUpdateInterval(int msec)">
                <parameter left="int" right="" name="msec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastKnownPosition" fullname="QNmeaPositionInfoSource::lastKnownPosition" href="qnmeapositioninfosource.html#lastKnownPosition" location="qnmeapositioninfosource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QGeoPositionInfo" signature="lastKnownPosition(bool fromSatellitePositioningMethodsOnly) const">
                <parameter left="bool" right="" name="fromSatellitePositioningMethodsOnly" default="false"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedPositioningMethods" fullname="QNmeaPositionInfoSource::supportedPositioningMethods" href="qnmeapositioninfosource.html#supportedPositioningMethods" location="qnmeapositioninfosource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="PositioningMethods" signature="supportedPositioningMethods() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumUpdateInterval" fullname="QNmeaPositionInfoSource::minimumUpdateInterval" href="qnmeapositioninfosource.html#minimumUpdateInterval" location="qnmeapositioninfosource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="minimumUpdateInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startUpdates" fullname="QNmeaPositionInfoSource::startUpdates" href="qnmeapositioninfosource.html#startUpdates" location="qnmeapositioninfosource.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="startUpdates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopUpdates" fullname="QNmeaPositionInfoSource::stopUpdates" href="qnmeapositioninfosource.html#stopUpdates" location="qnmeapositioninfosource.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="stopUpdates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestUpdate" fullname="QNmeaPositionInfoSource::requestUpdate" href="qnmeapositioninfosource.html#requestUpdate" location="qnmeapositioninfosource.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestUpdate(int msec)">
                <parameter left="int" right="" name="msec" default="0"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="parsePosInfoFromNmeaData" fullname="QNmeaPositionInfoSource::parsePosInfoFromNmeaData" href="qnmeapositioninfosource.html#parsePosInfoFromNmeaData" location="qnmeapositioninfosource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="parsePosInfoFromNmeaData(const char * data, int size, QGeoPositionInfo * posInfo, bool * hasFix)">
                <parameter left="const char *" right="" name="data" default=""/>
                <parameter left="int" right="" name="size" default=""/>
                <parameter left="QGeoPositionInfo *" right="" name="posInfo" default=""/>
                <parameter left="bool *" right="" name="hasFix" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryFetchRequest" href="qlandmarkcategoryfetchrequest.html" location="qlandmarkcategoryfetchrequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MatchingScheme" fullname="QLandmarkCategoryFetchRequest::MatchingScheme" href="qlandmarkcategoryfetchrequest.html#MatchingScheme-enum" location="qlandmarkcategoryfetchrequest.h">
                <value name="MatchAll" value="0"/>
                <value name="MatchSubset" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryFetchRequest" fullname="QLandmarkCategoryFetchRequest::QLandmarkCategoryFetchRequest" href="qlandmarkcategoryfetchrequest.html#QLandmarkCategoryFetchRequest" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkCategoryFetchRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkCategoryFetchRequest" fullname="QLandmarkCategoryFetchRequest::~QLandmarkCategoryFetchRequest" href="qlandmarkcategoryfetchrequest.html#dtor.QLandmarkCategoryFetchRequest" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkCategoryFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryIds" fullname="QLandmarkCategoryFetchRequest::categoryIds" href="qlandmarkcategoryfetchrequest.html#categoryIds" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategoryId&gt;" signature="categoryIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryIds" fullname="QLandmarkCategoryFetchRequest::setCategoryIds" href="qlandmarkcategoryfetchrequest.html#setCategoryIds" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryIds(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default="QList&lt;QLandmarkCategoryId&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryId" fullname="QLandmarkCategoryFetchRequest::setCategoryId" href="qlandmarkcategoryfetchrequest.html#setCategoryId" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryId(const QLandmarkCategoryId &amp; categoryId)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QLandmarkCategoryFetchRequest::categories" href="qlandmarkcategoryfetchrequest.html#categories" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategory&gt;" signature="categories() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchingScheme" fullname="QLandmarkCategoryFetchRequest::matchingScheme" href="qlandmarkcategoryfetchrequest.html#matchingScheme" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MatchingScheme" signature="matchingScheme() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchingScheme" fullname="QLandmarkCategoryFetchRequest::setMatchingScheme" href="qlandmarkcategoryfetchrequest.html#setMatchingScheme" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchingScheme(QLandmarkCategoryFetchRequest::MatchingScheme matchingScheme)">
                <parameter left="QLandmarkCategoryFetchRequest::MatchingScheme" right="" name="matchingScheme" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QLandmarkCategoryFetchRequest::sorting" href="qlandmarkcategoryfetchrequest.html#sorting" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkNameSort" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QLandmarkCategoryFetchRequest::setSorting" href="qlandmarkcategoryfetchrequest.html#setSorting" location="qlandmarkcategoryfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QLandmarkNameSort &amp; nameSort)">
                <parameter left="const QLandmarkNameSort &amp;" right="" name="nameSort" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" href="qservicefilter.html" location="qservicefilter.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="VersionMatchRule" fullname="QServiceFilter::VersionMatchRule" href="qservicefilter.html#VersionMatchRule-enum" location="qservicefilter.h">
                <value name="ExactVersionMatch" value="0"/>
                <value name="MinimumVersionMatch" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CapabilityMatchRule" fullname="QServiceFilter::CapabilityMatchRule" href="qservicefilter.html#CapabilityMatchRule-enum" location="qservicefilter.h">
                <value name="MatchMinimum" value="0"/>
                <value name="MatchLoadable" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" fullname="QServiceFilter::QServiceFilter" href="qservicefilter.html#QServiceFilter" location="qservicefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceFilter" fullname="QServiceFilter::~QServiceFilter" href="qservicefilter.html#dtor.QServiceFilter" location="qservicefilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" fullname="QServiceFilter::QServiceFilter" href="qservicefilter.html#QServiceFilter-2" location="qservicefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QServiceFilter(const QServiceFilter &amp; other)">
                <parameter left="const QServiceFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceFilter" fullname="QServiceFilter::QServiceFilter" href="qservicefilter.html#QServiceFilter-3" location="qservicefilter.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QServiceFilter(const QString &amp; interfaceName, const QString &amp; version, QServiceFilter::VersionMatchRule rule)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""/>
                <parameter left="const QString &amp;" right="" name="version" default="QString()"/>
                <parameter left="QServiceFilter::VersionMatchRule" right="" name="rule" default="QServiceFilter::MinimumVersionMatch"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QServiceFilter::operator=" href="qservicefilter.html#operator=" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QServiceFilter &amp;" signature="operator=(const QServiceFilter &amp; other)">
                <parameter left="const QServiceFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInterface" fullname="QServiceFilter::setInterface" href="qservicefilter.html#setInterface" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInterface(const QString &amp; interfaceName, const QString &amp; version, QServiceFilter::VersionMatchRule rule)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""/>
                <parameter left="const QString &amp;" right="" name="version" default="QString()"/>
                <parameter left="QServiceFilter::VersionMatchRule" right="" name="rule" default="QServiceFilter::MinimumVersionMatch"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setServiceName" fullname="QServiceFilter::setServiceName" href="qservicefilter.html#setServiceName" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setServiceName(const QString &amp; serviceName)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceName" fullname="QServiceFilter::serviceName" href="qservicefilter.html#serviceName" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceName" fullname="QServiceFilter::interfaceName" href="qservicefilter.html#interfaceName" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="interfaceName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="majorVersion" fullname="QServiceFilter::majorVersion" href="qservicefilter.html#majorVersion" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="majorVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minorVersion" fullname="QServiceFilter::minorVersion" href="qservicefilter.html#minorVersion" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="minorVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="versionMatchRule" fullname="QServiceFilter::versionMatchRule" href="qservicefilter.html#versionMatchRule" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="VersionMatchRule" signature="versionMatchRule() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="customAttributes" fullname="QServiceFilter::customAttributes" href="qservicefilter.html#customAttributes" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="customAttributes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="customAttribute" fullname="QServiceFilter::customAttribute" href="qservicefilter.html#customAttribute" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="customAttribute(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomAttribute" fullname="QServiceFilter::setCustomAttribute" href="qservicefilter.html#setCustomAttribute" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomAttribute(const QString &amp; key, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearCustomAttribute" fullname="QServiceFilter::clearCustomAttribute" href="qservicefilter.html#clearCustomAttribute" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearCustomAttribute(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCapabilities" fullname="QServiceFilter::setCapabilities" href="qservicefilter.html#setCapabilities" location="qservicefilter.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCapabilities(QServiceFilter::CapabilityMatchRule rule, const QStringList &amp; capabilities)">
                <parameter left="QServiceFilter::CapabilityMatchRule" right="" name="rule" default=""/>
                <parameter left="const QStringList &amp;" right="" name="capabilities" default="QStringList()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="capabilities" fullname="QServiceFilter::capabilities" href="qservicefilter.html#capabilities" location="qservicefilter.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="capabilities() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="capabilityMatchRule" fullname="QServiceFilter::capabilityMatchRule" href="qservicefilter.html#capabilityMatchRule" location="qservicefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="CapabilityMatchRule" signature="capabilityMatchRule() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMetaDataReaderControl" href="qmetadatareadercontrol.html" location="qmetadatareadercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMetaDataReaderControl" fullname="QMetaDataReaderControl::~QMetaDataReaderControl" href="qmetadatareadercontrol.html#dtor.QMetaDataReaderControl" location="qmetadatareadercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMetaDataReaderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataAvailable" fullname="QMetaDataReaderControl::isMetaDataAvailable" href="qmetadatareadercontrol.html#isMetaDataAvailable" location="qmetadatareadercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMetaDataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QMetaDataReaderControl::metaData" href="qmetadatareadercontrol.html#metaData" location="qmetadatareadercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metaData(QtMultimediaKit::MetaData key) const">
                <parameter left="QtMultimediaKit::MetaData" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableMetaData" fullname="QMetaDataReaderControl::availableMetaData" href="qmetadatareadercontrol.html#availableMetaData" location="qmetadatareadercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtMultimediaKit::MetaData&gt;" signature="availableMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="extendedMetaData" fullname="QMetaDataReaderControl::extendedMetaData" href="qmetadatareadercontrol.html#extendedMetaData" location="qmetadatareadercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="extendedMetaData(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableExtendedMetaData" fullname="QMetaDataReaderControl::availableExtendedMetaData" href="qmetadatareadercontrol.html#availableExtendedMetaData" location="qmetadatareadercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="availableExtendedMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QMetaDataReaderControl::metaDataChanged" href="qmetadatareadercontrol.html#metaDataChanged" location="qmetadatareadercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailableChanged" fullname="QMetaDataReaderControl::metaDataAvailableChanged" href="qmetadatareadercontrol.html#metaDataAvailableChanged" location="qmetadatareadercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMetaDataReaderControl" fullname="QMetaDataReaderControl::QMetaDataReaderControl" href="qmetadatareadercontrol.html#QMetaDataReaderControl" location="qmetadatareadercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMetaDataReaderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkExportRequest" href="qlandmarkexportrequest.html" location="qlandmarkexportrequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkExportRequest" fullname="QLandmarkExportRequest::QLandmarkExportRequest" href="qlandmarkexportrequest.html#QLandmarkExportRequest" location="qlandmarkexportrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkExportRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkExportRequest" fullname="QLandmarkExportRequest::~QLandmarkExportRequest" href="qlandmarkexportrequest.html#dtor.QLandmarkExportRequest" location="qlandmarkexportrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkExportRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QLandmarkExportRequest::device" href="qlandmarkexportrequest.html#device" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QLandmarkExportRequest::setDevice" href="qlandmarkexportrequest.html#setDevice" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QLandmarkExportRequest::fileName" href="qlandmarkexportrequest.html#fileName" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fileName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFileName" fullname="QLandmarkExportRequest::setFileName" href="qlandmarkexportrequest.html#setFileName" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFileName(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QLandmarkExportRequest::format" href="qlandmarkexportrequest.html#format" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormat" fullname="QLandmarkExportRequest::setFormat" href="qlandmarkexportrequest.html#setFormat" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFormat(const QByteArray &amp; format)">
                <parameter left="const QByteArray &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkExportRequest::landmarkIds" href="qlandmarkexportrequest.html#landmarkIds" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmarkIds" fullname="QLandmarkExportRequest::setLandmarkIds" href="qlandmarkexportrequest.html#setLandmarkIds" location="qlandmarkexportrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmarkIds(QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderId" href="qmessagefolderid.html" location="qmessagefolderid.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderId" fullname="QMessageFolderId::QMessageFolderId" href="qmessagefolderid.html#QMessageFolderId" location="qmessagefolderid_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageFolderId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderId" fullname="QMessageFolderId::QMessageFolderId" href="qmessagefolderid.html#QMessageFolderId-2" location="qmessagefolderid_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageFolderId(const QMessageFolderId &amp; other)">
                <parameter left="const QMessageFolderId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderId" fullname="QMessageFolderId::QMessageFolderId" href="qmessagefolderid.html#QMessageFolderId-3" location="qmessagefolderid_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessageFolderId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageFolderId" fullname="QMessageFolderId::~QMessageFolderId" href="qmessagefolderid.html#dtor.QMessageFolderId" location="qmessagefolderid_symbian.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageFolderId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QMessageFolderId::operator&lt;" href="qmessagefolderid.html#operator&lt;" location="qmessagefolderid_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QMessageFolderId &amp; other) const">
                <parameter left="const QMessageFolderId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QMessageFolderId::toString" href="qmessagefolderid.html#toString" location="qmessagefolderid_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMessageFolderId::isValid" href="qmessagefolderid.html#isValid" location="qmessagefolderid_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderIdList" href="#QMessageFolderIdList-typedef" location="qmessagefolderid.h"/>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWidget" href="qvideowidget.html" location="qvideowidget.h" bases="QMediaBindableInterface" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QVideoWidget::mediaObject" href="qvideowidget.html#mediaObject-prop" location="qvideowidget.h" type="QMediaObject *">
                <getter name="mediaObject"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="fullScreen" fullname="QVideoWidget::fullScreen" href="qvideowidget.html#fullScreen-prop" location="qvideowidget.h" type="bool">
                <getter name="isFullScreen"/>
                <setter name="setFullScreen"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="aspectRatioMode" fullname="QVideoWidget::aspectRatioMode" href="qvideowidget.html#aspectRatioMode-prop" location="qvideowidget.h" type="Qt::AspectRatioMode">
                <getter name="aspectRatioMode"/>
                <setter name="setAspectRatioMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidget::brightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.h" type="int">
                <getter name="brightness"/>
                <setter name="setBrightness"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidget::contrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.h" type="int">
                <getter name="contrast"/>
                <setter name="setContrast"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidget::hue" href="qvideowidget.html#hue-prop" location="qvideowidget.h" type="int">
                <getter name="hue"/>
                <setter name="setHue"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidget::saturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.h" type="int">
                <getter name="saturation"/>
                <setter name="setSaturation"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWidget" fullname="QVideoWidget::QVideoWidget" href="qvideowidget.html#QVideoWidget" location="qvideowidget.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWidget(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWidget" fullname="QVideoWidget::~QVideoWidget" href="qvideowidget.html#dtor.QVideoWidget" location="qvideowidget.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWidget()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QVideoWidget::mediaObject" href="qvideowidget.html#mediaObject-prop" location="qvideowidget.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" associated-property="mediaObject" type="QMediaObject *" signature="mediaObject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFullScreen" fullname="QVideoWidget::isFullScreen" href="qvideowidget.html#fullScreen-prop" location="qvideowidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="fullScreen" type="bool" signature="isFullScreen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatioMode" fullname="QVideoWidget::aspectRatioMode" href="qvideowidget.html#aspectRatioMode-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="aspectRatioMode" type="Qt::AspectRatioMode" signature="aspectRatioMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidget::brightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="brightness" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidget::contrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="contrast" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidget::hue" href="qvideowidget.html#hue-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="hue" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidget::saturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="saturation" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sizeHint" fullname="QVideoWidget::sizeHint" href="qvideowidget.html#sizeHint" location="qvideowidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="sizeHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFullScreen" fullname="QVideoWidget::setFullScreen" href="qvideowidget.html#fullScreen-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="fullScreen" type="void" signature="setFullScreen(bool fullScreen)">
                <parameter left="bool" right="" name="fullScreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatioMode" fullname="QVideoWidget::setAspectRatioMode" href="qvideowidget.html#aspectRatioMode-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="aspectRatioMode" type="void" signature="setAspectRatioMode(Qt::AspectRatioMode mode)">
                <parameter left="Qt::AspectRatioMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWidget::setBrightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="brightness" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWidget::setContrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="contrast" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWidget::setHue" href="qvideowidget.html#hue-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="hue" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWidget::setSaturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="saturation" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullScreenChanged" fullname="QVideoWidget::fullScreenChanged" href="qvideowidget.html#fullScreenChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fullScreenChanged(bool fullScreen)">
                <parameter left="bool" right="" name="fullScreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWidget::brightnessChanged" href="qvideowidget.html#brightnessChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWidget::contrastChanged" href="qvideowidget.html#contrastChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWidget::hueChanged" href="qvideowidget.html#hueChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWidget::saturationChanged" href="qvideowidget.html#saturationChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="showEvent" fullname="QVideoWidget::showEvent" href="qvideowidget.html#showEvent" location="qvideowidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="showEvent(QShowEvent * event)">
                <parameter left="QShowEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="hideEvent" fullname="QVideoWidget::hideEvent" href="qvideowidget.html#hideEvent" location="qvideowidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="hideEvent(QHideEvent * event)">
                <parameter left="QHideEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resizeEvent" fullname="QVideoWidget::resizeEvent" href="qvideowidget.html#resizeEvent" location="qvideowidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resizeEvent(QResizeEvent * event)">
                <parameter left="QResizeEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="moveEvent" fullname="QVideoWidget::moveEvent" href="qvideowidget.html#moveEvent" location="qvideowidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="moveEvent(QMoveEvent * event)">
                <parameter left="QMoveEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="paintEvent" fullname="QVideoWidget::paintEvent" href="qvideowidget.html#paintEvent" location="qvideowidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="paintEvent(QPaintEvent * event)">
                <parameter left="QPaintEvent *" right="" name="event" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QVideoWidget::d_ptr" href="qvideowidget.html#d_ptr-var" location="qvideowidget.h" type="QVideoWidgetPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCamera" href="qcamera.html" location="qcamera.h" bases="QMediaObject" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCamera::state" href="qcamera.html#state-prop" location="qcamera.h" type="QCamera::State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="captureMode" fullname="QCamera::captureMode" href="qcamera.html#captureMode-prop" location="qcamera.h" type="QCamera::CaptureMode">
                <getter name="captureMode"/>
                <setter name="setCaptureMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="lockStatus" fullname="QCamera::lockStatus" href="qcamera.html#lockStatus-prop" location="qcamera.h" type="QCamera::LockStatus">
                <getter name="lockStatus"/>
                <getter name="lockStatus"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QCamera::State" href="qcamera.html#State-enum" location="qcamera.h">
                <value name="StoppedState" value="0"/>
                <value name="IdleState" value="1"/>
                <value name="ActiveState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="CaptureMode" fullname="QCamera::CaptureMode" href="qcamera.html#CaptureMode-enum" location="qcamera.h">
                <value name="CaptureDisabled" value="0"/>
                <value name="CaptureStillImage" value="1"/>
                <value name="CaptureVideo" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QCamera::Error" href="qcamera.html#Error-enum" location="qcamera.h">
                <value name="NoError" value="0"/>
                <value name="CameraError" value="1"/>
                <value name="InvalidRequestError" value="2"/>
                <value name="ServiceMissingError" value="3"/>
                <value name="NotSupportedFeatureError" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LockStatus" fullname="QCamera::LockStatus" href="qcamera.html#LockStatus-enum" location="qcamera.h">
                <value name="Unlocked" value="0"/>
                <value name="Searching" value="1"/>
                <value name="Locked" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LockChangeReason" fullname="QCamera::LockChangeReason" href="qcamera.html#LockChangeReason-enum" location="qcamera.h">
                <value name="UserRequest" value="0"/>
                <value name="LockAcquired" value="1"/>
                <value name="LockFailed" value="2"/>
                <value name="LockLost" value="3"/>
                <value name="LockTemporaryLost" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LockType" fullname="QCamera::LockType" href="qcamera.html#LockType-enum" location="qcamera.h" typedef="QCamera::LockTypes">
                <value name="NoLock" value="0"/>
                <value name="LockExposure" value="0x01"/>
                <value name="LockWhiteBalance" value="0x02"/>
                <value name="LockFocus" value="0x04"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="LockTypes" fullname="QCamera::LockTypes" href="qcamera.html#LockTypes-typedef" location="qcamera.h" enum="QCamera::LockType"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCamera" fullname="QCamera::QCamera" href="qcamera.html#QCamera" location="qcamera.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCamera(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCamera" fullname="QCamera::QCamera" href="qcamera.html#QCamera-2" location="qcamera.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QCamera(const QByteArray &amp; device, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCamera" fullname="QCamera::~QCamera" href="qcamera.html#dtor.QCamera" location="qcamera.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCamera()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableDevices" fullname="QCamera::availableDevices" href="qcamera.html#availableDevices" location="qcamera.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QByteArray&gt;" signature="availableDevices()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceDescription" fullname="QCamera::deviceDescription" href="qcamera.html#deviceDescription" location="qcamera.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="deviceDescription(const QByteArray &amp; device)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QCamera::isAvailable" href="qcamera.html#isAvailable" location="qcamera.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityError" fullname="QCamera::availabilityError" href="qcamera.html#availabilityError" location="qcamera.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::AvailabilityError" signature="availabilityError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCamera::state" href="qcamera.html#state-prop" location="qcamera.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="captureMode" fullname="QCamera::captureMode" href="qcamera.html#captureMode-prop" location="qcamera.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="captureMode" type="CaptureMode" signature="captureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCaptureModeSupported" fullname="QCamera::isCaptureModeSupported" href="qcamera.html#isCaptureModeSupported" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCaptureModeSupported(CaptureMode mode) const">
                <parameter left="CaptureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposure" fullname="QCamera::exposure" href="qcamera.html#exposure" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCameraExposure *" signature="exposure() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focus" fullname="QCamera::focus" href="qcamera.html#focus" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCameraFocus *" signature="focus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageProcessing" fullname="QCamera::imageProcessing" href="qcamera.html#imageProcessing" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCameraImageProcessing *" signature="imageProcessing() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setViewfinder" fullname="QCamera::setViewfinder" href="qcamera.html#setViewfinder" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setViewfinder(QVideoWidget * viewfinder)">
                <parameter left="QVideoWidget *" right="" name="viewfinder" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setViewfinder" fullname="QCamera::setViewfinder" href="qcamera.html#setViewfinder-2" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setViewfinder(QGraphicsVideoItem * viewfinder)">
                <parameter left="QGraphicsVideoItem *" right="" name="viewfinder" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QCamera::error" href="qcamera.html#error" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QCamera::errorString" href="qcamera.html#errorString" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedLocks" fullname="QCamera::supportedLocks" href="qcamera.html#supportedLocks" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCamera::LockTypes" signature="supportedLocks() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestedLocks" fullname="QCamera::requestedLocks" href="qcamera.html#requestedLocks" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCamera::LockTypes" signature="requestedLocks() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockStatus" fullname="QCamera::lockStatus" href="qcamera.html#lockStatus-prop" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="lockStatus" type="QCamera::LockStatus" signature="lockStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockStatus" fullname="QCamera::lockStatus" href="qcamera.html#lockStatus-prop" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" associated-property="lockStatus" type="QCamera::LockStatus" signature="lockStatus(QCamera::LockType lockType) const">
                <parameter left="QCamera::LockType" right="" name="lockType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaptureMode" fullname="QCamera::setCaptureMode" href="qcamera.html#captureMode-prop" location="qcamera.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="captureMode" type="void" signature="setCaptureMode(QCamera::CaptureMode mode)">
                <parameter left="QCamera::CaptureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QCamera::start" href="qcamera.html#start" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QCamera::stop" href="qcamera.html#stop" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchAndLock" fullname="QCamera::searchAndLock" href="qcamera.html#searchAndLock" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="searchAndLock()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlock" fullname="QCamera::unlock" href="qcamera.html#unlock" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unlock()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchAndLock" fullname="QCamera::searchAndLock" href="qcamera.html#searchAndLock-2" location="qcamera.cpp" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="searchAndLock(QFlags&lt;QCamera::LockType&gt; locks)">
                <parameter left="QFlags&lt;QCamera::LockType&gt;" right="" name="locks" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlock" fullname="QCamera::unlock" href="qcamera.html#unlock-2" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="true" overload-number="2" type="void" signature="unlock(QFlags&lt;QCamera::LockType&gt; locks)">
                <parameter left="QFlags&lt;QCamera::LockType&gt;" right="" name="locks" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QCamera::stateChanged" href="qcamera.html#stateChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QCamera::State state)">
                <parameter left="QCamera::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="captureModeChanged" fullname="QCamera::captureModeChanged" href="qcamera.html#captureModeChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="captureModeChanged(QCamera::CaptureMode )">
                <parameter left="QCamera::CaptureMode" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="locked" fullname="QCamera::locked" href="qcamera.html#locked" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="locked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockFailed" fullname="QCamera::lockFailed" href="qcamera.html#lockFailed" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lockFailed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockStatusChanged" fullname="QCamera::lockStatusChanged" href="qcamera.html#lockStatusChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lockStatusChanged(QCamera::LockStatus status, QCamera::LockChangeReason reason)">
                <parameter left="QCamera::LockStatus" right="" name="status" default=""/>
                <parameter left="QCamera::LockChangeReason" right="" name="reason" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockStatusChanged" fullname="QCamera::lockStatusChanged" href="qcamera.html#lockStatusChanged-2" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="lockStatusChanged(QCamera::LockType lock, QCamera::LockStatus status, QCamera::LockChangeReason reason)">
                <parameter left="QCamera::LockType" right="" name="lock" default=""/>
                <parameter left="QCamera::LockStatus" right="" name="status" default=""/>
                <parameter left="QCamera::LockChangeReason" right="" name="reason" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QCamera::error" href="qcamera.html#error-2" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QCamera::Error value)">
                <parameter left="QCamera::Error" right="" name="value" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAmbientLightReading" href="qambientlightreading.html" location="qambientlightsensor.h" bases="QSensorReading" module="">
            <contents name="qambientlightreading-units" title="QAmbientLightReading Units" level="2"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="lightLevel" fullname="QAmbientLightReading::lightLevel" href="qambientlightreading.html#lightLevel-prop" location="qambientlightsensor.h" type="LightLevel">
                <getter name="lightLevel"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LightLevel" fullname="QAmbientLightReading::LightLevel" href="qambientlightreading.html#LightLevel-enum" location="qambientlightsensor.h">
                <value name="Undefined" value="0"/>
                <value name="Dark" value="1"/>
                <value name="Twilight" value="2"/>
                <value name="Light" value="3"/>
                <value name="Bright" value="4"/>
                <value name="Sunny" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="lightLevel" fullname="QAmbientLightReading::lightLevel" href="qambientlightreading.html#lightLevel-prop" location="qambientlightsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="lightLevel" type="LightLevel" signature="lightLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLightLevel" fullname="QAmbientLightReading::setLightLevel" href="qambientlightreading.html#setLightLevel" location="qambientlightsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLightLevel(LightLevel lightLevel)">
                <parameter left="LightLevel" right="" name="lightLevel" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAmbientLightFilter" href="qambientlightfilter.html" location="qambientlightsensor.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QAmbientLightFilter::filter" href="qambientlightfilter.html#filter" location="qambientlightsensor.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QAmbientLightReading * reading)">
                <parameter left="QAmbientLightReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAmbientLightSensor" href="qambientlightsensor.html" location="qambientlightsensor.h" bases="QSensor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAmbientLightSensor" fullname="QAmbientLightSensor::QAmbientLightSensor" href="qambientlightsensor.html#QAmbientLightSensor" location="qambientlightsensor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAmbientLightSensor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAmbientLightSensor" fullname="QAmbientLightSensor::~QAmbientLightSensor" href="qambientlightsensor.html#dtor.QAmbientLightSensor" location="qambientlightsensor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAmbientLightSensor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QAmbientLightSensor::reading" href="qambientlightsensor.html#reading" location="qambientlightsensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAmbientLightReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QAmbientLightSensor::type" href="qambientlightsensor.html#type-var" location="qambientlightsensor.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainerId" href="qmessagecontentcontainerid.html" location="qmessagecontentcontainerid.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainerId" fullname="QMessageContentContainerId::QMessageContentContainerId" href="qmessagecontentcontainerid.html#QMessageContentContainerId" location="qmessagecontentcontainerid_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageContentContainerId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainerId" fullname="QMessageContentContainerId::QMessageContentContainerId" href="qmessagecontentcontainerid.html#QMessageContentContainerId-2" location="qmessagecontentcontainerid_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageContentContainerId(const QMessageContentContainerId &amp; other)">
                <parameter left="const QMessageContentContainerId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainerId" fullname="QMessageContentContainerId::QMessageContentContainerId" href="qmessagecontentcontainerid.html#QMessageContentContainerId-3" location="qmessagecontentcontainerid_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessageContentContainerId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageContentContainerId" fullname="QMessageContentContainerId::~QMessageContentContainerId" href="qmessagecontentcontainerid.html#dtor.QMessageContentContainerId" location="qmessagecontentcontainerid_symbian.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageContentContainerId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QMessageContentContainerId::toString" href="qmessagecontentcontainerid.html#toString" location="qmessagecontentcontainerid_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMessageContentContainerId::isValid" href="qmessagecontentcontainerid.html#isValid" location="qmessagecontentcontainerid_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainerIdList" href="#QMessageContentContainerIdList-typedef" location="qmessagecontentcontainerid.h"/>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageId" href="qmessageid.html" location="qmessageid.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageId" fullname="QMessageId::QMessageId" href="qmessageid.html#QMessageId" location="qmessageid_stub.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageId" fullname="QMessageId::QMessageId" href="qmessageid.html#QMessageId-2" location="qmessageid_stub.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageId(const QMessageId &amp; other)">
                <parameter left="const QMessageId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageId" fullname="QMessageId::QMessageId" href="qmessageid.html#QMessageId-3" location="qmessageid_stub.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessageId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageId" fullname="QMessageId::~QMessageId" href="qmessageid.html#dtor.QMessageId" location="qmessageid_stub.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QMessageId::operator&lt;" href="qmessageid.html#operator&lt;" location="qmessageid_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QMessageId &amp; other) const">
                <parameter left="const QMessageId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QMessageId::toString" href="qmessageid.html#toString" location="qmessageid_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMessageId::isValid" href="qmessageid.html#isValid" location="qmessageid_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMessageIdList" href="#QMessageIdList-typedef" location="qmessageid.h"/>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinitionRemoveRequest" href="qorganizeritemdetaildefinitionremoverequest.html" location="qorganizeritemdetaildefinitionremoverequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailDefinitionRemoveRequest" fullname="QOrganizerItemDetailDefinitionRemoveRequest::QOrganizerItemDetailDefinitionRemoveRequest" href="qorganizeritemdetaildefinitionremoverequest.html#QOrganizerItemDetailDefinitionRemoveRequest" location="qorganizeritemdetaildefinitionremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetailDefinitionRemoveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionName" fullname="QOrganizerItemDetailDefinitionRemoveRequest::setDefinitionName" href="qorganizeritemdetaildefinitionremoverequest.html#setDefinitionName" location="qorganizeritemdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionName(const QString &amp; definitionName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionNames" fullname="QOrganizerItemDetailDefinitionRemoveRequest::setDefinitionNames" href="qorganizeritemdetaildefinitionremoverequest.html#setDefinitionNames" location="qorganizeritemdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionNames(const QStringList &amp; names)">
                <parameter left="const QStringList &amp;" right="" name="names" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitionNames" fullname="QOrganizerItemDetailDefinitionRemoveRequest::definitionNames" href="qorganizeritemdetaildefinitionremoverequest.html#definitionNames" location="qorganizeritemdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="definitionNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemType" fullname="QOrganizerItemDetailDefinitionRemoveRequest::setItemType" href="qorganizeritemdetaildefinitionremoverequest.html#setItemType" location="qorganizeritemdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItemType(const QString &amp; organizeritemType)">
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QOrganizerItemDetailDefinitionRemoveRequest::itemType" href="qorganizeritemdetaildefinitionremoverequest.html#itemType" location="qorganizeritemdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="itemType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QOrganizerItemDetailDefinitionRemoveRequest::errorMap" href="qorganizeritemdetaildefinitionremoverequest.html#errorMap" location="qorganizeritemdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QOrganizerItemManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageFolder" href="qmessagefolder.html" location="qmessagefolder.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolder" fullname="QMessageFolder::QMessageFolder" href="qmessagefolder.html#QMessageFolder" location="qmessagefolder_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageFolder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolder" fullname="QMessageFolder::QMessageFolder" href="qmessagefolder.html#QMessageFolder-2" location="qmessagefolder_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageFolder(const QMessageFolderId &amp; id)">
                <parameter left="const QMessageFolderId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolder" fullname="QMessageFolder::QMessageFolder" href="qmessagefolder.html#QMessageFolder-3" location="qmessagefolder_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessageFolder(const QMessageFolder &amp; other)">
                <parameter left="const QMessageFolder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageFolder" fullname="QMessageFolder::~QMessageFolder" href="qmessagefolder.html#dtor.QMessageFolder" location="qmessagefolder_maemo.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageFolder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMessageFolder::id" href="qmessagefolder.html#id" location="qmessagefolder_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderId" signature="id() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentAccountId" fullname="QMessageFolder::parentAccountId" href="qmessagefolder.html#parentAccountId" location="qmessagefolder_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccountId" signature="parentAccountId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentFolderId" fullname="QMessageFolder::parentFolderId" href="qmessagefolder.html#parentFolderId" location="qmessagefolder_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderId" signature="parentFolderId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMessageFolder::name" href="qmessagefolder.html#name" location="qmessagefolder_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QMessageFolder::path" href="qmessagefolder.html#path" location="qmessagefolder_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="path() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoPlace" href="qgeoplace.html" location="qgeoplace.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="PlaceType" fullname="QGeoPlace::PlaceType" href="qgeoplace.html#PlaceType-enum" location="qgeoplace.h">
                <value name="GeoPlaceType" value="0"/>
                <value name="LandmarkType" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoPlace" fullname="QGeoPlace::QGeoPlace" href="qgeoplace.html#QGeoPlace" location="qgeoplace.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoPlace()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoPlace" fullname="QGeoPlace::QGeoPlace" href="qgeoplace.html#QGeoPlace-2" location="qgeoplace.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoPlace(const QGeoPlace &amp; other)">
                <parameter left="const QGeoPlace &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoPlace" fullname="QGeoPlace::~QGeoPlace" href="qgeoplace.html#dtor.QGeoPlace" location="qgeoplace.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoPlace()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoPlace::operator=" href="qgeoplace.html#operator=" location="qgeoplace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoPlace &amp;" signature="operator=(const QGeoPlace &amp; other)">
                <parameter left="const QGeoPlace &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGeoPlace::operator==" href="qgeoplace.html#operator==" location="qgeoplace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGeoPlace &amp; other) const">
                <parameter left="const QGeoPlace &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGeoPlace::operator!=" href="qgeoplace.html#operator!=" location="qgeoplace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGeoPlace &amp; other) const">
                <parameter left="const QGeoPlace &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QGeoPlace::type" href="qgeoplace.html#type" location="qgeoplace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="PlaceType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="boundingBox" fullname="QGeoPlace::boundingBox" href="qgeoplace.html#boundingBox" location="qgeoplace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="boundingBox() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBoundingBox" fullname="QGeoPlace::setBoundingBox" href="qgeoplace.html#setBoundingBox" location="qgeoplace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBoundingBox(const QGeoBoundingBox &amp; boundingBox)">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="coordinate" fullname="QGeoPlace::coordinate" href="qgeoplace.html#coordinate" location="qgeoplace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="coordinate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCoordinate" fullname="QGeoPlace::setCoordinate" href="qgeoplace.html#setCoordinate" location="qgeoplace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCoordinate(const QGeoCoordinate &amp; coordinate)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="address" fullname="QGeoPlace::address" href="qgeoplace.html#address" location="qgeoplace.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoAddress" signature="address() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddress" fullname="QGeoPlace::setAddress" href="qgeoplace.html#setAddress" location="qgeoplace.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAddress(const QGeoAddress &amp; address)">
                <parameter left="const QGeoAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QGeoPlace" fullname="QGeoPlace::QGeoPlace" href="qgeoplace.html#QGeoPlace-3" location="qgeoplace.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGeoPlace(QGeoPlacePrivate * dd)">
                <parameter left="QGeoPlacePrivate *" right="" name="dd" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QGeoPlace::d_ptr" href="qgeoplace.html#d_ptr-var" location="qgeoplace.h" type="QSharedDataPointer&lt;QGeoPlacePrivate&gt;" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetailFieldDefinition" href="qcontactdetailfielddefinition.html" location="qcontactdetailfielddefinition.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailFieldDefinition" fullname="QContactDetailFieldDefinition::QContactDetailFieldDefinition" href="qcontactdetailfielddefinition.html#QContactDetailFieldDefinition" location="qcontactdetailfielddefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetailFieldDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactDetailFieldDefinition" fullname="QContactDetailFieldDefinition::~QContactDetailFieldDefinition" href="qcontactdetailfielddefinition.html#dtor.QContactDetailFieldDefinition" location="qcontactdetailfielddefinition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactDetailFieldDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailFieldDefinition" fullname="QContactDetailFieldDefinition::QContactDetailFieldDefinition" href="qcontactdetailfielddefinition.html#QContactDetailFieldDefinition-2" location="qcontactdetailfielddefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactDetailFieldDefinition(const QContactDetailFieldDefinition &amp; other)">
                <parameter left="const QContactDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactDetailFieldDefinition::operator=" href="qcontactdetailfielddefinition.html#operator=" location="qcontactdetailfielddefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactDetailFieldDefinition &amp;" signature="operator=(const QContactDetailFieldDefinition &amp; other)">
                <parameter left="const QContactDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataType" fullname="QContactDetailFieldDefinition::dataType" href="qcontactdetailfielddefinition.html#dataType" location="qcontactdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant::Type" signature="dataType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataType" fullname="QContactDetailFieldDefinition::setDataType" href="qcontactdetailfielddefinition.html#setDataType" location="qcontactdetailfielddefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataType(QVariant::Type type)">
                <parameter left="QVariant::Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allowableValues" fullname="QContactDetailFieldDefinition::allowableValues" href="qcontactdetailfielddefinition.html#allowableValues" location="qcontactdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariantList" signature="allowableValues() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAllowableValues" fullname="QContactDetailFieldDefinition::setAllowableValues" href="qcontactdetailfielddefinition.html#setAllowableValues" location="qcontactdetailfielddefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAllowableValues(const QVariantList values)">
                <parameter left="const QVariantList" right="" name="values" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactDetailFieldDefinition::operator==" href="qcontactdetailfielddefinition.html#operator==" location="qcontactdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactDetailFieldDefinition &amp; other) const">
                <parameter left="const QContactDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactDetailFieldDefinition::operator!=" href="qcontactdetailfielddefinition.html#operator!=" location="qcontactdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactDetailFieldDefinition &amp; other) const">
                <parameter left="const QContactDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraExposureControl" href="qcameraexposurecontrol.html" location="qcameraexposurecontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraExposureControl" fullname="QCameraExposureControl::~QCameraExposureControl" href="qcameraexposurecontrol.html#dtor.QCameraExposureControl" location="qcameraexposurecontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraExposureControl()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ExposureParameter" fullname="QCameraExposureControl::ExposureParameter" href="qcameraexposurecontrol.html#ExposureParameter-enum" location="qcameraexposurecontrol.h">
                <value name="InvalidParameter" value="0"/>
                <value name="ISO" value="1"/>
                <value name="Aperture" value="2"/>
                <value name="ShutterSpeed" value="3"/>
                <value name="ExposureCompensation" value="4"/>
                <value name="FlashPower" value="5"/>
                <value name="FlashCompensation" value="6"/>
                <value name="ExtendedExposureParameter" value="1000"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ParameterFlag" fullname="QCameraExposureControl::ParameterFlag" href="qcameraexposurecontrol.html#ParameterFlag-enum" location="qcameraexposurecontrol.h" typedef="QCameraExposureControl::ParameterFlags">
                <value name="AutomaticValue" value="0x01"/>
                <value name="ReadOnly" value="0x02"/>
                <value name="ContinuousRange" value="0x04"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ParameterFlags" fullname="QCameraExposureControl::ParameterFlags" href="qcameraexposurecontrol.html#ParameterFlags-typedef" location="qcameraexposurecontrol.h" enum="QCameraExposureControl::ParameterFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashMode" fullname="QCameraExposureControl::flashMode" href="qcameraexposurecontrol.html#flashMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraExposure::FlashModes" signature="flashMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlashMode" fullname="QCameraExposureControl::setFlashMode" href="qcameraexposurecontrol.html#setFlashMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFlashMode(QFlags&lt;QCameraExposure::FlashMode&gt; mode)">
                <parameter left="QFlags&lt;QCameraExposure::FlashMode&gt;" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashModeSupported" fullname="QCameraExposureControl::isFlashModeSupported" href="qcameraexposurecontrol.html#isFlashModeSupported" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashModeSupported(QFlags&lt;QCameraExposure::FlashMode&gt; mode) const">
                <parameter left="QFlags&lt;QCameraExposure::FlashMode&gt;" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashReady" fullname="QCameraExposureControl::isFlashReady" href="qcameraexposurecontrol.html#isFlashReady" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashReady() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureMode" fullname="QCameraExposureControl::exposureMode" href="qcameraexposurecontrol.html#exposureMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraExposure::ExposureMode" signature="exposureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureMode" fullname="QCameraExposureControl::setExposureMode" href="qcameraexposurecontrol.html#setExposureMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureMode(QCameraExposure::ExposureMode mode)">
                <parameter left="QCameraExposure::ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isExposureModeSupported" fullname="QCameraExposureControl::isExposureModeSupported" href="qcameraexposurecontrol.html#isExposureModeSupported" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isExposureModeSupported(QCameraExposure::ExposureMode mode) const">
                <parameter left="QCameraExposure::ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="meteringMode" fullname="QCameraExposureControl::meteringMode" href="qcameraexposurecontrol.html#meteringMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraExposure::MeteringMode" signature="meteringMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMeteringMode" fullname="QCameraExposureControl::setMeteringMode" href="qcameraexposurecontrol.html#setMeteringMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMeteringMode(QCameraExposure::MeteringMode mode)">
                <parameter left="QCameraExposure::MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMeteringModeSupported" fullname="QCameraExposureControl::isMeteringModeSupported" href="qcameraexposurecontrol.html#isMeteringModeSupported" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMeteringModeSupported(QCameraExposure::MeteringMode mode) const">
                <parameter left="QCameraExposure::MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isParameterSupported" fullname="QCameraExposureControl::isParameterSupported" href="qcameraexposurecontrol.html#isParameterSupported" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isParameterSupported(ExposureParameter parameter) const">
                <parameter left="ExposureParameter" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureParameter" fullname="QCameraExposureControl::exposureParameter" href="qcameraexposurecontrol.html#exposureParameter" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="exposureParameter(ExposureParameter parameter) const">
                <parameter left="ExposureParameter" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureParameterFlags" fullname="QCameraExposureControl::exposureParameterFlags" href="qcameraexposurecontrol.html#exposureParameterFlags" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="ParameterFlags" signature="exposureParameterFlags(ExposureParameter parameter) const">
                <parameter left="ExposureParameter" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedParameterRange" fullname="QCameraExposureControl::supportedParameterRange" href="qcameraexposurecontrol.html#supportedParameterRange" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariantList" signature="supportedParameterRange(ExposureParameter parameter) const">
                <parameter left="ExposureParameter" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureParameter" fullname="QCameraExposureControl::setExposureParameter" href="qcameraexposurecontrol.html#setExposureParameter" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setExposureParameter(ExposureParameter parameter, const QVariant &amp; value)">
                <parameter left="ExposureParameter" right="" name="parameter" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extendedParameterName" fullname="QCameraExposureControl::extendedParameterName" href="qcameraexposurecontrol.html#extendedParameterName" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QString" signature="extendedParameterName(ExposureParameter parameter)">
                <parameter left="ExposureParameter" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashReady" fullname="QCameraExposureControl::flashReady" href="qcameraexposurecontrol.html#flashReady" location="qcameraexposurecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="flashReady(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureParameterChanged" fullname="QCameraExposureControl::exposureParameterChanged" href="qcameraexposurecontrol.html#exposureParameterChanged" location="qcameraexposurecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="exposureParameterChanged(int parameter)">
                <parameter left="int" right="" name="parameter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureParameterRangeChanged" fullname="QCameraExposureControl::exposureParameterRangeChanged" href="qcameraexposurecontrol.html#exposureParameterRangeChanged" location="qcameraexposurecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="exposureParameterRangeChanged(int parameter)">
                <parameter left="int" right="" name="parameter" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraExposureControl" fullname="QCameraExposureControl::QCameraExposureControl" href="qcameraexposurecontrol.html#QCameraExposureControl" location="qcameraexposurecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraExposureControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraViewfinder" href="qcameraviewfinder.html" location="qcameraviewfinder.h" bases="QVideoWidget" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCameraViewfinder" fullname="QCameraViewfinder::QCameraViewfinder" href="qcameraviewfinder.html#QCameraViewfinder" location="qcameraviewfinder.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraViewfinder(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraViewfinder" fullname="QCameraViewfinder::~QCameraViewfinder" href="qcameraviewfinder.html#dtor.QCameraViewfinder" location="qcameraviewfinder.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraViewfinder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QCameraViewfinder::mediaObject" href="qcameraviewfinder.html#mediaObject" location="qcameraviewfinder.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaObject *" signature="mediaObject() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMediaObject" fullname="QCameraViewfinder::setMediaObject" href="qcameraviewfinder.html#setMediaObject" location="qcameraviewfinder.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setMediaObject(QMediaObject * object)">
                <parameter left="QMediaObject *" right="" name="object" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkManagerEngine" href="qlandmarkmanagerengine.html" location="qlandmarkmanagerengine.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkManagerEngine" fullname="QLandmarkManagerEngine::QLandmarkManagerEngine" href="qlandmarkmanagerengine.html#QLandmarkManagerEngine" location="qlandmarkmanagerengine.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkManagerEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkManagerEngine" fullname="QLandmarkManagerEngine::~QLandmarkManagerEngine" href="qlandmarkmanagerengine.html#dtor.QLandmarkManagerEngine" location="qlandmarkmanagerengine.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkManagerEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QLandmarkManagerEngine::managerName" href="qlandmarkmanagerengine.html#managerName" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QLandmarkManagerEngine::managerParameters" href="qlandmarkmanagerengine.html#managerParameters" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QLandmarkManagerEngine::managerVersion" href="qlandmarkmanagerengine.html#managerVersion" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QLandmarkManagerEngine::managerUri" href="qlandmarkmanagerengine.html#managerUri" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkManagerEngine::landmarkIds" href="qlandmarkmanagerengine.html#landmarkIds" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds(const QLandmarkFilter &amp; filter, const QList&lt;QLandmarkSortOrder&gt; &amp; sortOrders, const QLandmarkFetchHint &amp; fetchHint, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryIds" fullname="QLandmarkManagerEngine::categoryIds" href="qlandmarkmanagerengine.html#categoryIds" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategoryId&gt;" signature="categoryIds(const QLandmarkNameSort &amp; nameSort, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="const QLandmarkNameSort &amp;" right="" name="nameSort" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmark" fullname="QLandmarkManagerEngine::landmark" href="qlandmarkmanagerengine.html#landmark" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QLandmark" signature="landmark(const QLandmarkId &amp; landmarkId, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="const QLandmarkId &amp;" right="" name="landmarkId" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarks" fullname="QLandmarkManagerEngine::landmarks" href="qlandmarkmanagerengine.html#landmarks" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmark&gt;" signature="landmarks(const QLandmarkFilter &amp; filter, const QList&lt;QLandmarkSortOrder&gt; &amp; sortOrders, const QLandmarkFetchHint &amp; fetchHint, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="category" fullname="QLandmarkManagerEngine::category" href="qlandmarkmanagerengine.html#category" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QLandmarkCategory" signature="category(const QLandmarkCategoryId &amp; categoryId, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QLandmarkManagerEngine::categories" href="qlandmarkmanagerengine.html#categories" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategory&gt;" signature="categories(const QList&lt;QLandmarkCategoryId&gt; &amp; landmarkCategoryIds, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="landmarkCategoryIds" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QLandmarkManagerEngine::categories" href="qlandmarkmanagerengine.html#categories-2" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QLandmarkCategory&gt;" signature="categories(const QLandmarkNameSort &amp; nameSort, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="const QLandmarkNameSort &amp;" right="" name="nameSort" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveLandmark" fullname="QLandmarkManagerEngine::saveLandmark" href="qlandmarkmanagerengine.html#saveLandmark" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveLandmark(QLandmark * landmark, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="QLandmark *" right="" name="landmark" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveLandmarks" fullname="QLandmarkManagerEngine::saveLandmarks" href="qlandmarkmanagerengine.html#saveLandmarks" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveLandmarks(QList&lt;QLandmark&gt; * landmarks, QMap&lt;int, QLandmarkManager::Error&gt; * errorMap, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="QList&lt;QLandmark&gt; *" right="" name="landmarks" default=""/>
                <parameter left="QMap&lt;int, QLandmarkManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeLandmark" fullname="QLandmarkManagerEngine::removeLandmark" href="qlandmarkmanagerengine.html#removeLandmark" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeLandmark(const QLandmarkId &amp; landmarkId, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="const QLandmarkId &amp;" right="" name="landmarkId" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeLandmarks" fullname="QLandmarkManagerEngine::removeLandmarks" href="qlandmarkmanagerengine.html#removeLandmarks" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeLandmarks(const QList&lt;QLandmarkId&gt; &amp; landmarkIds, QMap&lt;int, QLandmarkManager::Error&gt; * errorMap, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
                <parameter left="QMap&lt;int, QLandmarkManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveCategory" fullname="QLandmarkManagerEngine::saveCategory" href="qlandmarkmanagerengine.html#saveCategory" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveCategory(QLandmarkCategory * category, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="QLandmarkCategory *" right="" name="category" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeCategory" fullname="QLandmarkManagerEngine::removeCategory" href="qlandmarkmanagerengine.html#removeCategory" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeCategory(const QLandmarkCategoryId &amp; categoryId, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importLandmarks" fullname="QLandmarkManagerEngine::importLandmarks" href="qlandmarkmanagerengine.html#importLandmarks" location="qlandmarkmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="importLandmarks(QIODevice * device, const QByteArray &amp; format, QLandmarkManager::Error * error, QString * errorString)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportLandmarks" fullname="QLandmarkManagerEngine::exportLandmarks" href="qlandmarkmanagerengine.html#exportLandmarks" location="qlandmarkmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="exportLandmarks(QIODevice * device, const QByteArray &amp; format, QList&lt;QLandmarkId&gt; landmarkIds, QLandmarkManager::Error * error, QString * errorString) const">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default=""/>
                <parameter left="QList&lt;QLandmarkId&gt;" right="" name="landmarkIds" default=""/>
                <parameter left="QLandmarkManager::Error *" right="" name="error" default=""/>
                <parameter left="QString *" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterSupportLevel" fullname="QLandmarkManagerEngine::filterSupportLevel" href="qlandmarkmanagerengine.html#filterSupportLevel" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QLandmarkManager::FilterSupportLevel" signature="filterSupportLevel(const QLandmarkFilter &amp; filter) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFeatureSupported" fullname="QLandmarkManagerEngine::isFeatureSupported" href="qlandmarkmanagerengine.html#isFeatureSupported" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFeatureSupported(QLandmarkManager::LandmarkFeature feature) const">
                <parameter left="QLandmarkManager::LandmarkFeature" right="" name="feature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QLandmarkManagerEngine::isReadOnly" href="qlandmarkmanagerengine.html#isReadOnly" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QLandmarkManagerEngine::isReadOnly" href="qlandmarkmanagerengine.html#isReadOnly-2" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="isReadOnly(const QLandmarkId &amp; landmarkId) const">
                <parameter left="const QLandmarkId &amp;" right="" name="landmarkId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QLandmarkManagerEngine::isReadOnly" href="qlandmarkmanagerengine.html#isReadOnly-3" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="3" type="bool" signature="isReadOnly(const QLandmarkCategoryId &amp; categoryId) const">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestDestroyed" fullname="QLandmarkManagerEngine::requestDestroyed" href="qlandmarkmanagerengine.html#requestDestroyed" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="requestDestroyed(QLandmarkAbstractRequest * request)">
                <parameter left="QLandmarkAbstractRequest *" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startRequest" fullname="QLandmarkManagerEngine::startRequest" href="qlandmarkmanagerengine.html#startRequest" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startRequest(QLandmarkAbstractRequest * request)">
                <parameter left="QLandmarkAbstractRequest *" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelRequest" fullname="QLandmarkManagerEngine::cancelRequest" href="qlandmarkmanagerengine.html#cancelRequest" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="cancelRequest(QLandmarkAbstractRequest * request)">
                <parameter left="QLandmarkAbstractRequest *" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForRequestFinished" fullname="QLandmarkManagerEngine::waitForRequestFinished" href="qlandmarkmanagerengine.html#waitForRequestFinished" location="qlandmarkmanagerengine.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForRequestFinished(QLandmarkAbstractRequest * request, int msecs)">
                <parameter left="QLandmarkAbstractRequest *" right="" name="request" default=""/>
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarksAdded" fullname="QLandmarkManagerEngine::landmarksAdded" href="qlandmarkmanagerengine.html#landmarksAdded" location="qlandmarkmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="landmarksAdded(const QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarksChanged" fullname="QLandmarkManagerEngine::landmarksChanged" href="qlandmarkmanagerengine.html#landmarksChanged" location="qlandmarkmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="landmarksChanged(const QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarksRemoved" fullname="QLandmarkManagerEngine::landmarksRemoved" href="qlandmarkmanagerengine.html#landmarksRemoved" location="qlandmarkmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="landmarksRemoved(const QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesAdded" fullname="QLandmarkManagerEngine::categoriesAdded" href="qlandmarkmanagerengine.html#categoriesAdded" location="qlandmarkmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesAdded(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesChanged" fullname="QLandmarkManagerEngine::categoriesChanged" href="qlandmarkmanagerengine.html#categoriesChanged" location="qlandmarkmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesChanged(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesRemoved" fullname="QLandmarkManagerEngine::categoriesRemoved" href="qlandmarkmanagerengine.html#categoriesRemoved" location="qlandmarkmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesRemoved(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateRequestState" fullname="QLandmarkManagerEngine::updateRequestState" href="qlandmarkmanagerengine.html#updateRequestState" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateRequestState(QLandmarkAbstractRequest * req, QLandmarkAbstractRequest::State state)">
                <parameter left="QLandmarkAbstractRequest *" right="" name="req" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="state" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkIdFetchRequest" fullname="QLandmarkManagerEngine::updateLandmarkIdFetchRequest" href="qlandmarkmanagerengine.html#updateLandmarkIdFetchRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkIdFetchRequest(QLandmarkIdFetchRequest * req, const QList&lt;QLandmarkId&gt; &amp; result, QLandmarkManager::Error error, const QString &amp; errorString, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkIdFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkFetchRequest" fullname="QLandmarkManagerEngine::updateLandmarkFetchRequest" href="qlandmarkmanagerengine.html#updateLandmarkFetchRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkFetchRequest(QLandmarkFetchRequest * req, const QList&lt;QLandmark&gt; &amp; result, QLandmarkManager::Error error, const QString &amp; errorString, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QLandmark&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkRemoveRequest" fullname="QLandmarkManagerEngine::updateLandmarkRemoveRequest" href="qlandmarkmanagerengine.html#updateLandmarkRemoveRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkRemoveRequest(QLandmarkRemoveRequest * req, QLandmarkManager::Error error, const QString &amp; errorString, const QMap&lt;int, QLandmarkManager::Error&gt; &amp; errorMap, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkRemoveRequest *" right="" name="req" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="const QMap&lt;int, QLandmarkManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkSaveRequest" fullname="QLandmarkManagerEngine::updateLandmarkSaveRequest" href="qlandmarkmanagerengine.html#updateLandmarkSaveRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkSaveRequest(QLandmarkSaveRequest * req, const QList&lt;QLandmark&gt; &amp; result, QLandmarkManager::Error error, const QString &amp; errorString, const QMap&lt;int, QLandmarkManager::Error&gt; &amp; errorMap, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkSaveRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QLandmark&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="const QMap&lt;int, QLandmarkManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkCategoryIdFetchRequest" fullname="QLandmarkManagerEngine::updateLandmarkCategoryIdFetchRequest" href="qlandmarkmanagerengine.html#updateLandmarkCategoryIdFetchRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkCategoryIdFetchRequest(QLandmarkCategoryIdFetchRequest * req, const QList&lt;QLandmarkCategoryId&gt; &amp; result, QLandmarkManager::Error error, const QString &amp; errorString, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkCategoryIdFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkCategoryFetchRequest" fullname="QLandmarkManagerEngine::updateLandmarkCategoryFetchRequest" href="qlandmarkmanagerengine.html#updateLandmarkCategoryFetchRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkCategoryFetchRequest(QLandmarkCategoryFetchRequest * req, const QList&lt;QLandmarkCategory&gt; &amp; result, QLandmarkManager::Error error, const QString &amp; errorString, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkCategoryFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QLandmarkCategory&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkCategoryRemoveRequest" fullname="QLandmarkManagerEngine::updateLandmarkCategoryRemoveRequest" href="qlandmarkmanagerengine.html#updateLandmarkCategoryRemoveRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkCategoryRemoveRequest(QLandmarkCategoryRemoveRequest * req, QLandmarkManager::Error error, const QString &amp; errorString, const QMap&lt;int, QLandmarkManager::Error&gt; &amp; errorMap, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkCategoryRemoveRequest *" right="" name="req" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="const QMap&lt;int, QLandmarkManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkCategorySaveRequest" fullname="QLandmarkManagerEngine::updateLandmarkCategorySaveRequest" href="qlandmarkmanagerengine.html#updateLandmarkCategorySaveRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkCategorySaveRequest(QLandmarkCategorySaveRequest * req, const QList&lt;QLandmarkCategory&gt; &amp; result, QLandmarkManager::Error error, const QString &amp; errorString, const QMap&lt;int, QLandmarkManager::Error&gt; &amp; errorMap, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkCategorySaveRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QLandmarkCategory&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="const QMap&lt;int, QLandmarkManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkImportRequest" fullname="QLandmarkManagerEngine::updateLandmarkImportRequest" href="qlandmarkmanagerengine.html#updateLandmarkImportRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkImportRequest(QLandmarkImportRequest * req, QLandmarkManager::Error error, const QString &amp; errorString, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkImportRequest *" right="" name="req" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateLandmarkExportRequest" fullname="QLandmarkManagerEngine::updateLandmarkExportRequest" href="qlandmarkmanagerengine.html#updateLandmarkExportRequest" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateLandmarkExportRequest(QLandmarkExportRequest * req, QLandmarkManager::Error error, const QString &amp; errorString, QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkExportRequest *" right="" name="req" default=""/>
                <parameter left="QLandmarkManager::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="compareLandmark" fullname="QLandmarkManagerEngine::compareLandmark" href="qlandmarkmanagerengine.html#compareLandmark" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="compareLandmark(const QLandmark &amp; a, const QLandmark &amp; b, const QList&lt;QLandmarkSortOrder&gt; &amp; sortOrders)">
                <parameter left="const QLandmark &amp;" right="" name="a" default=""/>
                <parameter left="const QLandmark &amp;" right="" name="b" default=""/>
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="compareName" fullname="QLandmarkManagerEngine::compareName" href="qlandmarkmanagerengine.html#compareName" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="compareName(const QLandmark &amp; a, const QLandmark &amp; b, const QLandmarkNameSort &amp; nameSort)">
                <parameter left="const QLandmark &amp;" right="" name="a" default=""/>
                <parameter left="const QLandmark &amp;" right="" name="b" default=""/>
                <parameter left="const QLandmarkNameSort &amp;" right="" name="nameSort" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="compareDistance" fullname="QLandmarkManagerEngine::compareDistance" href="qlandmarkmanagerengine.html#compareDistance" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="compareDistance(const QLandmark &amp; a, const QLandmark &amp; b, const QLandmarkDistanceSort &amp; distanceSort)">
                <parameter left="const QLandmark &amp;" right="" name="a" default=""/>
                <parameter left="const QLandmark &amp;" right="" name="b" default=""/>
                <parameter left="const QLandmarkDistanceSort &amp;" right="" name="distanceSort" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addSorted" fullname="QLandmarkManagerEngine::addSorted" href="qlandmarkmanagerengine.html#addSorted" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addSorted(QList&lt;QLandmark&gt; * sorted, const QLandmark &amp; landmark, const QList&lt;QLandmarkSortOrder&gt; &amp; sortOrders)">
                <parameter left="QList&lt;QLandmark&gt; *" right="" name="sorted" default=""/>
                <parameter left="const QLandmark &amp;" right="" name="landmark" default=""/>
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="testFilter" fullname="QLandmarkManagerEngine::testFilter" href="qlandmarkmanagerengine.html#testFilter" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="testFilter(const QLandmarkFilter &amp; filter, const QLandmark &amp; landmark)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QLandmark &amp;" right="" name="landmark" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="sortLandmarks" fullname="QLandmarkManagerEngine::sortLandmarks" href="qlandmarkmanagerengine.html#sortLandmarks" location="qlandmarkmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QLandmarkId&gt;" signature="sortLandmarks(const QList&lt;QLandmark&gt; &amp; landmarks, const QList&lt;QLandmarkSortOrder&gt; &amp; sortOrders)">
                <parameter left="const QList&lt;QLandmark&gt; &amp;" right="" name="landmarks" default=""/>
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkBoxFilter" href="qlandmarkboxfilter.html" location="qlandmarkboxfilter.h" bases="QLandmarkFilter" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkBoxFilter" fullname="QLandmarkBoxFilter::QLandmarkBoxFilter" href="qlandmarkboxfilter.html#QLandmarkBoxFilter" location="qlandmarkboxfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkBoxFilter(const QGeoCoordinate &amp; topLeft, const QGeoCoordinate &amp; bottomRight)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="topLeft" default="QGeoCoordinate()"/>
                <parameter left="const QGeoCoordinate &amp;" right="" name="bottomRight" default="QGeoCoordinate()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkBoxFilter" fullname="QLandmarkBoxFilter::QLandmarkBoxFilter" href="qlandmarkboxfilter.html#QLandmarkBoxFilter-2" location="qlandmarkboxfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkBoxFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkBoxFilter" fullname="QLandmarkBoxFilter::~QLandmarkBoxFilter" href="qlandmarkboxfilter.html#dtor.QLandmarkBoxFilter" location="qlandmarkboxfilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkBoxFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="topLeftCoordinate" fullname="QLandmarkBoxFilter::topLeftCoordinate" href="qlandmarkboxfilter.html#topLeftCoordinate" location="qlandmarkboxfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="topLeftCoordinate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTopLeftCoordinate" fullname="QLandmarkBoxFilter::setTopLeftCoordinate" href="qlandmarkboxfilter.html#setTopLeftCoordinate" location="qlandmarkboxfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTopLeftCoordinate(const QGeoCoordinate &amp; topLeft)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="topLeft" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bottomRightCoordinate" fullname="QLandmarkBoxFilter::bottomRightCoordinate" href="qlandmarkboxfilter.html#bottomRightCoordinate" location="qlandmarkboxfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="bottomRightCoordinate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBottomRightCoordinate" fullname="QLandmarkBoxFilter::setBottomRightCoordinate" href="qlandmarkboxfilter.html#setBottomRightCoordinate" location="qlandmarkboxfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBottomRightCoordinate(const QGeoCoordinate &amp; bottomRight)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="bottomRight" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoBoundingBox" href="qgeoboundingbox.html" location="qgeoboundingbox.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoBoundingBox" fullname="QGeoBoundingBox::QGeoBoundingBox" href="qgeoboundingbox.html#QGeoBoundingBox" location="qgeoboundingbox.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoBoundingBox()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoBoundingBox" fullname="QGeoBoundingBox::QGeoBoundingBox" href="qgeoboundingbox.html#QGeoBoundingBox-2" location="qgeoboundingbox.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoBoundingBox(const QGeoCoordinate &amp; center, double degreesWidth, double degreesHeight)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="center" default=""/>
                <parameter left="double" right="" name="degreesWidth" default=""/>
                <parameter left="double" right="" name="degreesHeight" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoBoundingBox" fullname="QGeoBoundingBox::QGeoBoundingBox" href="qgeoboundingbox.html#QGeoBoundingBox-3" location="qgeoboundingbox.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGeoBoundingBox(const QGeoCoordinate &amp; topLeft, const QGeoCoordinate &amp; bottomRight)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="topLeft" default=""/>
                <parameter left="const QGeoCoordinate &amp;" right="" name="bottomRight" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoBoundingBox" fullname="QGeoBoundingBox::QGeoBoundingBox" href="qgeoboundingbox.html#QGeoBoundingBox-4" location="qgeoboundingbox.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QGeoBoundingBox(const QGeoBoundingBox &amp; other)">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoBoundingBox" fullname="QGeoBoundingBox::~QGeoBoundingBox" href="qgeoboundingbox.html#dtor.QGeoBoundingBox" location="qgeoboundingbox.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoBoundingBox()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoBoundingBox::operator=" href="qgeoboundingbox.html#operator=" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoBoundingBox &amp;" signature="operator=(const QGeoBoundingBox &amp; other)">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGeoBoundingBox::operator==" href="qgeoboundingbox.html#operator==" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGeoBoundingBox &amp; other) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGeoBoundingBox::operator!=" href="qgeoboundingbox.html#operator!=" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGeoBoundingBox &amp; other) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGeoBoundingBox::isValid" href="qgeoboundingbox.html#isValid" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QGeoBoundingBox::isEmpty" href="qgeoboundingbox.html#isEmpty" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="topLeft" fullname="QGeoBoundingBox::topLeft" href="qgeoboundingbox.html#topLeft" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="topLeft() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="topRight" fullname="QGeoBoundingBox::topRight" href="qgeoboundingbox.html#topRight" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="topRight() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bottomLeft" fullname="QGeoBoundingBox::bottomLeft" href="qgeoboundingbox.html#bottomLeft" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="bottomLeft() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bottomRight" fullname="QGeoBoundingBox::bottomRight" href="qgeoboundingbox.html#bottomRight" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="bottomRight() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCenter" fullname="QGeoBoundingBox::setCenter" href="qgeoboundingbox.html#setCenter" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCenter(const QGeoCoordinate &amp; center)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="center" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="center" fullname="QGeoBoundingBox::center" href="qgeoboundingbox.html#center" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="center() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWidth" fullname="QGeoBoundingBox::setWidth" href="qgeoboundingbox.html#setWidth" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWidth(double degreesWidth)">
                <parameter left="double" right="" name="degreesWidth" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="width" fullname="QGeoBoundingBox::width" href="qgeoboundingbox.html#width" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="width() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHeight" fullname="QGeoBoundingBox::setHeight" href="qgeoboundingbox.html#setHeight" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setHeight(double degreesHeight)">
                <parameter left="double" right="" name="degreesHeight" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="height" fullname="QGeoBoundingBox::height" href="qgeoboundingbox.html#height" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="double" signature="height()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QGeoBoundingBox::contains" href="qgeoboundingbox.html#contains" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QGeoCoordinate &amp; coordinate) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QGeoBoundingBox::contains" href="qgeoboundingbox.html#contains-2" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="contains(const QGeoBoundingBox &amp; boundingBox) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="intersects" fullname="QGeoBoundingBox::intersects" href="qgeoboundingbox.html#intersects" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="intersects(const QGeoBoundingBox &amp; boundingBox) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="translate" fullname="QGeoBoundingBox::translate" href="qgeoboundingbox.html#translate" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="translate(double degreesLatitude, double degreesLongitude)">
                <parameter left="double" right="" name="degreesLatitude" default=""/>
                <parameter left="double" right="" name="degreesLongitude" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="translated" fullname="QGeoBoundingBox::translated" href="qgeoboundingbox.html#translated" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="translated(double degreesLatitude, double degreesLongitude) const">
                <parameter left="double" right="" name="degreesLatitude" default=""/>
                <parameter left="double" right="" name="degreesLongitude" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="united" fullname="QGeoBoundingBox::united" href="qgeoboundingbox.html#united" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="united(const QGeoBoundingBox &amp; boundingBox) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|" fullname="QGeoBoundingBox::operator|" href="qgeoboundingbox.html#operator|" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="operator|(const QGeoBoundingBox &amp; boundingBox) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|=" fullname="QGeoBoundingBox::operator|=" href="qgeoboundingbox.html#operator|=" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoBoundingBox &amp;" signature="operator|=(const QGeoBoundingBox &amp; boundingBox)">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="intersected" fullname="QGeoBoundingBox::intersected" href="qgeoboundingbox.html#intersected" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="intersected(const QGeoBoundingBox &amp; boundingBox) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QGeoBoundingBox::operator&amp;" href="qgeoboundingbox.html#operator&amp;" location="qgeoboundingbox.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="operator&amp;(const QGeoBoundingBox &amp; boundingBox) const">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QGeoBoundingBox::operator&amp;=" href="qgeoboundingbox.html#operator&amp;=" location="qgeoboundingbox.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoBoundingBox &amp;" signature="operator&amp;=(const QGeoBoundingBox &amp; boundingBox)">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="boundingBox" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemLocalIdFetchRequest" href="qorganizeritemlocalidfetchrequest.html" location="qorganizeritemlocalidfetchrequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemLocalIdFetchRequest" fullname="QOrganizerItemLocalIdFetchRequest::QOrganizerItemLocalIdFetchRequest" href="qorganizeritemlocalidfetchrequest.html#QOrganizerItemLocalIdFetchRequest" location="qorganizeritemlocalidfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemLocalIdFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QOrganizerItemLocalIdFetchRequest::setFilter" href="qorganizeritemlocalidfetchrequest.html#setFilter" location="qorganizeritemlocalidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QOrganizerItemLocalIdFetchRequest::setSorting" href="qorganizeritemlocalidfetchrequest.html#setSorting" location="qorganizeritemlocalidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QList&lt;QOrganizerItemSortOrder&gt; &amp; sorting)">
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QOrganizerItemLocalIdFetchRequest::filter" href="qorganizeritemlocalidfetchrequest.html#filter" location="qorganizeritemlocalidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QOrganizerItemLocalIdFetchRequest::sorting" href="qorganizeritemlocalidfetchrequest.html#sorting" location="qorganizeritemlocalidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemSortOrder&gt;" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemIds" fullname="QOrganizerItemLocalIdFetchRequest::itemIds" href="qorganizeritemlocalidfetchrequest.html#itemIds" location="qorganizeritemlocalidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemLocalId&gt;" signature="itemIds() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessage" href="qmessage.html" location="qmessage.h" bases="QMessageContentContainer" module="QtMessaging">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QMessage::Type" href="qmessage.html#Type-enum" location="qmessage.h" typedef="QMessage::TypeFlags">
                <value name="NoType" value="0"/>
                <value name="Mms" value="0x1"/>
                <value name="Sms" value="0x2"/>
                <value name="Email" value="0x4"/>
                <value name="InstantMessage" value="0x8"/>
                <value name="AnyType" value="0xFFFFFFFF"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="TypeFlags" fullname="QMessage::TypeFlags" href="qmessage.html#TypeFlags-typedef" location="qmessage.h" enum="QMessage::Type"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Status" fullname="QMessage::Status" href="qmessage.html#Status-enum" location="qmessage.h" typedef="QMessage::StatusFlags">
                <value name="Read" value="0x1"/>
                <value name="HasAttachments" value="0x2"/>
                <value name="Incoming" value="0x4"/>
                <value name="Removed" value="0x8"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="StatusFlags" fullname="QMessage::StatusFlags" href="qmessage.html#StatusFlags-typedef" location="qmessage.h" enum="QMessage::Status"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Priority" fullname="QMessage::Priority" href="qmessage.html#Priority-enum" location="qmessage.h">
                <value name="HighPriority" value="1"/>
                <value name="NormalPriority" value="2"/>
                <value name="LowPriority" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="StandardFolder" fullname="QMessage::StandardFolder" href="qmessage.html#StandardFolder-enum" location="qmessage.h">
                <value name="InboxFolder" value="1"/>
                <value name="OutboxFolder" value="2"/>
                <value name="DraftsFolder" value="3"/>
                <value name="SentFolder" value="4"/>
                <value name="TrashFolder" value="5"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ResponseType" fullname="QMessage::ResponseType" href="qmessage.html#ResponseType-enum" location="qmessage.h">
                <value name="ReplyToSender" value="1"/>
                <value name="ReplyToAll" value="2"/>
                <value name="Forward" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessage" fullname="QMessage::QMessage" href="qmessage.html#QMessage" location="qmessage_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessage()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessage" fullname="QMessage::QMessage" href="qmessage.html#QMessage-2" location="qmessage_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessage(const QMessageId &amp; id)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessage" fullname="QMessage::QMessage" href="qmessage.html#QMessage-3" location="qmessage_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessage(const QMessage &amp; other)">
                <parameter left="const QMessage &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessage" fullname="QMessage::~QMessage" href="qmessage.html#dtor.QMessage" location="qmessage_win.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessage()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMessage::id" href="qmessage.html#id" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageId" signature="id() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMessage::type" href="qmessage.html#type" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QMessage::setType" href="qmessage.html#setType" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(Type t)">
                <parameter left="Type" right="" name="t" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentAccountId" fullname="QMessage::parentAccountId" href="qmessage.html#parentAccountId" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccountId" signature="parentAccountId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setParentAccountId" fullname="QMessage::setParentAccountId" href="qmessage.html#setParentAccountId" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setParentAccountId(const QMessageAccountId &amp; accountId)">
                <parameter left="const QMessageAccountId &amp;" right="" name="accountId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentFolderId" fullname="QMessage::parentFolderId" href="qmessage.html#parentFolderId" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderId" signature="parentFolderId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="standardFolder" fullname="QMessage::standardFolder" href="qmessage.html#standardFolder" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="StandardFolder" signature="standardFolder() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="from" fullname="QMessage::from" href="qmessage.html#from" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAddress" signature="from() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrom" fullname="QMessage::setFrom" href="qmessage.html#setFrom" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrom(const QMessageAddress &amp; address)">
                <parameter left="const QMessageAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="subject" fullname="QMessage::subject" href="qmessage.html#subject" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="subject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSubject" fullname="QMessage::setSubject" href="qmessage.html#setSubject" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSubject(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="date" fullname="QMessage::date" href="qmessage.html#date" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="date() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDate" fullname="QMessage::setDate" href="qmessage.html#setDate" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDate(const QDateTime &amp; d)">
                <parameter left="const QDateTime &amp;" right="" name="d" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="receivedDate" fullname="QMessage::receivedDate" href="qmessage.html#receivedDate" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="receivedDate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setReceivedDate" fullname="QMessage::setReceivedDate" href="qmessage.html#setReceivedDate" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setReceivedDate(const QDateTime &amp; d)">
                <parameter left="const QDateTime &amp;" right="" name="d" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="to" fullname="QMessage::to" href="qmessage.html#to" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAddressList" signature="to() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTo" fullname="QMessage::setTo" href="qmessage.html#setTo" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTo(const QMessageAddressList &amp; toList)">
                <parameter left="const QMessageAddressList &amp;" right="" name="toList" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTo" fullname="QMessage::setTo" href="qmessage.html#setTo-2" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setTo(const QMessageAddress &amp; address)">
                <parameter left="const QMessageAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cc" fullname="QMessage::cc" href="qmessage.html#cc" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAddressList" signature="cc() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCc" fullname="QMessage::setCc" href="qmessage.html#setCc" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCc(const QMessageAddressList &amp; ccList)">
                <parameter left="const QMessageAddressList &amp;" right="" name="ccList" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bcc" fullname="QMessage::bcc" href="qmessage.html#bcc" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAddressList" signature="bcc() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBcc" fullname="QMessage::setBcc" href="qmessage.html#setBcc" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBcc(const QMessageAddressList &amp; bccList)">
                <parameter left="const QMessageAddressList &amp;" right="" name="bccList" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="status" fullname="QMessage::status" href="qmessage.html#status" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="StatusFlags" signature="status() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="QMessage::setStatus" href="qmessage.html#setStatus" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStatus(QFlags&lt;QMessage::Status&gt; newStatus)">
                <parameter left="QFlags&lt;QMessage::Status&gt;" right="" name="newStatus" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStatus" fullname="QMessage::setStatus" href="qmessage.html#setStatus-2" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setStatus(Status flag, bool set)">
                <parameter left="Status" right="" name="flag" default=""/>
                <parameter left="bool" right="" name="set" default="true"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="priority" fullname="QMessage::priority" href="qmessage.html#priority" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="Priority" signature="priority() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPriority" fullname="QMessage::setPriority" href="qmessage.html#setPriority" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPriority(Priority newPriority)">
                <parameter left="Priority" right="" name="newPriority" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMessage::size" href="qmessage.html#size" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bodyId" fullname="QMessage::bodyId" href="qmessage.html#bodyId" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageContentContainerId" signature="bodyId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBody" fullname="QMessage::setBody" href="qmessage.html#setBody" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBody(const QString &amp; body, const QByteArray &amp; mimeType)">
                <parameter left="const QString &amp;" right="" name="body" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="mimeType" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBody" fullname="QMessage::setBody" href="qmessage.html#setBody-2" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setBody(QTextStream &amp; in, const QByteArray &amp; mimeType)">
                <parameter left="QTextStream &amp;" right="" name="in" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="mimeType" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attachmentIds" fullname="QMessage::attachmentIds" href="qmessage.html#attachmentIds" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageContentContainerIdList" signature="attachmentIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendAttachments" fullname="QMessage::appendAttachments" href="qmessage.html#appendAttachments" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="appendAttachments(const QStringList &amp; fileNames)">
                <parameter left="const QStringList &amp;" right="" name="fileNames" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAttachments" fullname="QMessage::clearAttachments" href="qmessage.html#clearAttachments" location="qmessage_win.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAttachments()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isModified" fullname="QMessage::isModified" href="qmessage.html#isModified" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isModified() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="createResponseMessage" fullname="QMessage::createResponseMessage" href="qmessage.html#createResponseMessage" location="qmessage_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessage" signature="createResponseMessage(ResponseType type) const">
                <parameter left="ResponseType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPreferredCharsets" fullname="QMessage::setPreferredCharsets" href="qmessage.html#setPreferredCharsets" location="qmessage.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setPreferredCharsets(const QList&lt;QByteArray&gt; &amp; charsetNames)">
                <parameter left="const QList&lt;QByteArray&gt; &amp;" right="" name="charsetNames" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredCharsets" fullname="QMessage::preferredCharsets" href="qmessage.html#preferredCharsets" location="qmessage.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QByteArray&gt;" signature="preferredCharsets()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredCharsetFor" fullname="QMessage::preferredCharsetFor" href="qmessage.html#preferredCharsetFor" location="qmessage.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="preferredCharsetFor(const QString &amp; text)">
                <parameter left="const QString &amp;" right="" name="text" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryRemoveRequest" href="qgalleryremoverequest.html" location="qgalleryremoverequest.h" bases="QGalleryAbstractRequest" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="itemId" fullname="QGalleryRemoveRequest::itemId" href="qgalleryremoverequest.html#itemId-prop" location="qgalleryremoverequest.h" type="QVariant">
                <getter name="itemId"/>
                <setter name="setItemId"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryRemoveRequest" fullname="QGalleryRemoveRequest::QGalleryRemoveRequest" href="qgalleryremoverequest.html#QGalleryRemoveRequest" location="qgalleryremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryRemoveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryRemoveRequest" fullname="QGalleryRemoveRequest::QGalleryRemoveRequest" href="qgalleryremoverequest.html#QGalleryRemoveRequest-2" location="qgalleryremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryRemoveRequest(QAbstractGallery * gallery, QObject * parent)">
                <parameter left="QAbstractGallery *" right="" name="gallery" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryRemoveRequest" fullname="QGalleryRemoveRequest::~QGalleryRemoveRequest" href="qgalleryremoverequest.html#dtor.QGalleryRemoveRequest" location="qgalleryremoverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryRemoveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemId" fullname="QGalleryRemoveRequest::itemId" href="qgalleryremoverequest.html#itemId-prop" location="qgalleryremoverequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemId" type="QVariant" signature="itemId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemId" fullname="QGalleryRemoveRequest::setItemId" href="qgalleryremoverequest.html#itemId-prop" location="qgalleryremoverequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="itemId" type="void" signature="setItemId(const QVariant &amp; id)">
                <parameter left="const QVariant &amp;" right="" name="id" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setResponse" fullname="QGalleryRemoveRequest::setResponse" href="qgalleryremoverequest.html#setResponse" location="qgalleryremoverequest.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setResponse(QGalleryAbstractResponse * response)">
                <parameter left="QGalleryAbstractResponse *" right="" name="response" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoMappingManager" href="qgeomappingmanager.html" location="qgeomappingmanager.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoMappingManager" fullname="QGeoMappingManager::~QGeoMappingManager" href="qgeomappingmanager.html#dtor.QGeoMappingManager" location="qgeomappingmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoMappingManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QGeoMappingManager::managerName" href="qgeomappingmanager.html#managerName" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QGeoMappingManager::managerParameters" href="qgeomappingmanager.html#managerParameters" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QGeoMappingManager::managerVersion" href="qgeomappingmanager.html#managerVersion" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="createMapData" fullname="QGeoMappingManager::createMapData" href="qgeomappingmanager.html#createMapData" location="qgeomappingmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoMapData *" signature="createMapData(QGeoMapWidget * widget)">
                <parameter left="QGeoMapWidget *" right="" name="widget" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMapData" fullname="QGeoMappingManager::removeMapData" href="qgeomappingmanager.html#removeMapData" location="qgeomappingmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeMapData(QGeoMapData * mapData)">
                <parameter left="QGeoMapData *" right="" name="mapData" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMapTypes" fullname="QGeoMappingManager::supportedMapTypes" href="qgeomappingmanager.html#supportedMapTypes" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoMapWidget::MapType&gt;" signature="supportedMapTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumImageSize" fullname="QGeoMappingManager::minimumImageSize" href="qgeomappingmanager.html#minimumImageSize" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="minimumImageSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumImageSize" fullname="QGeoMappingManager::maximumImageSize" href="qgeomappingmanager.html#maximumImageSize" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="maximumImageSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumZoomLevel" fullname="QGeoMappingManager::minimumZoomLevel" href="qgeomappingmanager.html#minimumZoomLevel" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="minimumZoomLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumZoomLevel" fullname="QGeoMappingManager::maximumZoomLevel" href="qgeomappingmanager.html#maximumZoomLevel" location="qgeomappingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumZoomLevel() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioEncoderSettings" href="qaudioencodersettings.html" location="qmediaencodersettings.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioEncoderSettings" fullname="QAudioEncoderSettings::QAudioEncoderSettings" href="qaudioencodersettings.html#QAudioEncoderSettings" location="qmediaencodersettings.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioEncoderSettings()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioEncoderSettings" fullname="QAudioEncoderSettings::QAudioEncoderSettings" href="qaudioencodersettings.html#QAudioEncoderSettings-2" location="qmediaencodersettings.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioEncoderSettings(const QAudioEncoderSettings &amp; other)">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioEncoderSettings" fullname="QAudioEncoderSettings::~QAudioEncoderSettings" href="qaudioencodersettings.html#dtor.QAudioEncoderSettings" location="qmediaencodersettings.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioEncoderSettings()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAudioEncoderSettings::operator=" href="qaudioencodersettings.html#operator=" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAudioEncoderSettings &amp;" signature="operator=(const QAudioEncoderSettings &amp; other)">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QAudioEncoderSettings::operator==" href="qaudioencodersettings.html#operator==" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QAudioEncoderSettings &amp; other) const">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QAudioEncoderSettings::operator!=" href="qaudioencodersettings.html#operator!=" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QAudioEncoderSettings &amp; other) const">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QAudioEncoderSettings::isNull" href="qaudioencodersettings.html#isNull" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodingMode" fullname="QAudioEncoderSettings::encodingMode" href="qaudioencodersettings.html#encodingMode" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::EncodingMode" signature="encodingMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEncodingMode" fullname="QAudioEncoderSettings::setEncodingMode" href="qaudioencodersettings.html#setEncodingMode" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEncodingMode(QtMultimediaKit::EncodingMode mode)">
                <parameter left="QtMultimediaKit::EncodingMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="codec" fullname="QAudioEncoderSettings::codec" href="qaudioencodersettings.html#codec" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="codec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCodec" fullname="QAudioEncoderSettings::setCodec" href="qaudioencodersettings.html#setCodec" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bitRate" fullname="QAudioEncoderSettings::bitRate" href="qaudioencodersettings.html#bitRate" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBitRate" fullname="QAudioEncoderSettings::setBitRate" href="qaudioencodersettings.html#setBitRate" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBitRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channelCount" fullname="QAudioEncoderSettings::channelCount" href="qaudioencodersettings.html#channelCount" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channelCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannelCount" fullname="QAudioEncoderSettings::setChannelCount" href="qaudioencodersettings.html#setChannelCount" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannelCount(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleRate" fullname="QAudioEncoderSettings::sampleRate" href="qaudioencodersettings.html#sampleRate" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleRate" fullname="QAudioEncoderSettings::setSampleRate" href="qaudioencodersettings.html#setSampleRate" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="quality" fullname="QAudioEncoderSettings::quality" href="qaudioencodersettings.html#quality" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::EncodingQuality" signature="quality() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setQuality" fullname="QAudioEncoderSettings::setQuality" href="qaudioencodersettings.html#setQuality" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setQuality(QtMultimediaKit::EncodingQuality quality)">
                <parameter left="QtMultimediaKit::EncodingQuality" right="" name="quality" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoEncoderSettings" href="qvideoencodersettings.html" location="qmediaencodersettings.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoEncoderSettings" fullname="QVideoEncoderSettings::QVideoEncoderSettings" href="qvideoencodersettings.html#QVideoEncoderSettings" location="qmediaencodersettings.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoEncoderSettings()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoEncoderSettings" fullname="QVideoEncoderSettings::QVideoEncoderSettings" href="qvideoencodersettings.html#QVideoEncoderSettings-2" location="qmediaencodersettings.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVideoEncoderSettings(const QVideoEncoderSettings &amp; other)">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoEncoderSettings" fullname="QVideoEncoderSettings::~QVideoEncoderSettings" href="qvideoencodersettings.html#dtor.QVideoEncoderSettings" location="qmediaencodersettings.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoEncoderSettings()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QVideoEncoderSettings::operator=" href="qvideoencodersettings.html#operator=" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVideoEncoderSettings &amp;" signature="operator=(const QVideoEncoderSettings &amp; other)">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QVideoEncoderSettings::operator==" href="qvideoencodersettings.html#operator==" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QVideoEncoderSettings &amp; other) const">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QVideoEncoderSettings::operator!=" href="qvideoencodersettings.html#operator!=" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QVideoEncoderSettings &amp; other) const">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QVideoEncoderSettings::isNull" href="qvideoencodersettings.html#isNull" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodingMode" fullname="QVideoEncoderSettings::encodingMode" href="qvideoencodersettings.html#encodingMode" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::EncodingMode" signature="encodingMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEncodingMode" fullname="QVideoEncoderSettings::setEncodingMode" href="qvideoencodersettings.html#setEncodingMode" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEncodingMode(QtMultimediaKit::EncodingMode mode)">
                <parameter left="QtMultimediaKit::EncodingMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="codec" fullname="QVideoEncoderSettings::codec" href="qvideoencodersettings.html#codec" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="codec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCodec" fullname="QVideoEncoderSettings::setCodec" href="qvideoencodersettings.html#setCodec" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="QVideoEncoderSettings::resolution" href="qvideoencodersettings.html#resolution" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="resolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QVideoEncoderSettings::setResolution" href="qvideoencodersettings.html#setResolution" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResolution(const QSize &amp; resolution)">
                <parameter left="const QSize &amp;" right="" name="resolution" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QVideoEncoderSettings::setResolution" href="qvideoencodersettings.html#setResolution-2" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setResolution(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frameRate" fullname="QVideoEncoderSettings::frameRate" href="qvideoencodersettings.html#frameRate" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="frameRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrameRate" fullname="QVideoEncoderSettings::setFrameRate" href="qvideoencodersettings.html#setFrameRate" location="qmediaencodersettings.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrameRate(qreal rate)">
                <parameter left="qreal" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bitRate" fullname="QVideoEncoderSettings::bitRate" href="qvideoencodersettings.html#bitRate" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBitRate" fullname="QVideoEncoderSettings::setBitRate" href="qvideoencodersettings.html#setBitRate" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBitRate(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="quality" fullname="QVideoEncoderSettings::quality" href="qvideoencodersettings.html#quality" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::EncodingQuality" signature="quality() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setQuality" fullname="QVideoEncoderSettings::setQuality" href="qvideoencodersettings.html#setQuality" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setQuality(QtMultimediaKit::EncodingQuality quality)">
                <parameter left="QtMultimediaKit::EncodingQuality" right="" name="quality" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QImageEncoderSettings" href="qimageencodersettings.html" location="qmediaencodersettings.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QImageEncoderSettings" fullname="QImageEncoderSettings::QImageEncoderSettings" href="qimageencodersettings.html#QImageEncoderSettings" location="qmediaencodersettings.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QImageEncoderSettings()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QImageEncoderSettings" fullname="QImageEncoderSettings::QImageEncoderSettings" href="qimageencodersettings.html#QImageEncoderSettings-2" location="qmediaencodersettings.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QImageEncoderSettings(const QImageEncoderSettings &amp; other)">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QImageEncoderSettings" fullname="QImageEncoderSettings::~QImageEncoderSettings" href="qimageencodersettings.html#dtor.QImageEncoderSettings" location="qmediaencodersettings.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QImageEncoderSettings()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QImageEncoderSettings::operator=" href="qimageencodersettings.html#operator=" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QImageEncoderSettings &amp;" signature="operator=(const QImageEncoderSettings &amp; other)">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QImageEncoderSettings::operator==" href="qimageencodersettings.html#operator==" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QImageEncoderSettings &amp; other) const">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QImageEncoderSettings::operator!=" href="qimageencodersettings.html#operator!=" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QImageEncoderSettings &amp; other) const">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QImageEncoderSettings::isNull" href="qimageencodersettings.html#isNull" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="codec" fullname="QImageEncoderSettings::codec" href="qimageencodersettings.html#codec" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="codec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCodec" fullname="QImageEncoderSettings::setCodec" href="qimageencodersettings.html#setCodec" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="QImageEncoderSettings::resolution" href="qimageencodersettings.html#resolution" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="resolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QImageEncoderSettings::setResolution" href="qimageencodersettings.html#setResolution" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResolution(const QSize &amp; resolution)">
                <parameter left="const QSize &amp;" right="" name="resolution" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QImageEncoderSettings::setResolution" href="qimageencodersettings.html#setResolution-2" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setResolution(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="quality" fullname="QImageEncoderSettings::quality" href="qimageencodersettings.html#quality" location="qmediaencodersettings.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::EncodingQuality" signature="quality() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setQuality" fullname="QImageEncoderSettings::setQuality" href="qimageencodersettings.html#setQuality" location="qmediaencodersettings.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setQuality(QtMultimediaKit::EncodingQuality quality)">
                <parameter left="QtMultimediaKit::EncodingQuality" right="" name="quality" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistProvider" href="qmediaplaylistprovider.html" location="qmediaplaylistprovider.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistProvider" fullname="QMediaPlaylistProvider::QMediaPlaylistProvider" href="qmediaplaylistprovider.html#QMediaPlaylistProvider" location="qmediaplaylistprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistProvider(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistProvider" fullname="QMediaPlaylistProvider::~QMediaPlaylistProvider" href="qmediaplaylistprovider.html#dtor.QMediaPlaylistProvider" location="qmediaplaylistprovider.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistProvider()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylistProvider::load" href="qmediaplaylistprovider.html#load" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="load(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylistProvider::load" href="qmediaplaylistprovider.html#load-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="load(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylistProvider::save" href="qmediaplaylistprovider.html#save" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylistProvider::save" href="qmediaplaylistprovider.html#save-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="save(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaCount" fullname="QMediaPlaylistProvider::mediaCount" href="qmediaplaylistprovider.html#mediaCount" location="qmediaplaylistprovider.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="mediaCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlaylistProvider::media" href="qmediaplaylistprovider.html#media" location="qmediaplaylistprovider.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaContent" signature="media(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMediaPlaylistProvider::isReadOnly" href="qmediaplaylistprovider.html#isReadOnly" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMedia" fullname="QMediaPlaylistProvider::addMedia" href="qmediaplaylistprovider.html#addMedia" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="addMedia(const QMediaContent &amp; media)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMedia" fullname="QMediaPlaylistProvider::addMedia" href="qmediaplaylistprovider.html#addMedia-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="addMedia(const QList&lt;QMediaContent&gt; &amp; items)">
                <parameter left="const QList&lt;QMediaContent&gt; &amp;" right="" name="items" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertMedia" fullname="QMediaPlaylistProvider::insertMedia" href="qmediaplaylistprovider.html#insertMedia" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="insertMedia(int position, const QMediaContent &amp; media)">
                <parameter left="int" right="" name="position" default=""/>
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertMedia" fullname="QMediaPlaylistProvider::insertMedia" href="qmediaplaylistprovider.html#insertMedia-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="insertMedia(int position, const QList&lt;QMediaContent&gt; &amp; items)">
                <parameter left="int" right="" name="position" default=""/>
                <parameter left="const QList&lt;QMediaContent&gt; &amp;" right="" name="items" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMedia" fullname="QMediaPlaylistProvider::removeMedia" href="qmediaplaylistprovider.html#removeMedia" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeMedia(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMedia" fullname="QMediaPlaylistProvider::removeMedia" href="qmediaplaylistprovider.html#removeMedia-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="removeMedia(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMediaPlaylistProvider::clear" href="qmediaplaylistprovider.html#clear" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shuffle" fullname="QMediaPlaylistProvider::shuffle" href="qmediaplaylistprovider.html#shuffle" location="qmediaplaylistprovider.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="shuffle()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaAboutToBeInserted" fullname="QMediaPlaylistProvider::mediaAboutToBeInserted" href="qmediaplaylistprovider.html#mediaAboutToBeInserted" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaAboutToBeInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaInserted" fullname="QMediaPlaylistProvider::mediaInserted" href="qmediaplaylistprovider.html#mediaInserted" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaAboutToBeRemoved" fullname="QMediaPlaylistProvider::mediaAboutToBeRemoved" href="qmediaplaylistprovider.html#mediaAboutToBeRemoved" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaAboutToBeRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaRemoved" fullname="QMediaPlaylistProvider::mediaRemoved" href="qmediaplaylistprovider.html#mediaRemoved" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaChanged" fullname="QMediaPlaylistProvider::mediaChanged" href="qmediaplaylistprovider.html#mediaChanged" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaChanged(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loaded" fullname="QMediaPlaylistProvider::loaded" href="qmediaplaylistprovider.html#loaded" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="loaded()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadFailed" fullname="QMediaPlaylistProvider::loadFailed" href="qmediaplaylistprovider.html#loadFailed" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="loadFailed(QMediaPlaylist::Error error, const QString &amp; errorMessage)">
                <parameter left="QMediaPlaylist::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorMessage" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaPlaylistProvider::d_ptr" href="qmediaplaylistprovider.html#d_ptr-var" location="qmediaplaylistprovider.h" type="QMediaPlaylistProviderPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactFetchRequest" href="qcontactfetchrequest.html" location="qcontactfetchrequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactFetchRequest" fullname="QContactFetchRequest::QContactFetchRequest" href="qcontactfetchrequest.html#QContactFetchRequest" location="qcontactfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactFetchRequest" fullname="QContactFetchRequest::~QContactFetchRequest" href="qcontactfetchrequest.html#dtor.QContactFetchRequest" location="qcontactfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QContactFetchRequest::setFilter" href="qcontactfetchrequest.html#setFilter" location="qcontactfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QContactFilter &amp; filter)">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QContactFetchRequest::setSorting" href="qcontactfetchrequest.html#setSorting" location="qcontactfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QList&lt;QContactSortOrder&gt; &amp; sorting)">
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFetchHint" fullname="QContactFetchRequest::setFetchHint" href="qcontactfetchrequest.html#setFetchHint" location="qcontactfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFetchHint(const QContactFetchHint &amp; fetchHint)">
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QContactFetchRequest::filter" href="qcontactfetchrequest.html#filter" location="qcontactfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QContactFetchRequest::sorting" href="qcontactfetchrequest.html#sorting" location="qcontactfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactSortOrder&gt;" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fetchHint" fullname="QContactFetchRequest::fetchHint" href="qcontactfetchrequest.html#fetchHint" location="qcontactfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactFetchHint" signature="fetchHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contacts" fullname="QContactFetchRequest::contacts" href="qcontactfetchrequest.html#contacts" location="qcontactfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="contacts() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryUrlRequest" href="qgalleryurlrequest.html" location="qgalleryurlrequest.h" bases="QGalleryAbstractRequest" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="itemUrl" fullname="QGalleryUrlRequest::itemUrl" href="qgalleryurlrequest.html#itemUrl-prop" location="qgalleryurlrequest.h" type="QUrl">
                <getter name="itemUrl"/>
                <setter name="setItemUrl"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QGalleryUrlRequest::create" href="qgalleryurlrequest.html#create-prop" location="qgalleryurlrequest.h" type="bool">
                <getter name="create"/>
                <setter name="setCreate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="itemId" fullname="QGalleryUrlRequest::itemId" href="qgalleryurlrequest.html#itemId-prop" location="qgalleryurlrequest.h" type="QVariant">
                <getter name="itemId"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QGalleryUrlRequest::itemType" href="qgalleryurlrequest.html#itemType-prop" location="qgalleryurlrequest.h" type="QString">
                <getter name="itemType"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryUrlRequest" fullname="QGalleryUrlRequest::QGalleryUrlRequest" href="qgalleryurlrequest.html#QGalleryUrlRequest" location="qgalleryurlrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryUrlRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryUrlRequest" fullname="QGalleryUrlRequest::QGalleryUrlRequest" href="qgalleryurlrequest.html#QGalleryUrlRequest-2" location="qgalleryurlrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryUrlRequest(QAbstractGallery * gallery, QObject * parent)">
                <parameter left="QAbstractGallery *" right="" name="gallery" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryUrlRequest" fullname="QGalleryUrlRequest::~QGalleryUrlRequest" href="qgalleryurlrequest.html#dtor.QGalleryUrlRequest" location="qgalleryurlrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryUrlRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemUrl" fullname="QGalleryUrlRequest::itemUrl" href="qgalleryurlrequest.html#itemUrl-prop" location="qgalleryurlrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemUrl" type="QUrl" signature="itemUrl() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemUrl" fullname="QGalleryUrlRequest::setItemUrl" href="qgalleryurlrequest.html#itemUrl-prop" location="qgalleryurlrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="itemUrl" type="void" signature="setItemUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QGalleryUrlRequest::create" href="qgalleryurlrequest.html#create-prop" location="qgalleryurlrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="create" type="bool" signature="create() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCreate" fullname="QGalleryUrlRequest::setCreate" href="qgalleryurlrequest.html#create-prop" location="qgalleryurlrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="create" type="void" signature="setCreate(bool create)">
                <parameter left="bool" right="" name="create" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemId" fullname="QGalleryUrlRequest::itemId" href="qgalleryurlrequest.html#itemId-prop" location="qgalleryurlrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemId" type="QVariant" signature="itemId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QGalleryUrlRequest::itemType" href="qgalleryurlrequest.html#itemType-prop" location="qgalleryurlrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemType" type="QString" signature="itemType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemChanged" fullname="QGalleryUrlRequest::itemChanged" href="qgalleryurlrequest.html#itemChanged" location="qgalleryurlrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setResponse" fullname="QGalleryUrlRequest::setResponse" href="qgalleryurlrequest.html#setResponse" location="qgalleryurlrequest.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setResponse(QGalleryAbstractResponse * response)">
                <parameter left="QGalleryAbstractResponse *" right="" name="response" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemManagerEngineFactory" href="qorganizeritemmanagerenginefactory.html" location="qorganizeritemmanagerenginefactory.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedImplementationVersions" fullname="QOrganizerItemManagerEngineFactory::supportedImplementationVersions" href="qorganizeritemmanagerenginefactory.html#supportedImplementationVersions" location="qorganizeritemmanagerenginefactory.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedImplementationVersions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemManagerEngineFactory" fullname="QOrganizerItemManagerEngineFactory::~QOrganizerItemManagerEngineFactory" href="qorganizeritemmanagerenginefactory.html#dtor.QOrganizerItemManagerEngineFactory" location="qorganizeritemmanagerenginefactory.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemManagerEngineFactory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="engine" fullname="QOrganizerItemManagerEngineFactory::engine" href="qorganizeritemmanagerenginefactory.html#engine" location="qorganizeritemmanagerenginefactory.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemManagerEngine *" signature="engine(const QMap&lt;QString, QString&gt; &amp; parameters, QOrganizerItemManager::Error * error)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QOrganizerItemManagerEngineFactory::managerName" href="qorganizeritemmanagerenginefactory.html#managerName" location="qorganizeritemmanagerenginefactory.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryAbstractRequest" href="qgalleryabstractrequest.html" location="qgalleryabstractrequest.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="gallery" fullname="QGalleryAbstractRequest::gallery" href="qgalleryabstractrequest.html#gallery-prop" location="qgalleryabstractrequest.h" type="QAbstractGallery *">
                <getter name="gallery"/>
                <setter name="setGallery"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="supported" fullname="QGalleryAbstractRequest::supported" href="qgalleryabstractrequest.html#supported-prop" location="qgalleryabstractrequest.h" type="bool">
                <getter name="isSupported"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QGalleryAbstractRequest::state" href="qgalleryabstractrequest.html#state-prop" location="qgalleryabstractrequest.h" type="State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="result" fullname="QGalleryAbstractRequest::result" href="qgalleryabstractrequest.html#result-prop" location="qgalleryabstractrequest.h" type="int">
                <getter name="result"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentProgress" fullname="QGalleryAbstractRequest::currentProgress" href="qgalleryabstractrequest.html#currentProgress-prop" location="qgalleryabstractrequest.h" type="int">
                <getter name="currentProgress"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="maximumProgress" fullname="QGalleryAbstractRequest::maximumProgress" href="qgalleryabstractrequest.html#maximumProgress-prop" location="qgalleryabstractrequest.h" type="int">
                <getter name="maximumProgress"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QGalleryAbstractRequest::State" href="qgalleryabstractrequest.html#State-enum" location="qgalleryabstractrequest.h">
                <value name="Inactive" value="0"/>
                <value name="Active" value="1"/>
                <value name="Cancelling" value="2"/>
                <value name="Idle" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Result" fullname="QGalleryAbstractRequest::Result" href="qgalleryabstractrequest.html#Result-enum" location="qgalleryabstractrequest.h">
                <value name="NoResult" value="0"/>
                <value name="Succeeded" value="1"/>
                <value name="Cancelled" value="2"/>
                <value name="NoGallery" value="3"/>
                <value name="NotSupported" value="4"/>
                <value name="ConnectionError" value="5"/>
                <value name="InvalidItemError" value="6"/>
                <value name="ItemTypeError" value="7"/>
                <value name="InvalidPropertyError" value="8"/>
                <value name="PropertyTypeError" value="9"/>
                <value name="UnsupportedFilterTypeError" value="10"/>
                <value name="UnsupportedFilterOptionError" value="11"/>
                <value name="PermissionsError" value="12"/>
                <value name="InvalidDestinationError" value="13"/>
                <value name="InvalidUrlError" value="14"/>
                <value name="RequestError" value="100"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QGalleryAbstractRequest::Type" href="qgalleryabstractrequest.html#Type-enum" location="qgalleryabstractrequest.h">
                <value name="Item" value="0"/>
                <value name="Url" value="1"/>
                <value name="Query" value="2"/>
                <value name="Count" value="3"/>
                <value name="Remove" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Scope" fullname="QGalleryAbstractRequest::Scope" href="qgalleryabstractrequest.html#Scope-enum" location="qgalleryabstractrequest.h">
                <value name="AllDescendants" value="0"/>
                <value name="DirectDescendants" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryAbstractRequest" fullname="QGalleryAbstractRequest::QGalleryAbstractRequest" href="qgalleryabstractrequest.html#QGalleryAbstractRequest" location="qgalleryabstractrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryAbstractRequest(Type type, QObject * parent)">
                <parameter left="Type" right="" name="type" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryAbstractRequest" fullname="QGalleryAbstractRequest::QGalleryAbstractRequest" href="qgalleryabstractrequest.html#QGalleryAbstractRequest-2" location="qgalleryabstractrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryAbstractRequest(QAbstractGallery * gallery, Type type, QObject * parent)">
                <parameter left="QAbstractGallery *" right="" name="gallery" default=""/>
                <parameter left="Type" right="" name="type" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryAbstractRequest" fullname="QGalleryAbstractRequest::~QGalleryAbstractRequest" href="qgalleryabstractrequest.html#dtor.QGalleryAbstractRequest" location="qgalleryabstractrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryAbstractRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="gallery" fullname="QGalleryAbstractRequest::gallery" href="qgalleryabstractrequest.html#gallery-prop" location="qgalleryabstractrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="gallery" type="QAbstractGallery *" signature="gallery() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGallery" fullname="QGalleryAbstractRequest::setGallery" href="qgalleryabstractrequest.html#gallery-prop" location="qgalleryabstractrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="gallery" type="void" signature="setGallery(QAbstractGallery * gallery)">
                <parameter left="QAbstractGallery *" right="" name="gallery" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QGalleryAbstractRequest::isSupported" href="qgalleryabstractrequest.html#supported-prop" location="qgalleryabstractrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="supported" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QGalleryAbstractRequest::type" href="qgalleryabstractrequest.html#type" location="qgalleryabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QGalleryAbstractRequest::state" href="qgalleryabstractrequest.html#state-prop" location="qgalleryabstractrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="result" fullname="QGalleryAbstractRequest::result" href="qgalleryabstractrequest.html#result-prop" location="qgalleryabstractrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="result" type="int" signature="result() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentProgress" fullname="QGalleryAbstractRequest::currentProgress" href="qgalleryabstractrequest.html#currentProgress-prop" location="qgalleryabstractrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentProgress" type="int" signature="currentProgress() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumProgress" fullname="QGalleryAbstractRequest::maximumProgress" href="qgalleryabstractrequest.html#maximumProgress-prop" location="qgalleryabstractrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="maximumProgress" type="int" signature="maximumProgress() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForFinished" fullname="QGalleryAbstractRequest::waitForFinished" href="qgalleryabstractrequest.html#waitForFinished" location="qgalleryabstractrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForFinished(int msecs)">
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="execute" fullname="QGalleryAbstractRequest::execute" href="qgalleryabstractrequest.html#execute" location="qgalleryabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="execute()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QGalleryAbstractRequest::cancel" href="qgalleryabstractrequest.html#cancel" location="qgalleryabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QGalleryAbstractRequest::clear" href="qgalleryabstractrequest.html#clear" location="qgalleryabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedChanged" fullname="QGalleryAbstractRequest::supportedChanged" href="qgalleryabstractrequest.html#supportedChanged" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="supportedChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="succeeded" fullname="QGalleryAbstractRequest::succeeded" href="qgalleryabstractrequest.html#succeeded" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="succeeded()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelled" fullname="QGalleryAbstractRequest::cancelled" href="qgalleryabstractrequest.html#cancelled" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="cancelled()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="failed" fullname="QGalleryAbstractRequest::failed" href="qgalleryabstractrequest.html#failed" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="failed(int result)">
                <parameter left="int" right="" name="result" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGalleryAbstractRequest::finished" href="qgalleryabstractrequest.html#finished" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished(int result)">
                <parameter left="int" right="" name="result" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QGalleryAbstractRequest::stateChanged" href="qgalleryabstractrequest.html#stateChanged" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QGalleryAbstractRequest::State state)">
                <parameter left="QGalleryAbstractRequest::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resultChanged" fullname="QGalleryAbstractRequest::resultChanged" href="qgalleryabstractrequest.html#resultChanged" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resultChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="progressChanged" fullname="QGalleryAbstractRequest::progressChanged" href="qgalleryabstractrequest.html#progressChanged" location="qgalleryabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="progressChanged(int current, int maximum)">
                <parameter left="int" right="" name="current" default=""/>
                <parameter left="int" right="" name="maximum" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setResponse" fullname="QGalleryAbstractRequest::setResponse" href="qgalleryabstractrequest.html#setResponse" location="qgalleryabstractrequest.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setResponse(QGalleryAbstractResponse * response)">
                <parameter left="QGalleryAbstractResponse *" right="" name="response" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QGalleryAbstractRequest::d_ptr" href="qgalleryabstractrequest.html#d_ptr-var" location="qgalleryabstractrequest.h" type="QScopedPointer&lt;QGalleryAbstractRequestPrivate&gt;" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailFilter" href="qorganizeritemdetailfilter.html" location="qorganizeritemdetailfilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailFilter" fullname="QOrganizerItemDetailFilter::QOrganizerItemDetailFilter" href="qorganizeritemdetailfilter.html#QOrganizerItemDetailFilter" location="qorganizeritemdetailfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetailFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailFilter" fullname="QOrganizerItemDetailFilter::QOrganizerItemDetailFilter" href="qorganizeritemdetailfilter.html#QOrganizerItemDetailFilter-2" location="qorganizeritemdetailfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemDetailFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionName" fullname="QOrganizerItemDetailFilter::setDetailDefinitionName" href="qorganizeritemdetailfilter.html#setDetailDefinitionName" location="qorganizeritemdetailfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionName(const QString &amp; definitionName, const QString &amp; fieldName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchFlags" fullname="QOrganizerItemDetailFilter::setMatchFlags" href="qorganizeritemdetailfilter.html#setMatchFlags" location="qorganizeritemdetailfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchFlags(QFlags&lt;QOrganizerItemFilter::MatchFlag&gt; flags)">
                <parameter left="QFlags&lt;QOrganizerItemFilter::MatchFlag&gt;" right="" name="flags" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QOrganizerItemDetailFilter::setValue" href="qorganizeritemdetailfilter.html#setValue" location="qorganizeritemdetailfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionName" fullname="QOrganizerItemDetailFilter::detailDefinitionName" href="qorganizeritemdetailfilter.html#detailDefinitionName" location="qorganizeritemdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailDefinitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailFieldName" fullname="QOrganizerItemDetailFilter::detailFieldName" href="qorganizeritemdetailfilter.html#detailFieldName" location="qorganizeritemdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailFieldName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchFlags" fullname="QOrganizerItemDetailFilter::matchFlags" href="qorganizeritemdetailfilter.html#matchFlags" location="qorganizeritemdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemFilter::MatchFlags" signature="matchFlags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QOrganizerItemDetailFilter::value" href="qorganizeritemdetailfilter.html#value" location="qorganizeritemdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipFetchRequest" href="qcontactrelationshipfetchrequest.html" location="qcontactrelationshipfetchrequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipFetchRequest" fullname="QContactRelationshipFetchRequest::QContactRelationshipFetchRequest" href="qcontactrelationshipfetchrequest.html#QContactRelationshipFetchRequest" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactRelationshipFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactRelationshipFetchRequest" fullname="QContactRelationshipFetchRequest::~QContactRelationshipFetchRequest" href="qcontactrelationshipfetchrequest.html#dtor.QContactRelationshipFetchRequest" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactRelationshipFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFirst" fullname="QContactRelationshipFetchRequest::setFirst" href="qcontactrelationshipfetchrequest.html#setFirst" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFirst(const QContactId &amp; firstId)">
                <parameter left="const QContactId &amp;" right="" name="firstId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="first" fullname="QContactRelationshipFetchRequest::first" href="qcontactrelationshipfetchrequest.html#first" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactId" signature="first() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationshipType" fullname="QContactRelationshipFetchRequest::setRelationshipType" href="qcontactrelationshipfetchrequest.html#setRelationshipType" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationshipType(const QString &amp; relationshipType)">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipType" fullname="QContactRelationshipFetchRequest::relationshipType" href="qcontactrelationshipfetchrequest.html#relationshipType" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="relationshipType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecond" fullname="QContactRelationshipFetchRequest::setSecond" href="qcontactrelationshipfetchrequest.html#setSecond" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSecond(const QContactId &amp; secondId)">
                <parameter left="const QContactId &amp;" right="" name="secondId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="second" fullname="QContactRelationshipFetchRequest::second" href="qcontactrelationshipfetchrequest.html#second" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactId" signature="second() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContactRelationshipFetchRequest::relationships" href="qcontactrelationshipfetchrequest.html#relationships" location="qcontactrelationshipfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactRelationship&gt;" signature="relationships() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemInstanceFetchRequest" href="qorganizeriteminstancefetchrequest.html" location="qorganizeriteminstancefetchrequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemInstanceFetchRequest" fullname="QOrganizerItemInstanceFetchRequest::QOrganizerItemInstanceFetchRequest" href="qorganizeriteminstancefetchrequest.html#QOrganizerItemInstanceFetchRequest" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemInstanceFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QOrganizerItemInstanceFetchRequest::setFilter" href="qorganizeriteminstancefetchrequest.html#setFilter" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QOrganizerItemInstanceFetchRequest::setSorting" href="qorganizeriteminstancefetchrequest.html#setSorting" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QList&lt;QOrganizerItemSortOrder&gt; &amp; sorting)">
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFetchHint" fullname="QOrganizerItemInstanceFetchRequest::setFetchHint" href="qorganizeriteminstancefetchrequest.html#setFetchHint" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFetchHint(const QOrganizerItemFetchHint &amp; fetchHint)">
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QOrganizerItemInstanceFetchRequest::filter" href="qorganizeriteminstancefetchrequest.html#filter" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QOrganizerItemInstanceFetchRequest::sorting" href="qorganizeriteminstancefetchrequest.html#sorting" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemSortOrder&gt;" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fetchHint" fullname="QOrganizerItemInstanceFetchRequest::fetchHint" href="qorganizeriteminstancefetchrequest.html#fetchHint" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemFetchHint" signature="fetchHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QOrganizerItemInstanceFetchRequest::items" href="qorganizeriteminstancefetchrequest.html#items" location="qorganizeriteminstancefetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="items() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioInput" href="qaudioinput.html" location="qaudioinput.h" bases="" module="QtMultimediaKit">
            <contents name="symbian-platform-security-requirements" title="Symbian Platform Security Requirements" level="1"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioInput" fullname="QAudioInput::QAudioInput" href="qaudioinput.html#QAudioInput" location="qaudioinput.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioInput(const QAudioFormat &amp; format, QObject * parent)">
                <parameter left="const QAudioFormat &amp;" right="" name="format" default="QAudioFormat()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioInput" fullname="QAudioInput::QAudioInput" href="qaudioinput.html#QAudioInput-2" location="qaudioinput.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioInput(const QAudioDeviceInfo &amp; audioDevice, const QAudioFormat &amp; format, QObject * parent)">
                <parameter left="const QAudioDeviceInfo &amp;" right="" name="audioDevice" default=""/>
                <parameter left="const QAudioFormat &amp;" right="" name="format" default="QAudioFormat()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioInput" fullname="QAudioInput::~QAudioInput" href="qaudioinput.html#dtor.QAudioInput" location="qaudioinput.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioInput()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QAudioInput::format" href="qaudioinput.html#format" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QAudioInput::start" href="qaudioinput.html#start" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="start(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QAudioInput::start" href="qaudioinput.html#start-2" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QIODevice *" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QAudioInput::stop" href="qaudioinput.html#stop" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QAudioInput::reset" href="qaudioinput.html#reset" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reset()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="suspend" fullname="QAudioInput::suspend" href="qaudioinput.html#suspend" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="suspend()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QAudioInput::resume" href="qaudioinput.html#resume" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resume()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBufferSize" fullname="QAudioInput::setBufferSize" href="qaudioinput.html#setBufferSize" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBufferSize(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferSize" fullname="QAudioInput::bufferSize" href="qaudioinput.html#bufferSize" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesReady" fullname="QAudioInput::bytesReady" href="qaudioinput.html#bytesReady" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bytesReady() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="periodSize" fullname="QAudioInput::periodSize" href="qaudioinput.html#periodSize" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="periodSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotifyInterval" fullname="QAudioInput::setNotifyInterval" href="qaudioinput.html#setNotifyInterval" location="qaudioinput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNotifyInterval(int ms)">
                <parameter left="int" right="" name="ms" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QAudioInput::notifyInterval" href="qaudioinput.html#notifyInterval" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="notifyInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="processedUSecs" fullname="QAudioInput::processedUSecs" href="qaudioinput.html#processedUSecs" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="processedUSecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="elapsedUSecs" fullname="QAudioInput::elapsedUSecs" href="qaudioinput.html#elapsedUSecs" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="elapsedUSecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QAudioInput::error" href="qaudioinput.html#error" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudio::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QAudioInput::state" href="qaudioinput.html#state" location="qaudioinput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudio::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QAudioInput::stateChanged" href="qaudioinput.html#stateChanged" location="qaudioinput.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QAudio::State state)">
                <parameter left="QAudio::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notify" fullname="QAudioInput::notify" href="qaudioinput.html#notify" location="qaudioinput.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notify()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFeedbackEffect" href="qfeedbackeffect.html" location="qfeedbackeffect.h" bases="" module="QtFeedback">
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QFeedbackEffect::duration" href="qfeedbackeffect.html#duration-prop" location="qfeedbackeffect.h" type="int">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QFeedbackEffect::state" href="qfeedbackeffect.html#state-prop" location="qfeedbackeffect.h" type="State">
                <getter name="state"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ThemeEffect" fullname="QFeedbackEffect::ThemeEffect" href="qfeedbackeffect.html#ThemeEffect-enum" location="qfeedbackeffect.h">
                <value name="ThemeBasic" value="0"/>
                <value name="ThemeSensitive" value="1"/>
                <value name="ThemeBasicButton" value="2"/>
                <value name="ThemeSensitiveButton" value="3"/>
                <value name="ThemeBasicKeypad" value="4"/>
                <value name="ThemeSensitiveKeypad" value="5"/>
                <value name="ThemeBasicSlider" value="6"/>
                <value name="ThemeSensitiveSlider" value="7"/>
                <value name="ThemeBasicItem" value="8"/>
                <value name="ThemeSensitiveItem" value="9"/>
                <value name="ThemeItemScroll" value="10"/>
                <value name="ThemeItemPick" value="11"/>
                <value name="ThemeItemDrop" value="12"/>
                <value name="ThemeItemMoveOver" value="13"/>
                <value name="ThemeBounceEffect" value="14"/>
                <value name="ThemeCheckBox" value="15"/>
                <value name="ThemeMultipleCheckBox" value="16"/>
                <value name="ThemeEditor" value="17"/>
                <value name="ThemeTextSelection" value="18"/>
                <value name="ThemeBlankSelection" value="19"/>
                <value name="ThemeLineSelection" value="20"/>
                <value name="ThemeEmptyLineSelection" value="21"/>
                <value name="ThemePopUp" value="22"/>
                <value name="ThemePopupOpen" value="23"/>
                <value name="ThemePopupClose" value="24"/>
                <value name="ThemeFlick" value="25"/>
                <value name="ThemeStopFlick" value="26"/>
                <value name="ThemeMultitouchActivate" value="27"/>
                <value name="ThemeRotateStep" value="28"/>
                <value name="ThemeLongPress" value="29"/>
                <value name="ThemePositiveTacticon" value="30"/>
                <value name="ThemeNeutralTacticon" value="31"/>
                <value name="ThemeNegativeTacticon" value="32"/>
                <value name="NumberOfThemeEffects" value="33"/>
                <value name="ThemeUser" value="65535"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Duration" fullname="QFeedbackEffect::Duration" href="qfeedbackeffect.html#Duration-enum" location="qfeedbackeffect.h">
                <value name="INFINITE" value="-1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QFeedbackEffect::State" href="qfeedbackeffect.html#State-enum" location="qfeedbackeffect.h">
                <value name="Stopped" value="0"/>
                <value name="Paused" value="1"/>
                <value name="Running" value="2"/>
                <value name="Loading" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ErrorType" fullname="QFeedbackEffect::ErrorType" href="qfeedbackeffect.html#ErrorType-enum" location="qfeedbackeffect.h">
                <value name="UnknownError" value="0"/>
                <value name="DeviceBusy" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFeedbackEffect" fullname="QFeedbackEffect::QFeedbackEffect" href="qfeedbackeffect.html#QFeedbackEffect" location="qfeedbackeffect.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFeedbackEffect(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QFeedbackEffect::state" href="qfeedbackeffect.html#state-prop" location="qfeedbackeffect.h" virtual="pure" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QFeedbackEffect::duration" href="qfeedbackeffect.html#duration-prop" location="qfeedbackeffect.h" virtual="pure" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="int" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsThemeEffect" fullname="QFeedbackEffect::supportsThemeEffect" href="qfeedbackeffect.html#supportsThemeEffect" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="supportsThemeEffect()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playThemeEffect" fullname="QFeedbackEffect::playThemeEffect" href="qfeedbackeffect.html#playThemeEffect" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="playThemeEffect(ThemeEffect effect)">
                <parameter left="ThemeEffect" right="" name="effect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QFeedbackEffect::start" href="qfeedbackeffect.html#start" location="qfeedbackeffect.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QFeedbackEffect::stop" href="qfeedbackeffect.html#stop" location="qfeedbackeffect.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QFeedbackEffect::pause" href="qfeedbackeffect.html#pause" location="qfeedbackeffect.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setState" fullname="QFeedbackEffect::setState" href="qfeedbackeffect.html#setState" location="qfeedbackeffect.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setState(State )">
                <parameter left="State" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QFeedbackEffect::error" href="qfeedbackeffect.html#error" location="qfeedbackeffect.h" virtual="non" meta="signal" const="true" static="false" overload="false" type="void" signature="error(QFeedbackEffect::ErrorType ) const">
                <parameter left="QFeedbackEffect::ErrorType" right="" name="" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFeedbackHapticsEffect" href="qfeedbackhapticseffect.html" location="qfeedbackeffect.h" bases="QFeedbackEffect" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QFeedbackHapticsEffect::duration" href="qfeedbackhapticseffect.html#duration-prop" location="qfeedbackeffect.h" type="int">
                <getter name="duration"/>
                <setter name="setDuration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="intensity" fullname="QFeedbackHapticsEffect::intensity" href="qfeedbackhapticseffect.html#intensity-prop" location="qfeedbackeffect.h" type="qreal">
                <getter name="intensity"/>
                <setter name="setIntensity"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="attackTime" fullname="QFeedbackHapticsEffect::attackTime" href="qfeedbackhapticseffect.html#attackTime-prop" location="qfeedbackeffect.h" type="int">
                <getter name="attackTime"/>
                <setter name="setAttackTime"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="attackIntensity" fullname="QFeedbackHapticsEffect::attackIntensity" href="qfeedbackhapticseffect.html#attackIntensity-prop" location="qfeedbackeffect.h" type="qreal">
                <getter name="attackIntensity"/>
                <setter name="setAttackIntensity"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="fadeTime" fullname="QFeedbackHapticsEffect::fadeTime" href="qfeedbackhapticseffect.html#fadeTime-prop" location="qfeedbackeffect.h" type="int">
                <getter name="fadeTime"/>
                <setter name="setFadeTime"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="fadeIntensity" fullname="QFeedbackHapticsEffect::fadeIntensity" href="qfeedbackhapticseffect.html#fadeIntensity-prop" location="qfeedbackeffect.h" type="int">
                <getter name="fadeIntensity"/>
                <setter name="setFadeIntensity"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="period" fullname="QFeedbackHapticsEffect::period" href="qfeedbackhapticseffect.html#period-prop" location="qfeedbackeffect.h" type="int">
                <getter name="period"/>
                <setter name="setPeriod"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="actuator" fullname="QFeedbackHapticsEffect::actuator" href="qfeedbackhapticseffect.html#actuator-prop" location="qfeedbackeffect.h" type="QFeedbackActuator">
                <getter name="actuator"/>
                <setter name="setActuator"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFeedbackHapticsEffect" fullname="QFeedbackHapticsEffect::QFeedbackHapticsEffect" href="qfeedbackhapticseffect.html#QFeedbackHapticsEffect" location="qfeedbackeffect.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFeedbackHapticsEffect(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFeedbackHapticsEffect" fullname="QFeedbackHapticsEffect::~QFeedbackHapticsEffect" href="qfeedbackhapticseffect.html#dtor.QFeedbackHapticsEffect" location="qfeedbackeffect.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFeedbackHapticsEffect()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDuration" fullname="QFeedbackHapticsEffect::setDuration" href="qfeedbackhapticseffect.html#duration-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="duration" type="void" signature="setDuration(int msecs)">
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QFeedbackHapticsEffect::duration" href="qfeedbackhapticseffect.html#duration-prop" location="qfeedbackeffect.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="int" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIntensity" fullname="QFeedbackHapticsEffect::setIntensity" href="qfeedbackhapticseffect.html#intensity-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="intensity" type="void" signature="setIntensity(qreal intensity)">
                <parameter left="qreal" right="" name="intensity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="intensity" fullname="QFeedbackHapticsEffect::intensity" href="qfeedbackhapticseffect.html#intensity-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="intensity" type="qreal" signature="intensity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttackTime" fullname="QFeedbackHapticsEffect::setAttackTime" href="qfeedbackhapticseffect.html#attackTime-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="attackTime" type="void" signature="setAttackTime(int msecs)">
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attackTime" fullname="QFeedbackHapticsEffect::attackTime" href="qfeedbackhapticseffect.html#attackTime-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="attackTime" type="int" signature="attackTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttackIntensity" fullname="QFeedbackHapticsEffect::setAttackIntensity" href="qfeedbackhapticseffect.html#attackIntensity-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="attackIntensity" type="void" signature="setAttackIntensity(qreal intensity)">
                <parameter left="qreal" right="" name="intensity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attackIntensity" fullname="QFeedbackHapticsEffect::attackIntensity" href="qfeedbackhapticseffect.html#attackIntensity-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="attackIntensity" type="qreal" signature="attackIntensity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFadeTime" fullname="QFeedbackHapticsEffect::setFadeTime" href="qfeedbackhapticseffect.html#fadeTime-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="fadeTime" type="void" signature="setFadeTime(int msecs)">
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fadeTime" fullname="QFeedbackHapticsEffect::fadeTime" href="qfeedbackhapticseffect.html#fadeTime-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="fadeTime" type="int" signature="fadeTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFadeIntensity" fullname="QFeedbackHapticsEffect::setFadeIntensity" href="qfeedbackhapticseffect.html#fadeIntensity-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="fadeIntensity" type="void" signature="setFadeIntensity(qreal intensity)">
                <parameter left="qreal" right="" name="intensity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fadeIntensity" fullname="QFeedbackHapticsEffect::fadeIntensity" href="qfeedbackhapticseffect.html#fadeIntensity-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="fadeIntensity" type="qreal" signature="fadeIntensity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeriod" fullname="QFeedbackHapticsEffect::setPeriod" href="qfeedbackhapticseffect.html#period-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="period" type="void" signature="setPeriod(int msecs)">
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="period" fullname="QFeedbackHapticsEffect::period" href="qfeedbackhapticseffect.html#period-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="period" type="int" signature="period() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActuator" fullname="QFeedbackHapticsEffect::setActuator" href="qfeedbackhapticseffect.html#actuator-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="actuator" type="void" signature="setActuator(const QFeedbackActuator &amp; actuator)">
                <parameter left="const QFeedbackActuator &amp;" right="" name="actuator" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actuator" fullname="QFeedbackHapticsEffect::actuator" href="qfeedbackhapticseffect.html#actuator-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="actuator" type="QFeedbackActuator" signature="actuator() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QFeedbackHapticsEffect::state" href="qfeedbackhapticseffect.html#state" location="qfeedbackeffect.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setState" fullname="QFeedbackHapticsEffect::setState" href="qfeedbackhapticseffect.html#setState" location="qfeedbackeffect.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setState(State )">
                <parameter left="State" right="" name="" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFeedbackFileEffect" href="qfeedbackfileeffect.html" location="qfeedbackeffect.h" bases="QFeedbackEffect" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="loaded" fullname="QFeedbackFileEffect::loaded" href="qfeedbackfileeffect.html#loaded-prop" location="qfeedbackeffect.h" type="bool">
                <getter name="isLoaded"/>
                <setter name="setLoaded"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QFeedbackFileEffect::fileName" href="qfeedbackfileeffect.html#fileName-prop" location="qfeedbackeffect.h" type="QString">
                <getter name="fileName"/>
                <setter name="setFileName"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFeedbackFileEffect" fullname="QFeedbackFileEffect::QFeedbackFileEffect" href="qfeedbackfileeffect.html#QFeedbackFileEffect" location="qfeedbackeffect.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFeedbackFileEffect(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFeedbackFileEffect" fullname="QFeedbackFileEffect::~QFeedbackFileEffect" href="qfeedbackfileeffect.html#dtor.QFeedbackFileEffect" location="qfeedbackeffect.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFeedbackFileEffect()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QFeedbackFileEffect::duration" href="qfeedbackfileeffect.html#duration" location="qfeedbackeffect.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isLoaded" fullname="QFeedbackFileEffect::isLoaded" href="qfeedbackfileeffect.html#loaded-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="loaded" type="bool" signature="isLoaded() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QFeedbackFileEffect::load" href="qfeedbackfileeffect.html#load" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="load()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unload" fullname="QFeedbackFileEffect::unload" href="qfeedbackfileeffect.html#unload" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unload()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLoaded" fullname="QFeedbackFileEffect::setLoaded" href="qfeedbackfileeffect.html#loaded-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="loaded" type="void" signature="setLoaded(bool )">
                <parameter left="bool" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QFeedbackFileEffect::fileName" href="qfeedbackfileeffect.html#fileName-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="fileName" type="QString" signature="fileName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFileName" fullname="QFeedbackFileEffect::setFileName" href="qfeedbackfileeffect.html#fileName-prop" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="fileName" type="void" signature="setFileName(const QString &amp; )">
                <parameter left="const QString &amp;" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMimeTypes" fullname="QFeedbackFileEffect::supportedMimeTypes" href="qfeedbackfileeffect.html#supportedMimeTypes" location="qfeedbackeffect.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="supportedMimeTypes()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QFeedbackFileEffect::state" href="qfeedbackfileeffect.html#state" location="qfeedbackeffect.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setState" fullname="QFeedbackFileEffect::setState" href="qfeedbackfileeffect.html#setState" location="qfeedbackeffect.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setState(State )">
                <parameter left="State" right="" name="" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipRemoveRequest" href="qcontactrelationshipremoverequest.html" location="qcontactrelationshipremoverequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipRemoveRequest" fullname="QContactRelationshipRemoveRequest::QContactRelationshipRemoveRequest" href="qcontactrelationshipremoverequest.html#QContactRelationshipRemoveRequest" location="qcontactrelationshipremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactRelationshipRemoveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactRelationshipRemoveRequest" fullname="QContactRelationshipRemoveRequest::~QContactRelationshipRemoveRequest" href="qcontactrelationshipremoverequest.html#dtor.QContactRelationshipRemoveRequest" location="qcontactrelationshipremoverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactRelationshipRemoveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationship" fullname="QContactRelationshipRemoveRequest::setRelationship" href="qcontactrelationshipremoverequest.html#setRelationship" location="qcontactrelationshipremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationship(const QContactRelationship &amp; relationship)">
                <parameter left="const QContactRelationship &amp;" right="" name="relationship" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationships" fullname="QContactRelationshipRemoveRequest::setRelationships" href="qcontactrelationshipremoverequest.html#setRelationships" location="qcontactrelationshipremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationships(const QList&lt;QContactRelationship&gt; &amp; relationships)">
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="relationships" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContactRelationshipRemoveRequest::relationships" href="qcontactrelationshipremoverequest.html#relationships" location="qcontactrelationshipremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactRelationship&gt;" signature="relationships() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QContactRelationshipRemoveRequest::errorMap" href="qcontactrelationshipremoverequest.html#errorMap" location="qcontactrelationshipremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QContactManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFetchHint" href="qlandmarkfetchhint.html" location="qlandmarkfetchhint.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFetchHint" fullname="QLandmarkFetchHint::QLandmarkFetchHint" href="qlandmarkfetchhint.html#QLandmarkFetchHint" location="qlandmarkfetchhint.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkFetchHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFetchHint" fullname="QLandmarkFetchHint::QLandmarkFetchHint" href="qlandmarkfetchhint.html#QLandmarkFetchHint-2" location="qlandmarkfetchhint.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkFetchHint(const QLandmarkFetchHint &amp; other)">
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkFetchHint" fullname="QLandmarkFetchHint::~QLandmarkFetchHint" href="qlandmarkfetchhint.html#dtor.QLandmarkFetchHint" location="qlandmarkfetchhint.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkFetchHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QLandmarkFetchHint::operator=" href="qlandmarkfetchhint.html#operator=" location="qlandmarkfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkFetchHint &amp;" signature="operator=(const QLandmarkFetchHint &amp; other)">
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMaxItems" fullname="QLandmarkFetchHint::setMaxItems" href="qlandmarkfetchhint.html#setMaxItems" location="qlandmarkfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMaxItems(int max)">
                <parameter left="int" right="" name="max" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxItems" fullname="QLandmarkFetchHint::maxItems" href="qlandmarkfetchhint.html#maxItems" location="qlandmarkfetchhint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="maxItems() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOffset" fullname="QLandmarkFetchHint::setOffset" href="qlandmarkfetchhint.html#setOffset" location="qlandmarkfetchhint.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOffset(int offset)">
                <parameter left="int" right="" name="offset" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="offset" fullname="QLandmarkFetchHint::offset" href="qlandmarkfetchhint.html#offset" location="qlandmarkfetchhint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="offset() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlayerControl" href="qmediaplayercontrol.html" location="qmediaplayercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlayerControl" fullname="QMediaPlayerControl::~QMediaPlayerControl" href="qmediaplayercontrol.html#dtor.QMediaPlayerControl" location="qmediaplayercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlayerControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayerControl::state" href="qmediaplayercontrol.html#state" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlayer::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayerControl::mediaStatus" href="qmediaplayercontrol.html#mediaStatus" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlayer::MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayerControl::duration" href="qmediaplayercontrol.html#duration" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayerControl::position" href="qmediaplayercontrol.html#position" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="position() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPosition" fullname="QMediaPlayerControl::setPosition" href="qmediaplayercontrol.html#setPosition" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPosition(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayerControl::volume" href="qmediaplayercontrol.html#volume" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaPlayerControl::setVolume" href="qmediaplayercontrol.html#setVolume" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaPlayerControl::isMuted" href="qmediaplayercontrol.html#isMuted" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaPlayerControl::setMuted" href="qmediaplayercontrol.html#setMuted" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool mute)">
                <parameter left="bool" right="" name="mute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayerControl::bufferStatus" href="qmediaplayercontrol.html#bufferStatus" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="bufferStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAudioAvailable" fullname="QMediaPlayerControl::isAudioAvailable" href="qmediaplayercontrol.html#isAudioAvailable" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAudioAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVideoAvailable" fullname="QMediaPlayerControl::isVideoAvailable" href="qmediaplayercontrol.html#isVideoAvailable" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isVideoAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSeekable" fullname="QMediaPlayerControl::isSeekable" href="qmediaplayercontrol.html#isSeekable" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSeekable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availablePlaybackRanges" fullname="QMediaPlayerControl::availablePlaybackRanges" href="qmediaplayercontrol.html#availablePlaybackRanges" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaTimeRange" signature="availablePlaybackRanges() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayerControl::playbackRate" href="qmediaplayercontrol.html#playbackRate" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="playbackRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackRate" fullname="QMediaPlayerControl::setPlaybackRate" href="qmediaplayercontrol.html#setPlaybackRate" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaybackRate(qreal rate)">
                <parameter left="qreal" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlayerControl::media" href="qmediaplayercontrol.html#media" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaContent" signature="media() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStream" fullname="QMediaPlayerControl::mediaStream" href="qmediaplayercontrol.html#mediaStream" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="const QIODevice *" signature="mediaStream() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMedia" fullname="QMediaPlayerControl::setMedia" href="qmediaplayercontrol.html#setMedia" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMedia(const QMediaContent &amp; media, QIODevice * stream)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
                <parameter left="QIODevice *" right="" name="stream" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaPlayerControl::play" href="qmediaplayercontrol.html#play" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaPlayerControl::pause" href="qmediaplayercontrol.html#pause" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaPlayerControl::stop" href="qmediaplayercontrol.html#stop" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaChanged" fullname="QMediaPlayerControl::mediaChanged" href="qmediaplayercontrol.html#mediaChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaChanged(const QMediaContent &amp; content)">
                <parameter left="const QMediaContent &amp;" right="" name="content" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaPlayerControl::durationChanged" href="qmediaplayercontrol.html#durationChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaPlayerControl::positionChanged" href="qmediaplayercontrol.html#positionChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaPlayerControl::stateChanged" href="qmediaplayercontrol.html#stateChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaPlayer::State state)">
                <parameter left="QMediaPlayer::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaPlayerControl::mediaStatusChanged" href="qmediaplayercontrol.html#mediaStatusChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaPlayer::MediaStatus status)">
                <parameter left="QMediaPlayer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaPlayerControl::volumeChanged" href="qmediaplayercontrol.html#volumeChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutedChanged" fullname="QMediaPlayerControl::mutedChanged" href="qmediaplayercontrol.html#mutedChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutedChanged(bool mute)">
                <parameter left="bool" right="" name="mute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioAvailableChanged" fullname="QMediaPlayerControl::audioAvailableChanged" href="qmediaplayercontrol.html#audioAvailableChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="audioAvailableChanged(bool audio)">
                <parameter left="bool" right="" name="audio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoAvailableChanged" fullname="QMediaPlayerControl::videoAvailableChanged" href="qmediaplayercontrol.html#videoAvailableChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoAvailableChanged(bool video)">
                <parameter left="bool" right="" name="video" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatusChanged" fullname="QMediaPlayerControl::bufferStatusChanged" href="qmediaplayercontrol.html#bufferStatusChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bufferStatusChanged(int progress)">
                <parameter left="int" right="" name="progress" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seekableChanged" fullname="QMediaPlayerControl::seekableChanged" href="qmediaplayercontrol.html#seekableChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="seekableChanged(bool seekable)">
                <parameter left="bool" right="" name="seekable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availablePlaybackRangesChanged" fullname="QMediaPlayerControl::availablePlaybackRangesChanged" href="qmediaplayercontrol.html#availablePlaybackRangesChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availablePlaybackRangesChanged(const QMediaTimeRange &amp; ranges)">
                <parameter left="const QMediaTimeRange &amp;" right="" name="ranges" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRateChanged" fullname="QMediaPlayerControl::playbackRateChanged" href="qmediaplayercontrol.html#playbackRateChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackRateChanged(qreal rate)">
                <parameter left="qreal" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayerControl::error" href="qmediaplayercontrol.html#error" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlayerControl" fullname="QMediaPlayerControl::QMediaPlayerControl" href="qmediaplayercontrol.html#QMediaPlayerControl" location="qmediaplayercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlayerControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailFieldDefinition" href="qorganizeritemdetailfielddefinition.html" location="qorganizeritemdetailfielddefinition.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailFieldDefinition" fullname="QOrganizerItemDetailFieldDefinition::QOrganizerItemDetailFieldDefinition" href="qorganizeritemdetailfielddefinition.html#QOrganizerItemDetailFieldDefinition" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetailFieldDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemDetailFieldDefinition" fullname="QOrganizerItemDetailFieldDefinition::~QOrganizerItemDetailFieldDefinition" href="qorganizeritemdetailfielddefinition.html#dtor.QOrganizerItemDetailFieldDefinition" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemDetailFieldDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailFieldDefinition" fullname="QOrganizerItemDetailFieldDefinition::QOrganizerItemDetailFieldDefinition" href="qorganizeritemdetailfielddefinition.html#QOrganizerItemDetailFieldDefinition-2" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemDetailFieldDefinition(const QOrganizerItemDetailFieldDefinition &amp; other)">
                <parameter left="const QOrganizerItemDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemDetailFieldDefinition::operator=" href="qorganizeritemdetailfielddefinition.html#operator=" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemDetailFieldDefinition &amp;" signature="operator=(const QOrganizerItemDetailFieldDefinition &amp; other)">
                <parameter left="const QOrganizerItemDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataType" fullname="QOrganizerItemDetailFieldDefinition::dataType" href="qorganizeritemdetailfielddefinition.html#dataType" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant::Type" signature="dataType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataType" fullname="QOrganizerItemDetailFieldDefinition::setDataType" href="qorganizeritemdetailfielddefinition.html#setDataType" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataType(QVariant::Type type)">
                <parameter left="QVariant::Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="allowableValues" fullname="QOrganizerItemDetailFieldDefinition::allowableValues" href="qorganizeritemdetailfielddefinition.html#allowableValues" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariantList" signature="allowableValues() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAllowableValues" fullname="QOrganizerItemDetailFieldDefinition::setAllowableValues" href="qorganizeritemdetailfielddefinition.html#setAllowableValues" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAllowableValues(const QVariantList values)">
                <parameter left="const QVariantList" right="" name="values" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOrganizerItemDetailFieldDefinition::operator==" href="qorganizeritemdetailfielddefinition.html#operator==" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOrganizerItemDetailFieldDefinition &amp; other) const">
                <parameter left="const QOrganizerItemDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QOrganizerItemDetailFieldDefinition::operator!=" href="qorganizeritemdetailfielddefinition.html#operator!=" location="qorganizeritemdetailfielddefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QOrganizerItemDetailFieldDefinition &amp; other) const">
                <parameter left="const QOrganizerItemDetailFieldDefinition &amp;" right="" name="other" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractVideoSurface" href="qabstractvideosurface.html" location="qabstractvideosurface.h" bases="" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QAbstractVideoSurface::Error" href="qabstractvideosurface.html#Error-enum" location="qabstractvideosurface.h">
                <value name="NoError" value="0"/>
                <value name="UnsupportedFormatError" value="1"/>
                <value name="IncorrectFormatError" value="2"/>
                <value name="StoppedError" value="3"/>
                <value name="ResourceError" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractVideoSurface" fullname="QAbstractVideoSurface::QAbstractVideoSurface" href="qabstractvideosurface.html#QAbstractVideoSurface" location="qabstractvideosurface.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractVideoSurface(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractVideoSurface" fullname="QAbstractVideoSurface::~QAbstractVideoSurface" href="qabstractvideosurface.html#dtor.QAbstractVideoSurface" location="qabstractvideosurface.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractVideoSurface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedPixelFormats" fullname="QAbstractVideoSurface::supportedPixelFormats" href="qabstractvideosurface.html#supportedPixelFormats" location="qabstractvideosurface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVideoFrame::PixelFormat&gt;" signature="supportedPixelFormats(QAbstractVideoBuffer::HandleType type) const">
                <parameter left="QAbstractVideoBuffer::HandleType" right="" name="type" default="QAbstractVideoBuffer::NoHandle"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFormatSupported" fullname="QAbstractVideoSurface::isFormatSupported" href="qabstractvideosurface.html#isFormatSupported" location="qabstractvideosurface.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFormatSupported(const QVideoSurfaceFormat &amp; format) const">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nearestFormat" fullname="QAbstractVideoSurface::nearestFormat" href="qabstractvideosurface.html#nearestFormat" location="qabstractvideosurface.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVideoSurfaceFormat" signature="nearestFormat(const QVideoSurfaceFormat &amp; format) const">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="surfaceFormat" fullname="QAbstractVideoSurface::surfaceFormat" href="qabstractvideosurface.html#surfaceFormat" location="qabstractvideosurface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVideoSurfaceFormat" signature="surfaceFormat() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QAbstractVideoSurface::start" href="qabstractvideosurface.html#start" location="qabstractvideosurface.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="start(const QVideoSurfaceFormat &amp; format)">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QAbstractVideoSurface::stop" href="qabstractvideosurface.html#stop" location="qabstractvideosurface.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QAbstractVideoSurface::isActive" href="qabstractvideosurface.html#isActive" location="qabstractvideosurface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="present" fullname="QAbstractVideoSurface::present" href="qabstractvideosurface.html#present" location="qabstractvideosurface.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="present(const QVideoFrame &amp; frame)">
                <parameter left="const QVideoFrame &amp;" right="" name="frame" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QAbstractVideoSurface::error" href="qabstractvideosurface.html#error" location="qabstractvideosurface.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeChanged" fullname="QAbstractVideoSurface::activeChanged" href="qabstractvideosurface.html#activeChanged" location="qabstractvideosurface.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeChanged(bool active)">
                <parameter left="bool" right="" name="active" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="surfaceFormatChanged" fullname="QAbstractVideoSurface::surfaceFormatChanged" href="qabstractvideosurface.html#surfaceFormatChanged" location="qabstractvideosurface.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="surfaceFormatChanged(const QVideoSurfaceFormat &amp; format)">
                <parameter left="const QVideoSurfaceFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFormatsChanged" fullname="QAbstractVideoSurface::supportedFormatsChanged" href="qabstractvideosurface.html#supportedFormatsChanged" location="qabstractvideosurface.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="supportedFormatsChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setError" fullname="QAbstractVideoSurface::setError" href="qabstractvideosurface.html#setError" location="qabstractvideosurface.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setError(Error error)">
                <parameter left="Error" right="" name="error" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFilter" href="qlandmarkfilter.html" location="qlandmarkfilter.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterType" fullname="QLandmarkFilter::FilterType" href="qlandmarkfilter.html#FilterType-enum" location="qlandmarkfilter.h">
                <value name="InvalidFilter" value="0"/>
                <value name="DefaultFilter" value="1"/>
                <value name="NameFilter" value="2"/>
                <value name="ProximityFilter" value="3"/>
                <value name="CategoryFilter" value="4"/>
                <value name="BoxFilter" value="5"/>
                <value name="IntersectionFilter" value="6"/>
                <value name="UnionFilter" value="7"/>
                <value name="AttributeFilter" value="8"/>
                <value name="LandmarkIdFilter" value="9"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFilter" fullname="QLandmarkFilter::QLandmarkFilter" href="qlandmarkfilter.html#QLandmarkFilter" location="qlandmarkfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFilter" fullname="QLandmarkFilter::QLandmarkFilter" href="qlandmarkfilter.html#QLandmarkFilter-2" location="qlandmarkfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QLandmarkFilter::operator=" href="qlandmarkfilter.html#operator=" location="qlandmarkfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkFilter &amp;" signature="operator=(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkFilter" fullname="QLandmarkFilter::~QLandmarkFilter" href="qlandmarkfilter.html#dtor.QLandmarkFilter" location="qlandmarkfilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QLandmarkFilter::type" href="qlandmarkfilter.html#type" location="qlandmarkfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FilterType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QLandmarkFilter::operator==" href="qlandmarkfilter.html#operator==" location="qlandmarkfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QLandmarkFilter &amp; other) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QLandmarkFilter::operator!=" href="qlandmarkfilter.html#operator!=" location="qlandmarkfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QLandmarkFilter &amp; other) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QLandmarkFilter::d_ptr" href="qlandmarkfilter.html#d_ptr-var" location="qlandmarkfilter.h" type="QSharedDataPointer&lt;QLandmarkFilterPrivate&gt;" static="false"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" href="qlandmarkfilter.html#operator&amp;" location="qlandmarkfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QLandmarkFilter" type="const Q_LOCATION_EXPORT" signature="operator&amp;(const QLandmarkFilter &amp; left, const QLandmarkFilter &amp; right)">
            <parameter left="const QLandmarkFilter &amp;" right="" name="left" default=""/>
            <parameter left="const QLandmarkFilter &amp;" right="" name="right" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator|" href="qlandmarkfilter.html#operator|" location="qlandmarkfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QLandmarkFilter" type="const Q_LOCATION_EXPORT" signature="operator|(const QLandmarkFilter &amp; left, const QLandmarkFilter &amp; right)">
            <parameter left="const QLandmarkFilter &amp;" right="" name="left" default=""/>
            <parameter left="const QLandmarkFilter &amp;" right="" name="right" default=""/>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QDocumentGallery" href="qdocumentgallery.html" location="qdocumentgallery.h" bases="QAbstractGallery" module="">
            <variable access="public" threadsafety="unspecified" status="commendable" name="File" fullname="QDocumentGallery::File" href="qdocumentgallery.html#File-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Folder" fullname="QDocumentGallery::Folder" href="qdocumentgallery.html#Folder-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Document" fullname="QDocumentGallery::Document" href="qdocumentgallery.html#Document-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Text" fullname="QDocumentGallery::Text" href="qdocumentgallery.html#Text-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Audio" fullname="QDocumentGallery::Audio" href="qdocumentgallery.html#Audio-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Image" fullname="QDocumentGallery::Image" href="qdocumentgallery.html#Image-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Video" fullname="QDocumentGallery::Video" href="qdocumentgallery.html#Video-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Playlist" fullname="QDocumentGallery::Playlist" href="qdocumentgallery.html#Playlist-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Artist" fullname="QDocumentGallery::Artist" href="qdocumentgallery.html#Artist-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="AlbumArtist" fullname="QDocumentGallery::AlbumArtist" href="qdocumentgallery.html#AlbumArtist-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Album" fullname="QDocumentGallery::Album" href="qdocumentgallery.html#Album-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="AudioGenre" fullname="QDocumentGallery::AudioGenre" href="qdocumentgallery.html#AudioGenre-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="PhotoAlbum" fullname="QDocumentGallery::PhotoAlbum" href="qdocumentgallery.html#PhotoAlbum-var" location="qdocumentgallery.h" type="const QGalleryType" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="author" fullname="QDocumentGallery::author" href="qdocumentgallery.html#author-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="copyright" fullname="QDocumentGallery::copyright" href="qdocumentgallery.html#copyright-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QDocumentGallery::description" href="qdocumentgallery.html#description-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="comments" fullname="QDocumentGallery::comments" href="qdocumentgallery.html#comments-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="rating" fullname="QDocumentGallery::rating" href="qdocumentgallery.html#rating-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="title" fullname="QDocumentGallery::title" href="qdocumentgallery.html#title-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="subject" fullname="QDocumentGallery::subject" href="qdocumentgallery.html#subject-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="keywords" fullname="QDocumentGallery::keywords" href="qdocumentgallery.html#keywords-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="language" fullname="QDocumentGallery::language" href="qdocumentgallery.html#language-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="iconImage" fullname="QDocumentGallery::iconImage" href="qdocumentgallery.html#iconImage-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="iconPixmap" fullname="QDocumentGallery::iconPixmap" href="qdocumentgallery.html#iconPixmap-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="thumbnailImage" fullname="QDocumentGallery::thumbnailImage" href="qdocumentgallery.html#thumbnailImage-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="thumbnailPixmap" fullname="QDocumentGallery::thumbnailPixmap" href="qdocumentgallery.html#thumbnailPixmap-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="previewImage" fullname="QDocumentGallery::previewImage" href="qdocumentgallery.html#previewImage-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="previewPixmap" fullname="QDocumentGallery::previewPixmap" href="qdocumentgallery.html#previewPixmap-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QDocumentGallery::path" href="qdocumentgallery.html#path-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="filePath" fullname="QDocumentGallery::filePath" href="qdocumentgallery.html#filePath-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QDocumentGallery::fileName" href="qdocumentgallery.html#fileName-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="fileExtension" fullname="QDocumentGallery::fileExtension" href="qdocumentgallery.html#fileExtension-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="fileSize" fullname="QDocumentGallery::fileSize" href="qdocumentgallery.html#fileSize-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QDocumentGallery::mimeType" href="qdocumentgallery.html#mimeType-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="lastModified" fullname="QDocumentGallery::lastModified" href="qdocumentgallery.html#lastModified-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="lastAccessed" fullname="QDocumentGallery::lastAccessed" href="qdocumentgallery.html#lastAccessed-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="pageCount" fullname="QDocumentGallery::pageCount" href="qdocumentgallery.html#pageCount-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="wordCount" fullname="QDocumentGallery::wordCount" href="qdocumentgallery.html#wordCount-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="created" fullname="QDocumentGallery::created" href="qdocumentgallery.html#created-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QDocumentGallery::duration" href="qdocumentgallery.html#duration-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="producer" fullname="QDocumentGallery::producer" href="qdocumentgallery.html#producer-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="lastPlayed" fullname="QDocumentGallery::lastPlayed" href="qdocumentgallery.html#lastPlayed-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="playCount" fullname="QDocumentGallery::playCount" href="qdocumentgallery.html#playCount-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="performer" fullname="QDocumentGallery::performer" href="qdocumentgallery.html#performer-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="QDocumentGallery::audioCodec" href="qdocumentgallery.html#audioCodec-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="audioBitRate" fullname="QDocumentGallery::audioBitRate" href="qdocumentgallery.html#audioBitRate-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="sampleRate" fullname="QDocumentGallery::sampleRate" href="qdocumentgallery.html#sampleRate-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="channelCount" fullname="QDocumentGallery::channelCount" href="qdocumentgallery.html#channelCount-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="artist" fullname="QDocumentGallery::artist" href="qdocumentgallery.html#artist-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="albumArtist" fullname="QDocumentGallery::albumArtist" href="qdocumentgallery.html#albumArtist-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="albumTitle" fullname="QDocumentGallery::albumTitle" href="qdocumentgallery.html#albumTitle-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="composer" fullname="QDocumentGallery::composer" href="qdocumentgallery.html#composer-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="genre" fullname="QDocumentGallery::genre" href="qdocumentgallery.html#genre-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="lyrics" fullname="QDocumentGallery::lyrics" href="qdocumentgallery.html#lyrics-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="trackCount" fullname="QDocumentGallery::trackCount" href="qdocumentgallery.html#trackCount-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="trackNumber" fullname="QDocumentGallery::trackNumber" href="qdocumentgallery.html#trackNumber-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="discNumber" fullname="QDocumentGallery::discNumber" href="qdocumentgallery.html#discNumber-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="width" fullname="QDocumentGallery::width" href="qdocumentgallery.html#width-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="height" fullname="QDocumentGallery::height" href="qdocumentgallery.html#height-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="orientation" fullname="QDocumentGallery::orientation" href="qdocumentgallery.html#orientation-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="photoAlbum" fullname="QDocumentGallery::photoAlbum" href="qdocumentgallery.html#photoAlbum-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="dateTaken" fullname="QDocumentGallery::dateTaken" href="qdocumentgallery.html#dateTaken-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="cameraManufacturer" fullname="QDocumentGallery::cameraManufacturer" href="qdocumentgallery.html#cameraManufacturer-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="cameraModel" fullname="QDocumentGallery::cameraModel" href="qdocumentgallery.html#cameraModel-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="exposureProgram" fullname="QDocumentGallery::exposureProgram" href="qdocumentgallery.html#exposureProgram-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="exposureTime" fullname="QDocumentGallery::exposureTime" href="qdocumentgallery.html#exposureTime-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="fNumber" fullname="QDocumentGallery::fNumber" href="qdocumentgallery.html#fNumber-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="flashEnabled" fullname="QDocumentGallery::flashEnabled" href="qdocumentgallery.html#flashEnabled-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="focalLength" fullname="QDocumentGallery::focalLength" href="qdocumentgallery.html#focalLength-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="meteringMode" fullname="QDocumentGallery::meteringMode" href="qdocumentgallery.html#meteringMode-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="whiteBalance" fullname="QDocumentGallery::whiteBalance" href="qdocumentgallery.html#whiteBalance-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="frameRate" fullname="QDocumentGallery::frameRate" href="qdocumentgallery.html#frameRate-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="videoCodec" fullname="QDocumentGallery::videoCodec" href="qdocumentgallery.html#videoCodec-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="videoBitRate" fullname="QDocumentGallery::videoBitRate" href="qdocumentgallery.html#videoBitRate-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="resumePosition" fullname="QDocumentGallery::resumePosition" href="qdocumentgallery.html#resumePosition-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="director" fullname="QDocumentGallery::director" href="qdocumentgallery.html#director-var" location="qdocumentgallery.h" type="const QGalleryProperty" static="true"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QDocumentGallery" fullname="QDocumentGallery::QDocumentGallery" href="qdocumentgallery.html#QDocumentGallery" location="qdocumentgallery_maemo5.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QDocumentGallery(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QDocumentGallery" fullname="QDocumentGallery::~QDocumentGallery" href="qdocumentgallery.html#dtor.QDocumentGallery" location="qdocumentgallery_maemo5.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QDocumentGallery()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRequestSupported" fullname="QDocumentGallery::isRequestSupported" href="qdocumentgallery.html#isRequestSupported" location="qdocumentgallery_maemo5.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRequestSupported(QGalleryAbstractRequest::Type type) const">
                <parameter left="QGalleryAbstractRequest::Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemTypePropertyNames" fullname="QDocumentGallery::itemTypePropertyNames" href="qdocumentgallery.html#itemTypePropertyNames" location="qdocumentgallery_maemo5.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="itemTypePropertyNames(const QString &amp; itemType) const">
                <parameter left="const QString &amp;" right="" name="itemType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyAttributes" fullname="QDocumentGallery::propertyAttributes" href="qdocumentgallery.html#propertyAttributes" location="qdocumentgallery_maemo5.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGalleryProperty::Attributes" signature="propertyAttributes(const QString &amp; propertyName, const QString &amp; itemType) const">
                <parameter left="const QString &amp;" right="" name="propertyName" default=""/>
                <parameter left="const QString &amp;" right="" name="itemType" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="createResponse" fullname="QDocumentGallery::createResponse" href="qdocumentgallery.html#createResponse" location="qdocumentgallery_maemo5.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QGalleryAbstractResponse *" signature="createResponse(QGalleryAbstractRequest * request)">
                <parameter left="QGalleryAbstractRequest *" right="" name="request" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryRemoveRequest" href="qlandmarkcategoryremoverequest.html" location="qlandmarkcategoryremoverequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryRemoveRequest" fullname="QLandmarkCategoryRemoveRequest::QLandmarkCategoryRemoveRequest" href="qlandmarkcategoryremoverequest.html#QLandmarkCategoryRemoveRequest" location="qlandmarkcategoryremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkCategoryRemoveRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkCategoryRemoveRequest" fullname="QLandmarkCategoryRemoveRequest::~QLandmarkCategoryRemoveRequest" href="qlandmarkcategoryremoverequest.html#dtor.QLandmarkCategoryRemoveRequest" location="qlandmarkcategoryremoverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkCategoryRemoveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryIds" fullname="QLandmarkCategoryRemoveRequest::categoryIds" href="qlandmarkcategoryremoverequest.html#categoryIds" location="qlandmarkcategoryremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategoryId&gt;" signature="categoryIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryIds" fullname="QLandmarkCategoryRemoveRequest::setCategoryIds" href="qlandmarkcategoryremoverequest.html#setCategoryIds" location="qlandmarkcategoryremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryIds(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryId" fullname="QLandmarkCategoryRemoveRequest::setCategoryId" href="qlandmarkcategoryremoverequest.html#setCategoryId" location="qlandmarkcategoryremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryId(const QLandmarkCategoryId &amp; categoryId)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QLandmarkCategoryRemoveRequest::errorMap" href="qlandmarkcategoryremoverequest.html#errorMap" location="qlandmarkcategoryremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QLandmarkManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkSortOrder" href="qlandmarksortorder.html" location="qlandmarksortorder.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SortType" fullname="QLandmarkSortOrder::SortType" href="qlandmarksortorder.html#SortType-enum" location="qlandmarksortorder.h">
                <value name="DefaultSort" value="0"/>
                <value name="NameSort" value="1"/>
                <value name="DistanceSort" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkSortOrder" fullname="QLandmarkSortOrder::QLandmarkSortOrder" href="qlandmarksortorder.html#QLandmarkSortOrder" location="qlandmarksortorder.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkSortOrder" fullname="QLandmarkSortOrder::QLandmarkSortOrder" href="qlandmarksortorder.html#QLandmarkSortOrder-2" location="qlandmarksortorder.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkSortOrder(const QLandmarkSortOrder &amp; other)">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QLandmarkSortOrder::operator=" href="qlandmarksortorder.html#operator=" location="qlandmarksortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkSortOrder &amp;" signature="operator=(const QLandmarkSortOrder &amp; other)">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkSortOrder" fullname="QLandmarkSortOrder::~QLandmarkSortOrder" href="qlandmarksortorder.html#dtor.QLandmarkSortOrder" location="qlandmarksortorder.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QLandmarkSortOrder::type" href="qlandmarksortorder.html#type" location="qlandmarksortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SortType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QLandmarkSortOrder::direction" href="qlandmarksortorder.html#direction" location="qlandmarksortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::SortOrder" signature="direction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDirection" fullname="QLandmarkSortOrder::setDirection" href="qlandmarksortorder.html#setDirection" location="qlandmarksortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDirection(Qt::SortOrder direction)">
                <parameter left="Qt::SortOrder" right="" name="direction" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QLandmarkSortOrder::operator==" href="qlandmarksortorder.html#operator==" location="qlandmarksortorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QLandmarkSortOrder &amp; other) const">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QLandmarkSortOrder::operator!=" href="qlandmarksortorder.html#operator!=" location="qlandmarksortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QLandmarkSortOrder &amp; other) const">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QLandmarkSortOrder::d_ptr" href="qlandmarksortorder.html#d_ptr-var" location="qlandmarksortorder.h" type="QSharedDataPointer&lt;QLandmarkSortOrderPrivate&gt;" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkId" href="qlandmarkid.html" location="qlandmarkid.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkId" fullname="QLandmarkId::QLandmarkId" href="qlandmarkid.html#QLandmarkId" location="qlandmarkid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkId" fullname="QLandmarkId::QLandmarkId" href="qlandmarkid.html#QLandmarkId-2" location="qlandmarkid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkId(const QLandmarkId &amp; other)">
                <parameter left="const QLandmarkId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkId" fullname="QLandmarkId::~QLandmarkId" href="qlandmarkid.html#dtor.QLandmarkId" location="qlandmarkid.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QLandmarkId::isValid" href="qlandmarkid.html#isValid" location="qlandmarkid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalId" fullname="QLandmarkId::setLocalId" href="qlandmarkid.html#setLocalId" location="qlandmarkid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localId" fullname="QLandmarkId::localId" href="qlandmarkid.html#localId" location="qlandmarkid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="localId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QLandmarkId::managerUri" href="qlandmarkid.html#managerUri" location="qlandmarkid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManagerUri" fullname="QLandmarkId::setManagerUri" href="qlandmarkid.html#setManagerUri" location="qlandmarkid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManagerUri(const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="uri" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QLandmarkId::operator=" href="qlandmarkid.html#operator=" location="qlandmarkid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkId &amp;" signature="operator=(const QLandmarkId &amp; other)">
                <parameter left="const QLandmarkId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QLandmarkId::operator==" href="qlandmarkid.html#operator==" location="qlandmarkid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QLandmarkId &amp; other) const">
                <parameter left="const QLandmarkId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QLandmarkId::operator!=" href="qlandmarkid.html#operator!=" location="qlandmarkid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QLandmarkId &amp; other) const">
                <parameter left="const QLandmarkId &amp;" right="" name="other" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderSortOrder" href="qmessagefoldersortorder.html" location="qmessagefoldersortorder.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderSortOrder" fullname="QMessageFolderSortOrder::QMessageFolderSortOrder" href="qmessagefoldersortorder.html#QMessageFolderSortOrder" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageFolderSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderSortOrder" fullname="QMessageFolderSortOrder::QMessageFolderSortOrder" href="qmessagefoldersortorder.html#QMessageFolderSortOrder-2" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageFolderSortOrder(const QMessageFolderSortOrder &amp; other)">
                <parameter left="const QMessageFolderSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageFolderSortOrder" fullname="QMessageFolderSortOrder::~QMessageFolderSortOrder" href="qmessagefoldersortorder.html#dtor.QMessageFolderSortOrder" location="qmessagefoldersortorder_symbian.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageFolderSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMessageFolderSortOrder::isEmpty" href="qmessagefoldersortorder.html#isEmpty" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMessageFolderSortOrder::isSupported" href="qmessagefoldersortorder.html#isSupported" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator+" fullname="QMessageFolderSortOrder::operator+" href="qmessagefoldersortorder.html#operator+" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderSortOrder" signature="operator+(const QMessageFolderSortOrder &amp; other) const">
                <parameter left="const QMessageFolderSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator+=" fullname="QMessageFolderSortOrder::operator+=" href="qmessagefoldersortorder.html#operator+=" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMessageFolderSortOrder &amp;" signature="operator+=(const QMessageFolderSortOrder &amp; other)">
                <parameter left="const QMessageFolderSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byName" fullname="QMessageFolderSortOrder::byName" href="qmessagefoldersortorder.html#byName" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderSortOrder" signature="byName(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byPath" fullname="QMessageFolderSortOrder::byPath" href="qmessagefoldersortorder.html#byPath" location="qmessagefoldersortorder_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderSortOrder" signature="byPath(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactRemoveRequest" href="qcontactremoverequest.html" location="qcontactremoverequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRemoveRequest" fullname="QContactRemoveRequest::QContactRemoveRequest" href="qcontactremoverequest.html#QContactRemoveRequest" location="qcontactremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactRemoveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactRemoveRequest" fullname="QContactRemoveRequest::~QContactRemoveRequest" href="qcontactremoverequest.html#dtor.QContactRemoveRequest" location="qcontactremoverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactRemoveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactId" fullname="QContactRemoveRequest::setContactId" href="qcontactremoverequest.html#setContactId" location="qcontactremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContactId(const QContactLocalId &amp; contactId)">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactIds" fullname="QContactRemoveRequest::setContactIds" href="qcontactremoverequest.html#setContactIds" location="qcontactremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContactIds(const QList&lt;QContactLocalId&gt; &amp; contactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactIds" fullname="QContactRemoveRequest::contactIds" href="qcontactremoverequest.html#contactIds" location="qcontactremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactLocalId&gt;" signature="contactIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QContactRemoveRequest::errorMap" href="qcontactremoverequest.html#errorMap" location="qcontactremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QContactManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemUnionFilter" href="qorganizeritemunionfilter.html" location="qorganizeritemunionfilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemUnionFilter" fullname="QOrganizerItemUnionFilter::QOrganizerItemUnionFilter" href="qorganizeritemunionfilter.html#QOrganizerItemUnionFilter" location="qorganizeritemunionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemUnionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemUnionFilter" fullname="QOrganizerItemUnionFilter::QOrganizerItemUnionFilter" href="qorganizeritemunionfilter.html#QOrganizerItemUnionFilter-2" location="qorganizeritemunionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemUnionFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilters" fullname="QOrganizerItemUnionFilter::setFilters" href="qorganizeritemunionfilter.html#setFilters" location="qorganizeritemunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilters(const QList&lt;QOrganizerItemFilter&gt; &amp; filters)">
                <parameter left="const QList&lt;QOrganizerItemFilter&gt; &amp;" right="" name="filters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepend" fullname="QOrganizerItemUnionFilter::prepend" href="qorganizeritemunionfilter.html#prepend" location="qorganizeritemunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="prepend(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QOrganizerItemUnionFilter::append" href="qorganizeritemunionfilter.html#append" location="qorganizeritemunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QOrganizerItemUnionFilter::remove" href="qorganizeritemunionfilter.html#remove" location="qorganizeritemunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QOrganizerItemUnionFilter::operator&lt;&lt;" href="qorganizeritemunionfilter.html#operator&lt;&lt;" location="qorganizeritemunionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemUnionFilter &amp;" signature="operator&lt;&lt;(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QOrganizerItemUnionFilter::filters" href="qorganizeritemunionfilter.html#filters" location="qorganizeritemunionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemFilter&gt;" signature="filters() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfigurationManager" href="qnetworkconfigurationmanager.html" location="qnetworkconfigmanager.h" bases="" module="QtNetwork">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Capability" fullname="QNetworkConfigurationManager::Capability" href="qnetworkconfigurationmanager.html#Capability-enum" location="qnetworkconfigmanager.h" typedef="QNetworkConfigurationManager::Capabilities">
                <value name="CanStartAndStopInterfaces" value="0x00000001"/>
                <value name="DirectConnectionRouting" value="0x00000002"/>
                <value name="SystemSessionSupport" value="0x00000004"/>
                <value name="ApplicationLevelRoaming" value="0x00000008"/>
                <value name="ForcedRoaming" value="0x00000010"/>
                <value name="DataStatistics" value="0x00000020"/>
                <value name="NetworkSessionRequired" value="0x00000040"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Capabilities" fullname="QNetworkConfigurationManager::Capabilities" href="qnetworkconfigurationmanager.html#Capabilities-typedef" location="qnetworkconfigmanager.h" enum="QNetworkConfigurationManager::Capability"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfigurationManager" fullname="QNetworkConfigurationManager::QNetworkConfigurationManager" href="qnetworkconfigurationmanager.html#QNetworkConfigurationManager" location="qnetworkconfigmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkConfigurationManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkConfigurationManager" fullname="QNetworkConfigurationManager::~QNetworkConfigurationManager" href="qnetworkconfigurationmanager.html#dtor.QNetworkConfigurationManager" location="qnetworkconfigmanager.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkConfigurationManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="capabilities" fullname="QNetworkConfigurationManager::capabilities" href="qnetworkconfigurationmanager.html#capabilities" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfigurationManager::Capabilities" signature="capabilities() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultConfiguration" fullname="QNetworkConfigurationManager::defaultConfiguration" href="qnetworkconfigurationmanager.html#defaultConfiguration" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="defaultConfiguration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="allConfigurations" fullname="QNetworkConfigurationManager::allConfigurations" href="qnetworkconfigurationmanager.html#allConfigurations" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QNetworkConfiguration&gt;" signature="allConfigurations(QFlags&lt;QNetworkConfiguration::StateFlag&gt; filter) const">
                <parameter left="QFlags&lt;QNetworkConfiguration::StateFlag&gt;" right="" name="filter" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationFromIdentifier" fullname="QNetworkConfigurationManager::configurationFromIdentifier" href="qnetworkconfigurationmanager.html#configurationFromIdentifier" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkConfiguration" signature="configurationFromIdentifier(const QString &amp; identifier) const">
                <parameter left="const QString &amp;" right="" name="identifier" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateConfigurations" fullname="QNetworkConfigurationManager::updateConfigurations" href="qnetworkconfigurationmanager.html#updateConfigurations" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="updateConfigurations()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isOnline" fullname="QNetworkConfigurationManager::isOnline" href="qnetworkconfigurationmanager.html#isOnline" location="qnetworkconfigmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isOnline() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationAdded" fullname="QNetworkConfigurationManager::configurationAdded" href="qnetworkconfigurationmanager.html#configurationAdded" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="configurationAdded(const QNetworkConfiguration &amp; config)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationRemoved" fullname="QNetworkConfigurationManager::configurationRemoved" href="qnetworkconfigurationmanager.html#configurationRemoved" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="configurationRemoved(const QNetworkConfiguration &amp; configuration)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="configuration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="configurationChanged" fullname="QNetworkConfigurationManager::configurationChanged" href="qnetworkconfigurationmanager.html#configurationChanged" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="configurationChanged(const QNetworkConfiguration &amp; config)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="config" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="onlineStateChanged" fullname="QNetworkConfigurationManager::onlineStateChanged" href="qnetworkconfigurationmanager.html#onlineStateChanged" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="onlineStateChanged(bool isOnline)">
                <parameter left="bool" right="" name="isOnline" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateCompleted" fullname="QNetworkConfigurationManager::updateCompleted" href="qnetworkconfigurationmanager.html#updateCompleted" location="qnetworkconfigmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="updateCompleted()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemChangeSet" href="qorganizeritemchangeset.html" location="qorganizeritemchangeset.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemChangeSet" fullname="QOrganizerItemChangeSet::QOrganizerItemChangeSet" href="qorganizeritemchangeset.html#QOrganizerItemChangeSet" location="qorganizeritemchangeset.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemChangeSet()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemChangeSet" fullname="QOrganizerItemChangeSet::QOrganizerItemChangeSet" href="qorganizeritemchangeset.html#QOrganizerItemChangeSet-2" location="qorganizeritemchangeset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemChangeSet(const QOrganizerItemChangeSet &amp; other)">
                <parameter left="const QOrganizerItemChangeSet &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemChangeSet" fullname="QOrganizerItemChangeSet::~QOrganizerItemChangeSet" href="qorganizeritemchangeset.html#dtor.QOrganizerItemChangeSet" location="qorganizeritemchangeset.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemChangeSet()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemChangeSet::operator=" href="qorganizeritemchangeset.html#operator=" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemChangeSet &amp;" signature="operator=(const QOrganizerItemChangeSet &amp; other)">
                <parameter left="const QOrganizerItemChangeSet &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataChanged" fullname="QOrganizerItemChangeSet::setDataChanged" href="qorganizeritemchangeset.html#setDataChanged" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataChanged(bool dataChanged)">
                <parameter left="bool" right="" name="dataChanged" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataChanged" fullname="QOrganizerItemChangeSet::dataChanged" href="qorganizeritemchangeset.html#dataChanged" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="dataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addedItems" fullname="QOrganizerItemChangeSet::addedItems" href="qorganizeritemchangeset.html#addedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QOrganizerItemLocalId&gt;" signature="addedItems() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertAddedItem" fullname="QOrganizerItemChangeSet::insertAddedItem" href="qorganizeritemchangeset.html#insertAddedItem" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertAddedItem(QOrganizerItemLocalId addedOrganizerItemId)">
                <parameter left="QOrganizerItemLocalId" right="" name="addedOrganizerItemId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertAddedItems" fullname="QOrganizerItemChangeSet::insertAddedItems" href="qorganizeritemchangeset.html#insertAddedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertAddedItems(const QList&lt;QOrganizerItemLocalId&gt; &amp; addedOrganizerItemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="addedOrganizerItemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAddedItems" fullname="QOrganizerItemChangeSet::clearAddedItems" href="qorganizeritemchangeset.html#clearAddedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAddedItems()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="changedItems" fullname="QOrganizerItemChangeSet::changedItems" href="qorganizeritemchangeset.html#changedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QOrganizerItemLocalId&gt;" signature="changedItems() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertChangedItem" fullname="QOrganizerItemChangeSet::insertChangedItem" href="qorganizeritemchangeset.html#insertChangedItem" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertChangedItem(QOrganizerItemLocalId changedOrganizerItemId)">
                <parameter left="QOrganizerItemLocalId" right="" name="changedOrganizerItemId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertChangedItems" fullname="QOrganizerItemChangeSet::insertChangedItems" href="qorganizeritemchangeset.html#insertChangedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertChangedItems(const QList&lt;QOrganizerItemLocalId&gt; &amp; changedOrganizerItemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="changedOrganizerItemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearChangedItems" fullname="QOrganizerItemChangeSet::clearChangedItems" href="qorganizeritemchangeset.html#clearChangedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearChangedItems()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="removedItems" fullname="QOrganizerItemChangeSet::removedItems" href="qorganizeritemchangeset.html#removedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QOrganizerItemLocalId&gt;" signature="removedItems() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRemovedItem" fullname="QOrganizerItemChangeSet::insertRemovedItem" href="qorganizeritemchangeset.html#insertRemovedItem" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertRemovedItem(QOrganizerItemLocalId removedOrganizerItemId)">
                <parameter left="QOrganizerItemLocalId" right="" name="removedOrganizerItemId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRemovedItems" fullname="QOrganizerItemChangeSet::insertRemovedItems" href="qorganizeritemchangeset.html#insertRemovedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertRemovedItems(const QList&lt;QOrganizerItemLocalId&gt; &amp; removedOrganizerItemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="removedOrganizerItemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearRemovedItems" fullname="QOrganizerItemChangeSet::clearRemovedItems" href="qorganizeritemchangeset.html#clearRemovedItems" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearRemovedItems()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAll" fullname="QOrganizerItemChangeSet::clearAll" href="qorganizeritemchangeset.html#clearAll" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAll()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="emitSignals" fullname="QOrganizerItemChangeSet::emitSignals" href="qorganizeritemchangeset.html#emitSignals" location="qorganizeritemchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="emitSignals(QOrganizerItemManagerEngine * engine)">
                <parameter left="QOrganizerItemManagerEngine *" right="" name="engine" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContact" href="qcontact.html" location="qcontact.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContact" fullname="QContact::QContact" href="qcontact.html#QContact" location="qcontact.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContact()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContact" fullname="QContact::~QContact" href="qcontact.html#dtor.QContact" location="qcontact.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContact()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContact" fullname="QContact::QContact" href="qcontact.html#QContact-2" location="qcontact.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContact(const QContact &amp; other)">
                <parameter left="const QContact &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContact::operator=" href="qcontact.html#operator=" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContact &amp;" signature="operator=(const QContact &amp; other)">
                <parameter left="const QContact &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContact::operator==" href="qcontact.html#operator==" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContact &amp; other) const">
                <parameter left="const QContact &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContact::operator!=" href="qcontact.html#operator!=" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContact &amp; other) const">
                <parameter left="const QContact &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QContact::id" href="qcontact.html#id" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactId" signature="id() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setId" fullname="QContact::setId" href="qcontact.html#setId" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setId(const QContactId &amp; id)">
                <parameter left="const QContactId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="localId" fullname="QContact::localId" href="qcontact.html#localId" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactLocalId" signature="localId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QContact::type" href="qcontact.html#type" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QContact::setType" href="qcontact.html#setType" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QContact::setType" href="qcontact.html#setType-2" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setType(const QContactType &amp; type)">
                <parameter left="const QContactType &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayLabel" fullname="QContact::displayLabel" href="qcontact.html#displayLabel" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="displayLabel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QContact::isEmpty" href="qcontact.html#isEmpty" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearDetails" fullname="QContact::clearDetails" href="qcontact.html#clearDetails" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearDetails()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detail" fullname="QContact::detail" href="qcontact.html#detail" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactDetail" signature="detail(const QString &amp; definitionName) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QContact::details" href="qcontact.html#details" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactDetail&gt;" signature="details(const QString &amp; definitionName) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailWithAction" fullname="QContact::detailWithAction" href="qcontact.html#detailWithAction" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactDetail" signature="detailWithAction(QContactAction * action) const">
                <parameter left="QContactAction *" right="" name="action" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailsWithAction" fullname="QContact::detailsWithAction" href="qcontact.html#detailsWithAction" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactDetail&gt;" signature="detailsWithAction(QContactAction * action) const">
                <parameter left="QContactAction *" right="" name="action" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QContact::details" href="qcontact.html#details-2" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QContactDetail&gt;" signature="details(const QString &amp; definitionName, const QString &amp; fieldName, const QString &amp; value) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detail" fullname="QContact::detail" href="qcontact.html#detail-3" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QContactDetail" signature="detail(const QLatin1Constant &amp; definitionName) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QContact::details" href="qcontact.html#details-5" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="5" type="QList&lt;QContactDetail&gt;" signature="details(const QLatin1Constant &amp; definitionName) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QContact::details" href="qcontact.html#details-6" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="6" type="QList&lt;QContactDetail&gt;" signature="details(const QLatin1Constant &amp; definitionName, const QLatin1Constant &amp; fieldName, const QString &amp; value)">
                <parameter left="const QLatin1Constant &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QLatin1Constant &amp;" right="" name="fieldName" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QContact::details" href="qcontact.html#details-7" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="7" type="QList&lt;T&gt;" signature="details() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="details" fullname="QContact::details" href="qcontact.html#details-8" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="8" type="QList&lt;T&gt;" signature="details(const QString &amp; fieldName, const QString &amp; value) const">
                <parameter left="const QString &amp;" right="" name="fieldName" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detail" fullname="QContact::detail" href="qcontact.html#detail-4" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="4" type="T" signature="detail() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveDetail" fullname="QContact::saveDetail" href="qcontact.html#saveDetail" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveDetail(QContactDetail * detail)">
                <parameter left="QContactDetail *" right="" name="detail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetail" fullname="QContact::removeDetail" href="qcontact.html#removeDetail" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetail(QContactDetail * detail)">
                <parameter left="QContactDetail *" right="" name="detail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContact::relationships" href="qcontact.html#relationships" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactRelationship&gt;" signature="relationships(const QString &amp; relationshipType) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relatedContacts" fullname="QContact::relatedContacts" href="qcontact.html#relatedContacts" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactId&gt;" signature="relatedContacts(const QString &amp; relationshipType, QContactRelationship::Role role) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default="QString()"/>
                <parameter left="QContactRelationship::Role" right="" name="role" default="QContactRelationship::Either"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableActions" fullname="QContact::availableActions" href="qcontact.html#availableActions" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactActionDescriptor&gt;" signature="availableActions(const QString &amp; vendorName, int implementationVersion) const">
                <parameter left="const QString &amp;" right="" name="vendorName" default="QString()"/>
                <parameter left="int" right="" name="implementationVersion" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPreferredDetail" fullname="QContact::setPreferredDetail" href="qcontact.html#setPreferredDetail" location="qcontact.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setPreferredDetail(const QString &amp; actionName, const QContactDetail &amp; preferredDetail)">
                <parameter left="const QString &amp;" right="" name="actionName" default=""/>
                <parameter left="const QContactDetail &amp;" right="" name="preferredDetail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isPreferredDetail" fullname="QContact::isPreferredDetail" href="qcontact.html#isPreferredDetail" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isPreferredDetail(const QString &amp; actionName, const QContactDetail &amp; detail) const">
                <parameter left="const QString &amp;" right="" name="actionName" default=""/>
                <parameter left="const QContactDetail &amp;" right="" name="detail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredDetail" fullname="QContact::preferredDetail" href="qcontact.html#preferredDetail" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactDetail" signature="preferredDetail(const QString &amp; actionName) const">
                <parameter left="const QString &amp;" right="" name="actionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredDetails" fullname="QContact::preferredDetails" href="qcontact.html#preferredDetails" location="qcontact.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QContactDetail&gt;" signature="preferredDetails() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountFilter" href="qmessageaccountfilter.html" location="qmessageaccountfilter.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountFilter" fullname="QMessageAccountFilter::QMessageAccountFilter" href="qmessageaccountfilter.html#QMessageAccountFilter" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageAccountFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountFilter" fullname="QMessageAccountFilter::QMessageAccountFilter" href="qmessageaccountfilter.html#QMessageAccountFilter-2" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageAccountFilter(const QMessageAccountFilter &amp; other)">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageAccountFilter" fullname="QMessageAccountFilter::~QMessageAccountFilter" href="qmessageaccountfilter.html#dtor.QMessageAccountFilter" location="qmessageaccountfilter_qmf.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageAccountFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchFlags" fullname="QMessageAccountFilter::setMatchFlags" href="qmessageaccountfilter.html#setMatchFlags" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchFlags(QMessageDataComparator::MatchFlags matchFlags)">
                <parameter left="QMessageDataComparator::MatchFlags" right="" name="matchFlags" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchFlags" fullname="QMessageAccountFilter::matchFlags" href="qmessageaccountfilter.html#matchFlags" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageDataComparator::MatchFlags" signature="matchFlags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMessageAccountFilter::isEmpty" href="qmessageaccountfilter.html#isEmpty" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMessageAccountFilter::isSupported" href="qmessageaccountfilter.html#isSupported" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator~" fullname="QMessageAccountFilter::operator~" href="qmessageaccountfilter.html#operator~" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccountFilter" signature="operator~() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QMessageAccountFilter::operator&amp;" href="qmessageaccountfilter.html#operator&amp;" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccountFilter" signature="operator&amp;(const QMessageAccountFilter &amp; other) const">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|" fullname="QMessageAccountFilter::operator|" href="qmessageaccountfilter.html#operator|" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccountFilter" signature="operator|(const QMessageAccountFilter &amp; other) const">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QMessageAccountFilter::operator&amp;=" href="qmessageaccountfilter.html#operator&amp;=" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QMessageAccountFilter &amp;" signature="operator&amp;=(const QMessageAccountFilter &amp; other)">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|=" fullname="QMessageAccountFilter::operator|=" href="qmessageaccountfilter.html#operator|=" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QMessageAccountFilter &amp;" signature="operator|=(const QMessageAccountFilter &amp; other)">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageAccountFilter::byId" href="qmessageaccountfilter.html#byId" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageAccountFilter" signature="byId(const QMessageAccountId &amp; id, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QMessageAccountId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageAccountFilter::byId" href="qmessageaccountfilter.html#byId-2" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageAccountFilter" signature="byId(const QMessageAccountIdList &amp; ids, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageAccountIdList &amp;" right="" name="ids" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageAccountFilter::byId" href="qmessageaccountfilter.html#byId-3" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="QMessageAccountFilter" signature="byId(const QMessageAccountFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byName" fullname="QMessageAccountFilter::byName" href="qmessageaccountfilter.html#byName" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageAccountFilter" signature="byName(const QString &amp; value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byName" fullname="QMessageAccountFilter::byName" href="qmessageaccountfilter.html#byName-2" location="qmessageaccountfilter_qmf.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageAccountFilter" signature="byName(const QString &amp; value, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemSaveRequest" href="qorganizeritemsaverequest.html" location="qorganizeritemsaverequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemSaveRequest" fullname="QOrganizerItemSaveRequest::QOrganizerItemSaveRequest" href="qorganizeritemsaverequest.html#QOrganizerItemSaveRequest" location="qorganizeritemsaverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemSaveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItem" fullname="QOrganizerItemSaveRequest::setItem" href="qorganizeritemsaverequest.html#setItem" location="qorganizeritemsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItem(const QOrganizerItem &amp; organizeritem)">
                <parameter left="const QOrganizerItem &amp;" right="" name="organizeritem" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItems" fullname="QOrganizerItemSaveRequest::setItems" href="qorganizeritemsaverequest.html#setItems" location="qorganizeritemsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItems(const QList&lt;QOrganizerItem&gt; &amp; organizeritems)">
                <parameter left="const QList&lt;QOrganizerItem&gt; &amp;" right="" name="organizeritems" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QOrganizerItemSaveRequest::items" href="qorganizeritemsaverequest.html#items" location="qorganizeritemsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="items() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QOrganizerItemSaveRequest::errorMap" href="qorganizeritemsaverequest.html#errorMap" location="qorganizeritemsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QOrganizerItemManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkDistanceSort" href="qlandmarkdistancesort.html" location="qlandmarkdistancesort.h" bases="QLandmarkSortOrder" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkDistanceSort" fullname="QLandmarkDistanceSort::QLandmarkDistanceSort" href="qlandmarkdistancesort.html#QLandmarkDistanceSort" location="qlandmarkdistancesort.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkDistanceSort(const QGeoCoordinate &amp; coordinate, Qt::SortOrder direction)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default="QGeoCoordinate()"/>
                <parameter left="Qt::SortOrder" right="" name="direction" default="Qt::AscendingOrder"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkDistanceSort" fullname="QLandmarkDistanceSort::QLandmarkDistanceSort" href="qlandmarkdistancesort.html#QLandmarkDistanceSort-2" location="qlandmarkdistancesort.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkDistanceSort(const QLandmarkSortOrder &amp; other)">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkDistanceSort" fullname="QLandmarkDistanceSort::~QLandmarkDistanceSort" href="qlandmarkdistancesort.html#dtor.QLandmarkDistanceSort" location="qlandmarkdistancesort.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkDistanceSort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="coordinate" fullname="QLandmarkDistanceSort::coordinate" href="qlandmarkdistancesort.html#coordinate" location="qlandmarkdistancesort.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="coordinate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCoordinate" fullname="QLandmarkDistanceSort::setCoordinate" href="qlandmarkdistancesort.html#setCoordinate" location="qlandmarkdistancesort.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCoordinate(const QGeoCoordinate &amp; coordinate)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactRelationship" href="qcontactrelationship.html" location="qcontactrelationship.h" bases="" module="QtContacts">
            <variable access="public" threadsafety="unspecified" status="commendable" name="HasMember" fullname="QContactRelationship::HasMember" href="qcontactrelationship.html#HasMember-var" location="qcontactrelationship.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="Aggregates" fullname="QContactRelationship::Aggregates" href="qcontactrelationship.html#Aggregates-var" location="qcontactrelationship.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="IsSameAs" fullname="QContactRelationship::IsSameAs" href="qcontactrelationship.html#IsSameAs-var" location="qcontactrelationship.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="HasAssistant" fullname="QContactRelationship::HasAssistant" href="qcontactrelationship.html#HasAssistant-var" location="qcontactrelationship.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="HasManager" fullname="QContactRelationship::HasManager" href="qcontactrelationship.html#HasManager-var" location="qcontactrelationship.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="HasSpouse" fullname="QContactRelationship::HasSpouse" href="qcontactrelationship.html#HasSpouse-var" location="qcontactrelationship.h" type="const QLatin1Constant" static="true"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRelationship" fullname="QContactRelationship::QContactRelationship" href="qcontactrelationship.html#QContactRelationship" location="qcontactrelationship.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactRelationship()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactRelationship" fullname="QContactRelationship::~QContactRelationship" href="qcontactrelationship.html#dtor.QContactRelationship" location="qcontactrelationship.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactRelationship()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRelationship" fullname="QContactRelationship::QContactRelationship" href="qcontactrelationship.html#QContactRelationship-2" location="qcontactrelationship.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactRelationship(const QContactRelationship &amp; other)">
                <parameter left="const QContactRelationship &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactRelationship::operator=" href="qcontactrelationship.html#operator=" location="qcontactrelationship.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactRelationship &amp;" signature="operator=(const QContactRelationship &amp; other)">
                <parameter left="const QContactRelationship &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactRelationship::operator==" href="qcontactrelationship.html#operator==" location="qcontactrelationship.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactRelationship &amp; other) const">
                <parameter left="const QContactRelationship &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactRelationship::operator!=" href="qcontactrelationship.html#operator!=" location="qcontactrelationship.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactRelationship &amp; other) const">
                <parameter left="const QContactRelationship &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="first" fullname="QContactRelationship::first" href="qcontactrelationship.html#first" location="qcontactrelationship.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactId" signature="first() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="second" fullname="QContactRelationship::second" href="qcontactrelationship.html#second" location="qcontactrelationship.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactId" signature="second() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipType" fullname="QContactRelationship::relationshipType" href="qcontactrelationship.html#relationshipType" location="qcontactrelationship.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="relationshipType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFirst" fullname="QContactRelationship::setFirst" href="qcontactrelationship.html#setFirst" location="qcontactrelationship.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFirst(const QContactId &amp; firstId)">
                <parameter left="const QContactId &amp;" right="" name="firstId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSecond" fullname="QContactRelationship::setSecond" href="qcontactrelationship.html#setSecond" location="qcontactrelationship.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSecond(const QContactId &amp; secondId)">
                <parameter left="const QContactId &amp;" right="" name="secondId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationshipType" fullname="QContactRelationship::setRelationshipType" href="qcontactrelationship.html#setRelationshipType" location="qcontactrelationship.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationshipType(const QString &amp; relationshipType)">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Role" fullname="QContactRelationship::Role" href="qcontactrelationship.html#Role-enum" location="qcontactrelationship.h">
                <value name="First" value="0"/>
                <value name="Second" value="1"/>
                <value name="Either" value="2"/>
            </enum>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemManager" href="qorganizeritemmanager.html" location="qorganizeritemmanager.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemManager" fullname="QOrganizerItemManager::QOrganizerItemManager" href="qorganizeritemmanager.html#QOrganizerItemManager" location="qorganizeritemmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemManager(const QString &amp; managerName, const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="managerName" default="QString()"/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="0"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemManager" fullname="QOrganizerItemManager::QOrganizerItemManager" href="qorganizeritemmanager.html#QOrganizerItemManager-2" location="qorganizeritemmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemManager(const QString &amp; managerName, int implementationVersion, const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="managerName" default=""/>
                <parameter left="int" right="" name="implementationVersion" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="0"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemManager" fullname="QOrganizerItemManager::QOrganizerItemManager" href="qorganizeritemmanager.html#QOrganizerItemManager-3" location="qorganizeritemmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QOrganizerItemManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromUri" fullname="QOrganizerItemManager::fromUri" href="qorganizeritemmanager.html#fromUri" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QOrganizerItemManager *" signature="fromUri(const QString &amp; storeUri, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="storeUri" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemManager" fullname="QOrganizerItemManager::~QOrganizerItemManager" href="qorganizeritemmanager.html#dtor.QOrganizerItemManager" location="qorganizeritemmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QOrganizerItemManager::managerName" href="qorganizeritemmanager.html#managerName" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QOrganizerItemManager::managerParameters" href="qorganizeritemmanager.html#managerParameters" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QOrganizerItemManager::managerUri" href="qorganizeritemmanager.html#managerUri" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QOrganizerItemManager::managerVersion" href="qorganizeritemmanager.html#managerVersion" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseUri" fullname="QOrganizerItemManager::parseUri" href="qorganizeritemmanager.html#parseUri" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="parseUri(const QString &amp; uri, QString * pManagerId, QMap&lt;QString, QString&gt; * pParams)">
                <parameter left="const QString &amp;" right="" name="uri" default=""/>
                <parameter left="QString *" right="" name="pManagerId" default=""/>
                <parameter left="QMap&lt;QString, QString&gt; *" right="" name="pParams" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="buildUri" fullname="QOrganizerItemManager::buildUri" href="qorganizeritemmanager.html#buildUri" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="buildUri(const QString &amp; managerName, const QMap&lt;QString, QString&gt; &amp; params, int implementationVersion)">
                <parameter left="const QString &amp;" right="" name="managerName" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="params" default=""/>
                <parameter left="int" right="" name="implementationVersion" default="-1"/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QOrganizerItemManager::Error" href="qorganizeritemmanager.html#Error-enum" location="qorganizeritemmanager.h">
                <value name="NoError" value="0"/>
                <value name="DoesNotExistError" value="1"/>
                <value name="AlreadyExistsError" value="2"/>
                <value name="InvalidDetailError" value="3"/>
                <value name="LockedError" value="4"/>
                <value name="DetailAccessError" value="5"/>
                <value name="PermissionsError" value="6"/>
                <value name="OutOfMemoryError" value="7"/>
                <value name="NotSupportedError" value="8"/>
                <value name="BadArgumentError" value="9"/>
                <value name="UnspecifiedError" value="10"/>
                <value name="VersionMismatchError" value="11"/>
                <value name="LimitReachedError" value="12"/>
                <value name="InvalidItemTypeError" value="13"/>
                <value name="InvalidOccurrenceError" value="14"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QOrganizerItemManager::error" href="qorganizeritemmanager.html#error" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemManager::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemInstances" fullname="QOrganizerItemManager::itemInstances" href="qorganizeritemmanager.html#itemInstances" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="itemInstances(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, const QOrganizerItemFetchHint &amp; fetchHint) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default="QOrganizerItemFilter()"/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QOrganizerItemSortOrder&gt; ()"/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default="QOrganizerItemFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemInstances" fullname="QOrganizerItemManager::itemInstances" href="qorganizeritemmanager.html#itemInstances-2" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QOrganizerItem&gt;" signature="itemInstances(const QOrganizerItem &amp; generator, const QDateTime &amp; periodStart, const QDateTime &amp; periodEnd, int maxCount) const">
                <parameter left="const QOrganizerItem &amp;" right="" name="generator" default=""/>
                <parameter left="const QDateTime &amp;" right="" name="periodStart" default="QDateTime()"/>
                <parameter left="const QDateTime &amp;" right="" name="periodEnd" default="QDateTime()"/>
                <parameter left="int" right="" name="maxCount" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemIds" fullname="QOrganizerItemManager::itemIds" href="qorganizeritemmanager.html#itemIds" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemLocalId&gt;" signature="itemIds(const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders) const">
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QOrganizerItemSortOrder&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemIds" fullname="QOrganizerItemManager::itemIds" href="qorganizeritemmanager.html#itemIds-2" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QOrganizerItemLocalId&gt;" signature="itemIds(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QOrganizerItemSortOrder&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QOrganizerItemManager::items" href="qorganizeritemmanager.html#items" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="items(const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, const QOrganizerItemFetchHint &amp; fetchHint) const">
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QOrganizerItemSortOrder&gt; ()"/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default="QOrganizerItemFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QOrganizerItemManager::items" href="qorganizeritemmanager.html#items-2" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QOrganizerItem&gt;" signature="items(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, const QOrganizerItemFetchHint &amp; fetchHint) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QOrganizerItemSortOrder&gt; ()"/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default="QOrganizerItemFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="item" fullname="QOrganizerItemManager::item" href="qorganizeritemmanager.html#item" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItem" signature="item(const QOrganizerItemLocalId &amp; organizeritemId, const QOrganizerItemFetchHint &amp; fetchHint) const">
                <parameter left="const QOrganizerItemLocalId &amp;" right="" name="organizeritemId" default=""/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default="QOrganizerItemFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveItem" fullname="QOrganizerItemManager::saveItem" href="qorganizeritemmanager.html#saveItem" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveItem(QOrganizerItem * organizeritem)">
                <parameter left="QOrganizerItem *" right="" name="organizeritem" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveItems" fullname="QOrganizerItemManager::saveItems" href="qorganizeritemmanager.html#saveItems" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveItems(QList&lt;QOrganizerItem&gt; * organizeritems, QMap&lt;int, QOrganizerItemManager::Error&gt; * errorMap)">
                <parameter left="QList&lt;QOrganizerItem&gt; *" right="" name="organizeritems" default=""/>
                <parameter left="QMap&lt;int, QOrganizerItemManager::Error&gt; *" right="" name="errorMap" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItem" fullname="QOrganizerItemManager::removeItem" href="qorganizeritemmanager.html#removeItem" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItem(const QOrganizerItemLocalId &amp; organizeritemId)">
                <parameter left="const QOrganizerItemLocalId &amp;" right="" name="organizeritemId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItems" fullname="QOrganizerItemManager::removeItems" href="qorganizeritemmanager.html#removeItems" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItems(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds, QMap&lt;int, QOrganizerItemManager::Error&gt; * errorMap)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
                <parameter left="QMap&lt;int, QOrganizerItemManager::Error&gt; *" right="" name="errorMap" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compatibleItem" fullname="QOrganizerItemManager::compatibleItem" href="qorganizeritemmanager.html#compatibleItem" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItem" signature="compatibleItem(const QOrganizerItem &amp; original)">
                <parameter left="const QOrganizerItem &amp;" right="" name="original" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitions" fullname="QOrganizerItemManager::detailDefinitions" href="qorganizeritemmanager.html#detailDefinitions" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QOrganizerItemDetailDefinition&gt;" signature="detailDefinitions(const QString &amp; organizeritemType) const">
                <parameter left="const QString &amp;" right="" name="organizeritemType" default="QOrganizerItemType::TypeEvent"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinition" fullname="QOrganizerItemManager::detailDefinition" href="qorganizeritemmanager.html#detailDefinition" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemDetailDefinition" signature="detailDefinition(const QString &amp; definitionName, const QString &amp; organizeritemType) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default="QOrganizerItemType::TypeEvent"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveDetailDefinition" fullname="QOrganizerItemManager::saveDetailDefinition" href="qorganizeritemmanager.html#saveDetailDefinition" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveDetailDefinition(const QOrganizerItemDetailDefinition &amp; def, const QString &amp; organizeritemType)">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="def" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default="QOrganizerItemType::TypeEvent"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetailDefinition" fullname="QOrganizerItemManager::removeDetailDefinition" href="qorganizeritemmanager.html#removeDetailDefinition" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetailDefinition(const QString &amp; definitionName, const QString &amp; organizeritemType)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default="QOrganizerItemType::TypeEvent"/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ManagerFeature" fullname="QOrganizerItemManager::ManagerFeature" href="qorganizeritemmanager.html#ManagerFeature-enum" location="qorganizeritemmanager.h">
                <value name="MutableDefinitions" value="0"/>
                <value name="Anonymous" value="1"/>
                <value name="ChangeLogs" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QOrganizerItemManager::hasFeature" href="qorganizeritemmanager.html#hasFeature" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFeature(QOrganizerItemManager::ManagerFeature feature, const QString &amp; organizeritemType) const">
                <parameter left="QOrganizerItemManager::ManagerFeature" right="" name="feature" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default="QOrganizerItemType::TypeEvent"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedDataTypes" fullname="QOrganizerItemManager::supportedDataTypes" href="qorganizeritemmanager.html#supportedDataTypes" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVariant::Type&gt;" signature="supportedDataTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFilterSupported" fullname="QOrganizerItemManager::isFilterSupported" href="qorganizeritemmanager.html#isFilterSupported" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFilterSupported(const QOrganizerItemFilter &amp; filter) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedItemTypes" fullname="QOrganizerItemManager::supportedItemTypes" href="qorganizeritemmanager.html#supportedItemTypes" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedItemTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableManagers" fullname="QOrganizerItemManager::availableManagers" href="qorganizeritemmanager.html#availableManagers" location="qorganizeritemmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="availableManagers()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataChanged" fullname="QOrganizerItemManager::dataChanged" href="qorganizeritemmanager.html#dataChanged" location="qorganizeritemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAdded" fullname="QOrganizerItemManager::itemsAdded" href="qorganizeritemmanager.html#itemsAdded" location="qorganizeritemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAdded(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsChanged" fullname="QOrganizerItemManager::itemsChanged" href="qorganizeritemmanager.html#itemsChanged" location="qorganizeritemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsChanged(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsRemoved" fullname="QOrganizerItemManager::itemsRemoved" href="qorganizeritemmanager.html#itemsRemoved" location="qorganizeritemmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsRemoved(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderFilter" href="qmessagefolderfilter.html" location="qmessagefolderfilter.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderFilter" fullname="QMessageFolderFilter::QMessageFolderFilter" href="qmessagefolderfilter.html#QMessageFolderFilter" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageFolderFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFolderFilter" fullname="QMessageFolderFilter::QMessageFolderFilter" href="qmessagefolderfilter.html#QMessageFolderFilter-2" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageFolderFilter(const QMessageFolderFilter &amp; other)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageFolderFilter" fullname="QMessageFolderFilter::~QMessageFolderFilter" href="qmessagefolderfilter.html#dtor.QMessageFolderFilter" location="qmessagefolderfilter_maemo.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageFolderFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchFlags" fullname="QMessageFolderFilter::setMatchFlags" href="qmessagefolderfilter.html#setMatchFlags" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchFlags(QMessageDataComparator::MatchFlags matchFlags)">
                <parameter left="QMessageDataComparator::MatchFlags" right="" name="matchFlags" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchFlags" fullname="QMessageFolderFilter::matchFlags" href="qmessagefolderfilter.html#matchFlags" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageDataComparator::MatchFlags" signature="matchFlags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMessageFolderFilter::isEmpty" href="qmessagefolderfilter.html#isEmpty" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMessageFolderFilter::isSupported" href="qmessagefolderfilter.html#isSupported" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator~" fullname="QMessageFolderFilter::operator~" href="qmessagefolderfilter.html#operator~" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderFilter" signature="operator~() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QMessageFolderFilter::operator&amp;" href="qmessagefolderfilter.html#operator&amp;" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderFilter" signature="operator&amp;(const QMessageFolderFilter &amp; other) const">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|" fullname="QMessageFolderFilter::operator|" href="qmessagefolderfilter.html#operator|" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFolderFilter" signature="operator|(const QMessageFolderFilter &amp; other) const">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QMessageFolderFilter::operator&amp;=" href="qmessagefolderfilter.html#operator&amp;=" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QMessageFolderFilter &amp;" signature="operator&amp;=(const QMessageFolderFilter &amp; other)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|=" fullname="QMessageFolderFilter::operator|=" href="qmessagefolderfilter.html#operator|=" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QMessageFolderFilter &amp;" signature="operator|=(const QMessageFolderFilter &amp; other)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageFolderFilter::byId" href="qmessagefolderfilter.html#byId" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderFilter" signature="byId(const QMessageFolderId &amp; id, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QMessageFolderId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageFolderFilter::byId" href="qmessagefolderfilter.html#byId-2" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFolderFilter" signature="byId(const QMessageFolderIdList &amp; ids, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderIdList &amp;" right="" name="ids" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageFolderFilter::byId" href="qmessagefolderfilter.html#byId-3" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="QMessageFolderFilter" signature="byId(const QMessageFolderFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byName" fullname="QMessageFolderFilter::byName" href="qmessagefolderfilter.html#byName" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderFilter" signature="byName(const QString &amp; value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byName" fullname="QMessageFolderFilter::byName" href="qmessagefolderfilter.html#byName-2" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFolderFilter" signature="byName(const QString &amp; value, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byPath" fullname="QMessageFolderFilter::byPath" href="qmessagefolderfilter.html#byPath" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderFilter" signature="byPath(const QString &amp; value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byPath" fullname="QMessageFolderFilter::byPath" href="qmessagefolderfilter.html#byPath-2" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFolderFilter" signature="byPath(const QString &amp; value, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentAccountId" fullname="QMessageFolderFilter::byParentAccountId" href="qmessagefolderfilter.html#byParentAccountId" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderFilter" signature="byParentAccountId(const QMessageAccountId &amp; id, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QMessageAccountId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentAccountId" fullname="QMessageFolderFilter::byParentAccountId" href="qmessagefolderfilter.html#byParentAccountId-2" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFolderFilter" signature="byParentAccountId(const QMessageAccountFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentFolderId" fullname="QMessageFolderFilter::byParentFolderId" href="qmessagefolderfilter.html#byParentFolderId" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderFilter" signature="byParentFolderId(const QMessageFolderId &amp; id, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QMessageFolderId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentFolderId" fullname="QMessageFolderFilter::byParentFolderId" href="qmessagefolderfilter.html#byParentFolderId-2" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFolderFilter" signature="byParentFolderId(const QMessageFolderFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byAncestorFolderIds" fullname="QMessageFolderFilter::byAncestorFolderIds" href="qmessagefolderfilter.html#byAncestorFolderIds" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFolderFilter" signature="byAncestorFolderIds(const QMessageFolderId &amp; id, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byAncestorFolderIds" fullname="QMessageFolderFilter::byAncestorFolderIds" href="qmessagefolderfilter.html#byAncestorFolderIds-2" location="qmessagefolderfilter_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFolderFilter" signature="byAncestorFolderIds(const QMessageFolderFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSensorManager" href="qsensormanager.html" location="qsensormanager.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="registerBackend" fullname="QSensorManager::registerBackend" href="qsensormanager.html#registerBackend" location="qsensormanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="registerBackend(const QByteArray &amp; type, const QByteArray &amp; identifier, QSensorBackendFactory * factory)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="identifier" default=""/>
                <parameter left="QSensorBackendFactory *" right="" name="factory" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createBackend" fullname="QSensorManager::createBackend" href="qsensormanager.html#createBackend" location="qsensormanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QSensorBackend *" signature="createBackend(QSensor * sensor)">
                <parameter left="QSensor *" right="" name="sensor" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSensorBackendFactory" href="qsensorbackendfactory.html" location="qsensormanager.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="createBackend" fullname="QSensorBackendFactory::createBackend" href="qsensorbackendfactory.html#createBackend" location="qsensormanager.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QSensorBackend *" signature="createBackend(QSensor * sensor)">
                <parameter left="QSensor *" right="" name="sensor" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIntersectionFilter" href="qlandmarkintersectionfilter.html" location="qlandmarkintersectionfilter.h" bases="QLandmarkFilter" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIntersectionFilter" fullname="QLandmarkIntersectionFilter::QLandmarkIntersectionFilter" href="qlandmarkintersectionfilter.html#QLandmarkIntersectionFilter" location="qlandmarkintersectionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkIntersectionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIntersectionFilter" fullname="QLandmarkIntersectionFilter::QLandmarkIntersectionFilter" href="qlandmarkintersectionfilter.html#QLandmarkIntersectionFilter-2" location="qlandmarkintersectionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkIntersectionFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkIntersectionFilter" fullname="QLandmarkIntersectionFilter::~QLandmarkIntersectionFilter" href="qlandmarkintersectionfilter.html#dtor.QLandmarkIntersectionFilter" location="qlandmarkintersectionfilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkIntersectionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilters" fullname="QLandmarkIntersectionFilter::setFilters" href="qlandmarkintersectionfilter.html#setFilters" location="qlandmarkintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilters(const QList&lt;QLandmarkFilter&gt; &amp; filters)">
                <parameter left="const QList&lt;QLandmarkFilter&gt; &amp;" right="" name="filters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prepend" fullname="QLandmarkIntersectionFilter::prepend" href="qlandmarkintersectionfilter.html#prepend" location="qlandmarkintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="prepend(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QLandmarkIntersectionFilter::append" href="qlandmarkintersectionfilter.html#append" location="qlandmarkintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QLandmarkIntersectionFilter::remove" href="qlandmarkintersectionfilter.html#remove" location="qlandmarkintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QLandmarkIntersectionFilter::clear" href="qlandmarkintersectionfilter.html#clear" location="qlandmarkintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QLandmarkIntersectionFilter::operator&lt;&lt;" href="qlandmarkintersectionfilter.html#operator&lt;&lt;" location="qlandmarkintersectionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkIntersectionFilter &amp;" signature="operator&lt;&lt;(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QLandmarkIntersectionFilter::filters" href="qlandmarkintersectionfilter.html#filters" location="qlandmarkintersectionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkFilter&gt;" signature="filters() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetailFilter" href="qcontactdetailfilter.html" location="qcontactdetailfilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailFilter" fullname="QContactDetailFilter::QContactDetailFilter" href="qcontactdetailfilter.html#QContactDetailFilter" location="qcontactdetailfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetailFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailFilter" fullname="QContactDetailFilter::QContactDetailFilter" href="qcontactdetailfilter.html#QContactDetailFilter-2" location="qcontactdetailfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactDetailFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionName" fullname="QContactDetailFilter::setDetailDefinitionName" href="qcontactdetailfilter.html#setDetailDefinitionName" location="qcontactdetailfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionName(const QString &amp; definitionName, const QString &amp; fieldName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchFlags" fullname="QContactDetailFilter::setMatchFlags" href="qcontactdetailfilter.html#setMatchFlags" location="qcontactdetailfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchFlags(QFlags&lt;QContactFilter::MatchFlag&gt; flags)">
                <parameter left="QFlags&lt;QContactFilter::MatchFlag&gt;" right="" name="flags" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QContactDetailFilter::setValue" href="qcontactdetailfilter.html#setValue" location="qcontactdetailfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionName" fullname="QContactDetailFilter::detailDefinitionName" href="qcontactdetailfilter.html#detailDefinitionName" location="qcontactdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailDefinitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailFieldName" fullname="QContactDetailFilter::detailFieldName" href="qcontactdetailfilter.html#detailFieldName" location="qcontactdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailFieldName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchFlags" fullname="QContactDetailFilter::matchFlags" href="qcontactdetailfilter.html#matchFlags" location="qcontactdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactFilter::MatchFlags" signature="matchFlags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QContactDetailFilter::value" href="qcontactdetailfilter.html#value" location="qcontactdetailfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaServiceProviderHint" href="qmediaserviceproviderhint.html" location="qmediaserviceprovider.h" bases="" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QMediaServiceProviderHint::Type" href="qmediaserviceproviderhint.html#Type-enum" location="qmediaserviceprovider.h">
                <value name="Null" value="0"/>
                <value name="ContentType" value="1"/>
                <value name="Device" value="2"/>
                <value name="SupportedFeatures" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Feature" fullname="QMediaServiceProviderHint::Feature" href="qmediaserviceproviderhint.html#Feature-enum" location="qmediaserviceprovider.h" typedef="QMediaServiceProviderHint::Features">
                <value name="LowLatencyPlayback" value="0x01"/>
                <value name="RecordingSupport" value="0x02"/>
                <value name="StreamPlayback" value="0x04"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Features" fullname="QMediaServiceProviderHint::Features" href="qmediaserviceproviderhint.html#Features-typedef" location="qmediaserviceprovider.h" enum="QMediaServiceProviderHint::Feature"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceProviderHint" fullname="QMediaServiceProviderHint::QMediaServiceProviderHint" href="qmediaserviceproviderhint.html#QMediaServiceProviderHint" location="qmediaserviceprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaServiceProviderHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceProviderHint" fullname="QMediaServiceProviderHint::QMediaServiceProviderHint" href="qmediaserviceproviderhint.html#QMediaServiceProviderHint-2" location="qmediaserviceprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaServiceProviderHint(const QString &amp; type, const QStringList &amp; codecs)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
                <parameter left="const QStringList &amp;" right="" name="codecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceProviderHint" fullname="QMediaServiceProviderHint::QMediaServiceProviderHint" href="qmediaserviceproviderhint.html#QMediaServiceProviderHint-3" location="qmediaserviceprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaServiceProviderHint(const QByteArray &amp; device)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceProviderHint" fullname="QMediaServiceProviderHint::QMediaServiceProviderHint" href="qmediaserviceproviderhint.html#QMediaServiceProviderHint-4" location="qmediaserviceprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMediaServiceProviderHint(QFlags&lt;QMediaServiceProviderHint::Feature&gt; features)">
                <parameter left="QFlags&lt;QMediaServiceProviderHint::Feature&gt;" right="" name="features" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceProviderHint" fullname="QMediaServiceProviderHint::QMediaServiceProviderHint" href="qmediaserviceproviderhint.html#QMediaServiceProviderHint-5" location="qmediaserviceprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QMediaServiceProviderHint(const QMediaServiceProviderHint &amp; other)">
                <parameter left="const QMediaServiceProviderHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaServiceProviderHint" fullname="QMediaServiceProviderHint::~QMediaServiceProviderHint" href="qmediaserviceproviderhint.html#dtor.QMediaServiceProviderHint" location="qmediaserviceprovider.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaServiceProviderHint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaServiceProviderHint::operator=" href="qmediaserviceproviderhint.html#operator=" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaServiceProviderHint &amp;" signature="operator=(const QMediaServiceProviderHint &amp; other)">
                <parameter left="const QMediaServiceProviderHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMediaServiceProviderHint::operator==" href="qmediaserviceproviderhint.html#operator==" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMediaServiceProviderHint &amp; other) const">
                <parameter left="const QMediaServiceProviderHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMediaServiceProviderHint::operator!=" href="qmediaserviceproviderhint.html#operator!=" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMediaServiceProviderHint &amp; other) const">
                <parameter left="const QMediaServiceProviderHint &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaServiceProviderHint::isNull" href="qmediaserviceproviderhint.html#isNull" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMediaServiceProviderHint::type" href="qmediaserviceproviderhint.html#type" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QMediaServiceProviderHint::mimeType" href="qmediaserviceproviderhint.html#mimeType" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="mimeType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="codecs" fullname="QMediaServiceProviderHint::codecs" href="qmediaserviceproviderhint.html#codecs" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="codecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QMediaServiceProviderHint::device" href="qmediaserviceproviderhint.html#device" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="features" fullname="QMediaServiceProviderHint::features" href="qmediaserviceproviderhint.html#features" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Features" signature="features() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaServiceProvider" href="qmediaserviceprovider.html" location="qmediaserviceprovider.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="requestService" fullname="QMediaServiceProvider::requestService" href="qmediaserviceprovider.html#requestService" location="qmediaserviceprovider.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaService *" signature="requestService(const QByteArray &amp; type, const QMediaServiceProviderHint &amp; hint)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""/>
                <parameter left="const QMediaServiceProviderHint &amp;" right="" name="hint" default="QMediaServiceProviderHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="releaseService" fullname="QMediaServiceProvider::releaseService" href="qmediaserviceprovider.html#releaseService" location="qmediaserviceprovider.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="releaseService(QMediaService * service)">
                <parameter left="QMediaService *" right="" name="service" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasSupport" fullname="QMediaServiceProvider::hasSupport" href="qmediaserviceprovider.html#hasSupport" location="qmediaserviceprovider.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::SupportEstimate" signature="hasSupport(const QByteArray &amp; serviceType, const QString &amp; mimeType, const QStringList &amp; codecs, int flags) const">
                <parameter left="const QByteArray &amp;" right="" name="serviceType" default=""/>
                <parameter left="const QString &amp;" right="" name="mimeType" default=""/>
                <parameter left="const QStringList &amp;" right="" name="codecs" default=""/>
                <parameter left="int" right="" name="flags" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMimeTypes" fullname="QMediaServiceProvider::supportedMimeTypes" href="qmediaserviceprovider.html#supportedMimeTypes" location="qmediaserviceprovider.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedMimeTypes(const QByteArray &amp; serviceType, int flags) const">
                <parameter left="const QByteArray &amp;" right="" name="serviceType" default=""/>
                <parameter left="int" right="" name="flags" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devices" fullname="QMediaServiceProvider::devices" href="qmediaserviceprovider.html#devices" location="qmediaserviceprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="devices(const QByteArray &amp; service) const">
                <parameter left="const QByteArray &amp;" right="" name="service" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceDescription" fullname="QMediaServiceProvider::deviceDescription" href="qmediaserviceprovider.html#deviceDescription" location="qmediaserviceprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QString" signature="deviceDescription(const QByteArray &amp; serviceType, const QByteArray &amp; device)">
                <parameter left="const QByteArray &amp;" right="" name="serviceType" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultServiceProvider" fullname="QMediaServiceProvider::defaultServiceProvider" href="qmediaserviceprovider.html#defaultServiceProvider" location="qmediaserviceprovider.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMediaServiceProvider *" signature="defaultServiceProvider()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAccelerometerReading" href="qaccelerometerreading.html" location="qaccelerometer.h" bases="QSensorReading" module="">
            <contents name="qaccelerometerreading-units" title="QAccelerometerReading Units" level="2"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="x" fullname="QAccelerometerReading::x" href="qaccelerometerreading.html#x-prop" location="qaccelerometer.h" type="qreal">
                <getter name="x"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="y" fullname="QAccelerometerReading::y" href="qaccelerometerreading.html#y-prop" location="qaccelerometer.h" type="qreal">
                <getter name="y"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="z" fullname="QAccelerometerReading::z" href="qaccelerometerreading.html#z-prop" location="qaccelerometer.h" type="qreal">
                <getter name="z"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="x" fullname="QAccelerometerReading::x" href="qaccelerometerreading.html#x-prop" location="qaccelerometer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="x" type="qreal" signature="x() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setX" fullname="QAccelerometerReading::setX" href="qaccelerometerreading.html#setX" location="qaccelerometer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setX(qreal x)">
                <parameter left="qreal" right="" name="x" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="y" fullname="QAccelerometerReading::y" href="qaccelerometerreading.html#y-prop" location="qaccelerometer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="y" type="qreal" signature="y() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setY" fullname="QAccelerometerReading::setY" href="qaccelerometerreading.html#setY" location="qaccelerometer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setY(qreal y)">
                <parameter left="qreal" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="z" fullname="QAccelerometerReading::z" href="qaccelerometerreading.html#z-prop" location="qaccelerometer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="z" type="qreal" signature="z() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZ" fullname="QAccelerometerReading::setZ" href="qaccelerometerreading.html#setZ" location="qaccelerometer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setZ(qreal z)">
                <parameter left="qreal" right="" name="z" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAccelerometerFilter" href="qaccelerometerfilter.html" location="qaccelerometer.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QAccelerometerFilter::filter" href="qaccelerometerfilter.html#filter" location="qaccelerometer.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QAccelerometerReading * reading)">
                <parameter left="QAccelerometerReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAccelerometer" href="qaccelerometer.html" location="qaccelerometer.h" bases="QSensor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAccelerometer" fullname="QAccelerometer::QAccelerometer" href="qaccelerometer.html#QAccelerometer" location="qaccelerometer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAccelerometer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAccelerometer" fullname="QAccelerometer::~QAccelerometer" href="qaccelerometer.html#dtor.QAccelerometer" location="qaccelerometer.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAccelerometer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QAccelerometer::reading" href="qaccelerometer.html#reading" location="qaccelerometer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAccelerometerReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QAccelerometer::type" href="qaccelerometer.html#type-var" location="qaccelerometer.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaRecorderControl" href="qmediarecordercontrol.html" location="qmediarecordercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaRecorderControl" fullname="QMediaRecorderControl::~QMediaRecorderControl" href="qmediarecordercontrol.html#dtor.QMediaRecorderControl" location="qmediarecordercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaRecorderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="outputLocation" fullname="QMediaRecorderControl::outputLocation" href="qmediarecordercontrol.html#outputLocation" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="outputLocation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOutputLocation" fullname="QMediaRecorderControl::setOutputLocation" href="qmediarecordercontrol.html#setOutputLocation" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setOutputLocation(const QUrl &amp; location)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaRecorderControl::state" href="qmediarecordercontrol.html#state" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaRecorder::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorderControl::duration" href="qmediarecordercontrol.html#duration" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaRecorderControl::isMuted" href="qmediarecordercontrol.html#isMuted" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="applySettings" fullname="QMediaRecorderControl::applySettings" href="qmediarecordercontrol.html#applySettings" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="applySettings()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaRecorderControl::stateChanged" href="qmediarecordercontrol.html#stateChanged" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaRecorder::State state)">
                <parameter left="QMediaRecorder::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaRecorderControl::durationChanged" href="qmediarecordercontrol.html#durationChanged" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutedChanged" fullname="QMediaRecorderControl::mutedChanged" href="qmediarecordercontrol.html#mutedChanged" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutedChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorderControl::error" href="qmediarecordercontrol.html#error" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QMediaRecorderControl::record" href="qmediarecordercontrol.html#record" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="record()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaRecorderControl::pause" href="qmediarecordercontrol.html#pause" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaRecorderControl::stop" href="qmediarecordercontrol.html#stop" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaRecorderControl::setMuted" href="qmediarecordercontrol.html#setMuted" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaRecorderControl" fullname="QMediaRecorderControl::QMediaRecorderControl" href="qmediarecordercontrol.html#QMediaRecorderControl" location="qmediarecordercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaRecorderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitWriter" href="qversitwriter.html" location="qversitwriter.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QVersitWriter::Error" href="qversitwriter.html#Error-enum" location="qversitwriter.h">
                <value name="NoError" value="0"/>
                <value name="UnspecifiedError" value="1"/>
                <value name="IOError" value="2"/>
                <value name="OutOfMemoryError" value="3"/>
                <value name="NotReadyError" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QVersitWriter::State" href="qversitwriter.html#State-enum" location="qversitwriter.h">
                <value name="InactiveState" value="0"/>
                <value name="ActiveState" value="1"/>
                <value name="CanceledState" value="2"/>
                <value name="FinishedState" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitWriter" fullname="QVersitWriter::QVersitWriter" href="qversitwriter.html#QVersitWriter" location="qversitwriter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVersitWriter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitWriter" fullname="QVersitWriter::QVersitWriter" href="qversitwriter.html#QVersitWriter-2" location="qversitwriter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVersitWriter(QIODevice * outputDevice)">
                <parameter left="QIODevice *" right="" name="outputDevice" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitWriter" fullname="QVersitWriter::QVersitWriter" href="qversitwriter.html#QVersitWriter-3" location="qversitwriter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QVersitWriter(QByteArray * outputBytes)">
                <parameter left="QByteArray *" right="" name="outputBytes" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitWriter" fullname="QVersitWriter::~QVersitWriter" href="qversitwriter.html#dtor.QVersitWriter" location="qversitwriter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitWriter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QVersitWriter::setDevice" href="qversitwriter.html#setDevice" location="qversitwriter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QVersitWriter::device" href="qversitwriter.html#device" location="qversitwriter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultCodec" fullname="QVersitWriter::setDefaultCodec" href="qversitwriter.html#setDefaultCodec" location="qversitwriter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultCodec(QTextCodec * codec)">
                <parameter left="QTextCodec *" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultCodec" fullname="QVersitWriter::defaultCodec" href="qversitwriter.html#defaultCodec" location="qversitwriter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTextCodec *" signature="defaultCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QVersitWriter::state" href="qversitwriter.html#state" location="qversitwriter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QVersitWriter::error" href="qversitwriter.html#error" location="qversitwriter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startWriting" fullname="QVersitWriter::startWriting" href="qversitwriter.html#startWriting" location="qversitwriter.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="startWriting(const QList&lt;QVersitDocument&gt; &amp; input)">
                <parameter left="const QList&lt;QVersitDocument&gt; &amp;" right="" name="input" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QVersitWriter::cancel" href="qversitwriter.html#cancel" location="qversitwriter.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QVersitWriter::stateChanged" href="qversitwriter.html#stateChanged" location="qversitwriter.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QVersitWriter::State state)">
                <parameter left="QVersitWriter::State" right="" name="state" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactSortOrder" href="qcontactsortorder.html" location="qcontactsortorder.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactSortOrder" fullname="QContactSortOrder::QContactSortOrder" href="qcontactsortorder.html#QContactSortOrder" location="qcontactsortorder.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactSortOrder" fullname="QContactSortOrder::~QContactSortOrder" href="qcontactsortorder.html#dtor.QContactSortOrder" location="qcontactsortorder.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactSortOrder" fullname="QContactSortOrder::QContactSortOrder" href="qcontactsortorder.html#QContactSortOrder-2" location="qcontactsortorder.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactSortOrder(const QContactSortOrder &amp; other)">
                <parameter left="const QContactSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactSortOrder::operator=" href="qcontactsortorder.html#operator=" location="qcontactsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactSortOrder &amp;" signature="operator=(const QContactSortOrder &amp; other)">
                <parameter left="const QContactSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BlankPolicy" fullname="QContactSortOrder::BlankPolicy" href="qcontactsortorder.html#BlankPolicy-enum" location="qcontactsortorder.h">
                <value name="BlanksFirst" value="0"/>
                <value name="BlanksLast" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionName" fullname="QContactSortOrder::setDetailDefinitionName" href="qcontactsortorder.html#setDetailDefinitionName" location="qcontactsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionName(const QString &amp; definitionName, const QString &amp; fieldName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBlankPolicy" fullname="QContactSortOrder::setBlankPolicy" href="qcontactsortorder.html#setBlankPolicy" location="qcontactsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBlankPolicy(BlankPolicy blankPolicy)">
                <parameter left="BlankPolicy" right="" name="blankPolicy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDirection" fullname="QContactSortOrder::setDirection" href="qcontactsortorder.html#setDirection" location="qcontactsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDirection(Qt::SortOrder direction)">
                <parameter left="Qt::SortOrder" right="" name="direction" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaseSensitivity" fullname="QContactSortOrder::setCaseSensitivity" href="qcontactsortorder.html#setCaseSensitivity" location="qcontactsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaseSensitivity(Qt::CaseSensitivity sensitivity)">
                <parameter left="Qt::CaseSensitivity" right="" name="sensitivity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionName" fullname="QContactSortOrder::detailDefinitionName" href="qcontactsortorder.html#detailDefinitionName" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailDefinitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailFieldName" fullname="QContactSortOrder::detailFieldName" href="qcontactsortorder.html#detailFieldName" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailFieldName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="blankPolicy" fullname="QContactSortOrder::blankPolicy" href="qcontactsortorder.html#blankPolicy" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="BlankPolicy" signature="blankPolicy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QContactSortOrder::direction" href="qcontactsortorder.html#direction" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::SortOrder" signature="direction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="caseSensitivity" fullname="QContactSortOrder::caseSensitivity" href="qcontactsortorder.html#caseSensitivity" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::CaseSensitivity" signature="caseSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QContactSortOrder::isValid" href="qcontactsortorder.html#isValid" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactSortOrder::operator==" href="qcontactsortorder.html#operator==" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactSortOrder &amp; other) const">
                <parameter left="const QContactSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactSortOrder::operator!=" href="qcontactsortorder.html#operator!=" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactSortOrder &amp; other) const">
                <parameter left="const QContactSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator QList&lt;QContactSortOrder&gt;" fullname="QContactSortOrder::operator QList&lt;QContactSortOrder&gt;" href="qcontactsortorder.html#operator QList&lt;QContactSortOrder&gt;" location="qcontactsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="" signature="operator QList&lt;QContactSortOrder&gt;() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountId" href="qmessageaccountid.html" location="qmessageaccountid.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountId" fullname="QMessageAccountId::QMessageAccountId" href="qmessageaccountid.html#QMessageAccountId" location="qmessageaccountid_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageAccountId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountId" fullname="QMessageAccountId::QMessageAccountId" href="qmessageaccountid.html#QMessageAccountId-2" location="qmessageaccountid_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageAccountId(const QMessageAccountId &amp; other)">
                <parameter left="const QMessageAccountId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountId" fullname="QMessageAccountId::QMessageAccountId" href="qmessageaccountid.html#QMessageAccountId-3" location="qmessageaccountid_win.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessageAccountId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageAccountId" fullname="QMessageAccountId::~QMessageAccountId" href="qmessageaccountid.html#dtor.QMessageAccountId" location="qmessageaccountid_win.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageAccountId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QMessageAccountId::operator&lt;" href="qmessageaccountid.html#operator&lt;" location="qmessageaccountid_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QMessageAccountId &amp; other) const">
                <parameter left="const QMessageAccountId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="toString" fullname="QMessageAccountId::toString" href="qmessageaccountid.html#toString" location="qmessageaccountid_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="toString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMessageAccountId::isValid" href="qmessageaccountid.html#isValid" location="qmessageaccountid_win.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountIdList" href="#QMessageAccountIdList-typedef" location="qmessageaccountid.h"/>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryFilter" href="qlandmarkcategoryfilter.html" location="qlandmarkcategoryfilter.h" bases="QLandmarkFilter" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryFilter" fullname="QLandmarkCategoryFilter::QLandmarkCategoryFilter" href="qlandmarkcategoryfilter.html#QLandmarkCategoryFilter" location="qlandmarkcategoryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkCategoryFilter(const QLandmarkCategoryId &amp; categoryId)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default="QLandmarkCategoryId()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryFilter" fullname="QLandmarkCategoryFilter::QLandmarkCategoryFilter" href="qlandmarkcategoryfilter.html#QLandmarkCategoryFilter-2" location="qlandmarkcategoryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkCategoryFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkCategoryFilter" fullname="QLandmarkCategoryFilter::~QLandmarkCategoryFilter" href="qlandmarkcategoryfilter.html#dtor.QLandmarkCategoryFilter" location="qlandmarkcategoryfilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkCategoryFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryId" fullname="QLandmarkCategoryFilter::categoryId" href="qlandmarkcategoryfilter.html#categoryId" location="qlandmarkcategoryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkCategoryId" signature="categoryId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryId" fullname="QLandmarkCategoryFilter::setCategoryId" href="qlandmarkcategoryfilter.html#setCategoryId" location="qlandmarkcategoryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryId(const QLandmarkCategoryId &amp; categoryId)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMagnetometerReading" href="qmagnetometerreading.html" location="qmagnetometer.h" bases="QSensorReading" module="">
            <contents name="qmagnetometerreading-units" title="QMagnetometerReading Units" level="2"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="x" fullname="QMagnetometerReading::x" href="qmagnetometerreading.html#x-prop" location="qmagnetometer.h" type="qreal">
                <getter name="x"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="y" fullname="QMagnetometerReading::y" href="qmagnetometerreading.html#y-prop" location="qmagnetometer.h" type="qreal">
                <getter name="y"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="z" fullname="QMagnetometerReading::z" href="qmagnetometerreading.html#z-prop" location="qmagnetometer.h" type="qreal">
                <getter name="z"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="calibrationLevel" fullname="QMagnetometerReading::calibrationLevel" href="qmagnetometerreading.html#calibrationLevel-prop" location="qmagnetometer.h" type="qreal">
                <getter name="calibrationLevel"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="x" fullname="QMagnetometerReading::x" href="qmagnetometerreading.html#x-prop" location="qmagnetometer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="x" type="qreal" signature="x() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setX" fullname="QMagnetometerReading::setX" href="qmagnetometerreading.html#setX" location="qmagnetometer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setX(qreal x)">
                <parameter left="qreal" right="" name="x" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="y" fullname="QMagnetometerReading::y" href="qmagnetometerreading.html#y-prop" location="qmagnetometer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="y" type="qreal" signature="y() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setY" fullname="QMagnetometerReading::setY" href="qmagnetometerreading.html#setY" location="qmagnetometer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setY(qreal y)">
                <parameter left="qreal" right="" name="y" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="z" fullname="QMagnetometerReading::z" href="qmagnetometerreading.html#z-prop" location="qmagnetometer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="z" type="qreal" signature="z() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZ" fullname="QMagnetometerReading::setZ" href="qmagnetometerreading.html#setZ" location="qmagnetometer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setZ(qreal z)">
                <parameter left="qreal" right="" name="z" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="calibrationLevel" fullname="QMagnetometerReading::calibrationLevel" href="qmagnetometerreading.html#calibrationLevel-prop" location="qmagnetometer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="calibrationLevel" type="qreal" signature="calibrationLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCalibrationLevel" fullname="QMagnetometerReading::setCalibrationLevel" href="qmagnetometerreading.html#setCalibrationLevel" location="qmagnetometer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCalibrationLevel(qreal calibrationLevel)">
                <parameter left="qreal" right="" name="calibrationLevel" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMagnetometerFilter" href="qmagnetometerfilter.html" location="qmagnetometer.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QMagnetometerFilter::filter" href="qmagnetometerfilter.html#filter" location="qmagnetometer.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QMagnetometerReading * reading)">
                <parameter left="QMagnetometerReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMagnetometer" href="qmagnetometer.html" location="qmagnetometer.h" bases="QSensor" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="returnGeoValues" fullname="QMagnetometer::returnGeoValues" href="qmagnetometer.html#returnGeoValues-prop" location="qmagnetometer.h" type="bool"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMagnetometer" fullname="QMagnetometer::QMagnetometer" href="qmagnetometer.html#QMagnetometer" location="qmagnetometer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMagnetometer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMagnetometer" fullname="QMagnetometer::~QMagnetometer" href="qmagnetometer.html#dtor.QMagnetometer" location="qmagnetometer.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMagnetometer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QMagnetometer::reading" href="qmagnetometer.html#reading" location="qmagnetometer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMagnetometerReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMagnetometer::type" href="qmagnetometer.html#type-var" location="qmagnetometer.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaResource" href="qmediaresource.html" location="qmediaresource.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaResource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-2" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaResource(const QUrl &amp; url, const QString &amp; mimeType)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
                <parameter left="const QString &amp;" right="" name="mimeType" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-3" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaResource(const QNetworkRequest &amp; request, const QString &amp; mimeType)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
                <parameter left="const QString &amp;" right="" name="mimeType" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-4" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMediaResource(const QMediaResource &amp; other)">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaResource::operator=" href="qmediaresource.html#operator=" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaResource &amp;" signature="operator=(const QMediaResource &amp; other)">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaResource" fullname="QMediaResource::~QMediaResource" href="qmediaresource.html#dtor.QMediaResource" location="qmediaresource.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaResource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaResource::isNull" href="qmediaresource.html#isNull" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMediaResource::operator==" href="qmediaresource.html#operator==" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMediaResource &amp; other) const">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMediaResource::operator!=" href="qmediaresource.html#operator!=" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMediaResource &amp; other) const">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="url" fullname="QMediaResource::url" href="qmediaresource.html#url" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="url() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="request" fullname="QMediaResource::request" href="qmediaresource.html#request" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkRequest" signature="request() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QMediaResource::mimeType" href="qmediaresource.html#mimeType" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="mimeType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="language" fullname="QMediaResource::language" href="qmediaresource.html#language" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="language() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLanguage" fullname="QMediaResource::setLanguage" href="qmediaresource.html#setLanguage" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLanguage(const QString &amp; language)">
                <parameter left="const QString &amp;" right="" name="language" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="QMediaResource::audioCodec" href="qmediaresource.html#audioCodec" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioCodec" fullname="QMediaResource::setAudioCodec" href="qmediaresource.html#setAudioCodec" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoCodec" fullname="QMediaResource::videoCodec" href="qmediaresource.html#videoCodec" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="videoCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoCodec" fullname="QMediaResource::setVideoCodec" href="qmediaresource.html#setVideoCodec" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataSize" fullname="QMediaResource::dataSize" href="qmediaresource.html#dataSize" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="dataSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataSize" fullname="QMediaResource::setDataSize" href="qmediaresource.html#setDataSize" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataSize(const qint64 size)">
                <parameter left="const qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioBitRate" fullname="QMediaResource::audioBitRate" href="qmediaresource.html#audioBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="audioBitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioBitRate" fullname="QMediaResource::setAudioBitRate" href="qmediaresource.html#setAudioBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioBitRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleRate" fullname="QMediaResource::sampleRate" href="qmediaresource.html#sampleRate" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleRate" fullname="QMediaResource::setSampleRate" href="qmediaresource.html#setSampleRate" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleRate(int sampleRate)">
                <parameter left="int" right="" name="sampleRate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channelCount" fullname="QMediaResource::channelCount" href="qmediaresource.html#channelCount" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channelCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannelCount" fullname="QMediaResource::setChannelCount" href="qmediaresource.html#setChannelCount" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannelCount(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoBitRate" fullname="QMediaResource::videoBitRate" href="qmediaresource.html#videoBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="videoBitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoBitRate" fullname="QMediaResource::setVideoBitRate" href="qmediaresource.html#setVideoBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoBitRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="QMediaResource::resolution" href="qmediaresource.html#resolution" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="resolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QMediaResource::setResolution" href="qmediaresource.html#setResolution" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResolution(const QSize &amp; resolution)">
                <parameter left="const QSize &amp;" right="" name="resolution" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QMediaResource::setResolution" href="qmediaresource.html#setResolution-2" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setResolution(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMediaResourceList" href="#QMediaResourceList-typedef" location="qmediaresource.h"/>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMetaDataWriterControl" href="qmetadatawritercontrol.html" location="qmetadatawritercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMetaDataWriterControl" fullname="QMetaDataWriterControl::~QMetaDataWriterControl" href="qmetadatawritercontrol.html#dtor.QMetaDataWriterControl" location="qmetadatawritercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMetaDataWriterControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isWritable" fullname="QMetaDataWriterControl::isWritable" href="qmetadatawritercontrol.html#isWritable" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isWritable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataAvailable" fullname="QMetaDataWriterControl::isMetaDataAvailable" href="qmetadatawritercontrol.html#isMetaDataAvailable" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMetaDataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QMetaDataWriterControl::metaData" href="qmetadatawritercontrol.html#metaData" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metaData(QtMultimediaKit::MetaData key) const">
                <parameter left="QtMultimediaKit::MetaData" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetaData" fullname="QMetaDataWriterControl::setMetaData" href="qmetadatawritercontrol.html#setMetaData" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMetaData(QtMultimediaKit::MetaData key, const QVariant &amp; value)">
                <parameter left="QtMultimediaKit::MetaData" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableMetaData" fullname="QMetaDataWriterControl::availableMetaData" href="qmetadatawritercontrol.html#availableMetaData" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtMultimediaKit::MetaData&gt;" signature="availableMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="extendedMetaData" fullname="QMetaDataWriterControl::extendedMetaData" href="qmetadatawritercontrol.html#extendedMetaData" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="extendedMetaData(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtendedMetaData" fullname="QMetaDataWriterControl::setExtendedMetaData" href="qmetadatawritercontrol.html#setExtendedMetaData" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtendedMetaData(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableExtendedMetaData" fullname="QMetaDataWriterControl::availableExtendedMetaData" href="qmetadatawritercontrol.html#availableExtendedMetaData" location="qmetadatawritercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="availableExtendedMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QMetaDataWriterControl::metaDataChanged" href="qmetadatawritercontrol.html#metaDataChanged" location="qmetadatawritercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="writableChanged" fullname="QMetaDataWriterControl::writableChanged" href="qmetadatawritercontrol.html#writableChanged" location="qmetadatawritercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="writableChanged(bool writable)">
                <parameter left="bool" right="" name="writable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailableChanged" fullname="QMetaDataWriterControl::metaDataAvailableChanged" href="qmetadatawritercontrol.html#metaDataAvailableChanged" location="qmetadatawritercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMetaDataWriterControl" fullname="QMetaDataWriterControl::QMetaDataWriterControl" href="qmetadatawritercontrol.html#QMetaDataWriterControl" location="qmetadatawritercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMetaDataWriterControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinitionFetchRequest" href="qcontactdetaildefinitionfetchrequest.html" location="qcontactdetaildefinitionfetchrequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinitionFetchRequest" fullname="QContactDetailDefinitionFetchRequest::QContactDetailDefinitionFetchRequest" href="qcontactdetaildefinitionfetchrequest.html#QContactDetailDefinitionFetchRequest" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetailDefinitionFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactDetailDefinitionFetchRequest" fullname="QContactDetailDefinitionFetchRequest::~QContactDetailDefinitionFetchRequest" href="qcontactdetaildefinitionfetchrequest.html#dtor.QContactDetailDefinitionFetchRequest" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactDetailDefinitionFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionName" fullname="QContactDetailDefinitionFetchRequest::setDefinitionName" href="qcontactdetaildefinitionfetchrequest.html#setDefinitionName" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionName(const QString &amp; definitionName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionNames" fullname="QContactDetailDefinitionFetchRequest::setDefinitionNames" href="qcontactdetaildefinitionfetchrequest.html#setDefinitionNames" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionNames(const QStringList &amp; names)">
                <parameter left="const QStringList &amp;" right="" name="names" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitionNames" fullname="QContactDetailDefinitionFetchRequest::definitionNames" href="qcontactdetaildefinitionfetchrequest.html#definitionNames" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="definitionNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactType" fullname="QContactDetailDefinitionFetchRequest::setContactType" href="qcontactdetaildefinitionfetchrequest.html#setContactType" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContactType(const QString &amp; contactType)">
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactType" fullname="QContactDetailDefinitionFetchRequest::contactType" href="qcontactdetaildefinitionfetchrequest.html#contactType" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="contactType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitions" fullname="QContactDetailDefinitionFetchRequest::definitions" href="qcontactdetaildefinitionfetchrequest.html#definitions" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QContactDetailDefinition&gt;" signature="definitions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QContactDetailDefinitionFetchRequest::errorMap" href="qcontactdetaildefinitionfetchrequest.html#errorMap" location="qcontactdetaildefinitionfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QContactManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QValueSpacePublisher" href="qvaluespacepublisher.html" location="qvaluespacepublisher.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpacePublisher" fullname="QValueSpacePublisher::QValueSpacePublisher" href="qvaluespacepublisher.html#QValueSpacePublisher" location="qvaluespacepublisher.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QValueSpacePublisher(const QString &amp; path, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpacePublisher" fullname="QValueSpacePublisher::QValueSpacePublisher" href="qvaluespacepublisher.html#QValueSpacePublisher-2" location="qvaluespacepublisher.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QValueSpacePublisher(QValueSpace::LayerOptions filter, const QString &amp; path, QObject * parent)">
                <parameter left="QValueSpace::LayerOptions" right="" name="filter" default=""/>
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpacePublisher" fullname="QValueSpacePublisher::QValueSpacePublisher" href="qvaluespacepublisher.html#QValueSpacePublisher-3" location="qvaluespacepublisher.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QValueSpacePublisher(const QUuid &amp; uuid, const QString &amp; path, QObject * parent)">
                <parameter left="const QUuid &amp;" right="" name="uuid" default=""/>
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QValueSpacePublisher" fullname="QValueSpacePublisher::~QValueSpacePublisher" href="qvaluespacepublisher.html#dtor.QValueSpacePublisher" location="qvaluespacepublisher.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QValueSpacePublisher()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QValueSpacePublisher::path" href="qvaluespacepublisher.html#path" location="qvaluespacepublisher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="path() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="QValueSpacePublisher::isConnected" href="qvaluespacepublisher.html#isConnected" location="qvaluespacepublisher.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isConnected() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sync" fullname="QValueSpacePublisher::sync" href="qvaluespacepublisher.html#sync" location="qvaluespacepublisher.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="sync()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interestChanged" fullname="QValueSpacePublisher::interestChanged" href="qvaluespacepublisher.html#interestChanged" location="qvaluespacepublisher.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="interestChanged(const QString &amp; attribute, bool interested)">
                <parameter left="const QString &amp;" right="" name="attribute" default=""/>
                <parameter left="bool" right="" name="interested" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QValueSpacePublisher::setValue" href="qvaluespacepublisher.html#setValue" location="qvaluespacepublisher.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setValue(const QString &amp; name, const QVariant &amp; data)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QVariant &amp;" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetValue" fullname="QValueSpacePublisher::resetValue" href="qvaluespacepublisher.html#resetValue" location="qvaluespacepublisher.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="resetValue(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="connectNotify" fullname="QValueSpacePublisher::connectNotify" href="qvaluespacepublisher.html#connectNotify" location="qvaluespacepublisher.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="connectNotify(const char * member)">
                <parameter left="const char *" right="" name="member" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QCompassReading" href="qcompassreading.html" location="qcompass.h" bases="QSensorReading" module="">
            <contents name="qcompassreading-units" title="QCompassReading Units" level="2"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="azimuth" fullname="QCompassReading::azimuth" href="qcompassreading.html#azimuth-prop" location="qcompass.h" type="qreal">
                <getter name="azimuth"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="calibrationLevel" fullname="QCompassReading::calibrationLevel" href="qcompassreading.html#calibrationLevel-prop" location="qcompass.h" type="qreal">
                <getter name="calibrationLevel"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="azimuth" fullname="QCompassReading::azimuth" href="qcompassreading.html#azimuth-prop" location="qcompass.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="azimuth" type="qreal" signature="azimuth() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAzimuth" fullname="QCompassReading::setAzimuth" href="qcompassreading.html#setAzimuth" location="qcompass.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAzimuth(qreal azimuth)">
                <parameter left="qreal" right="" name="azimuth" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="calibrationLevel" fullname="QCompassReading::calibrationLevel" href="qcompassreading.html#calibrationLevel-prop" location="qcompass.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="calibrationLevel" type="qreal" signature="calibrationLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCalibrationLevel" fullname="QCompassReading::setCalibrationLevel" href="qcompassreading.html#setCalibrationLevel" location="qcompass.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCalibrationLevel(qreal calibrationLevel)">
                <parameter left="qreal" right="" name="calibrationLevel" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QCompassFilter" href="qcompassfilter.html" location="qcompass.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QCompassFilter::filter" href="qcompassfilter.html#filter" location="qcompass.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QCompassReading * reading)">
                <parameter left="QCompassReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QCompass" href="qcompass.html" location="qcompass.h" bases="QSensor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QCompass" fullname="QCompass::QCompass" href="qcompass.html#QCompass" location="qcompass.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCompass(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCompass" fullname="QCompass::~QCompass" href="qcompass.html#dtor.QCompass" location="qcompass.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCompass()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QCompass::reading" href="qcompass.html#reading" location="qcompass.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QCompassReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QCompass::type" href="qcompass.html#type-var" location="qcompass.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraLocksControl" href="qcameralockscontrol.html" location="qcameralockscontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraLocksControl" fullname="QCameraLocksControl::~QCameraLocksControl" href="qcameralockscontrol.html#dtor.QCameraLocksControl" location="qcameralockscontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraLocksControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedLocks" fullname="QCameraLocksControl::supportedLocks" href="qcameralockscontrol.html#supportedLocks" location="qcameralockscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::LockTypes" signature="supportedLocks() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockStatus" fullname="QCameraLocksControl::lockStatus" href="qcameralockscontrol.html#lockStatus" location="qcameralockscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::LockStatus" signature="lockStatus(QCamera::LockType lock) const">
                <parameter left="QCamera::LockType" right="" name="lock" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchAndLock" fullname="QCameraLocksControl::searchAndLock" href="qcameralockscontrol.html#searchAndLock" location="qcameralockscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="searchAndLock(QFlags&lt;QCamera::LockType&gt; locks)">
                <parameter left="QFlags&lt;QCamera::LockType&gt;" right="" name="locks" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlock" fullname="QCameraLocksControl::unlock" href="qcameralockscontrol.html#unlock" location="qcameralockscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="unlock(QFlags&lt;QCamera::LockType&gt; locks)">
                <parameter left="QFlags&lt;QCamera::LockType&gt;" right="" name="locks" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockStatusChanged" fullname="QCameraLocksControl::lockStatusChanged" href="qcameralockscontrol.html#lockStatusChanged" location="qcameralockscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="lockStatusChanged(QCamera::LockType lock, QCamera::LockStatus status, QCamera::LockChangeReason reason)">
                <parameter left="QCamera::LockType" right="" name="lock" default=""/>
                <parameter left="QCamera::LockStatus" right="" name="status" default=""/>
                <parameter left="QCamera::LockChangeReason" right="" name="reason" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraLocksControl" fullname="QCameraLocksControl::QCameraLocksControl" href="qcameralockscontrol.html#QCameraLocksControl" location="qcameralockscontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraLocksControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="qtimestamp" href="qsensor.html#qtimestamp-typedef" location="qsensor.h"/>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSensor" href="qsensor.html" location="qsensor.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="sensorid" fullname="QSensor::sensorid" href="qsensor.html#sensorid-prop" location="qsensor.h" type="QByteArray">
                <getter name="identifier"/>
                <setter name="setIdentifier"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QSensor::type" href="qsensor.html#type-prop" location="qsensor.h" type="QByteArray">
                <getter name="type"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="connectedToBackend" fullname="QSensor::connectedToBackend" href="qsensor.html#connectedToBackend-prop" location="qsensor.h" type="bool">
                <getter name="isConnectedToBackend"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="availableDataRates" fullname="QSensor::availableDataRates" href="qsensor.html#availableDataRates-prop" location="qsensor.h" type="QtMobility::qrangelist">
                <getter name="availableDataRates"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="dataRate" fullname="QSensor::dataRate" href="qsensor.html#dataRate-prop" location="qsensor.h" type="int">
                <getter name="dataRate"/>
                <setter name="setDataRate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QSensor::reading" href="qsensor.html#reading-prop" location="qsensor.h" type="QSensorReading *">
                <getter name="reading"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="busy" fullname="QSensor::busy" href="qsensor.html#busy-prop" location="qsensor.h" type="bool">
                <getter name="isBusy"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="active" fullname="QSensor::active" href="qsensor.html#active-prop" location="qsensor.h" type="bool">
                <getter name="isActive"/>
                <setter name="setActive"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="outputRanges" fullname="QSensor::outputRanges" href="qsensor.html#outputRanges-prop" location="qsensor.h" type="QtMobility::qoutputrangelist">
                <getter name="outputRanges"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="outputRange" fullname="QSensor::outputRange" href="qsensor.html#outputRange-prop" location="qsensor.h" type="int">
                <getter name="outputRange"/>
                <setter name="setOutputRange"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QSensor::description" href="qsensor.html#description-prop" location="qsensor.h" type="QString">
                <getter name="description"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QSensor::error" href="qsensor.html#error-prop" location="qsensor.h" type="int">
                <getter name="error"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSensor" fullname="QSensor::QSensor" href="qsensor.html#QSensor" location="qsensor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSensor(const QByteArray &amp; type, QObject * parent)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSensor" fullname="QSensor::~QSensor" href="qsensor.html#dtor.QSensor" location="qsensor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSensor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QSensor::identifier" href="qsensor.html#sensorid-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="sensorid" type="QByteArray" signature="identifier() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIdentifier" fullname="QSensor::setIdentifier" href="qsensor.html#sensorid-prop" location="qsensor.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="sensorid" type="void" signature="setIdentifier(const QByteArray &amp; identifier)">
                <parameter left="const QByteArray &amp;" right="" name="identifier" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QSensor::type" href="qsensor.html#type-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="type" type="QByteArray" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnectedToBackend" fullname="QSensor::isConnectedToBackend" href="qsensor.html#connectedToBackend-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="connectedToBackend" type="bool" signature="isConnectedToBackend() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isBusy" fullname="QSensor::isBusy" href="qsensor.html#busy-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="busy" type="bool" signature="isBusy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActive" fullname="QSensor::setActive" href="qsensor.html#active-prop" location="qsensor.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="active" type="void" signature="setActive(bool active)">
                <parameter left="bool" right="" name="active" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QSensor::isActive" href="qsensor.html#active-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="active" type="bool" signature="isActive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableDataRates" fullname="QSensor::availableDataRates" href="qsensor.html#availableDataRates-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="availableDataRates" type="qrangelist" signature="availableDataRates() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataRate" fullname="QSensor::dataRate" href="qsensor.html#dataRate-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="dataRate" type="int" signature="dataRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataRate" fullname="QSensor::setDataRate" href="qsensor.html#dataRate-prop" location="qsensor.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="dataRate" type="void" signature="setDataRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="outputRanges" fullname="QSensor::outputRanges" href="qsensor.html#outputRanges-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="outputRanges" type="qoutputrangelist" signature="outputRanges() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="outputRange" fullname="QSensor::outputRange" href="qsensor.html#outputRange-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="outputRange" type="int" signature="outputRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOutputRange" fullname="QSensor::setOutputRange" href="qsensor.html#outputRange-prop" location="qsensor.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="outputRange" type="void" signature="setOutputRange(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QSensor::description" href="qsensor.html#description-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="description" type="QString" signature="description() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QSensor::error" href="qsensor.html#error-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="error" type="int" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addFilter" fullname="QSensor::addFilter" href="qsensor.html#addFilter" location="qsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addFilter(QSensorFilter * filter)">
                <parameter left="QSensorFilter *" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeFilter" fullname="QSensor::removeFilter" href="qsensor.html#removeFilter" location="qsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeFilter(QSensorFilter * filter)">
                <parameter left="QSensorFilter *" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QSensor::reading" href="qsensor.html#reading-prop" location="qsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="reading" type="QSensorReading *" signature="reading() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sensorTypes" fullname="QSensor::sensorTypes" href="qsensor.html#sensorTypes" location="qsensor.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QByteArray&gt;" signature="sensorTypes()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sensorsForType" fullname="QSensor::sensorsForType" href="qsensor.html#sensorsForType" location="qsensor.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QByteArray&gt;" signature="sensorsForType(const QByteArray &amp; type)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultSensorForType" fullname="QSensor::defaultSensorForType" href="qsensor.html#defaultSensorForType" location="qsensor.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QByteArray" signature="defaultSensorForType(const QByteArray &amp; type)">
                <parameter left="const QByteArray &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QSensor::start" href="qsensor.html#start" location="qsensor.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QSensor::stop" href="qsensor.html#stop" location="qsensor.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="busyChanged" fullname="QSensor::busyChanged" href="qsensor.html#busyChanged" location="qsensor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="busyChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeChanged" fullname="QSensor::activeChanged" href="qsensor.html#activeChanged" location="qsensor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="readingChanged" fullname="QSensor::readingChanged" href="qsensor.html#readingChanged" location="qsensor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readingChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sensorError" fullname="QSensor::sensorError" href="qsensor.html#sensorError" location="qsensor.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="sensorError(int error)">
                <parameter left="int" right="" name="error" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSensorFilter" href="qsensorfilter.html" location="qsensor.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QSensorFilter::filter" href="qsensorfilter.html#filter" location="qsensor.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QSensorReading * reading)">
                <parameter left="QSensorReading *" right="" name="reading" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="~QSensorFilter" fullname="QSensorFilter::~QSensorFilter" href="qsensorfilter.html#dtor.QSensorFilter" location="qsensor.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSensorFilter()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="m_sensor" fullname="QSensorFilter::m_sensor" href="qsensorfilter.html#m_sensor-var" location="qsensor.h" type="QSensor *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSensorReading" href="qsensorreading.html" location="qsensor.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="timestamp" fullname="QSensorReading::timestamp" href="qsensorreading.html#timestamp-prop" location="qsensor.h" type="QtMobility::qtimestamp">
                <getter name="timestamp"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="timestamp" fullname="QSensorReading::timestamp" href="qsensorreading.html#timestamp-prop" location="qsensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="timestamp" type="qtimestamp" signature="timestamp() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimestamp" fullname="QSensorReading::setTimestamp" href="qsensorreading.html#setTimestamp" location="qsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTimestamp(qtimestamp timestamp)">
                <parameter left="qtimestamp" right="" name="timestamp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="valueCount" fullname="QSensorReading::valueCount" href="qsensorreading.html#valueCount" location="qsensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="valueCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QSensorReading::value" href="qsensorreading.html#value" location="qsensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkImportRequest" href="qlandmarkimportrequest.html" location="qlandmarkimportrequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkImportRequest" fullname="QLandmarkImportRequest::QLandmarkImportRequest" href="qlandmarkimportrequest.html#QLandmarkImportRequest" location="qlandmarkimportrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkImportRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkImportRequest" fullname="QLandmarkImportRequest::~QLandmarkImportRequest" href="qlandmarkimportrequest.html#dtor.QLandmarkImportRequest" location="qlandmarkimportrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkImportRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QLandmarkImportRequest::device" href="qlandmarkimportrequest.html#device" location="qlandmarkimportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QLandmarkImportRequest::setDevice" href="qlandmarkimportrequest.html#setDevice" location="qlandmarkimportrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fileName" fullname="QLandmarkImportRequest::fileName" href="qlandmarkimportrequest.html#fileName" location="qlandmarkimportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="fileName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFileName" fullname="QLandmarkImportRequest::setFileName" href="qlandmarkimportrequest.html#setFileName" location="qlandmarkimportrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFileName(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QLandmarkImportRequest::format" href="qlandmarkimportrequest.html#format" location="qlandmarkimportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormat" fullname="QLandmarkImportRequest::setFormat" href="qlandmarkimportrequest.html#setFormat" location="qlandmarkimportrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFormat(const QByteArray &amp; format)">
                <parameter left="const QByteArray &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkImportRequest::landmarkIds" href="qlandmarkimportrequest.html#landmarkIds" location="qlandmarkimportrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceSubscriber" href="qvaluespacesubscriber.html" location="qvaluespacesubscriber.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QValueSpaceSubscriber::path" href="qvaluespacesubscriber.html#path-prop" location="qvaluespacesubscriber.h" type="QString">
                <getter name="path"/>
                <setter name="setPath"/>
                <setter name="setPath"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QValueSpaceSubscriber::value" href="qvaluespacesubscriber.html#value-prop" location="qvaluespacesubscriber.h" type="QVariant"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceSubscriber" fullname="QValueSpaceSubscriber::QValueSpaceSubscriber" href="qvaluespacesubscriber.html#QValueSpaceSubscriber" location="qvaluespacesubscriber.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QValueSpaceSubscriber(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceSubscriber" fullname="QValueSpaceSubscriber::QValueSpaceSubscriber" href="qvaluespacesubscriber.html#QValueSpaceSubscriber-2" location="qvaluespacesubscriber.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QValueSpaceSubscriber(const QString &amp; path, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceSubscriber" fullname="QValueSpaceSubscriber::QValueSpaceSubscriber" href="qvaluespacesubscriber.html#QValueSpaceSubscriber-3" location="qvaluespacesubscriber.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QValueSpaceSubscriber(QValueSpace::LayerOptions filter, const QString &amp; path, QObject * parent)">
                <parameter left="QValueSpace::LayerOptions" right="" name="filter" default=""/>
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QValueSpaceSubscriber" fullname="QValueSpaceSubscriber::QValueSpaceSubscriber" href="qvaluespacesubscriber.html#QValueSpaceSubscriber-4" location="qvaluespacesubscriber.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QValueSpaceSubscriber(const QUuid &amp; uuid, const QString &amp; path, QObject * parent)">
                <parameter left="const QUuid &amp;" right="" name="uuid" default=""/>
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QValueSpaceSubscriber" fullname="QValueSpaceSubscriber::~QValueSpaceSubscriber" href="qvaluespacesubscriber.html#dtor.QValueSpaceSubscriber" location="qvaluespacesubscriber.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QValueSpaceSubscriber()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPath" fullname="QValueSpaceSubscriber::setPath" href="qvaluespacesubscriber.html#path-prop" location="qvaluespacesubscriber.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="path" type="void" signature="setPath(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPath" fullname="QValueSpaceSubscriber::setPath" href="qvaluespacesubscriber.html#path-prop" location="qvaluespacesubscriber.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" associated-property="path" type="void" signature="setPath(QValueSpaceSubscriber * subscriber)">
                <parameter left="QValueSpaceSubscriber *" right="" name="subscriber" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QValueSpaceSubscriber::path" href="qvaluespacesubscriber.html#path-prop" location="qvaluespacesubscriber.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="path" type="QString" signature="path() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cd" fullname="QValueSpaceSubscriber::cd" href="qvaluespacesubscriber.html#cd" location="qvaluespacesubscriber.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="cd(const QString &amp; path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cdUp" fullname="QValueSpaceSubscriber::cdUp" href="qvaluespacesubscriber.html#cdUp" location="qvaluespacesubscriber.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="cdUp()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isConnected" fullname="QValueSpaceSubscriber::isConnected" href="qvaluespacesubscriber.html#isConnected" location="qvaluespacesubscriber.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isConnected() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="subPaths" fullname="QValueSpaceSubscriber::subPaths" href="qvaluespacesubscriber.html#subPaths" location="qvaluespacesubscriber.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="subPaths() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QValueSpaceSubscriber::value" href="qvaluespacesubscriber.html#value" location="qvaluespacesubscriber.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value(const QString &amp; subPath, const QVariant &amp; def) const">
                <parameter left="const QString &amp;" right="" name="subPath" default="QString()"/>
                <parameter left="const QVariant &amp;" right="" name="def" default="QVariant()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentsChanged" fullname="QValueSpaceSubscriber::contentsChanged" href="qvaluespacesubscriber.html#contentsChanged" location="qvaluespacesubscriber.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contentsChanged()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraImageCaptureControl" href="qcameraimagecapturecontrol.html" location="qcameraimagecapturecontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraImageCaptureControl" fullname="QCameraImageCaptureControl::~QCameraImageCaptureControl" href="qcameraimagecapturecontrol.html#dtor.QCameraImageCaptureControl" location="qcameraimagecapturecontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraImageCaptureControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadyForCapture" fullname="QCameraImageCaptureControl::isReadyForCapture" href="qcameraimagecapturecontrol.html#isReadyForCapture" location="qcameraimagecapturecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadyForCapture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="driveMode" fullname="QCameraImageCaptureControl::driveMode" href="qcameraimagecapturecontrol.html#driveMode" location="qcameraimagecapturecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraImageCapture::DriveMode" signature="driveMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDriveMode" fullname="QCameraImageCaptureControl::setDriveMode" href="qcameraimagecapturecontrol.html#setDriveMode" location="qcameraimagecapturecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDriveMode(QCameraImageCapture::DriveMode mode)">
                <parameter left="QCameraImageCapture::DriveMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="capture" fullname="QCameraImageCaptureControl::capture" href="qcameraimagecapturecontrol.html#capture" location="qcameraimagecapturecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="int" signature="capture(const QString &amp; fileName)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelCapture" fullname="QCameraImageCaptureControl::cancelCapture" href="qcameraimagecapturecontrol.html#cancelCapture" location="qcameraimagecapturecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="cancelCapture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="readyForCaptureChanged" fullname="QCameraImageCaptureControl::readyForCaptureChanged" href="qcameraimagecapturecontrol.html#readyForCaptureChanged" location="qcameraimagecapturecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readyForCaptureChanged(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageExposed" fullname="QCameraImageCaptureControl::imageExposed" href="qcameraimagecapturecontrol.html#imageExposed" location="qcameraimagecapturecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="imageExposed(int requestId)">
                <parameter left="int" right="" name="requestId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageCaptured" fullname="QCameraImageCaptureControl::imageCaptured" href="qcameraimagecapturecontrol.html#imageCaptured" location="qcameraimagecapturecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="imageCaptured(int requestId, const QImage &amp; preview)">
                <parameter left="int" right="" name="requestId" default=""/>
                <parameter left="const QImage &amp;" right="" name="preview" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageSaved" fullname="QCameraImageCaptureControl::imageSaved" href="qcameraimagecapturecontrol.html#imageSaved" location="qcameraimagecapturecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="imageSaved(int requestId, const QString &amp; fileName)">
                <parameter left="int" right="" name="requestId" default=""/>
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QCameraImageCaptureControl::error" href="qcameraimagecapturecontrol.html#error" location="qcameraimagecapturecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraImageCaptureControl" fullname="QCameraImageCaptureControl::QCameraImageCaptureControl" href="qcameraimagecapturecontrol.html#QCameraImageCaptureControl" location="qcameraimagecapturecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraImageCaptureControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetail" href="qorganizeritemdetail.html" location="qorganizeritemdetail.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetail" fullname="QOrganizerItemDetail::QOrganizerItemDetail" href="qorganizeritemdetail.html#QOrganizerItemDetail" location="qorganizeritemdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetail()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetail" fullname="QOrganizerItemDetail::QOrganizerItemDetail" href="qorganizeritemdetail.html#QOrganizerItemDetail-2" location="qorganizeritemdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemDetail(const char * thisDefinitionId)">
                <parameter left="const char *" right="" name="thisDefinitionId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetail" fullname="QOrganizerItemDetail::QOrganizerItemDetail" href="qorganizeritemdetail.html#QOrganizerItemDetail-3" location="qorganizeritemdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QOrganizerItemDetail(const QString &amp; thisDefinitionId)">
                <parameter left="const QString &amp;" right="" name="thisDefinitionId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemDetail" fullname="QOrganizerItemDetail::~QOrganizerItemDetail" href="qorganizeritemdetail.html#dtor.QOrganizerItemDetail" location="qorganizeritemdetail.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemDetail()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetail" fullname="QOrganizerItemDetail::QOrganizerItemDetail" href="qorganizeritemdetail.html#QOrganizerItemDetail-4" location="qorganizeritemdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QOrganizerItemDetail(const QOrganizerItemDetail &amp; other)">
                <parameter left="const QOrganizerItemDetail &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemDetail::operator=" href="qorganizeritemdetail.html#operator=" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemDetail &amp;" signature="operator=(const QOrganizerItemDetail &amp; other)">
                <parameter left="const QOrganizerItemDetail &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AccessConstraint" fullname="QOrganizerItemDetail::AccessConstraint" href="qorganizeritemdetail.html#AccessConstraint-enum" location="qorganizeritemdetail.h" typedef="QOrganizerItemDetail::AccessConstraints">
                <value name="NoConstraint" value="0"/>
                <value name="ReadOnly" value="0x01"/>
                <value name="Irremovable" value="0x02"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="AccessConstraints" fullname="QOrganizerItemDetail::AccessConstraints" href="qorganizeritemdetail.html#AccessConstraints-typedef" location="qorganizeritemdetail.h" enum="QOrganizerItemDetail::AccessConstraint"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="accessConstraints" fullname="QOrganizerItemDetail::accessConstraints" href="qorganizeritemdetail.html#accessConstraints" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="AccessConstraints" signature="accessConstraints() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOrganizerItemDetail::operator==" href="qorganizeritemdetail.html#operator==" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOrganizerItemDetail &amp; other) const">
                <parameter left="const QOrganizerItemDetail &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QOrganizerItemDetail::operator!=" href="qorganizeritemdetail.html#operator!=" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QOrganizerItemDetail &amp; other) const">
                <parameter left="const QOrganizerItemDetail &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitionName" fullname="QOrganizerItemDetail::definitionName" href="qorganizeritemdetail.html#definitionName" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="definitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QOrganizerItemDetail::isEmpty" href="qorganizeritemdetail.html#isEmpty" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QOrganizerItemDetail::key" href="qorganizeritemdetail.html#key" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="key() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetKey" fullname="QOrganizerItemDetail::resetKey" href="qorganizeritemdetail.html#resetKey" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resetKey()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QOrganizerItemDetail::value" href="qorganizeritemdetail.html#value-3" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QString" signature="value(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QOrganizerItemDetail::setValue" href="qorganizeritemdetail.html#setValue" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setValue(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeValue" fullname="QOrganizerItemDetail::removeValue" href="qorganizeritemdetail.html#removeValue" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeValue(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasValue" fullname="QOrganizerItemDetail::hasValue" href="qorganizeritemdetail.html#hasValue" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasValue(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="variantValues" fullname="QOrganizerItemDetail::variantValues" href="qorganizeritemdetail.html#variantValues" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariantMap" signature="variantValues() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="variantValue" fullname="QOrganizerItemDetail::variantValue" href="qorganizeritemdetail.html#variantValue" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="variantValue(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QOrganizerItemDetail::value" href="qorganizeritemdetail.html#value" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="T" signature="value(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QOrganizerItemDetail::value" href="qorganizeritemdetail.html#value-6" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="6" type="QString" signature="value(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QOrganizerItemDetail::setValue" href="qorganizeritemdetail.html#setValue-3" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="setValue(const QLatin1Constant &amp; key, const QVariant &amp; value)">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeValue" fullname="QOrganizerItemDetail::removeValue" href="qorganizeritemdetail.html#removeValue-3" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="removeValue(const QLatin1Constant &amp; key)">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasValue" fullname="QOrganizerItemDetail::hasValue" href="qorganizeritemdetail.html#hasValue-3" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="bool" signature="hasValue(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="variantValue" fullname="QOrganizerItemDetail::variantValue" href="qorganizeritemdetail.html#variantValue-3" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QVariant" signature="variantValue(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QOrganizerItemDetail::value" href="qorganizeritemdetail.html#value-2" location="qorganizeritemdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="T" signature="value(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactChangeSet" href="qcontactchangeset.html" location="qcontactchangeset.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactChangeSet" fullname="QContactChangeSet::QContactChangeSet" href="qcontactchangeset.html#QContactChangeSet" location="qcontactchangeset.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactChangeSet()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactChangeSet" fullname="QContactChangeSet::QContactChangeSet" href="qcontactchangeset.html#QContactChangeSet-2" location="qcontactchangeset.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactChangeSet(const QContactChangeSet &amp; other)">
                <parameter left="const QContactChangeSet &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactChangeSet" fullname="QContactChangeSet::~QContactChangeSet" href="qcontactchangeset.html#dtor.QContactChangeSet" location="qcontactchangeset.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactChangeSet()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactChangeSet::operator=" href="qcontactchangeset.html#operator=" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactChangeSet &amp;" signature="operator=(const QContactChangeSet &amp; other)">
                <parameter left="const QContactChangeSet &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataChanged" fullname="QContactChangeSet::setDataChanged" href="qcontactchangeset.html#setDataChanged" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataChanged(bool dataChanged)">
                <parameter left="bool" right="" name="dataChanged" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataChanged" fullname="QContactChangeSet::dataChanged" href="qcontactchangeset.html#dataChanged" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="dataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addedContacts" fullname="QContactChangeSet::addedContacts" href="qcontactchangeset.html#addedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QContactLocalId&gt;" signature="addedContacts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertAddedContact" fullname="QContactChangeSet::insertAddedContact" href="qcontactchangeset.html#insertAddedContact" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertAddedContact(QContactLocalId addedContactId)">
                <parameter left="QContactLocalId" right="" name="addedContactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertAddedContacts" fullname="QContactChangeSet::insertAddedContacts" href="qcontactchangeset.html#insertAddedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertAddedContacts(const QList&lt;QContactLocalId&gt; &amp; addedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="addedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAddedContacts" fullname="QContactChangeSet::clearAddedContacts" href="qcontactchangeset.html#clearAddedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAddedContacts()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="changedContacts" fullname="QContactChangeSet::changedContacts" href="qcontactchangeset.html#changedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QContactLocalId&gt;" signature="changedContacts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertChangedContact" fullname="QContactChangeSet::insertChangedContact" href="qcontactchangeset.html#insertChangedContact" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertChangedContact(QContactLocalId changedContactId)">
                <parameter left="QContactLocalId" right="" name="changedContactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertChangedContacts" fullname="QContactChangeSet::insertChangedContacts" href="qcontactchangeset.html#insertChangedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertChangedContacts(const QList&lt;QContactLocalId&gt; &amp; changedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="changedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearChangedContacts" fullname="QContactChangeSet::clearChangedContacts" href="qcontactchangeset.html#clearChangedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearChangedContacts()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="removedContacts" fullname="QContactChangeSet::removedContacts" href="qcontactchangeset.html#removedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QContactLocalId&gt;" signature="removedContacts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRemovedContact" fullname="QContactChangeSet::insertRemovedContact" href="qcontactchangeset.html#insertRemovedContact" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertRemovedContact(QContactLocalId removedContactId)">
                <parameter left="QContactLocalId" right="" name="removedContactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRemovedContacts" fullname="QContactChangeSet::insertRemovedContacts" href="qcontactchangeset.html#insertRemovedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertRemovedContacts(const QList&lt;QContactLocalId&gt; &amp; removedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="removedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearRemovedContacts" fullname="QContactChangeSet::clearRemovedContacts" href="qcontactchangeset.html#clearRemovedContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearRemovedContacts()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addedRelationshipsContacts" fullname="QContactChangeSet::addedRelationshipsContacts" href="qcontactchangeset.html#addedRelationshipsContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QContactLocalId&gt;" signature="addedRelationshipsContacts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertAddedRelationshipsContact" fullname="QContactChangeSet::insertAddedRelationshipsContact" href="qcontactchangeset.html#insertAddedRelationshipsContact" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertAddedRelationshipsContact(QContactLocalId affectedContactId)">
                <parameter left="QContactLocalId" right="" name="affectedContactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertAddedRelationshipsContacts" fullname="QContactChangeSet::insertAddedRelationshipsContacts" href="qcontactchangeset.html#insertAddedRelationshipsContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertAddedRelationshipsContacts(const QList&lt;QContactLocalId&gt; &amp; affectedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="affectedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAddedRelationshipsContacts" fullname="QContactChangeSet::clearAddedRelationshipsContacts" href="qcontactchangeset.html#clearAddedRelationshipsContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAddedRelationshipsContacts()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="removedRelationshipsContacts" fullname="QContactChangeSet::removedRelationshipsContacts" href="qcontactchangeset.html#removedRelationshipsContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSet&lt;QContactLocalId&gt;" signature="removedRelationshipsContacts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRemovedRelationshipsContact" fullname="QContactChangeSet::insertRemovedRelationshipsContact" href="qcontactchangeset.html#insertRemovedRelationshipsContact" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertRemovedRelationshipsContact(QContactLocalId affectedContactId)">
                <parameter left="QContactLocalId" right="" name="affectedContactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertRemovedRelationshipsContacts" fullname="QContactChangeSet::insertRemovedRelationshipsContacts" href="qcontactchangeset.html#insertRemovedRelationshipsContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertRemovedRelationshipsContacts(const QList&lt;QContactLocalId&gt; &amp; affectedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="affectedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearRemovedRelationshipsContacts" fullname="QContactChangeSet::clearRemovedRelationshipsContacts" href="qcontactchangeset.html#clearRemovedRelationshipsContacts" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearRemovedRelationshipsContacts()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOldAndNewSelfContactId" fullname="QContactChangeSet::setOldAndNewSelfContactId" href="qcontactchangeset.html#setOldAndNewSelfContactId" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOldAndNewSelfContactId(const QPair&lt;QContactLocalId, QContactLocalId&gt; &amp; oldAndNewContactId)">
                <parameter left="const QPair&lt;QContactLocalId, QContactLocalId&gt; &amp;" right="" name="oldAndNewContactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="oldAndNewSelfContactId" fullname="QContactChangeSet::oldAndNewSelfContactId" href="qcontactchangeset.html#oldAndNewSelfContactId" location="qcontactchangeset.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;QContactLocalId, QContactLocalId&gt;" signature="oldAndNewSelfContactId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAll" fullname="QContactChangeSet::clearAll" href="qcontactchangeset.html#clearAll" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAll()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="emitSignals" fullname="QContactChangeSet::emitSignals" href="qcontactchangeset.html#emitSignals" location="qcontactchangeset.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="emitSignals(QContactManagerEngine * engine)">
                <parameter left="QContactManagerEngine *" right="" name="engine" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemAbstractRequest" href="qorganizeritemabstractrequest.html" location="qorganizeritemabstractrequest.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemAbstractRequest" fullname="QOrganizerItemAbstractRequest::~QOrganizerItemAbstractRequest" href="qorganizeritemabstractrequest.html#dtor.QOrganizerItemAbstractRequest" location="qorganizeritemabstractrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemAbstractRequest()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QOrganizerItemAbstractRequest::State" href="qorganizeritemabstractrequest.html#State-enum" location="qorganizeritemabstractrequest.h">
                <value name="InactiveState" value="0"/>
                <value name="ActiveState" value="1"/>
                <value name="CanceledState" value="2"/>
                <value name="FinishedState" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QOrganizerItemAbstractRequest::state" href="qorganizeritemabstractrequest.html#state" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInactive" fullname="QOrganizerItemAbstractRequest::isInactive" href="qorganizeritemabstractrequest.html#isInactive" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInactive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QOrganizerItemAbstractRequest::isActive" href="qorganizeritemabstractrequest.html#isActive" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QOrganizerItemAbstractRequest::isFinished" href="qorganizeritemabstractrequest.html#isFinished" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCanceled" fullname="QOrganizerItemAbstractRequest::isCanceled" href="qorganizeritemabstractrequest.html#isCanceled" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCanceled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QOrganizerItemAbstractRequest::error" href="qorganizeritemabstractrequest.html#error" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemManager::Error" signature="error() const"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RequestType" fullname="QOrganizerItemAbstractRequest::RequestType" href="qorganizeritemabstractrequest.html#RequestType-enum" location="qorganizeritemabstractrequest.h">
                <value name="InvalidRequest" value="0"/>
                <value name="ItemInstanceFetchRequest" value="1"/>
                <value name="ItemFetchRequest" value="2"/>
                <value name="ItemLocalIdFetchRequest" value="3"/>
                <value name="ItemRemoveRequest" value="4"/>
                <value name="ItemSaveRequest" value="5"/>
                <value name="DetailDefinitionFetchRequest" value="6"/>
                <value name="DetailDefinitionRemoveRequest" value="7"/>
                <value name="DetailDefinitionSaveRequest" value="8"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QOrganizerItemAbstractRequest::type" href="qorganizeritemabstractrequest.html#type" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RequestType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manager" fullname="QOrganizerItemAbstractRequest::manager" href="qorganizeritemabstractrequest.html#manager" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemManager *" signature="manager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManager" fullname="QOrganizerItemAbstractRequest::setManager" href="qorganizeritemabstractrequest.html#setManager" location="qorganizeritemabstractrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManager(QOrganizerItemManager * manager)">
                <parameter left="QOrganizerItemManager *" right="" name="manager" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QOrganizerItemAbstractRequest::start" href="qorganizeritemabstractrequest.html#start" location="qorganizeritemabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QOrganizerItemAbstractRequest::cancel" href="qorganizeritemabstractrequest.html#cancel" location="qorganizeritemabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForFinished" fullname="QOrganizerItemAbstractRequest::waitForFinished" href="qorganizeritemabstractrequest.html#waitForFinished" location="qorganizeritemabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="waitForFinished(int msecs)">
                <parameter left="int" right="" name="msecs" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QOrganizerItemAbstractRequest::stateChanged" href="qorganizeritemabstractrequest.html#stateChanged" location="qorganizeritemabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resultsAvailable" fullname="QOrganizerItemAbstractRequest::resultsAvailable" href="qorganizeritemabstractrequest.html#resultsAvailable" location="qorganizeritemabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resultsAvailable()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QOrganizerItemAbstractRequest::d_ptr" href="qorganizeritemabstractrequest.html#d_ptr-var" location="qorganizeritemabstractrequest.h" type="QOrganizerItemAbstractRequestPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSystemNetworkInfo" href="qsystemnetworkinfo.html" location="qsystemnetworkinfo.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="cellId" fullname="QSystemNetworkInfo::cellId" href="qsystemnetworkinfo.html#cellId-prop" location="qsystemnetworkinfo.h" type="int">
                <getter name="cellId"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="locationAreaCode" fullname="QSystemNetworkInfo::locationAreaCode" href="qsystemnetworkinfo.html#locationAreaCode-prop" location="qsystemnetworkinfo.h" type="int">
                <getter name="locationAreaCode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentMobileCountryCode" fullname="QSystemNetworkInfo::currentMobileCountryCode" href="qsystemnetworkinfo.html#currentMobileCountryCode-prop" location="qsystemnetworkinfo.h" type="QString">
                <getter name="currentMobileCountryCode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentMobileNetworkCode" fullname="QSystemNetworkInfo::currentMobileNetworkCode" href="qsystemnetworkinfo.html#currentMobileNetworkCode-prop" location="qsystemnetworkinfo.h" type="QString">
                <getter name="currentMobileNetworkCode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="homeMobileCountryCode" fullname="QSystemNetworkInfo::homeMobileCountryCode" href="qsystemnetworkinfo.html#homeMobileCountryCode-prop" location="qsystemnetworkinfo.h" type="QString">
                <getter name="homeMobileCountryCode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="homeMobileNetworkCode" fullname="QSystemNetworkInfo::homeMobileNetworkCode" href="qsystemnetworkinfo.html#homeMobileNetworkCode-prop" location="qsystemnetworkinfo.h" type="QString">
                <getter name="homeMobileNetworkCode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentMode" fullname="QSystemNetworkInfo::currentMode" href="qsystemnetworkinfo.html#currentMode-prop" location="qsystemnetworkinfo.h" type="QSystemNetworkInfo::NetworkMode"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemNetworkInfo" fullname="QSystemNetworkInfo::QSystemNetworkInfo" href="qsystemnetworkinfo.html#QSystemNetworkInfo" location="qsystemnetworkinfo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemNetworkInfo(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemNetworkInfo" fullname="QSystemNetworkInfo::~QSystemNetworkInfo" href="qsystemnetworkinfo.html#dtor.QSystemNetworkInfo" location="qsystemnetworkinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemNetworkInfo()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="NetworkStatus" fullname="QSystemNetworkInfo::NetworkStatus" href="qsystemnetworkinfo.html#NetworkStatus-enum" location="qsystemnetworkinfo.h">
                <value name="UndefinedStatus" value="0"/>
                <value name="NoNetworkAvailable" value="1"/>
                <value name="EmergencyOnly" value="2"/>
                <value name="Searching" value="3"/>
                <value name="Busy" value="4"/>
                <value name="Connected" value="5"/>
                <value name="HomeNetwork" value="6"/>
                <value name="Denied" value="7"/>
                <value name="Roaming" value="8"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="NetworkMode" fullname="QSystemNetworkInfo::NetworkMode" href="qsystemnetworkinfo.html#NetworkMode-enum" location="qsystemnetworkinfo.h">
                <value name="UnknownMode" value="0"/>
                <value name="GsmMode" value="1"/>
                <value name="CdmaMode" value="2"/>
                <value name="WcdmaMode" value="3"/>
                <value name="WlanMode" value="4"/>
                <value name="EthernetMode" value="5"/>
                <value name="BluetoothMode" value="6"/>
                <value name="WimaxMode" value="7"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="cellId" fullname="QSystemNetworkInfo::cellId" href="qsystemnetworkinfo.html#cellId-prop" location="qsystemnetworkinfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="cellId" type="int" signature="cellId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="locationAreaCode" fullname="QSystemNetworkInfo::locationAreaCode" href="qsystemnetworkinfo.html#locationAreaCode-prop" location="qsystemnetworkinfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="locationAreaCode" type="int" signature="locationAreaCode()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMobileCountryCode" fullname="QSystemNetworkInfo::currentMobileCountryCode" href="qsystemnetworkinfo.html#currentMobileCountryCode-prop" location="qsystemnetworkinfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentMobileCountryCode" type="QString" signature="currentMobileCountryCode()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMobileNetworkCode" fullname="QSystemNetworkInfo::currentMobileNetworkCode" href="qsystemnetworkinfo.html#currentMobileNetworkCode-prop" location="qsystemnetworkinfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentMobileNetworkCode" type="QString" signature="currentMobileNetworkCode()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeMobileCountryCode" fullname="QSystemNetworkInfo::homeMobileCountryCode" href="qsystemnetworkinfo.html#homeMobileCountryCode-prop" location="qsystemnetworkinfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="homeMobileCountryCode" type="QString" signature="homeMobileCountryCode()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="homeMobileNetworkCode" fullname="QSystemNetworkInfo::homeMobileNetworkCode" href="qsystemnetworkinfo.html#homeMobileNetworkCode-prop" location="qsystemnetworkinfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="homeMobileNetworkCode" type="QString" signature="homeMobileNetworkCode()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceForMode" fullname="QSystemNetworkInfo::interfaceForMode" href="qsystemnetworkinfo.html#interfaceForMode" location="qsystemnetworkinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkInterface" signature="interfaceForMode(QSystemNetworkInfo::NetworkMode mode)">
                <parameter left="QSystemNetworkInfo::NetworkMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkStatusChanged" fullname="QSystemNetworkInfo::networkStatusChanged" href="qsystemnetworkinfo.html#networkStatusChanged" location="qsystemnetworkinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="networkStatusChanged(QSystemNetworkInfo::NetworkMode mode, QSystemNetworkInfo::NetworkStatus status)">
                <parameter left="QSystemNetworkInfo::NetworkMode" right="" name="mode" default=""/>
                <parameter left="QSystemNetworkInfo::NetworkStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkSignalStrengthChanged" fullname="QSystemNetworkInfo::networkSignalStrengthChanged" href="qsystemnetworkinfo.html#networkSignalStrengthChanged" location="qsystemnetworkinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="networkSignalStrengthChanged(QSystemNetworkInfo::NetworkMode mode, int strength)">
                <parameter left="QSystemNetworkInfo::NetworkMode" right="" name="mode" default=""/>
                <parameter left="int" right="" name="strength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMobileCountryCodeChanged" fullname="QSystemNetworkInfo::currentMobileCountryCodeChanged" href="qsystemnetworkinfo.html#currentMobileCountryCodeChanged" location="qsystemnetworkinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMobileCountryCodeChanged(const QString &amp; mcc)">
                <parameter left="const QString &amp;" right="" name="mcc" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMobileNetworkCodeChanged" fullname="QSystemNetworkInfo::currentMobileNetworkCodeChanged" href="qsystemnetworkinfo.html#currentMobileNetworkCodeChanged" location="qsystemnetworkinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMobileNetworkCodeChanged(const QString &amp; mnc)">
                <parameter left="const QString &amp;" right="" name="mnc" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkNameChanged" fullname="QSystemNetworkInfo::networkNameChanged" href="qsystemnetworkinfo.html#networkNameChanged" location="qsystemnetworkinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="networkNameChanged(QSystemNetworkInfo::NetworkMode mode, const QString &amp; netName)">
                <parameter left="QSystemNetworkInfo::NetworkMode" right="" name="mode" default=""/>
                <parameter left="const QString &amp;" right="" name="netName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="networkModeChanged" fullname="QSystemNetworkInfo::networkModeChanged" href="qsystemnetworkinfo.html#networkModeChanged" location="qsystemnetworkinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="networkModeChanged(QSystemNetworkInfo::NetworkMode mode)">
                <parameter left="QSystemNetworkInfo::NetworkMode" right="" name="mode" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactActionDescriptor" href="qcontactactiondescriptor.html" location="qcontactactiondescriptor.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactActionDescriptor" fullname="QContactActionDescriptor::QContactActionDescriptor" href="qcontactactiondescriptor.html#QContactActionDescriptor" location="qcontactactiondescriptor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactActionDescriptor(const QString &amp; actionName, const QString &amp; vendorName, int vendorVersion)">
                <parameter left="const QString &amp;" right="" name="actionName" default="QString()"/>
                <parameter left="const QString &amp;" right="" name="vendorName" default="QString()"/>
                <parameter left="int" right="" name="vendorVersion" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactActionDescriptor" fullname="QContactActionDescriptor::QContactActionDescriptor" href="qcontactactiondescriptor.html#QContactActionDescriptor-2" location="qcontactactiondescriptor.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactActionDescriptor(const QContactActionDescriptor &amp; other)">
                <parameter left="const QContactActionDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactActionDescriptor::operator=" href="qcontactactiondescriptor.html#operator=" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactActionDescriptor &amp;" signature="operator=(const QContactActionDescriptor &amp; other)">
                <parameter left="const QContactActionDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactActionDescriptor" fullname="QContactActionDescriptor::~QContactActionDescriptor" href="qcontactactiondescriptor.html#dtor.QContactActionDescriptor" location="qcontactactiondescriptor.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactActionDescriptor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QContactActionDescriptor::isEmpty" href="qcontactactiondescriptor.html#isEmpty" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactActionDescriptor::operator==" href="qcontactactiondescriptor.html#operator==" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactActionDescriptor &amp; other) const">
                <parameter left="const QContactActionDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactActionDescriptor::operator!=" href="qcontactactiondescriptor.html#operator!=" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactActionDescriptor &amp; other) const">
                <parameter left="const QContactActionDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActionName" fullname="QContactActionDescriptor::setActionName" href="qcontactactiondescriptor.html#setActionName" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setActionName(const QString &amp; actionName)">
                <parameter left="const QString &amp;" right="" name="actionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVendorName" fullname="QContactActionDescriptor::setVendorName" href="qcontactactiondescriptor.html#setVendorName" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVendorName(const QString &amp; vendorName)">
                <parameter left="const QString &amp;" right="" name="vendorName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setImplementationVersion" fullname="QContactActionDescriptor::setImplementationVersion" href="qcontactactiondescriptor.html#setImplementationVersion" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setImplementationVersion(int implementationVersion)">
                <parameter left="int" right="" name="implementationVersion" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actionName" fullname="QContactActionDescriptor::actionName" href="qcontactactiondescriptor.html#actionName" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="actionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="vendorName" fullname="QContactActionDescriptor::vendorName" href="qcontactactiondescriptor.html#vendorName" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="vendorName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="implementationVersion" fullname="QContactActionDescriptor::implementationVersion" href="qcontactactiondescriptor.html#implementationVersion" location="qcontactactiondescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="implementationVersion() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraImageProcessing" href="qcameraimageprocessing.html" location="qcameraimageprocessing.h" bases="" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="WhiteBalanceMode" fullname="QCameraImageProcessing::WhiteBalanceMode" href="qcameraimageprocessing.html#WhiteBalanceMode-enum" location="qcameraimageprocessing.h">
                <value name="WhiteBalanceManual" value="0"/>
                <value name="WhiteBalanceAuto" value="1"/>
                <value name="WhiteBalanceSunlight" value="2"/>
                <value name="WhiteBalanceCloudy" value="3"/>
                <value name="WhiteBalanceShade" value="4"/>
                <value name="WhiteBalanceTungsten" value="5"/>
                <value name="WhiteBalanceFluorescent" value="6"/>
                <value name="WhiteBalanceIncandescent" value="7"/>
                <value name="WhiteBalanceFlash" value="8"/>
                <value name="WhiteBalanceSunset" value="9"/>
                <value name="WhiteBalanceVendor" value="1000"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QCameraImageProcessing::isAvailable" href="qcameraimageprocessing.html#isAvailable" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="whiteBalanceMode" fullname="QCameraImageProcessing::whiteBalanceMode" href="qcameraimageprocessing.html#whiteBalanceMode" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WhiteBalanceMode" signature="whiteBalanceMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWhiteBalanceMode" fullname="QCameraImageProcessing::setWhiteBalanceMode" href="qcameraimageprocessing.html#setWhiteBalanceMode" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWhiteBalanceMode(WhiteBalanceMode mode)">
                <parameter left="WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isWhiteBalanceModeSupported" fullname="QCameraImageProcessing::isWhiteBalanceModeSupported" href="qcameraimageprocessing.html#isWhiteBalanceModeSupported" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isWhiteBalanceModeSupported(WhiteBalanceMode mode) const">
                <parameter left="WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="manualWhiteBalance" fullname="QCameraImageProcessing::manualWhiteBalance" href="qcameraimageprocessing.html#manualWhiteBalance" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="manualWhiteBalance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualWhiteBalance" fullname="QCameraImageProcessing::setManualWhiteBalance" href="qcameraimageprocessing.html#setManualWhiteBalance" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualWhiteBalance(int colorTemperature)">
                <parameter left="int" right="" name="colorTemperature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QCameraImageProcessing::contrast" href="qcameraimageprocessing.html#contrast" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QCameraImageProcessing::setContrast" href="qcameraimageprocessing.html#setContrast" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContrast(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QCameraImageProcessing::saturation" href="qcameraimageprocessing.html#saturation" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QCameraImageProcessing::setSaturation" href="qcameraimageprocessing.html#setSaturation" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaturation(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSharpeningSupported" fullname="QCameraImageProcessing::isSharpeningSupported" href="qcameraimageprocessing.html#isSharpeningSupported" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSharpeningSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sharpeningLevel" fullname="QCameraImageProcessing::sharpeningLevel" href="qcameraimageprocessing.html#sharpeningLevel" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sharpeningLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSharpeningLevel" fullname="QCameraImageProcessing::setSharpeningLevel" href="qcameraimageprocessing.html#setSharpeningLevel" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSharpeningLevel(int level)">
                <parameter left="int" right="" name="level" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDenoisingSupported" fullname="QCameraImageProcessing::isDenoisingSupported" href="qcameraimageprocessing.html#isDenoisingSupported" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isDenoisingSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="denoisingLevel" fullname="QCameraImageProcessing::denoisingLevel" href="qcameraimageprocessing.html#denoisingLevel" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="denoisingLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDenoisingLevel" fullname="QCameraImageProcessing::setDenoisingLevel" href="qcameraimageprocessing.html#setDenoisingLevel" location="qcameraimageprocessing.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDenoisingLevel(int level)">
                <parameter left="int" right="" name="level" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemSortOrder" href="qorganizeritemsortorder.html" location="qorganizeritemsortorder.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemSortOrder" fullname="QOrganizerItemSortOrder::QOrganizerItemSortOrder" href="qorganizeritemsortorder.html#QOrganizerItemSortOrder" location="qorganizeritemsortorder.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemSortOrder" fullname="QOrganizerItemSortOrder::~QOrganizerItemSortOrder" href="qorganizeritemsortorder.html#dtor.QOrganizerItemSortOrder" location="qorganizeritemsortorder.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemSortOrder" fullname="QOrganizerItemSortOrder::QOrganizerItemSortOrder" href="qorganizeritemsortorder.html#QOrganizerItemSortOrder-2" location="qorganizeritemsortorder.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemSortOrder(const QOrganizerItemSortOrder &amp; other)">
                <parameter left="const QOrganizerItemSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemSortOrder::operator=" href="qorganizeritemsortorder.html#operator=" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemSortOrder &amp;" signature="operator=(const QOrganizerItemSortOrder &amp; other)">
                <parameter left="const QOrganizerItemSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="BlankPolicy" fullname="QOrganizerItemSortOrder::BlankPolicy" href="qorganizeritemsortorder.html#BlankPolicy-enum" location="qorganizeritemsortorder.h">
                <value name="BlanksFirst" value="0"/>
                <value name="BlanksLast" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionName" fullname="QOrganizerItemSortOrder::setDetailDefinitionName" href="qorganizeritemsortorder.html#setDetailDefinitionName" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionName(const QString &amp; definitionName, const QString &amp; fieldName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBlankPolicy" fullname="QOrganizerItemSortOrder::setBlankPolicy" href="qorganizeritemsortorder.html#setBlankPolicy" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBlankPolicy(BlankPolicy blankPolicy)">
                <parameter left="BlankPolicy" right="" name="blankPolicy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDirection" fullname="QOrganizerItemSortOrder::setDirection" href="qorganizeritemsortorder.html#setDirection" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDirection(Qt::SortOrder direction)">
                <parameter left="Qt::SortOrder" right="" name="direction" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaseSensitivity" fullname="QOrganizerItemSortOrder::setCaseSensitivity" href="qorganizeritemsortorder.html#setCaseSensitivity" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaseSensitivity(Qt::CaseSensitivity sensitivity)">
                <parameter left="Qt::CaseSensitivity" right="" name="sensitivity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionName" fullname="QOrganizerItemSortOrder::detailDefinitionName" href="qorganizeritemsortorder.html#detailDefinitionName" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailDefinitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailFieldName" fullname="QOrganizerItemSortOrder::detailFieldName" href="qorganizeritemsortorder.html#detailFieldName" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailFieldName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="blankPolicy" fullname="QOrganizerItemSortOrder::blankPolicy" href="qorganizeritemsortorder.html#blankPolicy" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="BlankPolicy" signature="blankPolicy() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QOrganizerItemSortOrder::direction" href="qorganizeritemsortorder.html#direction" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::SortOrder" signature="direction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="caseSensitivity" fullname="QOrganizerItemSortOrder::caseSensitivity" href="qorganizeritemsortorder.html#caseSensitivity" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::CaseSensitivity" signature="caseSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QOrganizerItemSortOrder::isValid" href="qorganizeritemsortorder.html#isValid" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOrganizerItemSortOrder::operator==" href="qorganizeritemsortorder.html#operator==" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOrganizerItemSortOrder &amp; other) const">
                <parameter left="const QOrganizerItemSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QOrganizerItemSortOrder::operator!=" href="qorganizeritemsortorder.html#operator!=" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QOrganizerItemSortOrder &amp; other) const">
                <parameter left="const QOrganizerItemSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator QList&lt;QOrganizerItemSortOrder&gt;" fullname="QOrganizerItemSortOrder::operator QList&lt;QOrganizerItemSortOrder&gt;" href="qorganizeritemsortorder.html#operator QList&lt;QOrganizerItemSortOrder&gt;" location="qorganizeritemsortorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="" signature="operator QList&lt;QOrganizerItemSortOrder&gt;() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaRecorder" href="qmediarecorder.html" location="qmediarecorder.h" bases="QMediaBindableInterface" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" location="qmediarecorder.h" type="qint64">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="outputLocation" fullname="QMediaRecorder::outputLocation" href="qmediarecorder.html#outputLocation-prop" location="qmediarecorder.h" type="QUrl">
                <getter name="outputLocation"/>
                <setter name="setOutputLocation"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="QMediaRecorder::muted" href="qmediarecorder.html#muted-prop" location="qmediarecorder.h" type="bool">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailable" fullname="QMediaRecorder::metaDataAvailable" href="qmediarecorder.html#metaDataAvailable-prop" location="qmediarecorder.h" type="bool">
                <getter name="isMetaDataAvailable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="metaDataWritable" fullname="QMediaRecorder::metaDataWritable" href="qmediarecorder.html#metaDataWritable-prop" location="qmediarecorder.h" type="bool">
                <getter name="isMetaDataWritable"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaRecorder::State" href="qmediarecorder.html#State-enum" location="qmediarecorder.h">
                <value name="StoppedState" value="0"/>
                <value name="RecordingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMediaRecorder::Error" href="qmediarecorder.html#Error-enum" location="qmediarecorder.h">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaRecorder" fullname="QMediaRecorder::QMediaRecorder" href="qmediarecorder.html#QMediaRecorder" location="qmediarecorder.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaRecorder(QMediaObject * mediaObject, QObject * parent)">
                <parameter left="QMediaObject *" right="" name="mediaObject" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaRecorder" fullname="QMediaRecorder::~QMediaRecorder" href="qmediarecorder.html#dtor.QMediaRecorder" location="qmediarecorder.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaRecorder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QMediaRecorder::mediaObject" href="qmediarecorder.html#mediaObject" location="qmediarecorder.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaObject *" signature="mediaObject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QMediaRecorder::isAvailable" href="qmediarecorder.html#isAvailable" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityError" fullname="QMediaRecorder::availabilityError" href="qmediarecorder.html#availabilityError" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::AvailabilityError" signature="availabilityError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="outputLocation" fullname="QMediaRecorder::outputLocation" href="qmediarecorder.html#outputLocation-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="outputLocation" type="QUrl" signature="outputLocation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOutputLocation" fullname="QMediaRecorder::setOutputLocation" href="qmediarecorder.html#outputLocation-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="outputLocation" type="bool" signature="setOutputLocation(const QUrl &amp; location)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaRecorder::state" href="qmediarecorder.html#state" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaRecorder::errorString" href="qmediarecorder.html#errorString" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaRecorder::isMuted" href="qmediarecorder.html#muted-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="muted" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedContainers" fullname="QMediaRecorder::supportedContainers" href="qmediarecorder.html#supportedContainers" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedContainers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="containerDescription" fullname="QMediaRecorder::containerDescription" href="qmediarecorder.html#containerDescription" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="containerDescription(const QString &amp; mimeType) const">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedAudioCodecs" fullname="QMediaRecorder::supportedAudioCodecs" href="qmediarecorder.html#supportedAudioCodecs" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedAudioCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioCodecDescription" fullname="QMediaRecorder::audioCodecDescription" href="qmediarecorder.html#audioCodecDescription" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioCodecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedAudioSampleRates" fullname="QMediaRecorder::supportedAudioSampleRates" href="qmediarecorder.html#supportedAudioSampleRates" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedAudioSampleRates(const QAudioEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="settings" default="QAudioEncoderSettings()"/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedVideoCodecs" fullname="QMediaRecorder::supportedVideoCodecs" href="qmediarecorder.html#supportedVideoCodecs" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedVideoCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoCodecDescription" fullname="QMediaRecorder::videoCodecDescription" href="qmediarecorder.html#videoCodecDescription" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="videoCodecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedResolutions" fullname="QMediaRecorder::supportedResolutions" href="qmediarecorder.html#supportedResolutions" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSize&gt;" signature="supportedResolutions(const QVideoEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="settings" default="QVideoEncoderSettings()"/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFrameRates" fullname="QMediaRecorder::supportedFrameRates" href="qmediarecorder.html#supportedFrameRates" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;qreal&gt;" signature="supportedFrameRates(const QVideoEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="settings" default="QVideoEncoderSettings()"/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioSettings" fullname="QMediaRecorder::audioSettings" href="qmediarecorder.html#audioSettings" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioEncoderSettings" signature="audioSettings() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoSettings" fullname="QMediaRecorder::videoSettings" href="qmediarecorder.html#videoSettings" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVideoEncoderSettings" signature="videoSettings() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="containerMimeType" fullname="QMediaRecorder::containerMimeType" href="qmediarecorder.html#containerMimeType" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="containerMimeType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEncodingSettings" fullname="QMediaRecorder::setEncodingSettings" href="qmediarecorder.html#setEncodingSettings" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEncodingSettings(const QAudioEncoderSettings &amp; audio, const QVideoEncoderSettings &amp; video, const QString &amp; container)">
                <parameter left="const QAudioEncoderSettings &amp;" right="" name="audio" default=""/>
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="video" default="QVideoEncoderSettings()"/>
                <parameter left="const QString &amp;" right="" name="container" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataAvailable" fullname="QMediaRecorder::isMetaDataAvailable" href="qmediarecorder.html#metaDataAvailable-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="metaDataAvailable" type="bool" signature="isMetaDataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataWritable" fullname="QMediaRecorder::isMetaDataWritable" href="qmediarecorder.html#metaDataWritable-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="metaDataWritable" type="bool" signature="isMetaDataWritable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QMediaRecorder::metaData" href="qmediarecorder.html#metaData" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metaData(QtMultimediaKit::MetaData key) const">
                <parameter left="QtMultimediaKit::MetaData" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetaData" fullname="QMediaRecorder::setMetaData" href="qmediarecorder.html#setMetaData" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMetaData(QtMultimediaKit::MetaData key, const QVariant &amp; value)">
                <parameter left="QtMultimediaKit::MetaData" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableMetaData" fullname="QMediaRecorder::availableMetaData" href="qmediarecorder.html#availableMetaData" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtMultimediaKit::MetaData&gt;" signature="availableMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="extendedMetaData" fullname="QMediaRecorder::extendedMetaData" href="qmediarecorder.html#extendedMetaData" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="extendedMetaData(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtendedMetaData" fullname="QMediaRecorder::setExtendedMetaData" href="qmediarecorder.html#setExtendedMetaData" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtendedMetaData(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableExtendedMetaData" fullname="QMediaRecorder::availableExtendedMetaData" href="qmediarecorder.html#availableExtendedMetaData" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="availableExtendedMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QMediaRecorder::record" href="qmediarecorder.html#record" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="record()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaRecorder::pause" href="qmediarecorder.html#pause" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaRecorder::stop" href="qmediarecorder.html#stop" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaRecorder::setMuted" href="qmediarecorder.html#muted-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="muted" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaRecorder::stateChanged" href="qmediarecorder.html#stateChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaRecorder::State state)">
                <parameter left="QMediaRecorder::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaRecorder::durationChanged" href="qmediarecorder.html#durationChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutedChanged" fullname="QMediaRecorder::mutedChanged" href="qmediarecorder.html#mutedChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutedChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error-2" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QMediaRecorder::Error error)">
                <parameter left="QMediaRecorder::Error" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailableChanged" fullname="QMediaRecorder::metaDataAvailableChanged" href="qmediarecorder.html#metaDataAvailableChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataWritableChanged" fullname="QMediaRecorder::metaDataWritableChanged" href="qmediarecorder.html#metaDataWritableChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataWritableChanged(bool writable)">
                <parameter left="bool" right="" name="writable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QMediaRecorder::metaDataChanged" href="qmediarecorder.html#metaDataChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoMapData" href="qgeomapdata.html" location="qgeomapdata.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoMapData" fullname="QGeoMapData::QGeoMapData" href="qgeomapdata.html#QGeoMapData" location="qgeomapdata.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoMapData(QGeoMappingManagerEngine * engine, QGeoMapWidget * widget)">
                <parameter left="QGeoMappingManagerEngine *" right="" name="engine" default=""/>
                <parameter left="QGeoMapWidget *" right="" name="widget" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoMapData" fullname="QGeoMapData::~QGeoMapData" href="qgeomapdata.html#dtor.QGeoMapData" location="qgeomapdata.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoMapData()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setViewportSize" fullname="QGeoMapData::setViewportSize" href="qgeomapdata.html#setViewportSize" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setViewportSize(const QSizeF &amp; size)">
                <parameter left="const QSizeF &amp;" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="viewportSize" fullname="QGeoMapData::viewportSize" href="qgeomapdata.html#viewportSize" location="qgeomapdata.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QSizeF" signature="viewportSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZoomLevel" fullname="QGeoMapData::setZoomLevel" href="qgeomapdata.html#setZoomLevel" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setZoomLevel(qreal zoomLevel)">
                <parameter left="qreal" right="" name="zoomLevel" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomLevel" fullname="QGeoMapData::zoomLevel" href="qgeomapdata.html#zoomLevel" location="qgeomapdata.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="zoomLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startPanning" fullname="QGeoMapData::startPanning" href="qgeomapdata.html#startPanning" location="qgeomapdata.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="startPanning()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopPanning" fullname="QGeoMapData::stopPanning" href="qgeomapdata.html#stopPanning" location="qgeomapdata.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="stopPanning()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pan" fullname="QGeoMapData::pan" href="qgeomapdata.html#pan" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="pan(int dx, int dy)">
                <parameter left="int" right="" name="dx" default=""/>
                <parameter left="int" right="" name="dy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCenter" fullname="QGeoMapData::setCenter" href="qgeomapdata.html#setCenter" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCenter(const QGeoCoordinate &amp; center)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="center" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="center" fullname="QGeoMapData::center" href="qgeomapdata.html#center" location="qgeomapdata.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="center() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMapType" fullname="QGeoMapData::setMapType" href="qgeomapdata.html#setMapType" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMapType(QGeoMapWidget::MapType mapType)">
                <parameter left="QGeoMapWidget::MapType" right="" name="mapType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapType" fullname="QGeoMapData::mapType" href="qgeomapdata.html#mapType" location="qgeomapdata.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QGeoMapWidget::MapType" signature="mapType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMapObject" fullname="QGeoMapData::addMapObject" href="qgeomapdata.html#addMapObject" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="addMapObject(QGeoMapObject * mapObject)">
                <parameter left="QGeoMapObject *" right="" name="mapObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMapObject" fullname="QGeoMapData::removeMapObject" href="qgeomapdata.html#removeMapObject" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="removeMapObject(QGeoMapObject * mapObject)">
                <parameter left="QGeoMapObject *" right="" name="mapObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapObjects" fullname="QGeoMapData::mapObjects" href="qgeomapdata.html#mapObjects" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="mapObjects()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="visibleMapObjects" fullname="QGeoMapData::visibleMapObjects" href="qgeomapdata.html#visibleMapObjects" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="visibleMapObjects()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapObjectsAtScreenPosition" fullname="QGeoMapData::mapObjectsAtScreenPosition" href="qgeomapdata.html#mapObjectsAtScreenPosition" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="mapObjectsAtScreenPosition(const QPointF &amp; screenPosition)">
                <parameter left="const QPointF &amp;" right="" name="screenPosition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapObjectsInScreenRect" fullname="QGeoMapData::mapObjectsInScreenRect" href="qgeomapdata.html#mapObjectsInScreenRect" location="qgeomapdata.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="mapObjectsInScreenRect(const QRectF &amp; screenRect)">
                <parameter left="const QRectF &amp;" right="" name="screenRect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapObjectsOverlay" fullname="QGeoMapData::mapObjectsOverlay" href="qgeomapdata.html#mapObjectsOverlay" location="qgeomapdata.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QPixmap" signature="mapObjectsOverlay()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="coordinateToScreenPosition" fullname="QGeoMapData::coordinateToScreenPosition" href="qgeomapdata.html#coordinateToScreenPosition" location="qgeomapdata.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPointF" signature="coordinateToScreenPosition(const QGeoCoordinate &amp; coordinate) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="screenPositionToCoordinate" fullname="QGeoMapData::screenPositionToCoordinate" href="qgeomapdata.html#screenPositionToCoordinate" location="qgeomapdata.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="screenPositionToCoordinate(const QPointF &amp; screenPosition) const">
                <parameter left="const QPointF &amp;" right="" name="screenPosition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setImageChangesTriggerUpdates" fullname="QGeoMapData::setImageChangesTriggerUpdates" href="qgeomapdata.html#setImageChangesTriggerUpdates" location="qgeomapdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setImageChangesTriggerUpdates(bool trigger)">
                <parameter left="bool" right="" name="trigger" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageChangesTriggerUpdates" fullname="QGeoMapData::imageChangesTriggerUpdates" href="qgeomapdata.html#imageChangesTriggerUpdates" location="qgeomapdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="imageChangesTriggerUpdates() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMapImage" fullname="QGeoMapData::setMapImage" href="qgeomapdata.html#setMapImage" location="qgeomapdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMapImage(const QPixmap &amp; mapImage)">
                <parameter left="const QPixmap &amp;" right="" name="mapImage" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapImage" fullname="QGeoMapData::mapImage" href="qgeomapdata.html#mapImage" location="qgeomapdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QPixmap &amp;" signature="mapImage()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageChanged" fullname="QGeoMapData::imageChanged" href="qgeomapdata.html#imageChanged" location="qgeomapdata.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="imageChanged(const QRectF &amp; updateRect)">
                <parameter left="const QRectF &amp;" right="" name="updateRect" default="QRectF()"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="widget" fullname="QGeoMapData::widget" href="qgeomapdata.html#widget" location="qgeomapdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoMapWidget *" signature="widget() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="engine" fullname="QGeoMapData::engine" href="qgeomapdata.html#engine" location="qgeomapdata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoMappingManagerEngine *" signature="engine() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="containerObject" fullname="QGeoMapData::containerObject" href="qgeomapdata.html#containerObject" location="qgeomapdata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoMapObject *" signature="containerObject()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactManagerEngineFactory" href="qcontactmanagerenginefactory.html" location="qcontactmanagerenginefactory.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedImplementationVersions" fullname="QContactManagerEngineFactory::supportedImplementationVersions" href="qcontactmanagerenginefactory.html#supportedImplementationVersions" location="qcontactmanagerenginefactory.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedImplementationVersions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactManagerEngineFactory" fullname="QContactManagerEngineFactory::~QContactManagerEngineFactory" href="qcontactmanagerenginefactory.html#dtor.QContactManagerEngineFactory" location="qcontactmanagerenginefactory.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactManagerEngineFactory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="engine" fullname="QContactManagerEngineFactory::engine" href="qcontactmanagerenginefactory.html#engine" location="qcontactmanagerenginefactory.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QContactManagerEngine *" signature="engine(const QMap&lt;QString, QString&gt; &amp; parameters, QContactManager::Error * error)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QContactManagerEngineFactory::managerName" href="qcontactmanagerenginefactory.html#managerName" location="qcontactmanagerenginefactory.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactLocalIdFilter" href="qcontactlocalidfilter.html" location="qcontactlocalidfilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactLocalIdFilter" fullname="QContactLocalIdFilter::QContactLocalIdFilter" href="qcontactlocalidfilter.html#QContactLocalIdFilter" location="qcontactlocalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactLocalIdFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactLocalIdFilter" fullname="QContactLocalIdFilter::QContactLocalIdFilter" href="qcontactlocalidfilter.html#QContactLocalIdFilter-2" location="qcontactlocalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactLocalIdFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIds" fullname="QContactLocalIdFilter::setIds" href="qcontactlocalidfilter.html#setIds" location="qcontactlocalidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIds(const QList&lt;QContactLocalId&gt; &amp; ids)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="ids" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ids" fullname="QContactLocalIdFilter::ids" href="qcontactlocalidfilter.html#ids" location="qcontactlocalidfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactLocalId&gt;" signature="ids() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteSegment" href="qgeoroutesegment.html" location="qgeoroutesegment.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteSegment" fullname="QGeoRouteSegment::QGeoRouteSegment" href="qgeoroutesegment.html#QGeoRouteSegment" location="qgeoroutesegment.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoRouteSegment()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteSegment" fullname="QGeoRouteSegment::QGeoRouteSegment" href="qgeoroutesegment.html#QGeoRouteSegment-2" location="qgeoroutesegment.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoRouteSegment(const QGeoRouteSegment &amp; other)">
                <parameter left="const QGeoRouteSegment &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoRouteSegment" fullname="QGeoRouteSegment::~QGeoRouteSegment" href="qgeoroutesegment.html#dtor.QGeoRouteSegment" location="qgeoroutesegment.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoRouteSegment()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoRouteSegment::operator=" href="qgeoroutesegment.html#operator=" location="qgeoroutesegment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoRouteSegment &amp;" signature="operator=(const QGeoRouteSegment &amp; other)">
                <parameter left="const QGeoRouteSegment &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTravelTime" fullname="QGeoRouteSegment::setTravelTime" href="qgeoroutesegment.html#setTravelTime" location="qgeoroutesegment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTravelTime(int secs)">
                <parameter left="int" right="" name="secs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="travelTime" fullname="QGeoRouteSegment::travelTime" href="qgeoroutesegment.html#travelTime" location="qgeoroutesegment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="travelTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDistance" fullname="QGeoRouteSegment::setDistance" href="qgeoroutesegment.html#setDistance" location="qgeoroutesegment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDistance(qreal distance)">
                <parameter left="qreal" right="" name="distance" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="distance" fullname="QGeoRouteSegment::distance" href="qgeoroutesegment.html#distance" location="qgeoroutesegment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="distance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPath" fullname="QGeoRouteSegment::setPath" href="qgeoroutesegment.html#setPath" location="qgeoroutesegment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPath(const QList&lt;QGeoCoordinate&gt; &amp; path)">
                <parameter left="const QList&lt;QGeoCoordinate&gt; &amp;" right="" name="path" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QGeoRouteSegment::path" href="qgeoroutesegment.html#path" location="qgeoroutesegment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoCoordinate&gt;" signature="path() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInstruction" fullname="QGeoRouteSegment::setInstruction" href="qgeoroutesegment.html#setInstruction" location="qgeoroutesegment.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInstruction(const QGeoNavigationInstruction &amp; instruction)">
                <parameter left="const QGeoNavigationInstruction &amp;" right="" name="instruction" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instruction" fullname="QGeoRouteSegment::instruction" href="qgeoroutesegment.html#instruction" location="qgeoroutesegment.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoNavigationInstruction" signature="instruction() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWidgetControl" href="qvideowidgetcontrol.html" location="qvideowidgetcontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWidgetControl" fullname="QVideoWidgetControl::~QVideoWidgetControl" href="qvideowidgetcontrol.html#dtor.QVideoWidgetControl" location="qvideowidgetcontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWidgetControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoWidget" fullname="QVideoWidgetControl::videoWidget" href="qvideowidgetcontrol.html#videoWidget" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QWidget *" signature="videoWidget()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatioMode" fullname="QVideoWidgetControl::aspectRatioMode" href="qvideowidgetcontrol.html#aspectRatioMode" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Qt::AspectRatioMode" signature="aspectRatioMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatioMode" fullname="QVideoWidgetControl::setAspectRatioMode" href="qvideowidgetcontrol.html#setAspectRatioMode" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAspectRatioMode(Qt::AspectRatioMode mode)">
                <parameter left="Qt::AspectRatioMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFullScreen" fullname="QVideoWidgetControl::isFullScreen" href="qvideowidgetcontrol.html#isFullScreen" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFullScreen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFullScreen" fullname="QVideoWidgetControl::setFullScreen" href="qvideowidgetcontrol.html#setFullScreen" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFullScreen(bool fullScreen)">
                <parameter left="bool" right="" name="fullScreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidgetControl::brightness" href="qvideowidgetcontrol.html#brightness" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWidgetControl::setBrightness" href="qvideowidgetcontrol.html#setBrightness" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidgetControl::contrast" href="qvideowidgetcontrol.html#contrast" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWidgetControl::setContrast" href="qvideowidgetcontrol.html#setContrast" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidgetControl::hue" href="qvideowidgetcontrol.html#hue" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWidgetControl::setHue" href="qvideowidgetcontrol.html#setHue" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidgetControl::saturation" href="qvideowidgetcontrol.html#saturation" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWidgetControl::setSaturation" href="qvideowidgetcontrol.html#setSaturation" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullScreenChanged" fullname="QVideoWidgetControl::fullScreenChanged" href="qvideowidgetcontrol.html#fullScreenChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fullScreenChanged(bool fullScreen)">
                <parameter left="bool" right="" name="fullScreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWidgetControl::brightnessChanged" href="qvideowidgetcontrol.html#brightnessChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWidgetControl::contrastChanged" href="qvideowidgetcontrol.html#contrastChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWidgetControl::hueChanged" href="qvideowidgetcontrol.html#hueChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWidgetControl::saturationChanged" href="qvideowidgetcontrol.html#saturationChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVideoWidgetControl" fullname="QVideoWidgetControl::QVideoWidgetControl" href="qvideowidgetcontrol.html#QVideoWidgetControl" location="qvideowidgetcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWidgetControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistControl" href="qmediaplaylistcontrol.html" location="qmediaplaylistcontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistControl" fullname="QMediaPlaylistControl::~QMediaPlaylistControl" href="qmediaplaylistcontrol.html#dtor.QMediaPlaylistControl" location="qmediaplaylistcontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProvider" fullname="QMediaPlaylistControl::playlistProvider" href="qmediaplaylistcontrol.html#playlistProvider" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylistProvider *" signature="playlistProvider() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylistProvider" fullname="QMediaPlaylistControl::setPlaylistProvider" href="qmediaplaylistcontrol.html#setPlaylistProvider" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setPlaylistProvider(QMediaPlaylistProvider * playlist)">
                <parameter left="QMediaPlaylistProvider *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentIndex" fullname="QMediaPlaylistControl::currentIndex" href="qmediaplaylistcontrol.html#currentIndex" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="currentIndex() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentIndex" fullname="QMediaPlaylistControl::setCurrentIndex" href="qmediaplaylistcontrol.html#setCurrentIndex" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCurrentIndex(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextIndex" fullname="QMediaPlaylistControl::nextIndex" href="qmediaplaylistcontrol.html#nextIndex" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="nextIndex(int step) const">
                <parameter left="int" right="" name="step" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousIndex" fullname="QMediaPlaylistControl::previousIndex" href="qmediaplaylistcontrol.html#previousIndex" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="previousIndex(int step) const">
                <parameter left="int" right="" name="step" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="next" fullname="QMediaPlaylistControl::next" href="qmediaplaylistcontrol.html#next" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="next()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="previous" fullname="QMediaPlaylistControl::previous" href="qmediaplaylistcontrol.html#previous" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="previous()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylistControl::playbackMode" href="qmediaplaylistcontrol.html#playbackMode" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylist::PlaybackMode" signature="playbackMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackMode" fullname="QMediaPlaylistControl::setPlaybackMode" href="qmediaplaylistcontrol.html#setPlaybackMode" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaybackMode(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProviderChanged" fullname="QMediaPlaylistControl::playlistProviderChanged" href="qmediaplaylistcontrol.html#playlistProviderChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistProviderChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentIndexChanged" fullname="QMediaPlaylistControl::currentIndexChanged" href="qmediaplaylistcontrol.html#currentIndexChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentIndexChanged(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMediaChanged" fullname="QMediaPlaylistControl::currentMediaChanged" href="qmediaplaylistcontrol.html#currentMediaChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMediaChanged(const QMediaContent &amp; content)">
                <parameter left="const QMediaContent &amp;" right="" name="content" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackModeChanged" fullname="QMediaPlaylistControl::playbackModeChanged" href="qmediaplaylistcontrol.html#playbackModeChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackModeChanged(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlaylistControl" fullname="QMediaPlaylistControl::QMediaPlaylistControl" href="qmediaplaylistcontrol.html#QMediaPlaylistControl" location="qmediaplaylistcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoSatelliteInfoSource" href="qgeosatelliteinfosource.html" location="qgeosatelliteinfosource.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoSatelliteInfoSource" fullname="QGeoSatelliteInfoSource::QGeoSatelliteInfoSource" href="qgeosatelliteinfosource.html#QGeoSatelliteInfoSource" location="qgeosatelliteinfosource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoSatelliteInfoSource(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createDefaultSource" fullname="QGeoSatelliteInfoSource::createDefaultSource" href="qgeosatelliteinfosource.html#createDefaultSource" location="qgeosatelliteinfosource.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QGeoSatelliteInfoSource *" signature="createDefaultSource(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startUpdates" fullname="QGeoSatelliteInfoSource::startUpdates" href="qgeosatelliteinfosource.html#startUpdates" location="qgeosatelliteinfosource.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="startUpdates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopUpdates" fullname="QGeoSatelliteInfoSource::stopUpdates" href="qgeosatelliteinfosource.html#stopUpdates" location="qgeosatelliteinfosource.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="stopUpdates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestUpdate" fullname="QGeoSatelliteInfoSource::requestUpdate" href="qgeosatelliteinfosource.html#requestUpdate" location="qgeosatelliteinfosource.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestUpdate(int timeout)">
                <parameter left="int" right="" name="timeout" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="satellitesInViewUpdated" fullname="QGeoSatelliteInfoSource::satellitesInViewUpdated" href="qgeosatelliteinfosource.html#satellitesInViewUpdated" location="qgeosatelliteinfosource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="satellitesInViewUpdated(const QList&lt;QGeoSatelliteInfo&gt; &amp; satellites)">
                <parameter left="const QList&lt;QGeoSatelliteInfo&gt; &amp;" right="" name="satellites" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="satellitesInUseUpdated" fullname="QGeoSatelliteInfoSource::satellitesInUseUpdated" href="qgeosatelliteinfosource.html#satellitesInUseUpdated" location="qgeosatelliteinfosource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="satellitesInUseUpdated(const QList&lt;QGeoSatelliteInfo&gt; &amp; satellites)">
                <parameter left="const QList&lt;QGeoSatelliteInfo&gt; &amp;" right="" name="satellites" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestTimeout" fullname="QGeoSatelliteInfoSource::requestTimeout" href="qgeosatelliteinfosource.html#requestTimeout" location="qgeosatelliteinfosource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="requestTimeout()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVideoFrame" href="qvideoframe.html" location="qvideoframe.h" bases="" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="FieldType" fullname="QVideoFrame::FieldType" href="qvideoframe.html#FieldType-enum" location="qvideoframe.h">
                <value name="ProgressiveFrame" value="0"/>
                <value name="TopField" value="1"/>
                <value name="BottomField" value="2"/>
                <value name="InterlacedFrame" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PixelFormat" fullname="QVideoFrame::PixelFormat" href="qvideoframe.html#PixelFormat-enum" location="qvideoframe.h">
                <value name="Format_Invalid" value="0"/>
                <value name="Format_ARGB32" value="1"/>
                <value name="Format_ARGB32_Premultiplied" value="2"/>
                <value name="Format_RGB32" value="3"/>
                <value name="Format_RGB24" value="4"/>
                <value name="Format_RGB565" value="5"/>
                <value name="Format_RGB555" value="6"/>
                <value name="Format_ARGB8565_Premultiplied" value="7"/>
                <value name="Format_BGRA32" value="8"/>
                <value name="Format_BGRA32_Premultiplied" value="9"/>
                <value name="Format_BGR32" value="10"/>
                <value name="Format_BGR24" value="11"/>
                <value name="Format_BGR565" value="12"/>
                <value name="Format_BGR555" value="13"/>
                <value name="Format_BGRA5658_Premultiplied" value="14"/>
                <value name="Format_AYUV444" value="15"/>
                <value name="Format_AYUV444_Premultiplied" value="16"/>
                <value name="Format_YUV444" value="17"/>
                <value name="Format_YUV420P" value="18"/>
                <value name="Format_YV12" value="19"/>
                <value name="Format_UYVY" value="20"/>
                <value name="Format_YUYV" value="21"/>
                <value name="Format_NV12" value="22"/>
                <value name="Format_NV21" value="23"/>
                <value name="Format_IMC1" value="24"/>
                <value name="Format_IMC2" value="25"/>
                <value name="Format_IMC3" value="26"/>
                <value name="Format_IMC4" value="27"/>
                <value name="Format_Y8" value="28"/>
                <value name="Format_Y16" value="29"/>
                <value name="Format_User" value="1000"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame" location="qvideoframe.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoFrame()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame-2" location="qvideoframe.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVideoFrame(QAbstractVideoBuffer * buffer, const QSize &amp; size, PixelFormat format)">
                <parameter left="QAbstractVideoBuffer *" right="" name="buffer" default=""/>
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
                <parameter left="PixelFormat" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame-3" location="qvideoframe.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QVideoFrame(int bytes, const QSize &amp; size, int bytesPerLine, PixelFormat format)">
                <parameter left="int" right="" name="bytes" default=""/>
                <parameter left="const QSize &amp;" right="" name="size" default=""/>
                <parameter left="int" right="" name="bytesPerLine" default=""/>
                <parameter left="PixelFormat" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame-4" location="qvideoframe.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QVideoFrame(const QImage &amp; image)">
                <parameter left="const QImage &amp;" right="" name="image" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame-5" location="qvideoframe.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QVideoFrame(const QVideoFrame &amp; other)">
                <parameter left="const QVideoFrame &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoFrame" fullname="QVideoFrame::~QVideoFrame" href="qvideoframe.html#dtor.QVideoFrame" location="qvideoframe.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoFrame()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QVideoFrame::operator=" href="qvideoframe.html#operator=" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVideoFrame &amp;" signature="operator=(const QVideoFrame &amp; other)">
                <parameter left="const QVideoFrame &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QVideoFrame::isValid" href="qvideoframe.html#isValid" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pixelFormat" fullname="QVideoFrame::pixelFormat" href="qvideoframe.html#pixelFormat" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="PixelFormat" signature="pixelFormat() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleType" fullname="QVideoFrame::handleType" href="qvideoframe.html#handleType" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractVideoBuffer::HandleType" signature="handleType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QVideoFrame::size" href="qvideoframe.html#size" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="width" fullname="QVideoFrame::width" href="qvideoframe.html#width" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="width() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="height" fullname="QVideoFrame::height" href="qvideoframe.html#height" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="height() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fieldType" fullname="QVideoFrame::fieldType" href="qvideoframe.html#fieldType" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FieldType" signature="fieldType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFieldType" fullname="QVideoFrame::setFieldType" href="qvideoframe.html#setFieldType" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFieldType(FieldType field)">
                <parameter left="FieldType" right="" name="field" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMapped" fullname="QVideoFrame::isMapped" href="qvideoframe.html#isMapped" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMapped() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadable" fullname="QVideoFrame::isReadable" href="qvideoframe.html#isReadable" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isWritable" fullname="QVideoFrame::isWritable" href="qvideoframe.html#isWritable" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isWritable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapMode" fullname="QVideoFrame::mapMode" href="qvideoframe.html#mapMode" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAbstractVideoBuffer::MapMode" signature="mapMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="map" fullname="QVideoFrame::map" href="qvideoframe.html#map" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="map(QAbstractVideoBuffer::MapMode mode)">
                <parameter left="QAbstractVideoBuffer::MapMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unmap" fullname="QVideoFrame::unmap" href="qvideoframe.html#unmap" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unmap()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesPerLine" fullname="QVideoFrame::bytesPerLine" href="qvideoframe.html#bytesPerLine" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bytesPerLine() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bits" fullname="QVideoFrame::bits" href="qvideoframe.html#bits" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="uchar *" signature="bits()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bits" fullname="QVideoFrame::bits" href="qvideoframe.html#bits-2" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="const uchar *" signature="bits() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mappedBytes" fullname="QVideoFrame::mappedBytes" href="qvideoframe.html#mappedBytes" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="mappedBytes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handle" fullname="QVideoFrame::handle" href="qvideoframe.html#handle" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="handle() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startTime" fullname="QVideoFrame::startTime" href="qvideoframe.html#startTime" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="startTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStartTime" fullname="QVideoFrame::setStartTime" href="qvideoframe.html#setStartTime" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStartTime(qint64 time)">
                <parameter left="qint64" right="" name="time" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endTime" fullname="QVideoFrame::endTime" href="qvideoframe.html#endTime" location="qvideoframe.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="endTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEndTime" fullname="QVideoFrame::setEndTime" href="qvideoframe.html#setEndTime" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEndTime(qint64 time)">
                <parameter left="qint64" right="" name="time" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pixelFormatFromImageFormat" fullname="QVideoFrame::pixelFormatFromImageFormat" href="qvideoframe.html#pixelFormatFromImageFormat" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="PixelFormat" signature="pixelFormatFromImageFormat(QImage::Format format)">
                <parameter left="QImage::Format" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageFormatFromPixelFormat" fullname="QVideoFrame::imageFormatFromPixelFormat" href="qvideoframe.html#imageFormatFromPixelFormat" location="qvideoframe.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QImage::Format" signature="imageFormatFromPixelFormat(PixelFormat format)">
                <parameter left="PixelFormat" right="" name="format" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraControl" href="qcameracontrol.html" location="qcameracontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraControl" fullname="QCameraControl::~QCameraControl" href="qcameracontrol.html#dtor.QCameraControl" location="qcameracontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCameraControl::state" href="qcameracontrol.html#state" location="qcameracontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setState" fullname="QCameraControl::setState" href="qcameracontrol.html#setState" location="qcameracontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setState(QCamera::State state)">
                <parameter left="QCamera::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="captureMode" fullname="QCameraControl::captureMode" href="qcameracontrol.html#captureMode" location="qcameracontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::CaptureMode" signature="captureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaptureMode" fullname="QCameraControl::setCaptureMode" href="qcameracontrol.html#setCaptureMode" location="qcameracontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaptureMode(QCamera::CaptureMode mode)">
                <parameter left="QCamera::CaptureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCaptureModeSupported" fullname="QCameraControl::isCaptureModeSupported" href="qcameracontrol.html#isCaptureModeSupported" location="qcameracontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCaptureModeSupported(QCamera::CaptureMode mode) const">
                <parameter left="QCamera::CaptureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QCameraControl::stateChanged" href="qcameracontrol.html#stateChanged" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QCamera::State state)">
                <parameter left="QCamera::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QCameraControl::error" href="qcameracontrol.html#error" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="captureModeChanged" fullname="QCameraControl::captureModeChanged" href="qcameracontrol.html#captureModeChanged" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="captureModeChanged(QCamera::CaptureMode mode)">
                <parameter left="QCamera::CaptureMode" right="" name="mode" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraControl" fullname="QCameraControl::QCameraControl" href="qcameracontrol.html#QCameraControl" location="qcameracontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryFilter" href="qgalleryfilter.html" location="qgalleryfilter.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QGalleryFilter::Type" href="qgalleryfilter.html#Type-enum" location="qgalleryfilter.h">
                <value name="Invalid" value="0"/>
                <value name="Intersection" value="1"/>
                <value name="Union" value="2"/>
                <value name="MetaData" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Comparator" fullname="QGalleryFilter::Comparator" href="qgalleryfilter.html#Comparator-enum" location="qgalleryfilter.h">
                <value name="Equals" value="0"/>
                <value name="LessThan" value="1"/>
                <value name="GreaterThan" value="2"/>
                <value name="LessThanEquals" value="3"/>
                <value name="GreaterThanEquals" value="4"/>
                <value name="Contains" value="5"/>
                <value name="StartsWith" value="6"/>
                <value name="EndsWith" value="7"/>
                <value name="Wildcard" value="8"/>
                <value name="RegExp" value="9"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryFilter" fullname="QGalleryFilter::QGalleryFilter" href="qgalleryfilter.html#QGalleryFilter" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryFilter" fullname="QGalleryFilter::QGalleryFilter" href="qgalleryfilter.html#QGalleryFilter-2" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryFilter(const QGalleryFilter &amp; filter)">
                <parameter left="const QGalleryFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryFilter" fullname="QGalleryFilter::QGalleryFilter" href="qgalleryfilter.html#QGalleryFilter-3" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGalleryFilter(const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryFilter" fullname="QGalleryFilter::QGalleryFilter" href="qgalleryfilter.html#QGalleryFilter-4" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QGalleryFilter(const QGalleryUnionFilter &amp; filter)">
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryFilter" fullname="QGalleryFilter::QGalleryFilter" href="qgalleryfilter.html#QGalleryFilter-5" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QGalleryFilter(const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryFilter" fullname="QGalleryFilter::~QGalleryFilter" href="qgalleryfilter.html#dtor.QGalleryFilter" location="qgalleryfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGalleryFilter::operator=" href="qgalleryfilter.html#operator=" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGalleryFilter &amp;" signature="operator=(const QGalleryFilter &amp; filter)">
                <parameter left="const QGalleryFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QGalleryFilter::type" href="qgalleryfilter.html#type" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGalleryFilter::isValid" href="qgalleryfilter.html#isValid" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toIntersectionFilter" fullname="QGalleryFilter::toIntersectionFilter" href="qgalleryfilter.html#toIntersectionFilter" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGalleryIntersectionFilter" signature="toIntersectionFilter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toUnionFilter" fullname="QGalleryFilter::toUnionFilter" href="qgalleryfilter.html#toUnionFilter" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGalleryUnionFilter" signature="toUnionFilter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="toMetaDataFilter" fullname="QGalleryFilter::toMetaDataFilter" href="qgalleryfilter.html#toMetaDataFilter" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGalleryMetaDataFilter" signature="toMetaDataFilter() const"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator==" href="#operator==" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="Q_GALLERY_EXPORT" signature="operator==(const QGalleryFilter &amp; filter1, const QGalleryFilter &amp; filter2)">
            <parameter left="const QGalleryFilter &amp;" right="" name="filter1" default=""/>
            <parameter left="const QGalleryFilter &amp;" right="" name="filter2" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" href="#operator!=" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="Q_GALLERY_EXPORT" signature="operator!=(const QGalleryFilter &amp; filter1, const QGalleryFilter &amp; filter2)">
            <parameter left="const QGalleryFilter &amp;" right="" name="filter1" default=""/>
            <parameter left="const QGalleryFilter &amp;" right="" name="filter2" default=""/>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryIntersectionFilter" href="qgalleryintersectionfilter.html" location="qgalleryfilter.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryIntersectionFilter" fullname="QGalleryIntersectionFilter::QGalleryIntersectionFilter" href="qgalleryintersectionfilter.html#QGalleryIntersectionFilter" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryIntersectionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryIntersectionFilter" fullname="QGalleryIntersectionFilter::QGalleryIntersectionFilter" href="qgalleryintersectionfilter.html#QGalleryIntersectionFilter-2" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryIntersectionFilter(const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryIntersectionFilter" fullname="QGalleryIntersectionFilter::QGalleryIntersectionFilter" href="qgalleryintersectionfilter.html#QGalleryIntersectionFilter-3" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGalleryIntersectionFilter(const QGalleryUnionFilter &amp; filter)">
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryIntersectionFilter" fullname="QGalleryIntersectionFilter::QGalleryIntersectionFilter" href="qgalleryintersectionfilter.html#QGalleryIntersectionFilter-4" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QGalleryIntersectionFilter(const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryIntersectionFilter" fullname="QGalleryIntersectionFilter::~QGalleryIntersectionFilter" href="qgalleryintersectionfilter.html#dtor.QGalleryIntersectionFilter" location="qgalleryfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryIntersectionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGalleryIntersectionFilter::operator=" href="qgalleryintersectionfilter.html#operator=" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGalleryIntersectionFilter &amp;" signature="operator=(const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGalleryIntersectionFilter::isValid" href="qgalleryintersectionfilter.html#isValid" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterCount" fullname="QGalleryIntersectionFilter::filterCount" href="qgalleryintersectionfilter.html#filterCount" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="filterCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QGalleryIntersectionFilter::isEmpty" href="qgalleryintersectionfilter.html#isEmpty" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QGalleryIntersectionFilter::filters" href="qgalleryintersectionfilter.html#filters" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGalleryFilter&gt;" signature="filters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QGalleryIntersectionFilter::append" href="qgalleryintersectionfilter.html#append" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QGalleryIntersectionFilter::append" href="qgalleryintersectionfilter.html#append-2" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="append(const QGalleryUnionFilter &amp; filter)">
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QGalleryIntersectionFilter::append" href="qgalleryintersectionfilter.html#append-3" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="append(const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QGalleryIntersectionFilter::insert" href="qgalleryintersectionfilter.html#insert" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insert(int index, const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QGalleryIntersectionFilter::insert" href="qgalleryintersectionfilter.html#insert-2" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="insert(int index, const QGalleryUnionFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QGalleryIntersectionFilter::insert" href="qgalleryintersectionfilter.html#insert-3" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="insert(int index, const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replace" fullname="QGalleryIntersectionFilter::replace" href="qgalleryintersectionfilter.html#replace" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="replace(int index, const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replace" fullname="QGalleryIntersectionFilter::replace" href="qgalleryintersectionfilter.html#replace-2" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="replace(int index, const QGalleryUnionFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAt" fullname="QGalleryIntersectionFilter::removeAt" href="qgalleryintersectionfilter.html#removeAt" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAt(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QGalleryIntersectionFilter::clear" href="qgalleryintersectionfilter.html#clear" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryUnionFilter" href="qgalleryunionfilter.html" location="qgalleryfilter.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryUnionFilter" fullname="QGalleryUnionFilter::QGalleryUnionFilter" href="qgalleryunionfilter.html#QGalleryUnionFilter" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryUnionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryUnionFilter" fullname="QGalleryUnionFilter::QGalleryUnionFilter" href="qgalleryunionfilter.html#QGalleryUnionFilter-2" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryUnionFilter(const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryUnionFilter" fullname="QGalleryUnionFilter::QGalleryUnionFilter" href="qgalleryunionfilter.html#QGalleryUnionFilter-3" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGalleryUnionFilter(const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryUnionFilter" fullname="QGalleryUnionFilter::QGalleryUnionFilter" href="qgalleryunionfilter.html#QGalleryUnionFilter-4" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QGalleryUnionFilter(const QGalleryUnionFilter &amp; filter)">
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryUnionFilter" fullname="QGalleryUnionFilter::~QGalleryUnionFilter" href="qgalleryunionfilter.html#dtor.QGalleryUnionFilter" location="qgalleryfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryUnionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGalleryUnionFilter::operator=" href="qgalleryunionfilter.html#operator=" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGalleryUnionFilter &amp;" signature="operator=(const QGalleryUnionFilter &amp; filter)">
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGalleryUnionFilter::isValid" href="qgalleryunionfilter.html#isValid" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterCount" fullname="QGalleryUnionFilter::filterCount" href="qgalleryunionfilter.html#filterCount" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="filterCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QGalleryUnionFilter::isEmpty" href="qgalleryunionfilter.html#isEmpty" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="QGalleryUnionFilter::filters" href="qgalleryunionfilter.html#filters" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGalleryFilter&gt;" signature="filters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QGalleryUnionFilter::append" href="qgalleryunionfilter.html#append" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QGalleryUnionFilter::append" href="qgalleryunionfilter.html#append-2" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="append(const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QGalleryUnionFilter::append" href="qgalleryunionfilter.html#append-3" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="append(const QGalleryUnionFilter &amp; filter)">
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QGalleryUnionFilter::insert" href="qgalleryunionfilter.html#insert" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insert(int index, const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QGalleryUnionFilter::insert" href="qgalleryunionfilter.html#insert-2" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="insert(int index, const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insert" fullname="QGalleryUnionFilter::insert" href="qgalleryunionfilter.html#insert-3" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="void" signature="insert(int index, const QGalleryUnionFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replace" fullname="QGalleryUnionFilter::replace" href="qgalleryunionfilter.html#replace" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="replace(int index, const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="replace" fullname="QGalleryUnionFilter::replace" href="qgalleryunionfilter.html#replace-2" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="replace(int index, const QGalleryIntersectionFilter &amp; filter)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAt" fullname="QGalleryUnionFilter::removeAt" href="qgalleryunionfilter.html#removeAt" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAt(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QGalleryUnionFilter::clear" href="qgalleryunionfilter.html#clear" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryMetaDataFilter" href="qgallerymetadatafilter.html" location="qgalleryfilter.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryMetaDataFilter" fullname="QGalleryMetaDataFilter::QGalleryMetaDataFilter" href="qgallerymetadatafilter.html#QGalleryMetaDataFilter" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryMetaDataFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryMetaDataFilter" fullname="QGalleryMetaDataFilter::QGalleryMetaDataFilter" href="qgallerymetadatafilter.html#QGalleryMetaDataFilter-2" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryMetaDataFilter(const QString &amp; property, const QVariant &amp; value, QGalleryFilter::Comparator comparison, Qt::CaseSensitivity caseSensitivity)">
                <parameter left="const QString &amp;" right="" name="property" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
                <parameter left="QGalleryFilter::Comparator" right="" name="comparison" default="QGalleryFilter::Equals"/>
                <parameter left="Qt::CaseSensitivity" right="" name="caseSensitivity" default="Qt::CaseSensitive"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryMetaDataFilter" fullname="QGalleryMetaDataFilter::QGalleryMetaDataFilter" href="qgallerymetadatafilter.html#QGalleryMetaDataFilter-3" location="qgalleryfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGalleryMetaDataFilter(const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryMetaDataFilter" fullname="QGalleryMetaDataFilter::~QGalleryMetaDataFilter" href="qgallerymetadatafilter.html#dtor.QGalleryMetaDataFilter" location="qgalleryfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryMetaDataFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGalleryMetaDataFilter::operator=" href="qgallerymetadatafilter.html#operator=" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGalleryMetaDataFilter &amp;" signature="operator=(const QGalleryMetaDataFilter &amp; filter)">
                <parameter left="const QGalleryMetaDataFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGalleryMetaDataFilter::isValid" href="qgallerymetadatafilter.html#isValid" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyName" fullname="QGalleryMetaDataFilter::propertyName" href="qgallerymetadatafilter.html#propertyName" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="propertyName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPropertyName" fullname="QGalleryMetaDataFilter::setPropertyName" href="qgallerymetadatafilter.html#setPropertyName" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPropertyName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QGalleryMetaDataFilter::value" href="qgallerymetadatafilter.html#value" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="value() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QGalleryMetaDataFilter::setValue" href="qgallerymetadatafilter.html#setValue" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="comparator" fullname="QGalleryMetaDataFilter::comparator" href="qgallerymetadatafilter.html#comparator" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGalleryFilter::Comparator" signature="comparator() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setComparator" fullname="QGalleryMetaDataFilter::setComparator" href="qgallerymetadatafilter.html#setComparator" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setComparator(QGalleryFilter::Comparator comparator)">
                <parameter left="QGalleryFilter::Comparator" right="" name="comparator" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="caseSensitivity" fullname="QGalleryMetaDataFilter::caseSensitivity" href="qgallerymetadatafilter.html#caseSensitivity" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::CaseSensitivity" signature="caseSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaseSensitivity" fullname="QGalleryMetaDataFilter::setCaseSensitivity" href="qgallerymetadatafilter.html#setCaseSensitivity" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaseSensitivity(Qt::CaseSensitivity sensitivity)">
                <parameter left="Qt::CaseSensitivity" right="" name="sensitivity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInverted" fullname="QGalleryMetaDataFilter::isInverted" href="qgallerymetadatafilter.html#isInverted" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInverted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInverted" fullname="QGalleryMetaDataFilter::setInverted" href="qgallerymetadatafilter.html#setInverted" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInverted(bool inverted)">
                <parameter left="bool" right="" name="inverted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!" fullname="QGalleryMetaDataFilter::operator!" href="qgallerymetadatafilter.html#operator!" location="qgalleryfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGalleryMetaDataFilter" signature="operator!() const"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator||" href="qgalleryunionfilter.html#operator||" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QGalleryUnionFilter" type="QGalleryUnionFilter" signature="operator||(const QGalleryUnionFilter &amp; filter1, const T &amp; filter2)">
            <parameter left="const QGalleryUnionFilter &amp;" right="" name="filter1" default=""/>
            <parameter left="const T &amp;" right="" name="filter2" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;&amp;" href="qgalleryintersectionfilter.html#operator&amp;&amp;" location="qgalleryfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" relates="QGalleryIntersectionFilter" type="QGalleryIntersectionFilter" signature="operator&amp;&amp;(const QGalleryIntersectionFilter &amp; filter1, const T &amp; filter2)">
            <parameter left="const QGalleryIntersectionFilter &amp;" right="" name="filter1" default=""/>
            <parameter left="const T &amp;" right="" name="filter2" default=""/>
        </function>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QImageEncoderControl" href="qimageencodercontrol.html" location="qimageencodercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QImageEncoderControl" fullname="QImageEncoderControl::~QImageEncoderControl" href="qimageencodercontrol.html#dtor.QImageEncoderControl" location="qimageencodercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QImageEncoderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedImageCodecs" fullname="QImageEncoderControl::supportedImageCodecs" href="qimageencodercontrol.html#supportedImageCodecs" location="qimageencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedImageCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageCodecDescription" fullname="QImageEncoderControl::imageCodecDescription" href="qimageencodercontrol.html#imageCodecDescription" location="qimageencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="imageCodecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedResolutions" fullname="QImageEncoderControl::supportedResolutions" href="qimageencodercontrol.html#supportedResolutions" location="qimageencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSize&gt;" signature="supportedResolutions(const QImageEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="settings" default=""/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageSettings" fullname="QImageEncoderControl::imageSettings" href="qimageencodercontrol.html#imageSettings" location="qimageencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QImageEncoderSettings" signature="imageSettings() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setImageSettings" fullname="QImageEncoderControl::setImageSettings" href="qimageencodercontrol.html#setImageSettings" location="qimageencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setImageSettings(const QImageEncoderSettings &amp; settings)">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="settings" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QImageEncoderControl" fullname="QImageEncoderControl::QImageEncoderControl" href="qimageencodercontrol.html#QImageEncoderControl" location="qimageencodercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QImageEncoderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoPositionInfo" href="qgeopositioninfo.html" location="qgeopositioninfo.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Attribute" fullname="QGeoPositionInfo::Attribute" href="qgeopositioninfo.html#Attribute-enum" location="qgeopositioninfo.h">
                <value name="Direction" value="0"/>
                <value name="GroundSpeed" value="1"/>
                <value name="VerticalSpeed" value="2"/>
                <value name="MagneticVariation" value="3"/>
                <value name="HorizontalAccuracy" value="4"/>
                <value name="VerticalAccuracy" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoPositionInfo" fullname="QGeoPositionInfo::QGeoPositionInfo" href="qgeopositioninfo.html#QGeoPositionInfo" location="qgeopositioninfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoPositionInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoPositionInfo" fullname="QGeoPositionInfo::QGeoPositionInfo" href="qgeopositioninfo.html#QGeoPositionInfo-2" location="qgeopositioninfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoPositionInfo(const QGeoCoordinate &amp; coordinate, const QDateTime &amp; timestamp)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
                <parameter left="const QDateTime &amp;" right="" name="timestamp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoPositionInfo" fullname="QGeoPositionInfo::QGeoPositionInfo" href="qgeopositioninfo.html#QGeoPositionInfo-3" location="qgeopositioninfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGeoPositionInfo(const QGeoPositionInfo &amp; other)">
                <parameter left="const QGeoPositionInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoPositionInfo" fullname="QGeoPositionInfo::~QGeoPositionInfo" href="qgeopositioninfo.html#dtor.QGeoPositionInfo" location="qgeopositioninfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoPositionInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoPositionInfo::operator=" href="qgeopositioninfo.html#operator=" location="qgeopositioninfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoPositionInfo &amp;" signature="operator=(const QGeoPositionInfo &amp; other)">
                <parameter left="const QGeoPositionInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGeoPositionInfo::operator==" href="qgeopositioninfo.html#operator==" location="qgeopositioninfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGeoPositionInfo &amp; other) const">
                <parameter left="const QGeoPositionInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGeoPositionInfo::operator!=" href="qgeopositioninfo.html#operator!=" location="qgeopositioninfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGeoPositionInfo &amp; other) const">
                <parameter left="const QGeoPositionInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QGeoPositionInfo::isValid" href="qgeopositioninfo.html#isValid" location="qgeopositioninfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimestamp" fullname="QGeoPositionInfo::setTimestamp" href="qgeopositioninfo.html#setTimestamp" location="qgeopositioninfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTimestamp(const QDateTime &amp; timestamp)">
                <parameter left="const QDateTime &amp;" right="" name="timestamp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timestamp" fullname="QGeoPositionInfo::timestamp" href="qgeopositioninfo.html#timestamp" location="qgeopositioninfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QDateTime" signature="timestamp() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCoordinate" fullname="QGeoPositionInfo::setCoordinate" href="qgeopositioninfo.html#setCoordinate" location="qgeopositioninfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCoordinate(const QGeoCoordinate &amp; coordinate)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="coordinate" fullname="QGeoPositionInfo::coordinate" href="qgeopositioninfo.html#coordinate" location="qgeopositioninfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="coordinate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QGeoPositionInfo::setAttribute" href="qgeopositioninfo.html#setAttribute" location="qgeopositioninfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(Attribute attribute, qreal value)">
                <parameter left="Attribute" right="" name="attribute" default=""/>
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QGeoPositionInfo::attribute" href="qgeopositioninfo.html#attribute" location="qgeopositioninfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="attribute(Attribute attribute) const">
                <parameter left="Attribute" right="" name="attribute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QGeoPositionInfo::removeAttribute" href="qgeopositioninfo.html#removeAttribute" location="qgeopositioninfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAttribute(Attribute attribute)">
                <parameter left="Attribute" right="" name="attribute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasAttribute" fullname="QGeoPositionInfo::hasAttribute" href="qgeopositioninfo.html#hasAttribute" location="qgeopositioninfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasAttribute(Attribute attribute) const">
                <parameter left="Attribute" right="" name="attribute" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactAction" href="qcontactaction.html" location="qcontactaction.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="availableActions" fullname="QContactAction::availableActions" href="qcontactaction.html#availableActions" location="qcontactaction.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="availableActions(const QString &amp; vendor, int implementationVersion)">
                <parameter left="const QString &amp;" right="" name="vendor" default="QString()"/>
                <parameter left="int" right="" name="implementationVersion" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actionDescriptors" fullname="QContactAction::actionDescriptors" href="qcontactaction.html#actionDescriptors" location="qcontactaction.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QContactActionDescriptor&gt;" signature="actionDescriptors(const QString &amp; actionName, const QString &amp; vendorName, int implementationVersion)">
                <parameter left="const QString &amp;" right="" name="actionName" default="QString()"/>
                <parameter left="const QString &amp;" right="" name="vendorName" default="QString()"/>
                <parameter left="int" right="" name="implementationVersion" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="action" fullname="QContactAction::action" href="qcontactaction.html#action" location="qcontactaction.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContactAction *" signature="action(const QContactActionDescriptor &amp; descriptor)">
                <parameter left="const QContactActionDescriptor &amp;" right="" name="descriptor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactAction" fullname="QContactAction::~QContactAction" href="qcontactaction.html#dtor.QContactAction" location="qcontactaction.h" virtual="pure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactAction()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="actionDescriptor" fullname="QContactAction::actionDescriptor" href="qcontactaction.html#actionDescriptor" location="qcontactaction.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QContactActionDescriptor" signature="actionDescriptor() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QContactAction::metaData" href="qcontactaction.html#metaData" location="qcontactaction.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariantMap" signature="metaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactFilter" fullname="QContactAction::contactFilter" href="qcontactaction.html#contactFilter" location="qcontactaction.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QContactFilter" signature="contactFilter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDetailSupported" fullname="QContactAction::isDetailSupported" href="qcontactaction.html#isDetailSupported" location="qcontactaction.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isDetailSupported(const QContactDetail &amp; detail, const QContact &amp; contact) const">
                <parameter left="const QContactDetail &amp;" right="" name="detail" default=""/>
                <parameter left="const QContact &amp;" right="" name="contact" default="QContact()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedDetails" fullname="QContactAction::supportedDetails" href="qcontactaction.html#supportedDetails" location="qcontactaction.cpp" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactDetail&gt;" signature="supportedDetails(const QContact &amp; contact) const">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invokeAction" fullname="QContactAction::invokeAction" href="qcontactaction.html#invokeAction" location="qcontactaction.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="invokeAction(const QContact &amp; contact, const QContactDetail &amp; detail, const QVariantMap &amp; parameters)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="const QContactDetail &amp;" right="" name="detail" default="QContactDetail()"/>
                <parameter left="const QVariantMap &amp;" right="" name="parameters" default="QVariantMap()"/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QContactAction::State" href="qcontactaction.html#State-enum" location="qcontactaction.h">
                <value name="InactiveState" value="0"/>
                <value name="ActiveState" value="1"/>
                <value name="FinishedState" value="2"/>
                <value name="FinishedDetachedState" value="3"/>
                <value name="FinishedWithErrorState" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QContactAction::state" href="qcontactaction.html#state" location="qcontactaction.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="results" fullname="QContactAction::results" href="qcontactaction.html#results" location="qcontactaction.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariantMap" signature="results() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QContactAction::stateChanged" href="qcontactaction.html#stateChanged" location="qcontactaction.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QContactAction::State newState)">
                <parameter left="QContactAction::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resultsAvailable" fullname="QContactAction::resultsAvailable" href="qcontactaction.html#resultsAvailable" location="qcontactaction.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resultsAvailable()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QRadioTunerControl" href="qradiotunercontrol.html" location="qradiotunercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRadioTunerControl" fullname="QRadioTunerControl::~QRadioTunerControl" href="qradiotunercontrol.html#dtor.QRadioTunerControl" location="qradiotunercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRadioTunerControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QRadioTunerControl::isAvailable" href="qradiotunercontrol.html#isAvailable" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityError" fullname="QRadioTunerControl::availabilityError" href="qradiotunercontrol.html#availabilityError" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::AvailabilityError" signature="availabilityError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QRadioTunerControl::state" href="qradiotunercontrol.html#state" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRadioTuner::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioTunerControl::band" href="qradiotunercontrol.html#band" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRadioTuner::Band" signature="band() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBand" fullname="QRadioTunerControl::setBand" href="qradiotunercontrol.html#setBand" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBand(QRadioTuner::Band band)">
                <parameter left="QRadioTuner::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isBandSupported" fullname="QRadioTunerControl::isBandSupported" href="qradiotunercontrol.html#isBandSupported" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isBandSupported(QRadioTuner::Band band) const">
                <parameter left="QRadioTuner::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioTunerControl::frequency" href="qradiotunercontrol.html#frequency" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyStep" fullname="QRadioTunerControl::frequencyStep" href="qradiotunercontrol.html#frequencyStep" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="frequencyStep(QRadioTuner::Band band) const">
                <parameter left="QRadioTuner::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyRange" fullname="QRadioTunerControl::frequencyRange" href="qradiotunercontrol.html#frequencyRange" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;int, int&gt;" signature="frequencyRange(QRadioTuner::Band band) const">
                <parameter left="QRadioTuner::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QRadioTunerControl::setFrequency" href="qradiotunercontrol.html#setFrequency" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStereo" fullname="QRadioTunerControl::isStereo" href="qradiotunercontrol.html#isStereo" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isStereo() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoMode" fullname="QRadioTunerControl::stereoMode" href="qradiotunercontrol.html#stereoMode" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRadioTuner::StereoMode" signature="stereoMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStereoMode" fullname="QRadioTunerControl::setStereoMode" href="qradiotunercontrol.html#setStereoMode" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setStereoMode(QRadioTuner::StereoMode mode)">
                <parameter left="QRadioTuner::StereoMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioTunerControl::signalStrength" href="qradiotunercontrol.html#signalStrength" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="signalStrength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioTunerControl::volume" href="qradiotunercontrol.html#volume" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QRadioTunerControl::setVolume" href="qradiotunercontrol.html#setVolume" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QRadioTunerControl::isMuted" href="qradiotunercontrol.html#isMuted" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QRadioTunerControl::setMuted" href="qradiotunercontrol.html#setMuted" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSearching" fullname="QRadioTunerControl::isSearching" href="qradiotunercontrol.html#isSearching" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSearching() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchForward" fullname="QRadioTunerControl::searchForward" href="qradiotunercontrol.html#searchForward" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="searchForward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchBackward" fullname="QRadioTunerControl::searchBackward" href="qradiotunercontrol.html#searchBackward" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="searchBackward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelSearch" fullname="QRadioTunerControl::cancelSearch" href="qradiotunercontrol.html#cancelSearch" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="cancelSearch()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QRadioTunerControl::start" href="qradiotunercontrol.html#start" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QRadioTunerControl::stop" href="qradiotunercontrol.html#stop" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QRadioTunerControl::error" href="qradiotunercontrol.html#error" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRadioTuner::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QRadioTunerControl::errorString" href="qradiotunercontrol.html#errorString" location="qradiotunercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QRadioTunerControl::stateChanged" href="qradiotunercontrol.html#stateChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QRadioTuner::State state)">
                <parameter left="QRadioTuner::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bandChanged" fullname="QRadioTunerControl::bandChanged" href="qradiotunercontrol.html#bandChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bandChanged(QRadioTuner::Band band)">
                <parameter left="QRadioTuner::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyChanged" fullname="QRadioTunerControl::frequencyChanged" href="qradiotunercontrol.html#frequencyChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="frequencyChanged(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoStatusChanged" fullname="QRadioTunerControl::stereoStatusChanged" href="qradiotunercontrol.html#stereoStatusChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stereoStatusChanged(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchingChanged" fullname="QRadioTunerControl::searchingChanged" href="qradiotunercontrol.html#searchingChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchingChanged(bool searching)">
                <parameter left="bool" right="" name="searching" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrengthChanged" fullname="QRadioTunerControl::signalStrengthChanged" href="qradiotunercontrol.html#signalStrengthChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="signalStrengthChanged(int strength)">
                <parameter left="int" right="" name="strength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QRadioTunerControl::volumeChanged" href="qradiotunercontrol.html#volumeChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutedChanged" fullname="QRadioTunerControl::mutedChanged" href="qradiotunercontrol.html#mutedChanged" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutedChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QRadioTunerControl::error" href="qradiotunercontrol.html#error-2" location="qradiotunercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QRadioTuner::Error error)">
                <parameter left="QRadioTuner::Error" right="" name="error" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QRadioTunerControl" fullname="QRadioTunerControl::QRadioTunerControl" href="qradiotunercontrol.html#QRadioTunerControl" location="qradiotunercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRadioTunerControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraImageCapture" href="qcameraimagecapture.html" location="qcameraimagecapture.h" bases="QMediaBindableInterface" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="readyForCapture" fullname="QCameraImageCapture::readyForCapture" href="qcameraimagecapture.html#readyForCapture-prop" location="qcameraimagecapture.h" type="bool">
                <getter name="isReadyForCapture"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QCameraImageCapture::Error" href="qcameraimagecapture.html#Error-enum" location="qcameraimagecapture.h">
                <value name="NoError" value="0"/>
                <value name="NotReadyError" value="1"/>
                <value name="ResourceError" value="2"/>
                <value name="OutOfSpaceError" value="3"/>
                <value name="NotSupportedFeatureError" value="4"/>
                <value name="FormatError" value="5"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DriveMode" fullname="QCameraImageCapture::DriveMode" href="qcameraimagecapture.html#DriveMode-enum" location="qcameraimagecapture.h">
                <value name="SingleImageCapture" value="0"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCameraImageCapture" fullname="QCameraImageCapture::QCameraImageCapture" href="qcameraimagecapture.html#QCameraImageCapture" location="qcameraimagecapture.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraImageCapture(QMediaObject * mediaObject, QObject * parent)">
                <parameter left="QMediaObject *" right="" name="mediaObject" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraImageCapture" fullname="QCameraImageCapture::~QCameraImageCapture" href="qcameraimagecapture.html#dtor.QCameraImageCapture" location="qcameraimagecapture.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraImageCapture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QCameraImageCapture::isAvailable" href="qcameraimagecapture.html#isAvailable" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityError" fullname="QCameraImageCapture::availabilityError" href="qcameraimagecapture.html#availabilityError" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::AvailabilityError" signature="availabilityError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaObject" fullname="QCameraImageCapture::mediaObject" href="qcameraimagecapture.html#mediaObject" location="qcameraimagecapture.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaObject *" signature="mediaObject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QCameraImageCapture::error" href="qcameraimagecapture.html#error" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QCameraImageCapture::errorString" href="qcameraimagecapture.html#errorString" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadyForCapture" fullname="QCameraImageCapture::isReadyForCapture" href="qcameraimagecapture.html#readyForCapture-prop" location="qcameraimagecapture.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="readyForCapture" type="bool" signature="isReadyForCapture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedImageCodecs" fullname="QCameraImageCapture::supportedImageCodecs" href="qcameraimagecapture.html#supportedImageCodecs" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedImageCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageCodecDescription" fullname="QCameraImageCapture::imageCodecDescription" href="qcameraimagecapture.html#imageCodecDescription" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="imageCodecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedResolutions" fullname="QCameraImageCapture::supportedResolutions" href="qcameraimagecapture.html#supportedResolutions" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSize&gt;" signature="supportedResolutions(const QImageEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="settings" default="QImageEncoderSettings()"/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodingSettings" fullname="QCameraImageCapture::encodingSettings" href="qcameraimagecapture.html#encodingSettings" location="qcameraimagecapture.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QImageEncoderSettings" signature="encodingSettings() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEncodingSettings" fullname="QCameraImageCapture::setEncodingSettings" href="qcameraimagecapture.html#setEncodingSettings" location="qcameraimagecapture.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEncodingSettings(const QImageEncoderSettings &amp; settings)">
                <parameter left="const QImageEncoderSettings &amp;" right="" name="settings" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="capture" fullname="QCameraImageCapture::capture" href="qcameraimagecapture.html#capture" location="qcameraimagecapture.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="int" signature="capture(const QString &amp; file)">
                <parameter left="const QString &amp;" right="" name="file" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelCapture" fullname="QCameraImageCapture::cancelCapture" href="qcameraimagecapture.html#cancelCapture" location="qcameraimagecapture.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancelCapture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QCameraImageCapture::error" href="qcameraimagecapture.html#error-2" location="qcameraimagecapture.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QCameraImageCapture::Error error)">
                <parameter left="QCameraImageCapture::Error" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readyForCaptureChanged" fullname="QCameraImageCapture::readyForCaptureChanged" href="qcameraimagecapture.html#readyForCaptureChanged" location="qcameraimagecapture.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readyForCaptureChanged(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageExposed" fullname="QCameraImageCapture::imageExposed" href="qcameraimagecapture.html#imageExposed" location="qcameraimagecapture.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="imageExposed(int id)">
                <parameter left="int" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageCaptured" fullname="QCameraImageCapture::imageCaptured" href="qcameraimagecapture.html#imageCaptured" location="qcameraimagecapture.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="imageCaptured(int id, const QImage &amp; preview)">
                <parameter left="int" right="" name="id" default=""/>
                <parameter left="const QImage &amp;" right="" name="preview" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="imageSaved" fullname="QCameraImageCapture::imageSaved" href="qcameraimagecapture.html#imageSaved" location="qcameraimagecapture.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="imageSaved(int id, const QString &amp; fileName)">
                <parameter left="int" right="" name="id" default=""/>
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setMediaObject" fullname="QCameraImageCapture::setMediaObject" href="qcameraimagecapture.html#setMediaObject" location="qcameraimagecapture.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setMediaObject(QMediaObject * mediaObject)">
                <parameter left="QMediaObject *" right="" name="mediaObject" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QCameraImageCapture::d_ptr" href="qcameraimagecapture.html#d_ptr-var" location="qcameraimagecapture.h" type="QCameraImageCapturePrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemRemoveRequest" href="qorganizeritemremoverequest.html" location="qorganizeritemremoverequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemRemoveRequest" fullname="QOrganizerItemRemoveRequest::QOrganizerItemRemoveRequest" href="qorganizeritemremoverequest.html#QOrganizerItemRemoveRequest" location="qorganizeritemremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemRemoveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemId" fullname="QOrganizerItemRemoveRequest::setItemId" href="qorganizeritemremoverequest.html#setItemId" location="qorganizeritemremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItemId(const QOrganizerItemLocalId &amp; organizeritemId)">
                <parameter left="const QOrganizerItemLocalId &amp;" right="" name="organizeritemId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemIds" fullname="QOrganizerItemRemoveRequest::setItemIds" href="qorganizeritemremoverequest.html#setItemIds" location="qorganizeritemremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setItemIds(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemIds" fullname="QOrganizerItemRemoveRequest::itemIds" href="qorganizeritemremoverequest.html#itemIds" location="qorganizeritemremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemLocalId&gt;" signature="itemIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QOrganizerItemRemoveRequest::errorMap" href="qorganizeritemremoverequest.html#errorMap" location="qorganizeritemremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QOrganizerItemManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoPositionInfoSource" href="qgeopositioninfosource.html" location="qgeopositioninfosource.h" bases="" module="QtLocation">
            <property access="public" threadsafety="unspecified" status="commendable" name="updateInterval" fullname="QGeoPositionInfoSource::updateInterval" href="qgeopositioninfosource.html#updateInterval-prop" location="qgeopositioninfosource.h" type="int">
                <getter name="updateInterval"/>
                <setter name="setUpdateInterval"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="minimumUpdateInterval" fullname="QGeoPositionInfoSource::minimumUpdateInterval" href="qgeopositioninfosource.html#minimumUpdateInterval-prop" location="qgeopositioninfosource.h" type="int">
                <getter name="minimumUpdateInterval"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PositioningMethod" fullname="QGeoPositionInfoSource::PositioningMethod" href="qgeopositioninfosource.html#PositioningMethod-enum" location="qgeopositioninfosource.h" typedef="QGeoPositionInfoSource::PositioningMethods">
                <value name="SatellitePositioningMethods" value="0x000000ff"/>
                <value name="NonSatellitePositioningMethods" value="0xffffff00"/>
                <value name="AllPositioningMethods" value="0xffffffff"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="PositioningMethods" fullname="QGeoPositionInfoSource::PositioningMethods" href="qgeopositioninfosource.html#PositioningMethods-typedef" location="qgeopositioninfosource.h" enum="QGeoPositionInfoSource::PositioningMethod"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoPositionInfoSource" fullname="QGeoPositionInfoSource::QGeoPositionInfoSource" href="qgeopositioninfosource.html#QGeoPositionInfoSource" location="qgeopositioninfosource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoPositionInfoSource(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoPositionInfoSource" fullname="QGeoPositionInfoSource::~QGeoPositionInfoSource" href="qgeopositioninfosource.html#dtor.QGeoPositionInfoSource" location="qgeopositioninfosource.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoPositionInfoSource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUpdateInterval" fullname="QGeoPositionInfoSource::setUpdateInterval" href="qgeopositioninfosource.html#updateInterval-prop" location="qgeopositioninfosource.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="updateInterval" type="void" signature="setUpdateInterval(int msec)">
                <parameter left="int" right="" name="msec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateInterval" fullname="QGeoPositionInfoSource::updateInterval" href="qgeopositioninfosource.html#updateInterval-prop" location="qgeopositioninfosource.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="updateInterval" type="int" signature="updateInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPreferredPositioningMethods" fullname="QGeoPositionInfoSource::setPreferredPositioningMethods" href="qgeopositioninfosource.html#setPreferredPositioningMethods" location="qgeopositioninfosource.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPreferredPositioningMethods(QFlags&lt;QGeoPositionInfoSource::PositioningMethod&gt; methods)">
                <parameter left="QFlags&lt;QGeoPositionInfoSource::PositioningMethod&gt;" right="" name="methods" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="preferredPositioningMethods" fullname="QGeoPositionInfoSource::preferredPositioningMethods" href="qgeopositioninfosource.html#preferredPositioningMethods" location="qgeopositioninfosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="PositioningMethods" signature="preferredPositioningMethods() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lastKnownPosition" fullname="QGeoPositionInfoSource::lastKnownPosition" href="qgeopositioninfosource.html#lastKnownPosition" location="qgeopositioninfosource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QGeoPositionInfo" signature="lastKnownPosition(bool fromSatellitePositioningMethodsOnly) const">
                <parameter left="bool" right="" name="fromSatellitePositioningMethodsOnly" default="false"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedPositioningMethods" fullname="QGeoPositionInfoSource::supportedPositioningMethods" href="qgeopositioninfosource.html#supportedPositioningMethods" location="qgeopositioninfosource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="PositioningMethods" signature="supportedPositioningMethods() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumUpdateInterval" fullname="QGeoPositionInfoSource::minimumUpdateInterval" href="qgeopositioninfosource.html#minimumUpdateInterval-prop" location="qgeopositioninfosource.h" virtual="pure" meta="plain" const="true" static="false" overload="false" associated-property="minimumUpdateInterval" type="int" signature="minimumUpdateInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="createDefaultSource" fullname="QGeoPositionInfoSource::createDefaultSource" href="qgeopositioninfosource.html#createDefaultSource" location="qgeopositioninfosource.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QGeoPositionInfoSource *" signature="createDefaultSource(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startUpdates" fullname="QGeoPositionInfoSource::startUpdates" href="qgeopositioninfosource.html#startUpdates" location="qgeopositioninfosource.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="startUpdates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopUpdates" fullname="QGeoPositionInfoSource::stopUpdates" href="qgeopositioninfosource.html#stopUpdates" location="qgeopositioninfosource.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="stopUpdates()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestUpdate" fullname="QGeoPositionInfoSource::requestUpdate" href="qgeopositioninfosource.html#requestUpdate" location="qgeopositioninfosource.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="requestUpdate(int timeout)">
                <parameter left="int" right="" name="timeout" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionUpdated" fullname="QGeoPositionInfoSource::positionUpdated" href="qgeopositioninfosource.html#positionUpdated" location="qgeopositioninfosource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionUpdated(const QGeoPositionInfo &amp; update)">
                <parameter left="const QGeoPositionInfo &amp;" right="" name="update" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateTimeout" fullname="QGeoPositionInfoSource::updateTimeout" href="qgeopositioninfosource.html#updateTimeout" location="qgeopositioninfosource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="updateTimeout()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageAccount" href="qmessageaccount.html" location="qmessageaccount.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccount" fullname="QMessageAccount::QMessageAccount" href="qmessageaccount.html#QMessageAccount" location="qmessageaccount_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageAccount()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccount" fullname="QMessageAccount::QMessageAccount" href="qmessageaccount.html#QMessageAccount-2" location="qmessageaccount_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageAccount(const QMessageAccountId &amp; id)">
                <parameter left="const QMessageAccountId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccount" fullname="QMessageAccount::QMessageAccount" href="qmessageaccount.html#QMessageAccount-3" location="qmessageaccount_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessageAccount(const QMessageAccount &amp; other)">
                <parameter left="const QMessageAccount &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageAccount" fullname="QMessageAccount::~QMessageAccount" href="qmessageaccount.html#dtor.QMessageAccount" location="qmessageaccount_maemo.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageAccount()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QMessageAccount::id" href="qmessageaccount.html#id" location="qmessageaccount_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageAccountId" signature="id() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QMessageAccount::name" href="qmessageaccount.html#name" location="qmessageaccount_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="messageTypes" fullname="QMessageAccount::messageTypes" href="qmessageaccount.html#messageTypes" location="qmessageaccount_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessage::TypeFlags" signature="messageTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultAccount" fullname="QMessageAccount::defaultAccount" href="qmessageaccount.html#defaultAccount" location="qmessageaccount_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageAccountId" signature="defaultAccount(QMessage::Type type)">
                <parameter left="QMessage::Type" right="" name="type" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainer" href="qmessagecontentcontainer.html" location="qmessagecontentcontainer.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainer" fullname="QMessageContentContainer::QMessageContentContainer" href="qmessagecontentcontainer.html#QMessageContentContainer" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageContentContainer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageContentContainer" fullname="QMessageContentContainer::QMessageContentContainer" href="qmessagecontentcontainer.html#QMessageContentContainer-2" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageContentContainer(const QMessageContentContainer &amp; other)">
                <parameter left="const QMessageContentContainer &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageContentContainer" fullname="QMessageContentContainer::~QMessageContentContainer" href="qmessagecontentcontainer.html#dtor.QMessageContentContainer" location="qmessagecontentcontainer_stub.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageContentContainer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentType" fullname="QMessageContentContainer::contentType" href="qmessagecontentcontainer.html#contentType" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="contentType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentSubType" fullname="QMessageContentContainer::contentSubType" href="qmessagecontentcontainer.html#contentSubType" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="contentSubType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentCharset" fullname="QMessageContentContainer::contentCharset" href="qmessagecontentcontainer.html#contentCharset" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="contentCharset() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="suggestedFileName" fullname="QMessageContentContainer::suggestedFileName" href="qmessagecontentcontainer.html#suggestedFileName" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="suggestedFileName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isContentAvailable" fullname="QMessageContentContainer::isContentAvailable" href="qmessagecontentcontainer.html#isContentAvailable" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isContentAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMessageContentContainer::size" href="qmessagecontentcontainer.html#size" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="textContent" fullname="QMessageContentContainer::textContent" href="qmessagecontentcontainer.html#textContent" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="textContent() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="content" fullname="QMessageContentContainer::content" href="qmessagecontentcontainer.html#content" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QByteArray" signature="content() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeTextContent" fullname="QMessageContentContainer::writeTextContent" href="qmessagecontentcontainer.html#writeTextContent" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="writeTextContent(QTextStream &amp; out) const">
                <parameter left="QTextStream &amp;" right="" name="out" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="writeContent" fullname="QMessageContentContainer::writeContent" href="qmessagecontentcontainer.html#writeContent" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="writeContent(QDataStream &amp; out) const">
                <parameter left="QDataStream &amp;" right="" name="out" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentIds" fullname="QMessageContentContainer::contentIds" href="qmessagecontentcontainer.html#contentIds" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageContentContainerIdList" signature="contentIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="find" fullname="QMessageContentContainer::find" href="qmessagecontentcontainer.html#find" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageContentContainer" signature="find(const QMessageContentContainerId &amp; id) const">
                <parameter left="const QMessageContentContainerId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QMessageContentContainer::contains" href="qmessagecontentcontainer.html#contains" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QMessageContentContainerId &amp; id) const">
                <parameter left="const QMessageContentContainerId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerFieldValue" fullname="QMessageContentContainer::headerFieldValue" href="qmessagecontentcontainer.html#headerFieldValue" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="headerFieldValue(const QByteArray &amp; name) const">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerFieldValues" fullname="QMessageContentContainer::headerFieldValues" href="qmessagecontentcontainer.html#headerFieldValues" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="headerFieldValues(const QByteArray &amp; name) const">
                <parameter left="const QByteArray &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="headerFields" fullname="QMessageContentContainer::headerFields" href="qmessagecontentcontainer.html#headerFields" location="qmessagecontentcontainer_stub.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="headerFields() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemInvalidFilter" href="qorganizeriteminvalidfilter.html" location="qorganizeriteminvalidfilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemInvalidFilter" fullname="QOrganizerItemInvalidFilter::QOrganizerItemInvalidFilter" href="qorganizeriteminvalidfilter.html#QOrganizerItemInvalidFilter" location="qorganizeriteminvalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemInvalidFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemInvalidFilter" fullname="QOrganizerItemInvalidFilter::QOrganizerItemInvalidFilter" href="qorganizeriteminvalidfilter.html#QOrganizerItemInvalidFilter-2" location="qorganizeriteminvalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemInvalidFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkAbstractRequest" href="qlandmarkabstractrequest.html" location="qlandmarkabstractrequest.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QLandmarkAbstractRequest::State" href="qlandmarkabstractrequest.html#State-enum" location="qlandmarkabstractrequest.h">
                <value name="InactiveState" value="0"/>
                <value name="ActiveState" value="1"/>
                <value name="CanceledState" value="2"/>
                <value name="FinishedState" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RequestType" fullname="QLandmarkAbstractRequest::RequestType" href="qlandmarkabstractrequest.html#RequestType-enum" location="qlandmarkabstractrequest.h">
                <value name="InvalidRequest" value="0"/>
                <value name="LandmarkIdFetchRequest" value="1"/>
                <value name="CategoryIdFetchRequest" value="2"/>
                <value name="LandmarkFetchRequest" value="3"/>
                <value name="CategoryFetchRequest" value="4"/>
                <value name="LandmarkSaveRequest" value="5"/>
                <value name="LandmarkRemoveRequest" value="6"/>
                <value name="CategorySaveRequest" value="7"/>
                <value name="CategoryRemoveRequest" value="8"/>
                <value name="ImportRequest" value="9"/>
                <value name="ExportRequest" value="10"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkAbstractRequest" fullname="QLandmarkAbstractRequest::QLandmarkAbstractRequest" href="qlandmarkabstractrequest.html#QLandmarkAbstractRequest" location="qlandmarkabstractrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkAbstractRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkAbstractRequest" fullname="QLandmarkAbstractRequest::~QLandmarkAbstractRequest" href="qlandmarkabstractrequest.html#dtor.QLandmarkAbstractRequest" location="qlandmarkabstractrequest.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkAbstractRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QLandmarkAbstractRequest::type" href="qlandmarkabstractrequest.html#type" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RequestType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QLandmarkAbstractRequest::state" href="qlandmarkabstractrequest.html#state" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="State" signature="state()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInactive" fullname="QLandmarkAbstractRequest::isInactive" href="qlandmarkabstractrequest.html#isInactive" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInactive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QLandmarkAbstractRequest::isActive" href="qlandmarkabstractrequest.html#isActive" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QLandmarkAbstractRequest::isFinished" href="qlandmarkabstractrequest.html#isFinished" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCanceled" fullname="QLandmarkAbstractRequest::isCanceled" href="qlandmarkabstractrequest.html#isCanceled" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCanceled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QLandmarkAbstractRequest::error" href="qlandmarkabstractrequest.html#error" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkManager::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QLandmarkAbstractRequest::errorString" href="qlandmarkabstractrequest.html#errorString" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manager" fullname="QLandmarkAbstractRequest::manager" href="qlandmarkabstractrequest.html#manager" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkManager *" signature="manager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManager" fullname="QLandmarkAbstractRequest::setManager" href="qlandmarkabstractrequest.html#setManager" location="qlandmarkabstractrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManager(QLandmarkManager * manager)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QLandmarkAbstractRequest::start" href="qlandmarkabstractrequest.html#start" location="qlandmarkabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QLandmarkAbstractRequest::cancel" href="qlandmarkabstractrequest.html#cancel" location="qlandmarkabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForFinished" fullname="QLandmarkAbstractRequest::waitForFinished" href="qlandmarkabstractrequest.html#waitForFinished" location="qlandmarkabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="waitForFinished(int msecs)">
                <parameter left="int" right="" name="msecs" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resultsAvailable" fullname="QLandmarkAbstractRequest::resultsAvailable" href="qlandmarkabstractrequest.html#resultsAvailable" location="qlandmarkabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resultsAvailable()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QLandmarkAbstractRequest::stateChanged" href="qlandmarkabstractrequest.html#stateChanged" location="qlandmarkabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QLandmarkAbstractRequest::State newState)">
                <parameter left="QLandmarkAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QLandmarkAbstractRequest::d_ptr" href="qlandmarkabstractrequest.html#d_ptr-var" location="qlandmarkabstractrequest.h" type="QLandmarkAbstractRequestPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoNavigationInstruction" href="qgeonavigationinstruction.html" location="qgeonavigationinstruction.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoNavigationInstruction" fullname="QGeoNavigationInstruction::QGeoNavigationInstruction" href="qgeonavigationinstruction.html#QGeoNavigationInstruction" location="qgeonavigationinstruction.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoNavigationInstruction()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoNavigationInstruction" fullname="QGeoNavigationInstruction::QGeoNavigationInstruction" href="qgeonavigationinstruction.html#QGeoNavigationInstruction-2" location="qgeonavigationinstruction.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoNavigationInstruction(const QGeoNavigationInstruction &amp; other)">
                <parameter left="const QGeoNavigationInstruction &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoNavigationInstruction" fullname="QGeoNavigationInstruction::~QGeoNavigationInstruction" href="qgeonavigationinstruction.html#dtor.QGeoNavigationInstruction" location="qgeonavigationinstruction.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoNavigationInstruction()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoNavigationInstruction::operator=" href="qgeonavigationinstruction.html#operator=" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoNavigationInstruction &amp;" signature="operator=(const QGeoNavigationInstruction &amp; other)">
                <parameter left="const QGeoNavigationInstruction &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGeoNavigationInstruction::operator==" href="qgeonavigationinstruction.html#operator==" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGeoNavigationInstruction &amp; other) const">
                <parameter left="const QGeoNavigationInstruction &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGeoNavigationInstruction::operator!=" href="qgeonavigationinstruction.html#operator!=" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGeoNavigationInstruction &amp; other) const">
                <parameter left="const QGeoNavigationInstruction &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPosition" fullname="QGeoNavigationInstruction::setPosition" href="qgeonavigationinstruction.html#setPosition" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPosition(const QGeoCoordinate &amp; position)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QGeoNavigationInstruction::position" href="qgeonavigationinstruction.html#position" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="position() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInstructionText" fullname="QGeoNavigationInstruction::setInstructionText" href="qgeonavigationinstruction.html#setInstructionText" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInstructionText(const QString &amp; instructionText)">
                <parameter left="const QString &amp;" right="" name="instructionText" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instructionText" fullname="QGeoNavigationInstruction::instructionText" href="qgeonavigationinstruction.html#instructionText" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="instructionText() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimeToNextInstruction" fullname="QGeoNavigationInstruction::setTimeToNextInstruction" href="qgeonavigationinstruction.html#setTimeToNextInstruction" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTimeToNextInstruction(int secs)">
                <parameter left="int" right="" name="secs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeToNextInstruction" fullname="QGeoNavigationInstruction::timeToNextInstruction" href="qgeonavigationinstruction.html#timeToNextInstruction" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="timeToNextInstruction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDistanceToNextInstruction" fullname="QGeoNavigationInstruction::setDistanceToNextInstruction" href="qgeonavigationinstruction.html#setDistanceToNextInstruction" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDistanceToNextInstruction(qreal distance)">
                <parameter left="qreal" right="" name="distance" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="distanceToNextInstruction" fullname="QGeoNavigationInstruction::distanceToNextInstruction" href="qgeonavigationinstruction.html#distanceToNextInstruction" location="qgeonavigationinstruction.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="distanceToNextInstruction() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraExposure" href="qcameraexposure.html" location="qcameraexposure.h" bases="" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="aperture" fullname="QCameraExposure::aperture" href="qcameraexposure.html#aperture-prop" location="qcameraexposure.h" type="qreal">
                <getter name="aperture"/>
                <setter name="setManualAperture"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="shutterSpeed" fullname="QCameraExposure::shutterSpeed" href="qcameraexposure.html#shutterSpeed-prop" location="qcameraexposure.h" type="qreal">
                <getter name="shutterSpeed"/>
                <setter name="setManualShutterSpeed"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="isoSensitivity" fullname="QCameraExposure::isoSensitivity" href="qcameraexposure.html#isoSensitivity-prop" location="qcameraexposure.h" type="int">
                <getter name="isoSensitivity"/>
                <setter name="setManualIsoSensitivity"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="exposureCompensation" fullname="QCameraExposure::exposureCompensation" href="qcameraexposure.html#exposureCompensation-prop" location="qcameraexposure.h" type="qreal">
                <getter name="exposureCompensation"/>
                <setter name="setExposureCompensation"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FlashMode" fullname="QCameraExposure::FlashMode" href="qcameraexposure.html#FlashMode-enum" location="qcameraexposure.h" typedef="QCameraExposure::FlashModes">
                <value name="FlashOff" value="0x1"/>
                <value name="FlashOn" value="0x2"/>
                <value name="FlashAuto" value="0x4"/>
                <value name="FlashRedEyeReduction" value="0x8"/>
                <value name="FlashFill" value="0x10"/>
                <value name="FlashTorch" value="0x20"/>
                <value name="FlashSlowSyncFrontCurtain" value="0x40"/>
                <value name="FlashSlowSyncRearCurtain" value="0x80"/>
                <value name="FlashManual" value="0x100"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FlashModes" fullname="QCameraExposure::FlashModes" href="qcameraexposure.html#FlashModes-typedef" location="qcameraexposure.h" enum="QCameraExposure::FlashMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ExposureMode" fullname="QCameraExposure::ExposureMode" href="qcameraexposure.html#ExposureMode-enum" location="qcameraexposure.h">
                <value name="ExposureManual" value="0"/>
                <value name="ExposureAuto" value="1"/>
                <value name="ExposureNight" value="2"/>
                <value name="ExposureBacklight" value="3"/>
                <value name="ExposureSpotlight" value="4"/>
                <value name="ExposureSports" value="5"/>
                <value name="ExposureSnow" value="6"/>
                <value name="ExposureBeach" value="7"/>
                <value name="ExposureLargeAperture" value="8"/>
                <value name="ExposureSmallAperture" value="9"/>
                <value name="ExposurePortrait" value="10"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MeteringMode" fullname="QCameraExposure::MeteringMode" href="qcameraexposure.html#MeteringMode-enum" location="qcameraexposure.h">
                <value name="MeteringMatrix" value="0"/>
                <value name="MeteringAverage" value="1"/>
                <value name="MeteringSpot" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QCameraExposure::isAvailable" href="qcameraexposure.html#isAvailable" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashMode" fullname="QCameraExposure::flashMode" href="qcameraexposure.html#flashMode" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FlashModes" signature="flashMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashModeSupported" fullname="QCameraExposure::isFlashModeSupported" href="qcameraexposure.html#isFlashModeSupported" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashModeSupported(QFlags&lt;QCameraExposure::FlashMode&gt; mode) const">
                <parameter left="QFlags&lt;QCameraExposure::FlashMode&gt;" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashReady" fullname="QCameraExposure::isFlashReady" href="qcameraexposure.html#isFlashReady" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashReady() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureMode" fullname="QCameraExposure::exposureMode" href="qcameraexposure.html#exposureMode" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ExposureMode" signature="exposureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isExposureModeSupported" fullname="QCameraExposure::isExposureModeSupported" href="qcameraexposure.html#isExposureModeSupported" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isExposureModeSupported(ExposureMode mode) const">
                <parameter left="ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureCompensation" fullname="QCameraExposure::exposureCompensation" href="qcameraexposure.html#exposureCompensation-prop" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="exposureCompensation" type="qreal" signature="exposureCompensation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="meteringMode" fullname="QCameraExposure::meteringMode" href="qcameraexposure.html#meteringMode" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MeteringMode" signature="meteringMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMeteringModeSupported" fullname="QCameraExposure::isMeteringModeSupported" href="qcameraexposure.html#isMeteringModeSupported" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMeteringModeSupported(MeteringMode mode) const">
                <parameter left="MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isoSensitivity" fullname="QCameraExposure::isoSensitivity" href="qcameraexposure.html#isoSensitivity-prop" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="isoSensitivity" type="int" signature="isoSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedIsoSensitivities" fullname="QCameraExposure::supportedIsoSensitivities" href="qcameraexposure.html#supportedIsoSensitivities" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedIsoSensitivities(bool * continuous) const">
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="aperture" fullname="QCameraExposure::aperture" href="qcameraexposure.html#aperture-prop" location="qcameraexposure.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="aperture" type="qreal" signature="aperture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedApertures" fullname="QCameraExposure::supportedApertures" href="qcameraexposure.html#supportedApertures" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;qreal&gt;" signature="supportedApertures(bool * continuous) const">
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutterSpeed" fullname="QCameraExposure::shutterSpeed" href="qcameraexposure.html#shutterSpeed-prop" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="shutterSpeed" type="qreal" signature="shutterSpeed() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedShutterSpeeds" fullname="QCameraExposure::supportedShutterSpeeds" href="qcameraexposure.html#supportedShutterSpeeds" location="qcameraexposure.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;qreal&gt;" signature="supportedShutterSpeeds(bool * continuous) const">
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlashMode" fullname="QCameraExposure::setFlashMode" href="qcameraexposure.html#setFlashMode" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setFlashMode(QFlags&lt;QCameraExposure::FlashMode&gt; mode)">
                <parameter left="QFlags&lt;QCameraExposure::FlashMode&gt;" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureMode" fullname="QCameraExposure::setExposureMode" href="qcameraexposure.html#setExposureMode" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setExposureMode(ExposureMode mode)">
                <parameter left="ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureCompensation" fullname="QCameraExposure::setExposureCompensation" href="qcameraexposure.html#exposureCompensation-prop" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="exposureCompensation" type="void" signature="setExposureCompensation(qreal ev)">
                <parameter left="qreal" right="" name="ev" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMeteringMode" fullname="QCameraExposure::setMeteringMode" href="qcameraexposure.html#setMeteringMode" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setMeteringMode(MeteringMode mode)">
                <parameter left="MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualIsoSensitivity" fullname="QCameraExposure::setManualIsoSensitivity" href="qcameraexposure.html#isoSensitivity-prop" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="isoSensitivity" type="void" signature="setManualIsoSensitivity(int iso)">
                <parameter left="int" right="" name="iso" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoIsoSensitivity" fullname="QCameraExposure::setAutoIsoSensitivity" href="qcameraexposure.html#setAutoIsoSensitivity" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setAutoIsoSensitivity()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualAperture" fullname="QCameraExposure::setManualAperture" href="qcameraexposure.html#aperture-prop" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="aperture" type="void" signature="setManualAperture(qreal aperture)">
                <parameter left="qreal" right="" name="aperture" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoAperture" fullname="QCameraExposure::setAutoAperture" href="qcameraexposure.html#setAutoAperture" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setAutoAperture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualShutterSpeed" fullname="QCameraExposure::setManualShutterSpeed" href="qcameraexposure.html#shutterSpeed-prop" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="shutterSpeed" type="void" signature="setManualShutterSpeed(qreal seconds)">
                <parameter left="qreal" right="" name="seconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoShutterSpeed" fullname="QCameraExposure::setAutoShutterSpeed" href="qcameraexposure.html#setAutoShutterSpeed" location="qcameraexposure.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setAutoShutterSpeed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashReady" fullname="QCameraExposure::flashReady" href="qcameraexposure.html#flashReady" location="qcameraexposure.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="flashReady(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="apertureChanged" fullname="QCameraExposure::apertureChanged" href="qcameraexposure.html#apertureChanged" location="qcameraexposure.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="apertureChanged(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="apertureRangeChanged" fullname="QCameraExposure::apertureRangeChanged" href="qcameraexposure.html#apertureRangeChanged" location="qcameraexposure.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="apertureRangeChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutterSpeedChanged" fullname="QCameraExposure::shutterSpeedChanged" href="qcameraexposure.html#shutterSpeedChanged" location="qcameraexposure.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="shutterSpeedChanged(qreal speed)">
                <parameter left="qreal" right="" name="speed" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutterSpeedRangeChanged" fullname="QCameraExposure::shutterSpeedRangeChanged" href="qcameraexposure.html#shutterSpeedRangeChanged" location="qcameraexposure.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="shutterSpeedRangeChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isoSensitivityChanged" fullname="QCameraExposure::isoSensitivityChanged" href="qcameraexposure.html#isoSensitivityChanged" location="qcameraexposure.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="isoSensitivityChanged(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioFormat" href="qaudioformat.html" location="qaudioformat.h" bases="" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SampleType" fullname="QAudioFormat::SampleType" href="qaudioformat.html#SampleType-enum" location="qaudioformat.h">
                <value name="Unknown" value="0"/>
                <value name="SignedInt" value="1"/>
                <value name="UnSignedInt" value="2"/>
                <value name="Float" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Endian" fullname="QAudioFormat::Endian" href="qaudioformat.html#Endian-enum" location="qaudioformat.h">
                <value name="BigEndian" value="QSysInfo::BigEndian"/>
                <value name="LittleEndian" value="QSysInfo::LittleEndian"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioFormat" fullname="QAudioFormat::QAudioFormat" href="qaudioformat.html#QAudioFormat" location="qaudioformat.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioFormat" fullname="QAudioFormat::QAudioFormat" href="qaudioformat.html#QAudioFormat-2" location="qaudioformat.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioFormat(const QAudioFormat &amp; other)">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioFormat" fullname="QAudioFormat::~QAudioFormat" href="qaudioformat.html#dtor.QAudioFormat" location="qaudioformat.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAudioFormat::operator=" href="qaudioformat.html#operator=" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAudioFormat &amp;" signature="operator=(const QAudioFormat &amp; other)">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QAudioFormat::operator==" href="qaudioformat.html#operator==" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QAudioFormat &amp; other) const">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QAudioFormat::operator!=" href="qaudioformat.html#operator!=" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QAudioFormat &amp; other) const">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QAudioFormat::isValid" href="qaudioformat.html#isValid" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="obsolete" name="setFrequency" fullname="QAudioFormat::setFrequency" href="qaudioformat-obsolete.html#setFrequency" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="frequency" fullname="QAudioFormat::frequency" href="qaudioformat-obsolete.html#frequency" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleRate" fullname="QAudioFormat::setSampleRate" href="qaudioformat.html#setSampleRate" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleRate(int samplerate)">
                <parameter left="int" right="" name="samplerate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleRate" fullname="QAudioFormat::sampleRate" href="qaudioformat.html#sampleRate" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleRate() const"/>
            <function access="public" threadsafety="unspecified" status="obsolete" name="setChannels" fullname="QAudioFormat::setChannels" href="qaudioformat-obsolete.html#setChannels" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannels(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="obsolete" name="channels" fullname="QAudioFormat::channels" href="qaudioformat-obsolete.html#channels" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channels() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannelCount" fullname="QAudioFormat::setChannelCount" href="qaudioformat.html#setChannelCount" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannelCount(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channelCount" fullname="QAudioFormat::channelCount" href="qaudioformat.html#channelCount" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channelCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleSize" fullname="QAudioFormat::setSampleSize" href="qaudioformat.html#setSampleSize" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleSize(int sampleSize)">
                <parameter left="int" right="" name="sampleSize" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleSize" fullname="QAudioFormat::sampleSize" href="qaudioformat.html#sampleSize" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCodec" fullname="QAudioFormat::setCodec" href="qaudioformat.html#setCodec" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="codec" fullname="QAudioFormat::codec" href="qaudioformat.html#codec" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="codec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setByteOrder" fullname="QAudioFormat::setByteOrder" href="qaudioformat.html#setByteOrder" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setByteOrder(QAudioFormat::Endian byteOrder)">
                <parameter left="QAudioFormat::Endian" right="" name="byteOrder" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byteOrder" fullname="QAudioFormat::byteOrder" href="qaudioformat.html#byteOrder" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat::Endian" signature="byteOrder() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleType" fullname="QAudioFormat::setSampleType" href="qaudioformat.html#setSampleType" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleType(QAudioFormat::SampleType sampleType)">
                <parameter left="QAudioFormat::SampleType" right="" name="sampleType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleType" fullname="QAudioFormat::sampleType" href="qaudioformat.html#sampleType" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat::SampleType" signature="sampleType() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoAddress" href="qgeoaddress.html" location="qgeoaddress.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoAddress" fullname="QGeoAddress::QGeoAddress" href="qgeoaddress.html#QGeoAddress" location="qgeoaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoAddress()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoAddress" fullname="QGeoAddress::QGeoAddress" href="qgeoaddress.html#QGeoAddress-2" location="qgeoaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoAddress(const QGeoAddress &amp; other)">
                <parameter left="const QGeoAddress &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoAddress" fullname="QGeoAddress::~QGeoAddress" href="qgeoaddress.html#dtor.QGeoAddress" location="qgeoaddress.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoAddress()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoAddress::operator=" href="qgeoaddress.html#operator=" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoAddress &amp;" signature="operator=(const QGeoAddress &amp; address)">
                <parameter left="const QGeoAddress &amp;" right="" name="address" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGeoAddress::operator==" href="qgeoaddress.html#operator==" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGeoAddress &amp; other) const">
                <parameter left="const QGeoAddress &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGeoAddress::operator!=" href="qgeoaddress.html#operator!=" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGeoAddress &amp; other) const">
                <parameter left="const QGeoAddress &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="country" fullname="QGeoAddress::country" href="qgeoaddress.html#country" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="country() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCountry" fullname="QGeoAddress::setCountry" href="qgeoaddress.html#setCountry" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCountry(const QString &amp; country)">
                <parameter left="const QString &amp;" right="" name="country" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countryCode" fullname="QGeoAddress::countryCode" href="qgeoaddress.html#countryCode" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="countryCode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCountryCode" fullname="QGeoAddress::setCountryCode" href="qgeoaddress.html#setCountryCode" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCountryCode(const QString &amp; countryCode)">
                <parameter left="const QString &amp;" right="" name="countryCode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QGeoAddress::state" href="qgeoaddress.html#state" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setState" fullname="QGeoAddress::setState" href="qgeoaddress.html#setState" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setState(const QString &amp; state)">
                <parameter left="const QString &amp;" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="county" fullname="QGeoAddress::county" href="qgeoaddress.html#county" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="county() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCounty" fullname="QGeoAddress::setCounty" href="qgeoaddress.html#setCounty" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCounty(const QString &amp; county)">
                <parameter left="const QString &amp;" right="" name="county" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="city" fullname="QGeoAddress::city" href="qgeoaddress.html#city" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="city() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCity" fullname="QGeoAddress::setCity" href="qgeoaddress.html#setCity" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCity(const QString &amp; city)">
                <parameter left="const QString &amp;" right="" name="city" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="district" fullname="QGeoAddress::district" href="qgeoaddress.html#district" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="district() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDistrict" fullname="QGeoAddress::setDistrict" href="qgeoaddress.html#setDistrict" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDistrict(const QString &amp; district)">
                <parameter left="const QString &amp;" right="" name="district" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="thoroughfareName" fullname="QGeoAddress::thoroughfareName" href="qgeoaddress.html#thoroughfareName" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="thoroughfareName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setThoroughfareName" fullname="QGeoAddress::setThoroughfareName" href="qgeoaddress.html#setThoroughfareName" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setThoroughfareName(const QString &amp; thoroughfareName)">
                <parameter left="const QString &amp;" right="" name="thoroughfareName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="thoroughfareNumber" fullname="QGeoAddress::thoroughfareNumber" href="qgeoaddress.html#thoroughfareNumber" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="thoroughfareNumber() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setThoroughfareNumber" fullname="QGeoAddress::setThoroughfareNumber" href="qgeoaddress.html#setThoroughfareNumber" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setThoroughfareNumber(const QString &amp; thoroughfareNumber)">
                <parameter left="const QString &amp;" right="" name="thoroughfareNumber" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="postCode" fullname="QGeoAddress::postCode" href="qgeoaddress.html#postCode" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="postCode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPostCode" fullname="QGeoAddress::setPostCode" href="qgeoaddress.html#setPostCode" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPostCode(const QString &amp; postCode)">
                <parameter left="const QString &amp;" right="" name="postCode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="postOfficeBox" fullname="QGeoAddress::postOfficeBox" href="qgeoaddress.html#postOfficeBox" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="postOfficeBox() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPostOfficeBox" fullname="QGeoAddress::setPostOfficeBox" href="qgeoaddress.html#setPostOfficeBox" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPostOfficeBox(const QString &amp; postOfficeBox)">
                <parameter left="const QString &amp;" right="" name="postOfficeBox" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QGeoAddress::isEmpty" href="qgeoaddress.html#isEmpty" location="qgeoaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QGeoAddress::clear" href="qgeoaddress.html#clear" location="qgeoaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QTapReading" href="qtapreading.html" location="qtapsensor.h" bases="QSensorReading" module="">
            <contents name="qtapreading-units" title="QTapReading Units" level="2"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="tapDirection" fullname="QTapReading::tapDirection" href="qtapreading.html#tapDirection-prop" location="qtapsensor.h" type="TapDirection">
                <getter name="tapDirection"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="doubleTap" fullname="QTapReading::doubleTap" href="qtapreading.html#doubleTap-prop" location="qtapsensor.h" type="bool">
                <getter name="isDoubleTap"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="TapDirection" fullname="QTapReading::TapDirection" href="qtapreading.html#TapDirection-enum" location="qtapsensor.h">
                <value name="Undefined" value="0"/>
                <value name="X" value="0x0001"/>
                <value name="Y" value="0x0002"/>
                <value name="Z" value="0x0004"/>
                <value name="X_Pos" value="0x0011"/>
                <value name="Y_Pos" value="0x0022"/>
                <value name="Z_Pos" value="0x0044"/>
                <value name="X_Neg" value="0x0101"/>
                <value name="Y_Neg" value="0x0202"/>
                <value name="Z_Neg" value="0x0404"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="tapDirection" fullname="QTapReading::tapDirection" href="qtapreading.html#tapDirection-prop" location="qtapsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="tapDirection" type="TapDirection" signature="tapDirection() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTapDirection" fullname="QTapReading::setTapDirection" href="qtapreading.html#setTapDirection" location="qtapsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTapDirection(TapDirection tapDirection)">
                <parameter left="TapDirection" right="" name="tapDirection" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDoubleTap" fullname="QTapReading::isDoubleTap" href="qtapreading.html#doubleTap-prop" location="qtapsensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="doubleTap" type="bool" signature="isDoubleTap() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDoubleTap" fullname="QTapReading::setDoubleTap" href="qtapreading.html#setDoubleTap" location="qtapsensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDoubleTap(bool doubleTap)">
                <parameter left="bool" right="" name="doubleTap" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QTapFilter" href="qtapfilter.html" location="qtapsensor.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QTapFilter::filter" href="qtapfilter.html#filter" location="qtapsensor.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QTapReading * reading)">
                <parameter left="QTapReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QTapSensor" href="qtapsensor.html" location="qtapsensor.h" bases="QSensor" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="returnDoubleTapEvents" fullname="QTapSensor::returnDoubleTapEvents" href="qtapsensor.html#returnDoubleTapEvents-prop" location="qtapsensor.h" type="bool"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QTapSensor" fullname="QTapSensor::QTapSensor" href="qtapsensor.html#QTapSensor" location="qtapsensor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTapSensor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTapSensor" fullname="QTapSensor::~QTapSensor" href="qtapsensor.html#dtor.QTapSensor" location="qtapsensor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTapSensor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QTapSensor::reading" href="qtapsensor.html#reading" location="qtapsensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QTapReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QTapSensor::type" href="qtapsensor.html#type-var" location="qtapsensor.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactManager" href="qcontactmanager.html" location="qcontactmanager.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactManager" fullname="QContactManager::QContactManager" href="qcontactmanager.html#QContactManager" location="qcontactmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactManager(const QString &amp; managerName, const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="managerName" default="QString()"/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="0"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactManager" fullname="QContactManager::QContactManager" href="qcontactmanager.html#QContactManager-2" location="qcontactmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactManager(const QString &amp; managerName, int implementationVersion, const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="managerName" default=""/>
                <parameter left="int" right="" name="implementationVersion" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="0"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactManager" fullname="QContactManager::QContactManager" href="qcontactmanager.html#QContactManager-3" location="qcontactmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContactManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromUri" fullname="QContactManager::fromUri" href="qcontactmanager.html#fromUri" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContactManager *" signature="fromUri(const QString &amp; managerUri, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="managerUri" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactManager" fullname="QContactManager::~QContactManager" href="qcontactmanager.html#dtor.QContactManager" location="qcontactmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QContactManager::managerName" href="qcontactmanager.html#managerName" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QContactManager::managerParameters" href="qcontactmanager.html#managerParameters" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QContactManager::managerUri" href="qcontactmanager.html#managerUri" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QContactManager::managerVersion" href="qcontactmanager.html#managerVersion" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseUri" fullname="QContactManager::parseUri" href="qcontactmanager.html#parseUri" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="parseUri(const QString &amp; uri, QString * pManagerId, QMap&lt;QString, QString&gt; * pParams)">
                <parameter left="const QString &amp;" right="" name="uri" default=""/>
                <parameter left="QString *" right="" name="pManagerId" default=""/>
                <parameter left="QMap&lt;QString, QString&gt; *" right="" name="pParams" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="buildUri" fullname="QContactManager::buildUri" href="qcontactmanager.html#buildUri" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="buildUri(const QString &amp; managerName, const QMap&lt;QString, QString&gt; &amp; params, int implementationVersion)">
                <parameter left="const QString &amp;" right="" name="managerName" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="params" default=""/>
                <parameter left="int" right="" name="implementationVersion" default="-1"/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QContactManager::Error" href="qcontactmanager.html#Error-enum" location="qcontactmanager.h">
                <value name="NoError" value="0"/>
                <value name="DoesNotExistError" value="1"/>
                <value name="AlreadyExistsError" value="2"/>
                <value name="InvalidDetailError" value="3"/>
                <value name="InvalidRelationshipError" value="4"/>
                <value name="LockedError" value="5"/>
                <value name="DetailAccessError" value="6"/>
                <value name="PermissionsError" value="7"/>
                <value name="OutOfMemoryError" value="8"/>
                <value name="NotSupportedError" value="9"/>
                <value name="BadArgumentError" value="10"/>
                <value name="UnspecifiedError" value="11"/>
                <value name="VersionMismatchError" value="12"/>
                <value name="LimitReachedError" value="13"/>
                <value name="InvalidContactTypeError" value="14"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QContactManager::error" href="qcontactmanager.html#error" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactManager::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactIds" fullname="QContactManager::contactIds" href="qcontactmanager.html#contactIds" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactLocalId&gt;" signature="contactIds(const QList&lt;QContactSortOrder&gt; &amp; sortOrders) const">
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QContactSortOrder&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactIds" fullname="QContactManager::contactIds" href="qcontactmanager.html#contactIds-2" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QContactLocalId&gt;" signature="contactIds(const QContactFilter &amp; filter, const QList&lt;QContactSortOrder&gt; &amp; sortOrders) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QContactSortOrder&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contacts" fullname="QContactManager::contacts" href="qcontactmanager.html#contacts" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="contacts(const QList&lt;QContactSortOrder&gt; &amp; sortOrders, const QContactFetchHint &amp; fetchHint) const">
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QContactSortOrder&gt; ()"/>
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default="QContactFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contacts" fullname="QContactManager::contacts" href="qcontactmanager.html#contacts-2" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QContact&gt;" signature="contacts(const QContactFilter &amp; filter, const QList&lt;QContactSortOrder&gt; &amp; sortOrders, const QContactFetchHint &amp; fetchHint) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default="QList&lt;QContactSortOrder&gt; ()"/>
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default="QContactFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QContactManager::contact" href="qcontactmanager.html#contact" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContact" signature="contact(const QContactLocalId &amp; contactId, const QContactFetchHint &amp; fetchHint) const">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default="QContactFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveContact" fullname="QContactManager::saveContact" href="qcontactmanager.html#saveContact" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveContact(QContact * contact)">
                <parameter left="QContact *" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContact" fullname="QContactManager::removeContact" href="qcontactmanager.html#removeContact" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeContact(const QContactLocalId &amp; contactId)">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveContacts" fullname="QContactManager::saveContacts" href="qcontactmanager.html#saveContacts" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveContacts(QList&lt;QContact&gt; * contacts, QMap&lt;int, QContactManager::Error&gt; * errorMap)">
                <parameter left="QList&lt;QContact&gt; *" right="" name="contacts" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContacts" fullname="QContactManager::removeContacts" href="qcontactmanager.html#removeContacts" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeContacts(const QList&lt;QContactLocalId&gt; &amp; contactIds, QMap&lt;int, QContactManager::Error&gt; * errorMap)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compatibleContact" fullname="QContactManager::compatibleContact" href="qcontactmanager.html#compatibleContact" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContact" signature="compatibleContact(const QContact &amp; original)">
                <parameter left="const QContact &amp;" right="" name="original" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="synthesizedContactDisplayLabel" fullname="QContactManager::synthesizedContactDisplayLabel" href="qcontactmanager.html#synthesizedContactDisplayLabel" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="synthesizedContactDisplayLabel(const QContact &amp; contact) const">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="synthesizeContactDisplayLabel" fullname="QContactManager::synthesizeContactDisplayLabel" href="qcontactmanager.html#synthesizeContactDisplayLabel" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="void" signature="synthesizeContactDisplayLabel(QContact * contact) const">
                <parameter left="QContact *" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelfContactId" fullname="QContactManager::setSelfContactId" href="qcontactmanager.html#setSelfContactId" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSelfContactId(const QContactLocalId &amp; contactId)">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selfContactId" fullname="QContactManager::selfContactId" href="qcontactmanager.html#selfContactId" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactLocalId" signature="selfContactId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContactManager::relationships" href="qcontactmanager.html#relationships" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactRelationship&gt;" signature="relationships(const QContactId &amp; participantId, QContactRelationship::Role role) const">
                <parameter left="const QContactId &amp;" right="" name="participantId" default=""/>
                <parameter left="QContactRelationship::Role" right="" name="role" default="QContactRelationship::Either"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContactManager::relationships" href="qcontactmanager.html#relationships-2" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QContactRelationship&gt;" signature="relationships(const QString &amp; relationshipType, const QContactId &amp; participantId, QContactRelationship::Role role) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default="QString()"/>
                <parameter left="const QContactId &amp;" right="" name="participantId" default="QContactId()"/>
                <parameter left="QContactRelationship::Role" right="" name="role" default="QContactRelationship::Either"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveRelationship" fullname="QContactManager::saveRelationship" href="qcontactmanager.html#saveRelationship" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveRelationship(QContactRelationship * relationship)">
                <parameter left="QContactRelationship *" right="" name="relationship" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveRelationships" fullname="QContactManager::saveRelationships" href="qcontactmanager.html#saveRelationships" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveRelationships(QList&lt;QContactRelationship&gt; * relationships, QMap&lt;int, QContactManager::Error&gt; * errorMap)">
                <parameter left="QList&lt;QContactRelationship&gt; *" right="" name="relationships" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRelationship" fullname="QContactManager::removeRelationship" href="qcontactmanager.html#removeRelationship" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRelationship(const QContactRelationship &amp; relationship)">
                <parameter left="const QContactRelationship &amp;" right="" name="relationship" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRelationships" fullname="QContactManager::removeRelationships" href="qcontactmanager.html#removeRelationships" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRelationships(const QList&lt;QContactRelationship&gt; &amp; relationships, QMap&lt;int, QContactManager::Error&gt; * errorMap)">
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="relationships" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitions" fullname="QContactManager::detailDefinitions" href="qcontactmanager.html#detailDefinitions" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QContactDetailDefinition&gt;" signature="detailDefinitions(const QString &amp; contactType) const">
                <parameter left="const QString &amp;" right="" name="contactType" default="QContactType::TypeContact"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinition" fullname="QContactManager::detailDefinition" href="qcontactmanager.html#detailDefinition" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactDetailDefinition" signature="detailDefinition(const QString &amp; definitionName, const QString &amp; contactType) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default="QContactType::TypeContact"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveDetailDefinition" fullname="QContactManager::saveDetailDefinition" href="qcontactmanager.html#saveDetailDefinition" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveDetailDefinition(const QContactDetailDefinition &amp; def, const QString &amp; contactType)">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="def" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default="QContactType::TypeContact"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetailDefinition" fullname="QContactManager::removeDetailDefinition" href="qcontactmanager.html#removeDetailDefinition" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetailDefinition(const QString &amp; definitionName, const QString &amp; contactType)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default="QContactType::TypeContact"/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ManagerFeature" fullname="QContactManager::ManagerFeature" href="qcontactmanager.html#ManagerFeature-enum" location="qcontactmanager.h">
                <value name="Groups" value="0"/>
                <value name="ActionPreferences" value="1"/>
                <value name="MutableDefinitions" value="2"/>
                <value name="Relationships" value="3"/>
                <value name="ArbitraryRelationshipTypes" value="4"/>
                <value name="DetailOrdering" value="5"/>
                <value name="SelfContact" value="6"/>
                <value name="Anonymous" value="7"/>
                <value name="ChangeLogs" value="8"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QContactManager::hasFeature" href="qcontactmanager.html#hasFeature" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFeature(QContactManager::ManagerFeature feature, const QString &amp; contactType) const">
                <parameter left="QContactManager::ManagerFeature" right="" name="feature" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default="QContactType::TypeContact"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRelationshipTypeSupported" fullname="QContactManager::isRelationshipTypeSupported" href="qcontactmanager.html#isRelationshipTypeSupported" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRelationshipTypeSupported(const QString &amp; relationshipType, const QString &amp; contactType) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default="QContactType::TypeContact"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedDataTypes" fullname="QContactManager::supportedDataTypes" href="qcontactmanager.html#supportedDataTypes" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVariant::Type&gt;" signature="supportedDataTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFilterSupported" fullname="QContactManager::isFilterSupported" href="qcontactmanager.html#isFilterSupported" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFilterSupported(const QContactFilter &amp; filter) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedContactTypes" fullname="QContactManager::supportedContactTypes" href="qcontactmanager.html#supportedContactTypes" location="qcontactmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedContactTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableManagers" fullname="QContactManager::availableManagers" href="qcontactmanager.html#availableManagers" location="qcontactmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="availableManagers()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataChanged" fullname="QContactManager::dataChanged" href="qcontactmanager.html#dataChanged" location="qcontactmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactsAdded" fullname="QContactManager::contactsAdded" href="qcontactmanager.html#contactsAdded" location="qcontactmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contactsAdded(const QList&lt;QContactLocalId&gt; &amp; contactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactsChanged" fullname="QContactManager::contactsChanged" href="qcontactmanager.html#contactsChanged" location="qcontactmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contactsChanged(const QList&lt;QContactLocalId&gt; &amp; contactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactsRemoved" fullname="QContactManager::contactsRemoved" href="qcontactmanager.html#contactsRemoved" location="qcontactmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contactsRemoved(const QList&lt;QContactLocalId&gt; &amp; contactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipsAdded" fullname="QContactManager::relationshipsAdded" href="qcontactmanager.html#relationshipsAdded" location="qcontactmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="relationshipsAdded(const QList&lt;QContactLocalId&gt; &amp; affectedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="affectedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipsRemoved" fullname="QContactManager::relationshipsRemoved" href="qcontactmanager.html#relationshipsRemoved" location="qcontactmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="relationshipsRemoved(const QList&lt;QContactLocalId&gt; &amp; affectedContactIds)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="affectedContactIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selfContactIdChanged" fullname="QContactManager::selfContactIdChanged" href="qcontactmanager.html#selfContactIdChanged" location="qcontactmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selfContactIdChanged(const QContactLocalId &amp; oldId, const QContactLocalId &amp; newId)">
                <parameter left="const QContactLocalId &amp;" right="" name="oldId" default=""/>
                <parameter left="const QContactLocalId &amp;" right="" name="newId" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryIdFetchRequest" href="qlandmarkcategoryidfetchrequest.html" location="qlandmarkcategoryidfetchrequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryIdFetchRequest" fullname="QLandmarkCategoryIdFetchRequest::QLandmarkCategoryIdFetchRequest" href="qlandmarkcategoryidfetchrequest.html#QLandmarkCategoryIdFetchRequest" location="qlandmarkcategoryidfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkCategoryIdFetchRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkCategoryIdFetchRequest" fullname="QLandmarkCategoryIdFetchRequest::~QLandmarkCategoryIdFetchRequest" href="qlandmarkcategoryidfetchrequest.html#dtor.QLandmarkCategoryIdFetchRequest" location="qlandmarkcategoryidfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkCategoryIdFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryIds" fullname="QLandmarkCategoryIdFetchRequest::categoryIds" href="qlandmarkcategoryidfetchrequest.html#categoryIds" location="qlandmarkcategoryidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategoryId&gt;" signature="categoryIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QLandmarkCategoryIdFetchRequest::setSorting" href="qlandmarkcategoryidfetchrequest.html#setSorting" location="qlandmarkcategoryidfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QLandmarkNameSort &amp; nameSort)">
                <parameter left="const QLandmarkNameSort &amp;" right="" name="nameSort" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QLandmarkCategoryIdFetchRequest::sorting" href="qlandmarkcategoryidfetchrequest.html#sorting" location="qlandmarkcategoryidfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkNameSort" signature="sorting() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFilter" href="qorganizeritemfilter.html" location="qorganizeritemfilter.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFilter" fullname="QOrganizerItemFilter::QOrganizerItemFilter" href="qorganizeritemfilter.html#QOrganizerItemFilter" location="qorganizeritemfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemFilter" fullname="QOrganizerItemFilter::~QOrganizerItemFilter" href="qorganizeritemfilter.html#dtor.QOrganizerItemFilter" location="qorganizeritemfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFilter" fullname="QOrganizerItemFilter::QOrganizerItemFilter" href="qorganizeritemfilter.html#QOrganizerItemFilter-2" location="qorganizeritemfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemFilter::operator=" href="qorganizeritemfilter.html#operator=" location="qorganizeritemfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemFilter &amp;" signature="operator=(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterType" fullname="QOrganizerItemFilter::FilterType" href="qorganizeritemfilter.html#FilterType-enum" location="qorganizeritemfilter.h">
                <value name="InvalidFilter" value="0"/>
                <value name="OrganizerItemDetailFilter" value="1"/>
                <value name="OrganizerItemDetailRangeFilter" value="2"/>
                <value name="OrganizerItemDateTimePeriodFilter" value="3"/>
                <value name="ChangeLogFilter" value="4"/>
                <value name="ActionFilter" value="5"/>
                <value name="IntersectionFilter" value="6"/>
                <value name="UnionFilter" value="7"/>
                <value name="LocalIdFilter" value="8"/>
                <value name="DefaultFilter" value="9"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QOrganizerItemFilter::type" href="qorganizeritemfilter.html#type" location="qorganizeritemfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FilterType" signature="type() const"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MatchFlag" fullname="QOrganizerItemFilter::MatchFlag" href="qorganizeritemfilter.html#MatchFlag-enum" location="qorganizeritemfilter.h" typedef="QOrganizerItemFilter::MatchFlags">
                <value name="MatchExactly" value="Qt::MatchExactly"/>
                <value name="MatchContains" value="Qt::MatchContains"/>
                <value name="MatchStartsWith" value="Qt::MatchStartsWith"/>
                <value name="MatchEndsWith" value="Qt::MatchEndsWith"/>
                <value name="MatchFixedString" value="Qt::MatchFixedString"/>
                <value name="MatchCaseSensitive" value="Qt::MatchCaseSensitive"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="MatchFlags" fullname="QOrganizerItemFilter::MatchFlags" href="qorganizeritemfilter.html#MatchFlags-typedef" location="qorganizeritemfilter.h" enum="QOrganizerItemFilter::MatchFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOrganizerItemFilter::operator==" href="qorganizeritemfilter.html#operator==" location="qorganizeritemfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOrganizerItemFilter &amp; other) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QOrganizerItemFilter::operator!=" href="qorganizeritemfilter.html#operator!=" location="qorganizeritemfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QOrganizerItemFilter &amp; other) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QOrganizerItemFilter::d_ptr" href="qorganizeritemfilter.html#d_ptr-var" location="qorganizeritemfilter.h" type="QSharedDataPointer&lt;QOrganizerItemFilterPrivate&gt;" static="false"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" href="qorganizeritemfilter.html#operator&amp;-2" location="qorganizeritemfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" relates="QOrganizerItemFilter" type="const Q_ORGANIZER_EXPORT" signature="operator&amp;(const QOrganizerItemFilter &amp; left, const QOrganizerItemFilter &amp; right)">
            <parameter left="const QOrganizerItemFilter &amp;" right="" name="left" default=""/>
            <parameter left="const QOrganizerItemFilter &amp;" right="" name="right" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator|" href="qorganizeritemfilter.html#operator|-2" location="qorganizeritemfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" relates="QOrganizerItemFilter" type="const Q_ORGANIZER_EXPORT" signature="operator|(const QOrganizerItemFilter &amp; left, const QOrganizerItemFilter &amp; right)">
            <parameter left="const QOrganizerItemFilter &amp;" right="" name="left" default=""/>
            <parameter left="const QOrganizerItemFilter &amp;" right="" name="right" default=""/>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryId" href="qlandmarkcategoryid.html" location="qlandmarkcategoryid.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryId" fullname="QLandmarkCategoryId::QLandmarkCategoryId" href="qlandmarkcategoryid.html#QLandmarkCategoryId" location="qlandmarkcategoryid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkCategoryId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategoryId" fullname="QLandmarkCategoryId::QLandmarkCategoryId" href="qlandmarkcategoryid.html#QLandmarkCategoryId-2" location="qlandmarkcategoryid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkCategoryId(const QLandmarkCategoryId &amp; other)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkCategoryId" fullname="QLandmarkCategoryId::~QLandmarkCategoryId" href="qlandmarkcategoryid.html#dtor.QLandmarkCategoryId" location="qlandmarkcategoryid.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkCategoryId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QLandmarkCategoryId::isValid" href="qlandmarkcategoryid.html#isValid" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localId" fullname="QLandmarkCategoryId::localId" href="qlandmarkcategoryid.html#localId" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="localId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalId" fullname="QLandmarkCategoryId::setLocalId" href="qlandmarkcategoryid.html#setLocalId" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QLandmarkCategoryId::managerUri" href="qlandmarkcategoryid.html#managerUri" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManagerUri" fullname="QLandmarkCategoryId::setManagerUri" href="qlandmarkcategoryid.html#setManagerUri" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManagerUri(const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="uri" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QLandmarkCategoryId::operator=" href="qlandmarkcategoryid.html#operator=" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkCategoryId &amp;" signature="operator=(const QLandmarkCategoryId &amp; other)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QLandmarkCategoryId::operator==" href="qlandmarkcategoryid.html#operator==" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QLandmarkCategoryId &amp; other) const">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QLandmarkCategoryId::operator!=" href="qlandmarkcategoryid.html#operator!=" location="qlandmarkcategoryid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QLandmarkCategoryId &amp; other) const">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="other" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceSupportedFormatsInterface" href="qmediaservicesupportedformatsinterface.html" location="qmediaserviceproviderplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaServiceSupportedFormatsInterface" fullname="QMediaServiceSupportedFormatsInterface::~QMediaServiceSupportedFormatsInterface" href="qmediaservicesupportedformatsinterface.html#dtor.QMediaServiceSupportedFormatsInterface" location="qmediaserviceproviderplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaServiceSupportedFormatsInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasSupport" fullname="QMediaServiceSupportedFormatsInterface::hasSupport" href="qmediaservicesupportedformatsinterface.html#hasSupport" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::SupportEstimate" signature="hasSupport(const QString &amp; mimeType, const QStringList &amp; codecs) const">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""/>
                <parameter left="const QStringList &amp;" right="" name="codecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMimeTypes" fullname="QMediaServiceSupportedFormatsInterface::supportedMimeTypes" href="qmediaservicesupportedformatsinterface.html#supportedMimeTypes" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedMimeTypes() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceSupportedDevicesInterface" href="qmediaservicesupporteddevicesinterface.html" location="qmediaserviceproviderplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaServiceSupportedDevicesInterface" fullname="QMediaServiceSupportedDevicesInterface::~QMediaServiceSupportedDevicesInterface" href="qmediaservicesupporteddevicesinterface.html#dtor.QMediaServiceSupportedDevicesInterface" location="qmediaserviceproviderplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaServiceSupportedDevicesInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="devices" fullname="QMediaServiceSupportedDevicesInterface::devices" href="qmediaservicesupporteddevicesinterface.html#devices" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="devices(const QByteArray &amp; service) const">
                <parameter left="const QByteArray &amp;" right="" name="service" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceDescription" fullname="QMediaServiceSupportedDevicesInterface::deviceDescription" href="qmediaservicesupporteddevicesinterface.html#deviceDescription" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QString" signature="deviceDescription(const QByteArray &amp; service, const QByteArray &amp; device)">
                <parameter left="const QByteArray &amp;" right="" name="service" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMediaServiceFeaturesInterface" href="qmediaservicefeaturesinterface.html" location="qmediaserviceproviderplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaServiceFeaturesInterface" fullname="QMediaServiceFeaturesInterface::~QMediaServiceFeaturesInterface" href="qmediaservicefeaturesinterface.html#dtor.QMediaServiceFeaturesInterface" location="qmediaserviceproviderplugin.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaServiceFeaturesInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFeatures" fullname="QMediaServiceFeaturesInterface::supportedFeatures" href="qmediaservicefeaturesinterface.html#supportedFeatures" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaServiceProviderHint::Features" signature="supportedFeatures(const QByteArray &amp; service) const">
                <parameter left="const QByteArray &amp;" right="" name="service" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaServiceProviderPlugin" href="qmediaserviceproviderplugin.html" location="qmediaserviceproviderplugin.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="keys" fullname="QMediaServiceProviderPlugin::keys" href="qmediaserviceproviderplugin.html#keys" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="keys() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="create" fullname="QMediaServiceProviderPlugin::create" href="qmediaserviceproviderplugin.html#create" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QMediaService *" signature="create(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="release" fullname="QMediaServiceProviderPlugin::release" href="qmediaserviceproviderplugin.html#release" location="qmediaserviceproviderplugin.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="release(QMediaService * service)">
                <parameter left="QMediaService *" right="" name="service" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFeedbackActuator" href="qfeedbackactuator.html" location="qfeedbackactuator.h" bases="" module="QtFeedback">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Capability" fullname="QFeedbackActuator::Capability" href="qfeedbackactuator.html#Capability-enum" location="qfeedbackactuator.h">
                <value name="Envelope" value="0"/>
                <value name="Period" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QFeedbackActuator::State" href="qfeedbackactuator.html#State-enum" location="qfeedbackactuator.h">
                <value name="Busy" value="0"/>
                <value name="Ready" value="1"/>
                <value name="Unknown" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QFeedbackActuator" fullname="QFeedbackActuator::QFeedbackActuator" href="qfeedbackactuator.html#QFeedbackActuator" location="qfeedbackactuator.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QFeedbackActuator()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QFeedbackActuator::id" href="qfeedbackactuator.html#id" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="id() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QFeedbackActuator::isValid" href="qfeedbackactuator.html#isValid" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QFeedbackActuator::name" href="qfeedbackactuator.html#name" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QFeedbackActuator::state" href="qfeedbackactuator.html#state" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCapabilitySupported" fullname="QFeedbackActuator::isCapabilitySupported" href="qfeedbackactuator.html#isCapabilitySupported" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCapabilitySupported(Capability capability) const">
                <parameter left="Capability" right="" name="capability" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEnabled" fullname="QFeedbackActuator::isEnabled" href="qfeedbackactuator.html#isEnabled" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEnabled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEnabled" fullname="QFeedbackActuator::setEnabled" href="qfeedbackactuator.html#setEnabled" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actuators" fullname="QFeedbackActuator::actuators" href="qfeedbackactuator.html#actuators" location="qfeedbackactuator.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QFeedbackActuator&gt;" signature="actuators()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinition" href="qcontactdetaildefinition.html" location="qcontactdetaildefinition.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinition" fullname="QContactDetailDefinition::QContactDetailDefinition" href="qcontactdetaildefinition.html#QContactDetailDefinition" location="qcontactdetaildefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetailDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactDetailDefinition" fullname="QContactDetailDefinition::~QContactDetailDefinition" href="qcontactdetaildefinition.html#dtor.QContactDetailDefinition" location="qcontactdetaildefinition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactDetailDefinition()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinition" fullname="QContactDetailDefinition::QContactDetailDefinition" href="qcontactdetaildefinition.html#QContactDetailDefinition-2" location="qcontactdetaildefinition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactDetailDefinition(const QContactDetailDefinition &amp; other)">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactDetailDefinition::operator=" href="qcontactdetaildefinition.html#operator=" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactDetailDefinition &amp;" signature="operator=(const QContactDetailDefinition &amp; other)">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactDetailDefinition::operator==" href="qcontactdetaildefinition.html#operator==" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactDetailDefinition &amp; other) const">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactDetailDefinition::operator!=" href="qcontactdetaildefinition.html#operator!=" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactDetailDefinition &amp; other) const">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QContactDetailDefinition::isEmpty" href="qcontactdetaildefinition.html#isEmpty" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QContactDetailDefinition::setName" href="qcontactdetaildefinition.html#setName" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; definitionName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QContactDetailDefinition::name" href="qcontactdetaildefinition.html#name" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setUnique" fullname="QContactDetailDefinition::setUnique" href="qcontactdetaildefinition.html#setUnique" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setUnique(bool unique)">
                <parameter left="bool" right="" name="unique" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isUnique" fullname="QContactDetailDefinition::isUnique" href="qcontactdetaildefinition.html#isUnique" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isUnique() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFields" fullname="QContactDetailDefinition::setFields" href="qcontactdetaildefinition.html#setFields" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFields(const QMap&lt;QString, QContactDetailFieldDefinition&gt; &amp; fields)">
                <parameter left="const QMap&lt;QString, QContactDetailFieldDefinition&gt; &amp;" right="" name="fields" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fields" fullname="QContactDetailDefinition::fields" href="qcontactdetaildefinition.html#fields" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QContactDetailFieldDefinition&gt;" signature="fields() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertField" fullname="QContactDetailDefinition::insertField" href="qcontactdetaildefinition.html#insertField" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertField(const QString &amp; key, const QContactDetailFieldDefinition &amp; field)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QContactDetailFieldDefinition &amp;" right="" name="field" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeField" fullname="QContactDetailDefinition::removeField" href="qcontactdetaildefinition.html#removeField" location="qcontactdetaildefinition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeField(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaObject" href="qmediaobject.html" location="qmediaobject.h" bases="" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QMediaObject::notifyInterval" href="qmediaobject.html#notifyInterval-prop" location="qmediaobject.h" type="int">
                <getter name="notifyInterval"/>
                <setter name="setNotifyInterval"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaObject" fullname="QMediaObject::~QMediaObject" href="qmediaobject.html#dtor.QMediaObject" location="qmediaobject.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaObject()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QMediaObject::isAvailable" href="qmediaobject.html#isAvailable" location="qmediaobject.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityError" fullname="QMediaObject::availabilityError" href="qmediaobject.html#availabilityError" location="qmediaobject.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::AvailabilityError" signature="availabilityError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QMediaObject::service" href="qmediaobject.html#service" location="qmediaobject.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QMediaObject::notifyInterval" href="qmediaobject.html#notifyInterval-prop" location="qmediaobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="notifyInterval" type="int" signature="notifyInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotifyInterval" fullname="QMediaObject::setNotifyInterval" href="qmediaobject.html#notifyInterval-prop" location="qmediaobject.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="notifyInterval" type="void" signature="setNotifyInterval(int milliSeconds)">
                <parameter left="int" right="" name="milliSeconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bind" fullname="QMediaObject::bind" href="qmediaobject.html#bind" location="qmediaobject.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="bind(QObject * object)">
                <parameter left="QObject *" right="" name="object" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unbind" fullname="QMediaObject::unbind" href="qmediaobject.html#unbind" location="qmediaobject.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="unbind(QObject * object)">
                <parameter left="QObject *" right="" name="object" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataAvailable" fullname="QMediaObject::isMetaDataAvailable" href="qmediaobject.html#isMetaDataAvailable" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMetaDataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QMediaObject::metaData" href="qmediaobject.html#metaData" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metaData(QtMultimediaKit::MetaData key) const">
                <parameter left="QtMultimediaKit::MetaData" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableMetaData" fullname="QMediaObject::availableMetaData" href="qmediaobject.html#availableMetaData" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtMultimediaKit::MetaData&gt;" signature="availableMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="extendedMetaData" fullname="QMediaObject::extendedMetaData" href="qmediaobject.html#extendedMetaData" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="extendedMetaData(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableExtendedMetaData" fullname="QMediaObject::availableExtendedMetaData" href="qmediaobject.html#availableExtendedMetaData" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="availableExtendedMetaData() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyIntervalChanged" fullname="QMediaObject::notifyIntervalChanged" href="qmediaobject.html#notifyIntervalChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notifyIntervalChanged(int milliseconds)">
                <parameter left="int" right="" name="milliseconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailableChanged" fullname="QMediaObject::metaDataAvailableChanged" href="qmediaobject.html#metaDataAvailableChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QMediaObject::metaDataChanged" href="qmediaobject.html#metaDataChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityChanged" fullname="QMediaObject::availabilityChanged" href="qmediaobject.html#availabilityChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availabilityChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaObject" fullname="QMediaObject::QMediaObject" href="qmediaobject.html#QMediaObject" location="qmediaobject.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaObject(QObject * parent, QMediaService * service)">
                <parameter left="QObject *" right="" name="parent" default=""/>
                <parameter left="QMediaService *" right="" name="service" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addPropertyWatch" fullname="QMediaObject::addPropertyWatch" href="qmediaobject.html#addPropertyWatch" location="qmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addPropertyWatch(QByteArray const &amp; name)">
                <parameter left="QByteArray const &amp;" right="" name="name" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="removePropertyWatch" fullname="QMediaObject::removePropertyWatch" href="qmediaobject.html#removePropertyWatch" location="qmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removePropertyWatch(QByteArray const &amp; name)">
                <parameter left="QByteArray const &amp;" right="" name="name" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaObject::d_ptr" href="qmediaobject.html#d_ptr-var" location="qmediaobject.h" type="QMediaObjectPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractGallery" href="qabstractgallery.html" location="qabstractgallery.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractGallery" fullname="QAbstractGallery::QAbstractGallery" href="qabstractgallery.html#QAbstractGallery" location="qabstractgallery.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractGallery(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractGallery" fullname="QAbstractGallery::~QAbstractGallery" href="qabstractgallery.html#dtor.QAbstractGallery" location="qabstractgallery.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractGallery()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRequestSupported" fullname="QAbstractGallery::isRequestSupported" href="qabstractgallery.html#isRequestSupported" location="qabstractgallery.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRequestSupported(QGalleryAbstractRequest::Type type) const">
                <parameter left="QGalleryAbstractRequest::Type" right="" name="type" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="createResponse" fullname="QAbstractGallery::createResponse" href="qabstractgallery.html#createResponse" location="qabstractgallery.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QGalleryAbstractResponse *" signature="createResponse(QGalleryAbstractRequest * request)">
                <parameter left="QGalleryAbstractRequest *" right="" name="request" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QAbstractGallery::d_ptr" href="qabstractgallery.html#d_ptr-var" location="qabstractgallery.h" type="QScopedPointer&lt;QAbstractGalleryPrivate&gt;" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageAddress" href="qmessageaddress.html" location="qmessageaddress.h" bases="" module="QtMessaging">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QMessageAddress::Type" href="qmessageaddress.html#Type-enum" location="qmessageaddress.h">
                <value name="System" value="1"/>
                <value name="Phone" value="2"/>
                <value name="Email" value="3"/>
                <value name="InstantMessage" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAddress" fullname="QMessageAddress::QMessageAddress" href="qmessageaddress.html#QMessageAddress" location="qmessageaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageAddress()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAddress" fullname="QMessageAddress::QMessageAddress" href="qmessageaddress.html#QMessageAddress-2" location="qmessageaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageAddress(Type type, const QString &amp; addressee)">
                <parameter left="Type" right="" name="type" default=""/>
                <parameter left="const QString &amp;" right="" name="addressee" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAddress" fullname="QMessageAddress::QMessageAddress" href="qmessageaddress.html#QMessageAddress-3" location="qmessageaddress.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMessageAddress(const QMessageAddress &amp; other)">
                <parameter left="const QMessageAddress &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageAddress" fullname="QMessageAddress::~QMessageAddress" href="qmessageaddress.html#dtor.QMessageAddress" location="qmessageaddress.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageAddress()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMessageAddress::type" href="qmessageaddress.html#type" location="qmessageaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QMessageAddress::setType" href="qmessageaddress.html#setType" location="qmessageaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(Type type)">
                <parameter left="Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addressee" fullname="QMessageAddress::addressee" href="qmessageaddress.html#addressee" location="qmessageaddress.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="addressee() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAddressee" fullname="QMessageAddress::setAddressee" href="qmessageaddress.html#setAddressee" location="qmessageaddress.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAddressee(const QString &amp; addressee)">
                <parameter left="const QString &amp;" right="" name="addressee" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseEmailAddress" fullname="QMessageAddress::parseEmailAddress" href="qmessageaddress.html#parseEmailAddress" location="qmessageaddress.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="parseEmailAddress(const QString &amp; emailAddress, QString * name, QString * address, QString * suffix, bool * startDelimeterFound, bool * endDelimeterFound)">
                <parameter left="const QString &amp;" right="" name="emailAddress" default=""/>
                <parameter left="QString *" right="" name="name" default=""/>
                <parameter left="QString *" right="" name="address" default=""/>
                <parameter left="QString *" right="" name="suffix" default="0"/>
                <parameter left="bool *" right="" name="startDelimeterFound" default="0"/>
                <parameter left="bool *" right="" name="endDelimeterFound" default="0"/>
            </function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMessageAddressList" href="#QMessageAddressList-typedef" location="qmessageaddress.h"/>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteRequest" href="qgeorouterequest.html" location="qgeorouterequest.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="TravelMode" fullname="QGeoRouteRequest::TravelMode" href="qgeorouterequest.html#TravelMode-enum" location="qgeorouterequest.h" typedef="QGeoRouteRequest::TravelModes">
                <value name="CarTravel" value="0x0001"/>
                <value name="PedestrianTravel" value="0x0002"/>
                <value name="BicycleTravel" value="0x0004"/>
                <value name="PublicTransitTravel" value="0x0008"/>
                <value name="TruckTravel" value="0x0010"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="TravelModes" fullname="QGeoRouteRequest::TravelModes" href="qgeorouterequest.html#TravelModes-typedef" location="qgeorouterequest.h" enum="QGeoRouteRequest::TravelMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AvoidFeatureType" fullname="QGeoRouteRequest::AvoidFeatureType" href="qgeorouterequest.html#AvoidFeatureType-enum" location="qgeorouterequest.h" typedef="QGeoRouteRequest::AvoidFeatureTypes">
                <value name="AvoidNothing" value="0x00000000"/>
                <value name="AvoidTolls" value="0x00000001"/>
                <value name="AvoidHighways" value="0x00000002"/>
                <value name="AvoidPublicTransit" value="0x00000004"/>
                <value name="AvoidFerries" value="0x00000008"/>
                <value name="AvoidTunnels" value="0x00000010"/>
                <value name="AvoidDirtRoads" value="0x00000020"/>
                <value name="AvoidPark" value="0x00000040"/>
                <value name="AvoidMotorPoolLanes" value="0x00000080"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="AvoidFeatureTypes" fullname="QGeoRouteRequest::AvoidFeatureTypes" href="qgeorouterequest.html#AvoidFeatureTypes-typedef" location="qgeorouterequest.h" enum="QGeoRouteRequest::AvoidFeatureType"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RouteOptimization" fullname="QGeoRouteRequest::RouteOptimization" href="qgeorouterequest.html#RouteOptimization-enum" location="qgeorouterequest.h" typedef="QGeoRouteRequest::RouteOptimizations">
                <value name="ShortestRoute" value="0x0001"/>
                <value name="FastestRoute" value="0x0002"/>
                <value name="MostEconomicRoute" value="0x0004"/>
                <value name="MostScenicRoute" value="0x0008"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="RouteOptimizations" fullname="QGeoRouteRequest::RouteOptimizations" href="qgeorouterequest.html#RouteOptimizations-typedef" location="qgeorouterequest.h" enum="QGeoRouteRequest::RouteOptimization"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="SegmentDetail" fullname="QGeoRouteRequest::SegmentDetail" href="qgeorouterequest.html#SegmentDetail-enum" location="qgeorouterequest.h" typedef="QGeoRouteRequest::SegmentDetails">
                <value name="NoSegmentData" value="0x0000"/>
                <value name="BasicSegmentData" value="0x0001"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="SegmentDetails" fullname="QGeoRouteRequest::SegmentDetails" href="qgeorouterequest.html#SegmentDetails-typedef" location="qgeorouterequest.h" enum="QGeoRouteRequest::SegmentDetail"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="InstructionDetail" fullname="QGeoRouteRequest::InstructionDetail" href="qgeorouterequest.html#InstructionDetail-enum" location="qgeorouterequest.h" typedef="QGeoRouteRequest::InstructionDetails">
                <value name="NoInstructions" value="0x0000"/>
                <value name="BasicInstructions" value="0x0001"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="InstructionDetails" fullname="QGeoRouteRequest::InstructionDetails" href="qgeorouterequest.html#InstructionDetails-typedef" location="qgeorouterequest.h" enum="QGeoRouteRequest::InstructionDetail"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteRequest" fullname="QGeoRouteRequest::QGeoRouteRequest" href="qgeorouterequest.html#QGeoRouteRequest" location="qgeorouterequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoRouteRequest(const QList&lt;QGeoCoordinate&gt; &amp; waypoints)">
                <parameter left="const QList&lt;QGeoCoordinate&gt; &amp;" right="" name="waypoints" default="QList&lt;QGeoCoordinate&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteRequest" fullname="QGeoRouteRequest::QGeoRouteRequest" href="qgeorouterequest.html#QGeoRouteRequest-2" location="qgeorouterequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoRouteRequest(const QGeoCoordinate &amp; origin, const QGeoCoordinate &amp; destination)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="origin" default=""/>
                <parameter left="const QGeoCoordinate &amp;" right="" name="destination" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRouteRequest" fullname="QGeoRouteRequest::QGeoRouteRequest" href="qgeorouterequest.html#QGeoRouteRequest-3" location="qgeorouterequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QGeoRouteRequest(const QGeoRouteRequest &amp; other)">
                <parameter left="const QGeoRouteRequest &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoRouteRequest" fullname="QGeoRouteRequest::~QGeoRouteRequest" href="qgeorouterequest.html#dtor.QGeoRouteRequest" location="qgeorouterequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoRouteRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoRouteRequest::operator=" href="qgeorouterequest.html#operator=" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoRouteRequest &amp;" signature="operator=(const QGeoRouteRequest &amp; other)">
                <parameter left="const QGeoRouteRequest &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWaypoints" fullname="QGeoRouteRequest::setWaypoints" href="qgeorouterequest.html#setWaypoints" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWaypoints(const QList&lt;QGeoCoordinate&gt; &amp; waypoints)">
                <parameter left="const QList&lt;QGeoCoordinate&gt; &amp;" right="" name="waypoints" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waypoints" fullname="QGeoRouteRequest::waypoints" href="qgeorouterequest.html#waypoints" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoCoordinate&gt;" signature="waypoints() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExcludeAreas" fullname="QGeoRouteRequest::setExcludeAreas" href="qgeorouterequest.html#setExcludeAreas" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExcludeAreas(const QList&lt;QGeoBoundingBox&gt; &amp; areas)">
                <parameter left="const QList&lt;QGeoBoundingBox&gt; &amp;" right="" name="areas" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="excludeAreas" fullname="QGeoRouteRequest::excludeAreas" href="qgeorouterequest.html#excludeAreas" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoBoundingBox&gt;" signature="excludeAreas() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNumberAlternativeRoutes" fullname="QGeoRouteRequest::setNumberAlternativeRoutes" href="qgeorouterequest.html#setNumberAlternativeRoutes" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNumberAlternativeRoutes(int alternatives)">
                <parameter left="int" right="" name="alternatives" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="numberAlternativeRoutes" fullname="QGeoRouteRequest::numberAlternativeRoutes" href="qgeorouterequest.html#numberAlternativeRoutes" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="numberAlternativeRoutes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTravelModes" fullname="QGeoRouteRequest::setTravelModes" href="qgeorouterequest.html#setTravelModes" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTravelModes(QFlags&lt;QGeoRouteRequest::TravelMode&gt; travelModes)">
                <parameter left="QFlags&lt;QGeoRouteRequest::TravelMode&gt;" right="" name="travelModes" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="travelModes" fullname="QGeoRouteRequest::travelModes" href="qgeorouterequest.html#travelModes" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="TravelModes" signature="travelModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAvoidFeatureTypes" fullname="QGeoRouteRequest::setAvoidFeatureTypes" href="qgeorouterequest.html#setAvoidFeatureTypes" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAvoidFeatureTypes(QFlags&lt;QGeoRouteRequest::AvoidFeatureType&gt; avoidFeatureTypes)">
                <parameter left="QFlags&lt;QGeoRouteRequest::AvoidFeatureType&gt;" right="" name="avoidFeatureTypes" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="avoidFeatureTypes" fullname="QGeoRouteRequest::avoidFeatureTypes" href="qgeorouterequest.html#avoidFeatureTypes" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="AvoidFeatureTypes" signature="avoidFeatureTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRouteOptimization" fullname="QGeoRouteRequest::setRouteOptimization" href="qgeorouterequest.html#setRouteOptimization" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRouteOptimization(QFlags&lt;QGeoRouteRequest::RouteOptimization&gt; optimization)">
                <parameter left="QFlags&lt;QGeoRouteRequest::RouteOptimization&gt;" right="" name="optimization" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="routeOptimization" fullname="QGeoRouteRequest::routeOptimization" href="qgeorouterequest.html#routeOptimization" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RouteOptimizations" signature="routeOptimization() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSegmentDetail" fullname="QGeoRouteRequest::setSegmentDetail" href="qgeorouterequest.html#setSegmentDetail" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSegmentDetail(SegmentDetail segmentDetail)">
                <parameter left="SegmentDetail" right="" name="segmentDetail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="segmentDetail" fullname="QGeoRouteRequest::segmentDetail" href="qgeorouterequest.html#segmentDetail" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SegmentDetail" signature="segmentDetail() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInstructionDetail" fullname="QGeoRouteRequest::setInstructionDetail" href="qgeorouterequest.html#setInstructionDetail" location="qgeorouterequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInstructionDetail(InstructionDetail instructionDetail)">
                <parameter left="InstructionDetail" right="" name="instructionDetail" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instructionDetail" fullname="QGeoRouteRequest::instructionDetail" href="qgeorouterequest.html#instructionDetail" location="qgeorouterequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="InstructionDetail" signature="instructionDetail() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitProperty" href="qversitproperty.html" location="qversitproperty.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ValueType" fullname="QVersitProperty::ValueType" href="qversitproperty.html#ValueType-enum" location="qversitproperty.h">
                <value name="PlainType" value="0"/>
                <value name="CompoundType" value="1"/>
                <value name="ListType" value="2"/>
                <value name="BinaryType" value="3"/>
                <value name="VersitDocumentType" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitProperty" fullname="QVersitProperty::QVersitProperty" href="qversitproperty.html#QVersitProperty" location="qversitproperty.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVersitProperty()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitProperty" fullname="QVersitProperty::QVersitProperty" href="qversitproperty.html#QVersitProperty-2" location="qversitproperty.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QVersitProperty(const QVersitProperty &amp; other)">
                <parameter left="const QVersitProperty &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitProperty" fullname="QVersitProperty::~QVersitProperty" href="qversitproperty.html#dtor.QVersitProperty" location="qversitproperty.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitProperty()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QVersitProperty::operator=" href="qversitproperty.html#operator=" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QVersitProperty &amp;" signature="operator=(const QVersitProperty &amp; other)">
                <parameter left="const QVersitProperty &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QVersitProperty::operator==" href="qversitproperty.html#operator==" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QVersitProperty &amp; other) const">
                <parameter left="const QVersitProperty &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QVersitProperty::operator!=" href="qversitproperty.html#operator!=" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QVersitProperty &amp; other) const">
                <parameter left="const QVersitProperty &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGroups" fullname="QVersitProperty::setGroups" href="qversitproperty.html#setGroups" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGroups(const QStringList &amp; groups)">
                <parameter left="const QStringList &amp;" right="" name="groups" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="groups" fullname="QVersitProperty::groups" href="qversitproperty.html#groups" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="groups() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QVersitProperty::setName" href="qversitproperty.html#setName" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QVersitProperty::name" href="qversitproperty.html#name" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertParameter" fullname="QVersitProperty::insertParameter" href="qversitproperty.html#insertParameter" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertParameter(const QString &amp; name, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeParameter" fullname="QVersitProperty::removeParameter" href="qversitproperty.html#removeParameter" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeParameter(const QString &amp; name, const QString &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QString &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeParameters" fullname="QVersitProperty::removeParameters" href="qversitproperty.html#removeParameters" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeParameters(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setParameters" fullname="QVersitProperty::setParameters" href="qversitproperty.html#setParameters" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setParameters(const QMultiHash&lt;QString, QString&gt; &amp; parameters)">
                <parameter left="const QMultiHash&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parameters" fullname="QVersitProperty::parameters" href="qversitproperty.html#parameters" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMultiHash&lt;QString, QString&gt;" signature="parameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QVersitProperty::setValue" href="qversitproperty.html#setValue" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="variantValue" fullname="QVersitProperty::variantValue" href="qversitproperty.html#variantValue" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="variantValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QVersitProperty::value" href="qversitproperty.html#value-2" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="T" signature="value() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QVersitProperty::value" href="qversitproperty.html#value" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="value() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValueType" fullname="QVersitProperty::setValueType" href="qversitproperty.html#setValueType" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setValueType(ValueType type)">
                <parameter left="ValueType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="valueType" fullname="QVersitProperty::valueType" href="qversitproperty.html#valueType" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ValueType" signature="valueType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QVersitProperty::isEmpty" href="qversitproperty.html#isEmpty" location="qversitproperty.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QVersitProperty::clear" href="qversitproperty.html#clear" location="qversitproperty.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QTelephonyCallList" href="qtelephonycalllist.html" location="qtelephonycalllist.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QTelephonyCallList" fullname="QTelephonyCallList::QTelephonyCallList" href="qtelephonycalllist.html#QTelephonyCallList" location="qtelephonycalllist.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QTelephonyCallList(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QTelephonyCallList" fullname="QTelephonyCallList::~QTelephonyCallList" href="qtelephonycalllist.html#dtor.QTelephonyCallList" location="qtelephonycalllist.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QTelephonyCallList()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeCallStatusChanged" fullname="QTelephonyCallList::activeCallStatusChanged" href="qtelephonycalllist.html#activeCallStatusChanged" location="qtelephonycalllist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeCallStatusChanged(const QTelephonyCallInfo &amp; call)">
                <parameter left="const QTelephonyCallInfo &amp;" right="" name="call" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeCallRemoved" fullname="QTelephonyCallList::activeCallRemoved" href="qtelephonycalllist.html#activeCallRemoved" location="qtelephonycalllist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeCallRemoved(const QTelephonyCallInfo &amp; call)">
                <parameter left="const QTelephonyCallInfo &amp;" right="" name="call" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeCallAdded" fullname="QTelephonyCallList::activeCallAdded" href="qtelephonycalllist.html#activeCallAdded" location="qtelephonycalllist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeCallAdded(const QTelephonyCallInfo &amp; call)">
                <parameter left="const QTelephonyCallInfo &amp;" right="" name="call" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeCalls" fullname="QTelephonyCallList::activeCalls" href="qtelephonycalllist.html#activeCalls" location="qtelephonycalllist.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QTelephonyCallInfo&gt;" signature="activeCalls(const QTelephonyCallInfo::CallType &amp; calltype) const">
                <parameter left="const QTelephonyCallInfo::CallType &amp;" right="" name="calltype" default="QTelephonyCallInfo::Any"/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d" fullname="QTelephonyCallList::d" href="qtelephonycalllist.html#d-var" location="qtelephonycalllist.h" type="QTelephonyCallListPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSystemDisplayInfo" href="qsystemdisplayinfo.html" location="qsystemdisplayinfo.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemDisplayInfo" fullname="QSystemDisplayInfo::QSystemDisplayInfo" href="qsystemdisplayinfo.html#QSystemDisplayInfo" location="qsystemdisplayinfo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemDisplayInfo(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemDisplayInfo" fullname="QSystemDisplayInfo::~QSystemDisplayInfo" href="qsystemdisplayinfo.html#dtor.QSystemDisplayInfo" location="qsystemdisplayinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemDisplayInfo()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DisplayOrientation" fullname="QSystemDisplayInfo::DisplayOrientation" href="qsystemdisplayinfo.html#DisplayOrientation-enum" location="qsystemdisplayinfo.h">
                <value name="Unknown" value="0"/>
                <value name="Landscape" value="1"/>
                <value name="Portrait" value="2"/>
                <value name="InvertedLandscape" value="3"/>
                <value name="InvertedPortrait" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayBrightness" fullname="QSystemDisplayInfo::displayBrightness" href="qsystemdisplayinfo.html#displayBrightness" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="displayBrightness(int screenNumber)">
                <parameter left="int" right="" name="screenNumber" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="colorDepth" fullname="QSystemDisplayInfo::colorDepth" href="qsystemdisplayinfo.html#colorDepth" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="colorDepth(int screenNumber)">
                <parameter left="int" right="" name="screenNumber" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getOrientation" fullname="QSystemDisplayInfo::getOrientation" href="qsystemdisplayinfo.html#getOrientation" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QSystemDisplayInfo::DisplayOrientation" signature="getOrientation(int screen)">
                <parameter left="int" right="" name="screen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QSystemDisplayInfo::contrast" href="qsystemdisplayinfo.html#contrast" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="float" signature="contrast(int screen)">
                <parameter left="int" right="" name="screen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getDPIWidth" fullname="QSystemDisplayInfo::getDPIWidth" href="qsystemdisplayinfo.html#getDPIWidth" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="getDPIWidth(int screen)">
                <parameter left="int" right="" name="screen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="getDPIHeight" fullname="QSystemDisplayInfo::getDPIHeight" href="qsystemdisplayinfo.html#getDPIHeight" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="getDPIHeight(int screen)">
                <parameter left="int" right="" name="screen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="physicalHeight" fullname="QSystemDisplayInfo::physicalHeight" href="qsystemdisplayinfo.html#physicalHeight" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="physicalHeight(int screen)">
                <parameter left="int" right="" name="screen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="physicalWidth" fullname="QSystemDisplayInfo::physicalWidth" href="qsystemdisplayinfo.html#physicalWidth" location="qsystemdisplayinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="int" signature="physicalWidth(int screen)">
                <parameter left="int" right="" name="screen" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactSaveRequest" href="qcontactsaverequest.html" location="qcontactsaverequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactSaveRequest" fullname="QContactSaveRequest::QContactSaveRequest" href="qcontactsaverequest.html#QContactSaveRequest" location="qcontactsaverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactSaveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactSaveRequest" fullname="QContactSaveRequest::~QContactSaveRequest" href="qcontactsaverequest.html#dtor.QContactSaveRequest" location="qcontactsaverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactSaveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContact" fullname="QContactSaveRequest::setContact" href="qcontactsaverequest.html#setContact" location="qcontactsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContact(const QContact &amp; contact)">
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContacts" fullname="QContactSaveRequest::setContacts" href="qcontactsaverequest.html#setContacts" location="qcontactsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContacts(const QList&lt;QContact&gt; &amp; contacts)">
                <parameter left="const QList&lt;QContact&gt; &amp;" right="" name="contacts" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contacts" fullname="QContactSaveRequest::contacts" href="qcontactsaverequest.html#contacts" location="qcontactsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="contacts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QContactSaveRequest::errorMap" href="qcontactsaverequest.html#errorMap" location="qcontactsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QContactManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemId" href="qorganizeritemid.html" location="qorganizeritemid.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemId" fullname="QOrganizerItemId::QOrganizerItemId" href="qorganizeritemid.html#QOrganizerItemId" location="qorganizeritemid.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemId" fullname="QOrganizerItemId::~QOrganizerItemId" href="qorganizeritemid.html#dtor.QOrganizerItemId" location="qorganizeritemid.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemId()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemId" fullname="QOrganizerItemId::QOrganizerItemId" href="qorganizeritemid.html#QOrganizerItemId-2" location="qorganizeritemid.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemId(const QOrganizerItemId &amp; other)">
                <parameter left="const QOrganizerItemId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QOrganizerItemId::operator=" href="qorganizeritemid.html#operator=" location="qorganizeritemid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QOrganizerItemId &amp;" signature="operator=(const QOrganizerItemId &amp; other)">
                <parameter left="const QOrganizerItemId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QOrganizerItemId::operator==" href="qorganizeritemid.html#operator==" location="qorganizeritemid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QOrganizerItemId &amp; other) const">
                <parameter left="const QOrganizerItemId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QOrganizerItemId::operator!=" href="qorganizeritemid.html#operator!=" location="qorganizeritemid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QOrganizerItemId &amp; other) const">
                <parameter left="const QOrganizerItemId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;" fullname="QOrganizerItemId::operator&lt;" href="qorganizeritemid.html#operator&lt;" location="qorganizeritemid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator&lt;(const QOrganizerItemId &amp; other) const">
                <parameter left="const QOrganizerItemId &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QOrganizerItemId::managerUri" href="qorganizeritemid.html#managerUri" location="qorganizeritemid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="localId" fullname="QOrganizerItemId::localId" href="qorganizeritemid.html#localId" location="qorganizeritemid.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemLocalId" signature="localId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManagerUri" fullname="QOrganizerItemId::setManagerUri" href="qorganizeritemid.html#setManagerUri" location="qorganizeritemid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManagerUri(const QString &amp; uri)">
                <parameter left="const QString &amp;" right="" name="uri" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLocalId" fullname="QOrganizerItemId::setLocalId" href="qorganizeritemid.html#setLocalId" location="qorganizeritemid.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLocalId(const QOrganizerItemLocalId &amp; id)">
                <parameter left="const QOrganizerItemLocalId &amp;" right="" name="id" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkManager" href="qlandmarkmanager.html" location="qlandmarkmanager.h" bases="" module="QtLocation">
            <contents name="retrieval-operations" title="Retrieval operations" level="1"/>
            <contents name="saving-and-deleting" title="Saving and deleting" level="2"/>
            <contents name="importing-and-exporting" title="Importing and exporting" level="2"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QLandmarkManager::Error" href="qlandmarkmanager.html#Error-enum" location="qlandmarkmanager.h">
                <value name="NoError" value="0"/>
                <value name="DoesNotExistError" value="1"/>
                <value name="AlreadyExistsError" value="2"/>
                <value name="LockedError" value="3"/>
                <value name="PermissionsError" value="4"/>
                <value name="OutOfMemoryError" value="5"/>
                <value name="VersionMismatchError" value="6"/>
                <value name="NotSupportedError" value="7"/>
                <value name="BadArgumentError" value="8"/>
                <value name="InvalidManagerError" value="9"/>
                <value name="ParsingError" value="10"/>
                <value name="UnknownError" value="11"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterSupportLevel" fullname="QLandmarkManager::FilterSupportLevel" href="qlandmarkmanager.html#FilterSupportLevel-enum" location="qlandmarkmanager.h">
                <value name="Native" value="0"/>
                <value name="Emulated" value="1"/>
                <value name="None" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="LandmarkFeature" fullname="QLandmarkManager::LandmarkFeature" href="qlandmarkmanager.html#LandmarkFeature-enum" location="qlandmarkmanager.h">
                <value name="GenericAttributes" value="0"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkManager" fullname="QLandmarkManager::QLandmarkManager" href="qlandmarkmanager.html#QLandmarkManager" location="qlandmarkmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkManager" fullname="QLandmarkManager::QLandmarkManager" href="qlandmarkmanager.html#QLandmarkManager-2" location="qlandmarkmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkManager(const QString &amp; managerName, const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="managerName" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="0"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkManager" fullname="QLandmarkManager::QLandmarkManager" href="qlandmarkmanager.html#QLandmarkManager-3" location="qlandmarkmanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QLandmarkManager(const QString &amp; managerName, int implementationVersion, const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="managerName" default=""/>
                <parameter left="int" right="" name="implementationVersion" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default="0"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkManager" fullname="QLandmarkManager::~QLandmarkManager" href="qlandmarkmanager.html#dtor.QLandmarkManager" location="qlandmarkmanager.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveLandmark" fullname="QLandmarkManager::saveLandmark" href="qlandmarkmanager.html#saveLandmark" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveLandmark(QLandmark * landmark)">
                <parameter left="QLandmark *" right="" name="landmark" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveLandmarks" fullname="QLandmarkManager::saveLandmarks" href="qlandmarkmanager.html#saveLandmarks" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveLandmarks(QList&lt;QLandmark&gt; * landmarks, QMap&lt;int, QLandmarkManager::Error&gt; * errorMap)">
                <parameter left="QList&lt;QLandmark&gt; *" right="" name="landmarks" default=""/>
                <parameter left="QMap&lt;int, QLandmarkManager::Error&gt; *" right="" name="errorMap" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeLandmark" fullname="QLandmarkManager::removeLandmark" href="qlandmarkmanager.html#removeLandmark" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeLandmark(const QLandmarkId &amp; landmarkId)">
                <parameter left="const QLandmarkId &amp;" right="" name="landmarkId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeLandmarks" fullname="QLandmarkManager::removeLandmarks" href="qlandmarkmanager.html#removeLandmarks" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeLandmarks(const QList&lt;QLandmarkId&gt; &amp; landmarkIds, QMap&lt;int, QLandmarkManager::Error&gt; * errorMap)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
                <parameter left="QMap&lt;int, QLandmarkManager::Error&gt; *" right="" name="errorMap" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveCategory" fullname="QLandmarkManager::saveCategory" href="qlandmarkmanager.html#saveCategory" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveCategory(QLandmarkCategory * category)">
                <parameter left="QLandmarkCategory *" right="" name="category" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeCategory" fullname="QLandmarkManager::removeCategory" href="qlandmarkmanager.html#removeCategory" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeCategory(const QLandmarkCategoryId &amp; categoryId)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="category" fullname="QLandmarkManager::category" href="qlandmarkmanager.html#category" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkCategory" signature="category(const QLandmarkCategoryId &amp; categoryId) const">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QLandmarkManager::categories" href="qlandmarkmanager.html#categories" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategory&gt;" signature="categories(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds) const">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categories" fullname="QLandmarkManager::categories" href="qlandmarkmanager.html#categories-2" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QLandmarkCategory&gt;" signature="categories(const QLandmarkNameSort &amp; nameSort) const">
                <parameter left="const QLandmarkNameSort &amp;" right="" name="nameSort" default="QLandmarkNameSort()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryIds" fullname="QLandmarkManager::categoryIds" href="qlandmarkmanager.html#categoryIds" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkCategoryId&gt;" signature="categoryIds(const QLandmarkNameSort &amp; nameSort) const">
                <parameter left="const QLandmarkNameSort &amp;" right="" name="nameSort" default="QLandmarkNameSort()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmark" fullname="QLandmarkManager::landmark" href="qlandmarkmanager.html#landmark" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmark" signature="landmark(const QLandmarkId &amp; landmarkId) const">
                <parameter left="const QLandmarkId &amp;" right="" name="landmarkId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarks" fullname="QLandmarkManager::landmarks" href="qlandmarkmanager.html#landmarks" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmark&gt;" signature="landmarks(const QLandmarkFilter &amp; filter, const QList&lt;QLandmarkSortOrder&gt; &amp; sortOrders, const QLandmarkFetchHint &amp; fetchHint) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default="QLandmarkFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarks" fullname="QLandmarkManager::landmarks" href="qlandmarkmanager.html#landmarks-2" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QLandmark&gt;" signature="landmarks(const QLandmarkFilter &amp; filter, const QLandmarkSortOrder &amp; sortOrder, const QLandmarkFetchHint &amp; fetchHint) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default="QLandmarkFilter()"/>
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="sortOrder" default="QLandmarkSortOrder()"/>
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default="QLandmarkFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarks" fullname="QLandmarkManager::landmarks" href="qlandmarkmanager.html#landmarks-3" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QList&lt;QLandmark&gt;" signature="landmarks(const QList&lt;QLandmarkId&gt; &amp; landmarkIds) const">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkManager::landmarkIds" href="qlandmarkmanager.html#landmarkIds" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds(const QLandmarkFilter &amp; filter, const QList&lt;QLandmarkSortOrder&gt; &amp; sortOrders, const QLandmarkFetchHint &amp; fetchHint) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default="QLandmarkFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkManager::landmarkIds" href="qlandmarkmanager.html#landmarkIds-2" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds(const QLandmarkFilter &amp; filter, const QLandmarkSortOrder &amp; sortOrder, const QLandmarkFetchHint &amp; fetchHint) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default="QLandmarkFilter()"/>
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="sortOrder" default="QLandmarkSortOrder()"/>
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default="QLandmarkFetchHint()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importLandmarks" fullname="QLandmarkManager::importLandmarks" href="qlandmarkmanager.html#importLandmarks" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="importLandmarks(QIODevice * device, const QByteArray &amp; format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="importLandmarks" fullname="QLandmarkManager::importLandmarks" href="qlandmarkmanager.html#importLandmarks-2" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="importLandmarks(const QString &amp; fileName, const QByteArray &amp; format)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportLandmarks" fullname="QLandmarkManager::exportLandmarks" href="qlandmarkmanager.html#exportLandmarks" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="exportLandmarks(QIODevice * device, const QByteArray &amp; format, QList&lt;QLandmarkId&gt; landmarkIds)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
                <parameter left="QList&lt;QLandmarkId&gt;" right="" name="landmarkIds" default="QList&lt;QLandmarkId&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportLandmarks" fullname="QLandmarkManager::exportLandmarks" href="qlandmarkmanager.html#exportLandmarks-2" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="exportLandmarks(const QString &amp; fileName, const QByteArray &amp; format, QList&lt;QLandmarkId&gt; landmarkIds)">
                <parameter left="const QString &amp;" right="" name="fileName" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="format" default="QByteArray()"/>
                <parameter left="QList&lt;QLandmarkId&gt;" right="" name="landmarkIds" default="QList&lt;QLandmarkId&gt; ()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QLandmarkManager::error" href="qlandmarkmanager.html#error" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QLandmarkManager::errorString" href="qlandmarkmanager.html#errorString" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="filterSupportLevel" fullname="QLandmarkManager::filterSupportLevel" href="qlandmarkmanager.html#filterSupportLevel" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FilterSupportLevel" signature="filterSupportLevel(const QLandmarkFilter &amp; filter) const">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFeatureSupported" fullname="QLandmarkManager::isFeatureSupported" href="qlandmarkmanager.html#isFeatureSupported" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFeatureSupported(LandmarkFeature feature) const">
                <parameter left="LandmarkFeature" right="" name="feature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QLandmarkManager::isReadOnly" href="qlandmarkmanager.html#isReadOnly" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QLandmarkManager::isReadOnly" href="qlandmarkmanager.html#isReadOnly-2" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="bool" signature="isReadOnly(const QLandmarkId &amp; landmarkId) const">
                <parameter left="const QLandmarkId &amp;" right="" name="landmarkId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QLandmarkManager::isReadOnly" href="qlandmarkmanager.html#isReadOnly-3" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="bool" signature="isReadOnly(const QLandmarkCategoryId &amp; categoryId) const">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="categoryId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QLandmarkManager::managerName" href="qlandmarkmanager.html#managerName" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QLandmarkManager::managerParameters" href="qlandmarkmanager.html#managerParameters" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QLandmarkManager::managerUri" href="qlandmarkmanager.html#managerUri" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QLandmarkManager::managerVersion" href="qlandmarkmanager.html#managerVersion" location="qlandmarkmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableManagers" fullname="QLandmarkManager::availableManagers" href="qlandmarkmanager.html#availableManagers" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="availableManagers()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="buildUri" fullname="QLandmarkManager::buildUri" href="qlandmarkmanager.html#buildUri" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="buildUri(const QString &amp; managerName, const QMap&lt;QString, QString&gt; &amp; params, int implementationVersion)">
                <parameter left="const QString &amp;" right="" name="managerName" default=""/>
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="params" default=""/>
                <parameter left="int" right="" name="implementationVersion" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fromUri" fullname="QLandmarkManager::fromUri" href="qlandmarkmanager.html#fromUri" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QLandmarkManager *" signature="fromUri(const QString &amp; storeUri, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="storeUri" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parseUri" fullname="QLandmarkManager::parseUri" href="qlandmarkmanager.html#parseUri" location="qlandmarkmanager.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="parseUri(const QString &amp; uri, QString * pManagerId, QMap&lt;QString, QString&gt; * pParams)">
                <parameter left="const QString &amp;" right="" name="uri" default=""/>
                <parameter left="QString *" right="" name="pManagerId" default=""/>
                <parameter left="QMap&lt;QString, QString&gt; *" right="" name="pParams" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarksAdded" fullname="QLandmarkManager::landmarksAdded" href="qlandmarkmanager.html#landmarksAdded" location="qlandmarkmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="landmarksAdded(const QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarksChanged" fullname="QLandmarkManager::landmarksChanged" href="qlandmarkmanager.html#landmarksChanged" location="qlandmarkmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="landmarksChanged(const QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarksRemoved" fullname="QLandmarkManager::landmarksRemoved" href="qlandmarkmanager.html#landmarksRemoved" location="qlandmarkmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="landmarksRemoved(const QList&lt;QLandmarkId&gt; &amp; landmarkIds)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="landmarkIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesAdded" fullname="QLandmarkManager::categoriesAdded" href="qlandmarkmanager.html#categoriesAdded" location="qlandmarkmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesAdded(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesChanged" fullname="QLandmarkManager::categoriesChanged" href="qlandmarkmanager.html#categoriesChanged" location="qlandmarkmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesChanged(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoriesRemoved" fullname="QLandmarkManager::categoriesRemoved" href="qlandmarkmanager.html#categoriesRemoved" location="qlandmarkmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="categoriesRemoved(const QList&lt;QLandmarkCategoryId&gt; &amp; categoryIds)">
                <parameter left="const QList&lt;QLandmarkCategoryId&gt; &amp;" right="" name="categoryIds" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoMapObject" href="qgeomapobject.html" location="qgeomapobject.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QGeoMapObject::Type" href="qgeomapobject.html#Type-enum" location="qgeomapobject.h">
                <value name="ContainerType" value="0"/>
                <value name="RectangleType" value="1"/>
                <value name="CircleType" value="2"/>
                <value name="PolylineType" value="3"/>
                <value name="PolygonType" value="4"/>
                <value name="MarkerType" value="5"/>
                <value name="GeoRouteType" value="6"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoMapObject" fullname="QGeoMapObject::QGeoMapObject" href="qgeomapobject.html#QGeoMapObject" location="qgeomapobject.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoMapObject(QGeoMapObject * parent)">
                <parameter left="QGeoMapObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoMapObject" fullname="QGeoMapObject::~QGeoMapObject" href="qgeomapobject.html#dtor.QGeoMapObject" location="qgeomapobject.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoMapObject()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QGeoMapObject::type" href="qgeomapobject.html#type" location="qgeomapobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZValue" fullname="QGeoMapObject::setZValue" href="qgeomapobject.html#setZValue" location="qgeomapobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setZValue(int zValue)">
                <parameter left="int" right="" name="zValue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zValue" fullname="QGeoMapObject::zValue" href="qgeomapobject.html#zValue" location="qgeomapobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="zValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVisible" fullname="QGeoMapObject::setVisible" href="qgeomapobject.html#setVisible" location="qgeomapobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVisible(bool visible)">
                <parameter left="bool" right="" name="visible" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVisible" fullname="QGeoMapObject::isVisible" href="qgeomapobject.html#isVisible" location="qgeomapobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isVisible() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="boundingBox" fullname="QGeoMapObject::boundingBox" href="qgeomapobject.html#boundingBox" location="qgeomapobject.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="boundingBox() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QGeoMapObject::contains" href="qgeomapobject.html#contains" location="qgeomapobject.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(const QGeoCoordinate &amp; coordinate) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentObject" fullname="QGeoMapObject::parentObject" href="qgeomapobject.html#parentObject" location="qgeomapobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoMapObject *" signature="parentObject() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addChildObject" fullname="QGeoMapObject::addChildObject" href="qgeomapobject.html#addChildObject" location="qgeomapobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addChildObject(QGeoMapObject * childObject)">
                <parameter left="QGeoMapObject *" right="" name="childObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeChildObject" fullname="QGeoMapObject::removeChildObject" href="qgeomapobject.html#removeChildObject" location="qgeomapobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeChildObject(QGeoMapObject * childObject)">
                <parameter left="QGeoMapObject *" right="" name="childObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="childObjects" fullname="QGeoMapObject::childObjects" href="qgeomapobject.html#childObjects" location="qgeomapobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="childObjects() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="childObjectAdded" fullname="QGeoMapObject::childObjectAdded" href="qgeomapobject.html#childObjectAdded" location="qgeomapobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="childObjectAdded(QGeoMapObject * childObject)">
                <parameter left="QGeoMapObject *" right="" name="childObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="childObjectRemoved" fullname="QGeoMapObject::childObjectRemoved" href="qgeomapobject.html#childObjectRemoved" location="qgeomapobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="childObjectRemoved(QGeoMapObject * childObject)">
                <parameter left="QGeoMapObject *" right="" name="childObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zValueChanged" fullname="QGeoMapObject::zValueChanged" href="qgeomapobject.html#zValueChanged" location="qgeomapobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="zValueChanged(int newZValue, int oldZValue)">
                <parameter left="int" right="" name="newZValue" default=""/>
                <parameter left="int" right="" name="oldZValue" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QGeoMapObject::d_ptr" href="qgeomapobject.html#d_ptr-var" location="qgeomapobject.h" type="QGeoMapObjectPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoSearchReply" href="qgeosearchreply.html" location="qgeosearchreply.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QGeoSearchReply::Error" href="qgeosearchreply.html#Error-enum" location="qgeosearchreply.h">
                <value name="NoError" value="0"/>
                <value name="EngineNotSetError" value="1"/>
                <value name="CommunicationError" value="2"/>
                <value name="ParseError" value="3"/>
                <value name="UnsupportedOptionError" value="4"/>
                <value name="UnknownError" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoSearchReply" fullname="QGeoSearchReply::QGeoSearchReply" href="qgeosearchreply.html#QGeoSearchReply" location="qgeosearchreply.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoSearchReply(Error error, const QString &amp; errorString, QObject * parent)">
                <parameter left="Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoSearchReply" fullname="QGeoSearchReply::~QGeoSearchReply" href="qgeosearchreply.html#dtor.QGeoSearchReply" location="qgeosearchreply.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoSearchReply()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QGeoSearchReply::isFinished" href="qgeosearchreply.html#isFinished" location="qgeosearchreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoSearchReply::error" href="qgeosearchreply.html#error" location="qgeosearchreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QGeoSearchReply::errorString" href="qgeosearchreply.html#errorString" location="qgeosearchreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bounds" fullname="QGeoSearchReply::bounds" href="qgeosearchreply.html#bounds" location="qgeosearchreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="bounds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="places" fullname="QGeoSearchReply::places" href="qgeosearchreply.html#places" location="qgeosearchreply.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoPlace&gt;" signature="places() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="abort" fullname="QGeoSearchReply::abort" href="qgeosearchreply.html#abort" location="qgeosearchreply.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="abort()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGeoSearchReply::finished" href="qgeosearchreply.html#finished" location="qgeosearchreply.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoSearchReply::error" href="qgeosearchreply.html#error-2" location="qgeosearchreply.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QGeoSearchReply::Error error, const QString &amp; errorString)">
                <parameter left="QGeoSearchReply::Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default="QString()"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QGeoSearchReply" fullname="QGeoSearchReply::QGeoSearchReply" href="qgeosearchreply.html#QGeoSearchReply-2" location="qgeosearchreply.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoSearchReply(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setError" fullname="QGeoSearchReply::setError" href="qgeosearchreply.html#setError" location="qgeosearchreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setError(Error error, const QString &amp; errorString)">
                <parameter left="Error" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setFinished" fullname="QGeoSearchReply::setFinished" href="qgeosearchreply.html#setFinished" location="qgeosearchreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFinished(bool finished)">
                <parameter left="bool" right="" name="finished" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setBounds" fullname="QGeoSearchReply::setBounds" href="qgeosearchreply.html#setBounds" location="qgeosearchreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBounds(const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addPlace" fullname="QGeoSearchReply::addPlace" href="qgeosearchreply.html#addPlace" location="qgeosearchreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addPlace(const QGeoPlace &amp; place)">
                <parameter left="const QGeoPlace &amp;" right="" name="place" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setPlaces" fullname="QGeoSearchReply::setPlaces" href="qgeosearchreply.html#setPlaces" location="qgeosearchreply.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaces(const QList&lt;QGeoPlace&gt; &amp; places)">
                <parameter left="const QList&lt;QGeoPlace&gt; &amp;" right="" name="places" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipFilter" href="qcontactrelationshipfilter.html" location="qcontactrelationshipfilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipFilter" fullname="QContactRelationshipFilter::QContactRelationshipFilter" href="qcontactrelationshipfilter.html#QContactRelationshipFilter" location="qcontactrelationshipfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactRelationshipFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipFilter" fullname="QContactRelationshipFilter::QContactRelationshipFilter" href="qcontactrelationshipfilter.html#QContactRelationshipFilter-2" location="qcontactrelationshipfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactRelationshipFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationshipType" fullname="QContactRelationshipFilter::setRelationshipType" href="qcontactrelationshipfilter.html#setRelationshipType" location="qcontactrelationshipfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationshipType(const QString &amp; relationshipType)">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelatedContactId" fullname="QContactRelationshipFilter::setRelatedContactId" href="qcontactrelationshipfilter.html#setRelatedContactId" location="qcontactrelationshipfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelatedContactId(const QContactId &amp; relatedContactId)">
                <parameter left="const QContactId &amp;" right="" name="relatedContactId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelatedContactRole" fullname="QContactRelationshipFilter::setRelatedContactRole" href="qcontactrelationshipfilter.html#setRelatedContactRole" location="qcontactrelationshipfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelatedContactRole(QContactRelationship::Role relatedContactRole)">
                <parameter left="QContactRelationship::Role" right="" name="relatedContactRole" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationshipType" fullname="QContactRelationshipFilter::relationshipType" href="qcontactrelationshipfilter.html#relationshipType" location="qcontactrelationshipfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="relationshipType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="relatedContactId" fullname="QContactRelationshipFilter::relatedContactId" href="qcontactrelationshipfilter.html#relatedContactId" location="qcontactrelationshipfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactId" signature="relatedContactId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="relatedContactRole" fullname="QContactRelationshipFilter::relatedContactRole" href="qcontactrelationshipfilter.html#relatedContactRole" location="qcontactrelationshipfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactRelationship::Role" signature="relatedContactRole() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFetchRequest" href="qlandmarkfetchrequest.html" location="qlandmarkfetchrequest.h" bases="QLandmarkAbstractRequest" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkFetchRequest" fullname="QLandmarkFetchRequest::QLandmarkFetchRequest" href="qlandmarkfetchrequest.html#QLandmarkFetchRequest" location="qlandmarkfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkFetchRequest(QLandmarkManager * manager, QObject * parent)">
                <parameter left="QLandmarkManager *" right="" name="manager" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkFetchRequest" fullname="QLandmarkFetchRequest::~QLandmarkFetchRequest" href="qlandmarkfetchrequest.html#dtor.QLandmarkFetchRequest" location="qlandmarkfetchrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkFetchRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QLandmarkFetchRequest::filter" href="qlandmarkfetchrequest.html#filter" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QLandmarkFetchRequest::setFilter" href="qlandmarkfetchrequest.html#setFilter" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QLandmarkFilter &amp; filter)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmarkIds" fullname="QLandmarkFetchRequest::setLandmarkIds" href="qlandmarkfetchrequest.html#setLandmarkIds" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmarkIds(const QList&lt;QLandmarkId&gt; &amp; ids)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="ids" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QLandmarkFetchRequest::sorting" href="qlandmarkfetchrequest.html#sorting" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkSortOrder&gt;" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QLandmarkFetchRequest::setSorting" href="qlandmarkfetchrequest.html#setSorting" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QList&lt;QLandmarkSortOrder&gt; &amp; sorting)">
                <parameter left="const QList&lt;QLandmarkSortOrder&gt; &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QLandmarkFetchRequest::setSorting" href="qlandmarkfetchrequest.html#setSorting-2" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setSorting(const QLandmarkSortOrder &amp; sorting)">
                <parameter left="const QLandmarkSortOrder &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fetchHint" fullname="QLandmarkFetchRequest::fetchHint" href="qlandmarkfetchrequest.html#fetchHint" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkFetchHint" signature="fetchHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFetchHint" fullname="QLandmarkFetchRequest::setFetchHint" href="qlandmarkfetchrequest.html#setFetchHint" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFetchHint(const QLandmarkFetchHint &amp; fetchHint)">
                <parameter left="const QLandmarkFetchHint &amp;" right="" name="fetchHint" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarks" fullname="QLandmarkFetchRequest::landmarks" href="qlandmarkfetchrequest.html#landmarks" location="qlandmarkfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmark&gt;" signature="landmarks() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactActionFilter" href="qcontactactionfilter.html" location="qcontactactionfilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactActionFilter" fullname="QContactActionFilter::QContactActionFilter" href="qcontactactionfilter.html#QContactActionFilter" location="qcontactactionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactActionFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactActionFilter" fullname="QContactActionFilter::QContactActionFilter" href="qcontactactionfilter.html#QContactActionFilter-2" location="qcontactactionfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactActionFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActionName" fullname="QContactActionFilter::setActionName" href="qcontactactionfilter.html#setActionName" location="qcontactactionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setActionName(const QString &amp; action)">
                <parameter left="const QString &amp;" right="" name="action" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVendor" fullname="QContactActionFilter::setVendor" href="qcontactactionfilter.html#setVendor" location="qcontactactionfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVendor(const QString &amp; vendorName, int implementationVersion)">
                <parameter left="const QString &amp;" right="" name="vendorName" default=""/>
                <parameter left="int" right="" name="implementationVersion" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actionName" fullname="QContactActionFilter::actionName" href="qcontactactionfilter.html#actionName" location="qcontactactionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="actionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="vendorName" fullname="QContactActionFilter::vendorName" href="qcontactactionfilter.html#vendorName" location="qcontactactionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="vendorName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="implementationVersion" fullname="QContactActionFilter::implementationVersion" href="qcontactactionfilter.html#implementationVersion" location="qcontactactionfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="implementationVersion() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoSearchManager" href="qgeosearchmanager.html" location="qgeosearchmanager.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SearchType" fullname="QGeoSearchManager::SearchType" href="qgeosearchmanager.html#SearchType-enum" location="qgeosearchmanager.h" typedef="QGeoSearchManager::SearchTypes">
                <value name="SearchNone" value="0x0000"/>
                <value name="SearchGeocode" value="0x0001"/>
                <value name="SearchLandmarks" value="0x0002"/>
                <value name="SearchAll" value="0xFFFF"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="SearchTypes" fullname="QGeoSearchManager::SearchTypes" href="qgeosearchmanager.html#SearchTypes-typedef" location="qgeosearchmanager.h" enum="QGeoSearchManager::SearchType"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoSearchManager" fullname="QGeoSearchManager::~QGeoSearchManager" href="qgeosearchmanager.html#dtor.QGeoSearchManager" location="qgeosearchmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoSearchManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QGeoSearchManager::managerName" href="qgeosearchmanager.html#managerName" location="qgeosearchmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QGeoSearchManager::managerParameters" href="qgeosearchmanager.html#managerParameters" location="qgeosearchmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QGeoSearchManager::managerVersion" href="qgeosearchmanager.html#managerVersion" location="qgeosearchmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="geocode" fullname="QGeoSearchManager::geocode" href="qgeosearchmanager.html#geocode" location="qgeosearchmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoSearchReply *" signature="geocode(const QGeoAddress &amp; address, const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QGeoAddress &amp;" right="" name="address" default=""/>
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default="QGeoBoundingBox()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="geocode" fullname="QGeoSearchManager::geocode" href="qgeosearchmanager.html#geocode-2" location="qgeosearchmanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QGeoSearchReply *" signature="geocode(const QGeoCoordinate &amp; coordinate, const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default="QGeoBoundingBox()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="placeSearch" fullname="QGeoSearchManager::placeSearch" href="qgeosearchmanager.html#placeSearch" location="qgeosearchmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoSearchReply *" signature="placeSearch(const QString &amp; searchString, QFlags&lt;QGeoSearchManager::SearchType&gt; searchTypes, const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QString &amp;" right="" name="searchString" default=""/>
                <parameter left="QFlags&lt;QGeoSearchManager::SearchType&gt;" right="" name="searchTypes" default="SearchTypes( SearchAll )"/>
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default="QGeoBoundingBox()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsGeocoding" fullname="QGeoSearchManager::supportsGeocoding" href="qgeosearchmanager.html#supportsGeocoding" location="qgeosearchmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsGeocoding() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSearchTypes" fullname="QGeoSearchManager::supportedSearchTypes" href="qgeosearchmanager.html#supportedSearchTypes" location="qgeosearchmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="SearchTypes" signature="supportedSearchTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultLandmarkManager" fullname="QGeoSearchManager::defaultLandmarkManager" href="qgeosearchmanager.html#defaultLandmarkManager" location="qgeosearchmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkManager *" signature="defaultLandmarkManager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAdditionalLandmarkManagers" fullname="QGeoSearchManager::setAdditionalLandmarkManagers" href="qgeosearchmanager.html#setAdditionalLandmarkManagers" location="qgeosearchmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAdditionalLandmarkManagers(const QList&lt;QLandmarkManager *&gt; &amp; landmarkManagers)">
                <parameter left="const QList&lt;QLandmarkManager *&gt; &amp;" right="" name="landmarkManagers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="additionalLandmarkManagers" fullname="QGeoSearchManager::additionalLandmarkManagers" href="qgeosearchmanager.html#additionalLandmarkManagers" location="qgeosearchmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkManager *&gt;" signature="additionalLandmarkManagers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAdditionalLandmarkManager" fullname="QGeoSearchManager::addAdditionalLandmarkManager" href="qgeosearchmanager.html#addAdditionalLandmarkManager" location="qgeosearchmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addAdditionalLandmarkManager(QLandmarkManager * landmarkManager)">
                <parameter left="QLandmarkManager *" right="" name="landmarkManager" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGeoSearchManager::finished" href="qgeosearchmanager.html#finished" location="qgeosearchmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished(QGeoSearchReply * reply)">
                <parameter left="QGeoSearchReply *" right="" name="reply" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoSearchManager::error" href="qgeosearchmanager.html#error" location="qgeosearchmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(QGeoSearchReply * reply, QGeoSearchReply::Error error, QString errorString)">
                <parameter left="QGeoSearchReply *" right="" name="reply" default=""/>
                <parameter left="QGeoSearchReply::Error" right="" name="error" default=""/>
                <parameter left="QString" right="" name="errorString" default="QString()"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountSortOrder" href="qmessageaccountsortorder.html" location="qmessageaccountsortorder.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountSortOrder" fullname="QMessageAccountSortOrder::QMessageAccountSortOrder" href="qmessageaccountsortorder.html#QMessageAccountSortOrder" location="qmessageaccountsortorder_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageAccountSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageAccountSortOrder" fullname="QMessageAccountSortOrder::QMessageAccountSortOrder" href="qmessageaccountsortorder.html#QMessageAccountSortOrder-2" location="qmessageaccountsortorder_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageAccountSortOrder(const QMessageAccountSortOrder &amp; other)">
                <parameter left="const QMessageAccountSortOrder &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageAccountSortOrder" fullname="QMessageAccountSortOrder::~QMessageAccountSortOrder" href="qmessageaccountsortorder.html#dtor.QMessageAccountSortOrder" location="qmessageaccountsortorder_maemo.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageAccountSortOrder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMessageAccountSortOrder::isEmpty" href="qmessageaccountsortorder.html#isEmpty" location="qmessageaccountsortorder_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMessageAccountSortOrder::isSupported" href="qmessageaccountsortorder.html#isSupported" location="qmessageaccountsortorder_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="byName" fullname="QMessageAccountSortOrder::byName" href="qmessageaccountsortorder.html#byName" location="qmessageaccountsortorder_maemo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageAccountSortOrder" signature="byName(Qt::SortOrder order)">
                <parameter left="Qt::SortOrder" right="" name="order" default="Qt::AscendingOrder"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactActionFactory" href="qcontactactionfactory.html" location="qcontactactionfactory.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactActionFactory" fullname="QContactActionFactory::~QContactActionFactory" href="qcontactactionfactory.html#dtor.QContactActionFactory" location="qcontactactionfactory.cpp" virtual="pure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactActionFactory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QContactActionFactory::name" href="qcontactactionfactory.html#name" location="qcontactactionfactory.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="actionDescriptors" fullname="QContactActionFactory::actionDescriptors" href="qcontactactionfactory.html#actionDescriptors" location="qcontactactionfactory.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactActionDescriptor&gt;" signature="actionDescriptors() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QContactActionFactory::instance" href="qcontactactionfactory.html#instance" location="qcontactactionfactory.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QContactAction *" signature="instance(const QContactActionDescriptor &amp; descriptor) const">
                <parameter left="const QContactActionDescriptor &amp;" right="" name="descriptor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actionMetadata" fullname="QContactActionFactory::actionMetadata" href="qcontactactionfactory.html#actionMetadata" location="qcontactactionfactory.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariantMap" signature="actionMetadata(const QContactActionDescriptor &amp; descriptor) const">
                <parameter left="const QContactActionDescriptor &amp;" right="" name="descriptor" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipSaveRequest" href="qcontactrelationshipsaverequest.html" location="qcontactrelationshipsaverequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactRelationshipSaveRequest" fullname="QContactRelationshipSaveRequest::QContactRelationshipSaveRequest" href="qcontactrelationshipsaverequest.html#QContactRelationshipSaveRequest" location="qcontactrelationshipsaverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactRelationshipSaveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactRelationshipSaveRequest" fullname="QContactRelationshipSaveRequest::~QContactRelationshipSaveRequest" href="qcontactrelationshipsaverequest.html#dtor.QContactRelationshipSaveRequest" location="qcontactrelationshipsaverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactRelationshipSaveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationship" fullname="QContactRelationshipSaveRequest::setRelationship" href="qcontactrelationshipsaverequest.html#setRelationship" location="qcontactrelationshipsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationship(const QContactRelationship &amp; contactRelationship)">
                <parameter left="const QContactRelationship &amp;" right="" name="contactRelationship" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRelationships" fullname="QContactRelationshipSaveRequest::setRelationships" href="qcontactrelationshipsaverequest.html#setRelationships" location="qcontactrelationshipsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRelationships(const QList&lt;QContactRelationship&gt; &amp; contactRelationships)">
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="contactRelationships" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContactRelationshipSaveRequest::relationships" href="qcontactrelationshipsaverequest.html#relationships" location="qcontactrelationshipsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactRelationship&gt;" signature="relationships() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QContactRelationshipSaveRequest::errorMap" href="qcontactrelationshipsaverequest.html#errorMap" location="qcontactrelationshipsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QContactManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWindowControl" href="qvideowindowcontrol.html" location="qvideowindowcontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWindowControl" fullname="QVideoWindowControl::~QVideoWindowControl" href="qvideowindowcontrol.html#dtor.QVideoWindowControl" location="qvideowindowcontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWindowControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="winId" fullname="QVideoWindowControl::winId" href="qvideowindowcontrol.html#winId" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="WId" signature="winId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWinId" fullname="QVideoWindowControl::setWinId" href="qvideowindowcontrol.html#setWinId" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setWinId(WId id)">
                <parameter left="WId" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayRect" fullname="QVideoWindowControl::displayRect" href="qvideowindowcontrol.html#displayRect" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRect" signature="displayRect() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayRect" fullname="QVideoWindowControl::setDisplayRect" href="qvideowindowcontrol.html#setDisplayRect" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDisplayRect(const QRect &amp; rect)">
                <parameter left="const QRect &amp;" right="" name="rect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFullScreen" fullname="QVideoWindowControl::isFullScreen" href="qvideowindowcontrol.html#isFullScreen" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFullScreen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFullScreen" fullname="QVideoWindowControl::setFullScreen" href="qvideowindowcontrol.html#setFullScreen" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFullScreen(bool fullScreen)">
                <parameter left="bool" right="" name="fullScreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repaint" fullname="QVideoWindowControl::repaint" href="qvideowindowcontrol.html#repaint" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="repaint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSize" fullname="QVideoWindowControl::nativeSize" href="qvideowindowcontrol.html#nativeSize" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="nativeSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatioMode" fullname="QVideoWindowControl::aspectRatioMode" href="qvideowindowcontrol.html#aspectRatioMode" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Qt::AspectRatioMode" signature="aspectRatioMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatioMode" fullname="QVideoWindowControl::setAspectRatioMode" href="qvideowindowcontrol.html#setAspectRatioMode" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAspectRatioMode(Qt::AspectRatioMode mode)">
                <parameter left="Qt::AspectRatioMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWindowControl::brightness" href="qvideowindowcontrol.html#brightness" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWindowControl::setBrightness" href="qvideowindowcontrol.html#setBrightness" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWindowControl::contrast" href="qvideowindowcontrol.html#contrast" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWindowControl::setContrast" href="qvideowindowcontrol.html#setContrast" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWindowControl::hue" href="qvideowindowcontrol.html#hue" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWindowControl::setHue" href="qvideowindowcontrol.html#setHue" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWindowControl::saturation" href="qvideowindowcontrol.html#saturation" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWindowControl::setSaturation" href="qvideowindowcontrol.html#setSaturation" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullScreenChanged" fullname="QVideoWindowControl::fullScreenChanged" href="qvideowindowcontrol.html#fullScreenChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fullScreenChanged(bool fullScreen)">
                <parameter left="bool" right="" name="fullScreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWindowControl::brightnessChanged" href="qvideowindowcontrol.html#brightnessChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWindowControl::contrastChanged" href="qvideowindowcontrol.html#contrastChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWindowControl::hueChanged" href="qvideowindowcontrol.html#hueChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWindowControl::saturationChanged" href="qvideowindowcontrol.html#saturationChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSizeChanged" fullname="QVideoWindowControl::nativeSizeChanged" href="qvideowindowcontrol.html#nativeSizeChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="nativeSizeChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVideoWindowControl" fullname="QVideoWindowControl::QVideoWindowControl" href="qvideowindowcontrol.html#QVideoWindowControl" location="qvideowindowcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWindowControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemManagerEngine" href="qorganizeritemmanagerengine.html" location="qorganizeritemmanagerengine.h" bases="" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemManagerEngine" fullname="QOrganizerItemManagerEngine::QOrganizerItemManagerEngine" href="qorganizeritemmanagerengine.html#QOrganizerItemManagerEngine" location="qorganizeritemmanagerengine.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemManagerEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QOrganizerItemManagerEngine::managerName" href="qorganizeritemmanagerengine.html#managerName" location="qorganizeritemmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QOrganizerItemManagerEngine::managerParameters" href="qorganizeritemmanagerengine.html#managerParameters" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QOrganizerItemManagerEngine::managerVersion" href="qorganizeritemmanagerengine.html#managerVersion" location="qorganizeritemmanagerengine.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerUri" fullname="QOrganizerItemManagerEngine::managerUri" href="qorganizeritemmanagerengine.html#managerUri" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemInstances" fullname="QOrganizerItemManagerEngine::itemInstances" href="qorganizeritemmanagerengine.html#itemInstances" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="itemInstances(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, const QOrganizerItemFetchHint &amp; fetchHint, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemInstances" fullname="QOrganizerItemManagerEngine::itemInstances" href="qorganizeritemmanagerengine.html#itemInstances-2" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QOrganizerItem&gt;" signature="itemInstances(const QOrganizerItem &amp; generator, const QDateTime &amp; periodStart, const QDateTime &amp; periodEnd, int maxCount, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItem &amp;" right="" name="generator" default=""/>
                <parameter left="const QDateTime &amp;" right="" name="periodStart" default=""/>
                <parameter left="const QDateTime &amp;" right="" name="periodEnd" default=""/>
                <parameter left="int" right="" name="maxCount" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemIds" fullname="QOrganizerItemManagerEngine::itemIds" href="qorganizeritemmanagerengine.html#itemIds" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemLocalId&gt;" signature="itemIds(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QOrganizerItemManagerEngine::items" href="qorganizeritemmanagerengine.html#items" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="items(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, const QOrganizerItemFetchHint &amp; fetchHint, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="item" fullname="QOrganizerItemManagerEngine::item" href="qorganizeritemmanagerengine.html#item" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QOrganizerItem" signature="item(const QOrganizerItemLocalId &amp; organizeritemId, const QOrganizerItemFetchHint &amp; fetchHint, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemLocalId &amp;" right="" name="organizeritemId" default=""/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveItem" fullname="QOrganizerItemManagerEngine::saveItem" href="qorganizeritemmanagerengine.html#saveItem" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveItem(QOrganizerItem * organizeritem, QOrganizerItemManager::Error * error)">
                <parameter left="QOrganizerItem *" right="" name="organizeritem" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItem" fullname="QOrganizerItemManagerEngine::removeItem" href="qorganizeritemmanagerengine.html#removeItem" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItem(const QOrganizerItemLocalId &amp; organizeritemId, QOrganizerItemManager::Error * error)">
                <parameter left="const QOrganizerItemLocalId &amp;" right="" name="organizeritemId" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveItems" fullname="QOrganizerItemManagerEngine::saveItems" href="qorganizeritemmanagerengine.html#saveItems" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveItems(QList&lt;QOrganizerItem&gt; * organizeritems, QMap&lt;int, QOrganizerItemManager::Error&gt; * errorMap, QOrganizerItemManager::Error * error)">
                <parameter left="QList&lt;QOrganizerItem&gt; *" right="" name="organizeritems" default=""/>
                <parameter left="QMap&lt;int, QOrganizerItemManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItems" fullname="QOrganizerItemManagerEngine::removeItems" href="qorganizeritemmanagerengine.html#removeItems" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItems(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds, QMap&lt;int, QOrganizerItemManager::Error&gt; * errorMap, QOrganizerItemManager::Error * error)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
                <parameter left="QMap&lt;int, QOrganizerItemManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compatibleItem" fullname="QOrganizerItemManagerEngine::compatibleItem" href="qorganizeritemmanagerengine.html#compatibleItem" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QOrganizerItem" signature="compatibleItem(const QOrganizerItem &amp; original, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItem &amp;" right="" name="original" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="validateItem" fullname="QOrganizerItemManagerEngine::validateItem" href="qorganizeritemmanagerengine.html#validateItem" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="validateItem(const QOrganizerItem &amp; organizeritem, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItem &amp;" right="" name="organizeritem" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="validateDefinition" fullname="QOrganizerItemManagerEngine::validateDefinition" href="qorganizeritemmanagerengine.html#validateDefinition" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="validateDefinition(const QOrganizerItemDetailDefinition &amp; definition, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="definition" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitions" fullname="QOrganizerItemManagerEngine::detailDefinitions" href="qorganizeritemmanagerengine.html#detailDefinitions" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QOrganizerItemDetailDefinition&gt;" signature="detailDefinitions(const QString &amp; organizeritemType, QOrganizerItemManager::Error * error) const">
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinition" fullname="QOrganizerItemManagerEngine::detailDefinition" href="qorganizeritemmanagerengine.html#detailDefinition" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemDetailDefinition" signature="detailDefinition(const QString &amp; definitionName, const QString &amp; organizeritemType, QOrganizerItemManager::Error * error) const">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveDetailDefinition" fullname="QOrganizerItemManagerEngine::saveDetailDefinition" href="qorganizeritemmanagerengine.html#saveDetailDefinition" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveDetailDefinition(const QOrganizerItemDetailDefinition &amp; def, const QString &amp; organizeritemType, QOrganizerItemManager::Error * error)">
                <parameter left="const QOrganizerItemDetailDefinition &amp;" right="" name="def" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetailDefinition" fullname="QOrganizerItemManagerEngine::removeDetailDefinition" href="qorganizeritemmanagerengine.html#removeDetailDefinition" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetailDefinition(const QString &amp; definitionName, const QString &amp; organizeritemType, QOrganizerItemManager::Error * error)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestDestroyed" fullname="QOrganizerItemManagerEngine::requestDestroyed" href="qorganizeritemmanagerengine.html#requestDestroyed" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="requestDestroyed(QOrganizerItemAbstractRequest * req)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startRequest" fullname="QOrganizerItemManagerEngine::startRequest" href="qorganizeritemmanagerengine.html#startRequest" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startRequest(QOrganizerItemAbstractRequest * req)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelRequest" fullname="QOrganizerItemManagerEngine::cancelRequest" href="qorganizeritemmanagerengine.html#cancelRequest" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="cancelRequest(QOrganizerItemAbstractRequest * req)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForRequestFinished" fullname="QOrganizerItemManagerEngine::waitForRequestFinished" href="qorganizeritemmanagerengine.html#waitForRequestFinished" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForRequestFinished(QOrganizerItemAbstractRequest * req, int msecs)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QOrganizerItemManagerEngine::hasFeature" href="qorganizeritemmanagerengine.html#hasFeature" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFeature(QOrganizerItemManager::ManagerFeature feature, const QString &amp; organizeritemType) const">
                <parameter left="QOrganizerItemManager::ManagerFeature" right="" name="feature" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFilterSupported" fullname="QOrganizerItemManagerEngine::isFilterSupported" href="qorganizeritemmanagerengine.html#isFilterSupported" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFilterSupported(const QOrganizerItemFilter &amp; filter) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedDataTypes" fullname="QOrganizerItemManagerEngine::supportedDataTypes" href="qorganizeritemmanagerengine.html#supportedDataTypes" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVariant::Type&gt;" signature="supportedDataTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedItemTypes" fullname="QOrganizerItemManagerEngine::supportedItemTypes" href="qorganizeritemmanagerengine.html#supportedItemTypes" location="qorganizeritemmanagerengine.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedItemTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="schemaDefinitions" fullname="QOrganizerItemManagerEngine::schemaDefinitions" href="qorganizeritemmanagerengine.html#schemaDefinitions" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMap&lt;QString, QMap&lt;QString, QOrganizerItemDetailDefinition&gt; &gt;" signature="schemaDefinitions()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataChanged" fullname="QOrganizerItemManagerEngine::dataChanged" href="qorganizeritemmanagerengine.html#dataChanged" location="qorganizeritemmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="dataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAdded" fullname="QOrganizerItemManagerEngine::itemsAdded" href="qorganizeritemmanagerengine.html#itemsAdded" location="qorganizeritemmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAdded(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsChanged" fullname="QOrganizerItemManagerEngine::itemsChanged" href="qorganizeritemmanagerengine.html#itemsChanged" location="qorganizeritemmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsChanged(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsRemoved" fullname="QOrganizerItemManagerEngine::itemsRemoved" href="qorganizeritemmanagerengine.html#itemsRemoved" location="qorganizeritemmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsRemoved(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRequestState" fullname="QOrganizerItemManagerEngine::updateRequestState" href="qorganizeritemmanagerengine.html#updateRequestState" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateRequestState(QOrganizerItemAbstractRequest * req, QOrganizerItemAbstractRequest::State state)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateItemInstanceFetchRequest" fullname="QOrganizerItemManagerEngine::updateItemInstanceFetchRequest" href="qorganizeritemmanagerengine.html#updateItemInstanceFetchRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateItemInstanceFetchRequest(QOrganizerItemInstanceFetchRequest * req, const QList&lt;QOrganizerItem&gt; &amp; result, QOrganizerItemManager::Error error, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemInstanceFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QOrganizerItem&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateItemLocalIdFetchRequest" fullname="QOrganizerItemManagerEngine::updateItemLocalIdFetchRequest" href="qorganizeritemmanagerengine.html#updateItemLocalIdFetchRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateItemLocalIdFetchRequest(QOrganizerItemLocalIdFetchRequest * req, const QList&lt;QOrganizerItemLocalId&gt; &amp; result, QOrganizerItemManager::Error error, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemLocalIdFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateItemFetchRequest" fullname="QOrganizerItemManagerEngine::updateItemFetchRequest" href="qorganizeritemmanagerengine.html#updateItemFetchRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateItemFetchRequest(QOrganizerItemFetchRequest * req, const QList&lt;QOrganizerItem&gt; &amp; result, QOrganizerItemManager::Error error, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QOrganizerItem&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateItemRemoveRequest" fullname="QOrganizerItemManagerEngine::updateItemRemoveRequest" href="qorganizeritemmanagerengine.html#updateItemRemoveRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateItemRemoveRequest(QOrganizerItemRemoveRequest * req, QOrganizerItemManager::Error error, const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp; errorMap, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemRemoveRequest *" right="" name="req" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateItemSaveRequest" fullname="QOrganizerItemManagerEngine::updateItemSaveRequest" href="qorganizeritemmanagerengine.html#updateItemSaveRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateItemSaveRequest(QOrganizerItemSaveRequest * req, const QList&lt;QOrganizerItem&gt; &amp; result, QOrganizerItemManager::Error error, const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp; errorMap, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemSaveRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QOrganizerItem&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDefinitionSaveRequest" fullname="QOrganizerItemManagerEngine::updateDefinitionSaveRequest" href="qorganizeritemmanagerengine.html#updateDefinitionSaveRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateDefinitionSaveRequest(QOrganizerItemDetailDefinitionSaveRequest * req, const QList&lt;QOrganizerItemDetailDefinition&gt; &amp; result, QOrganizerItemManager::Error error, const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp; errorMap, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemDetailDefinitionSaveRequest *" right="" name="req" default=""/>
                <parameter left="const QList&lt;QOrganizerItemDetailDefinition&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDefinitionRemoveRequest" fullname="QOrganizerItemManagerEngine::updateDefinitionRemoveRequest" href="qorganizeritemmanagerengine.html#updateDefinitionRemoveRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateDefinitionRemoveRequest(QOrganizerItemDetailDefinitionRemoveRequest * req, QOrganizerItemManager::Error error, const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp; errorMap, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemDetailDefinitionRemoveRequest *" right="" name="req" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateDefinitionFetchRequest" fullname="QOrganizerItemManagerEngine::updateDefinitionFetchRequest" href="qorganizeritemmanagerengine.html#updateDefinitionFetchRequest" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="updateDefinitionFetchRequest(QOrganizerItemDetailDefinitionFetchRequest * req, const QMap&lt;QString, QOrganizerItemDetailDefinition&gt; &amp; result, QOrganizerItemManager::Error error, const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp; errorMap, QOrganizerItemAbstractRequest::State newState)">
                <parameter left="QOrganizerItemDetailDefinitionFetchRequest *" right="" name="req" default=""/>
                <parameter left="const QMap&lt;QString, QOrganizerItemDetailDefinition&gt; &amp;" right="" name="result" default=""/>
                <parameter left="QOrganizerItemManager::Error" right="" name="error" default=""/>
                <parameter left="const QMap&lt;int, QOrganizerItemManager::Error&gt; &amp;" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailAccessConstraints" fullname="QOrganizerItemManagerEngine::setDetailAccessConstraints" href="qorganizeritemmanagerengine.html#setDetailAccessConstraints" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="setDetailAccessConstraints(QOrganizerItemDetail * detail, QFlags&lt;QOrganizerItemDetail::AccessConstraint&gt; constraints)">
                <parameter left="QOrganizerItemDetail *" right="" name="detail" default=""/>
                <parameter left="QFlags&lt;QOrganizerItemDetail::AccessConstraint&gt;" right="" name="constraints" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compareItem" fullname="QOrganizerItemManagerEngine::compareItem" href="qorganizeritemmanagerengine.html#compareItem" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="compareItem(const QOrganizerItem &amp; a, const QOrganizerItem &amp; b, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders)">
                <parameter left="const QOrganizerItem &amp;" right="" name="a" default=""/>
                <parameter left="const QOrganizerItem &amp;" right="" name="b" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addSorted" fullname="QOrganizerItemManagerEngine::addSorted" href="qorganizeritemmanagerengine.html#addSorted" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="addSorted(QList&lt;QOrganizerItem&gt; * sorted, const QOrganizerItem &amp; toAdd, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders)">
                <parameter left="QList&lt;QOrganizerItem&gt; *" right="" name="sorted" default=""/>
                <parameter left="const QOrganizerItem &amp;" right="" name="toAdd" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compareVariant" fullname="QOrganizerItemManagerEngine::compareVariant" href="qorganizeritemmanagerengine.html#compareVariant" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="int" signature="compareVariant(const QVariant &amp; first, const QVariant &amp; second, Qt::CaseSensitivity sensitivity)">
                <parameter left="const QVariant &amp;" right="" name="first" default=""/>
                <parameter left="const QVariant &amp;" right="" name="second" default=""/>
                <parameter left="Qt::CaseSensitivity" right="" name="sensitivity" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="testFilter" fullname="QOrganizerItemManagerEngine::testFilter" href="qorganizeritemmanagerengine.html#testFilter" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="bool" signature="testFilter(const QOrganizerItemFilter &amp; filter, const QOrganizerItem &amp; organizeritem)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QOrganizerItem &amp;" right="" name="organizeritem" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sortItems" fullname="QOrganizerItemManagerEngine::sortItems" href="qorganizeritemmanagerengine.html#sortItems" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QList&lt;QOrganizerItemLocalId&gt;" signature="sortItems(const QList&lt;QOrganizerItem&gt; &amp; cs, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders)">
                <parameter left="const QList&lt;QOrganizerItem&gt; &amp;" right="" name="cs" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="canonicalizedFilter" fullname="QOrganizerItemManagerEngine::canonicalizedFilter" href="qorganizeritemmanagerengine.html#canonicalizedFilter" location="qorganizeritemmanagerengine.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QOrganizerItemFilter" signature="canonicalizedFilter(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioOutput" href="qaudiooutput.html" location="qaudiooutput.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioOutput" fullname="QAudioOutput::QAudioOutput" href="qaudiooutput.html#QAudioOutput" location="qaudiooutput.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioOutput(const QAudioFormat &amp; format, QObject * parent)">
                <parameter left="const QAudioFormat &amp;" right="" name="format" default="QAudioFormat()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioOutput" fullname="QAudioOutput::QAudioOutput" href="qaudiooutput.html#QAudioOutput-2" location="qaudiooutput.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioOutput(const QAudioDeviceInfo &amp; audioDevice, const QAudioFormat &amp; format, QObject * parent)">
                <parameter left="const QAudioDeviceInfo &amp;" right="" name="audioDevice" default=""/>
                <parameter left="const QAudioFormat &amp;" right="" name="format" default="QAudioFormat()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioOutput" fullname="QAudioOutput::~QAudioOutput" href="qaudiooutput.html#dtor.QAudioOutput" location="qaudiooutput.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioOutput()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QAudioOutput::format" href="qaudiooutput.html#format" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QAudioOutput::start" href="qaudiooutput.html#start" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="start(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QAudioOutput::start" href="qaudiooutput.html#start-2" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QIODevice *" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QAudioOutput::stop" href="qaudiooutput.html#stop" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reset" fullname="QAudioOutput::reset" href="qaudiooutput.html#reset" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="reset()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="suspend" fullname="QAudioOutput::suspend" href="qaudiooutput.html#suspend" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="suspend()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QAudioOutput::resume" href="qaudiooutput.html#resume" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resume()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBufferSize" fullname="QAudioOutput::setBufferSize" href="qaudiooutput.html#setBufferSize" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBufferSize(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferSize" fullname="QAudioOutput::bufferSize" href="qaudiooutput.html#bufferSize" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bufferSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bytesFree" fullname="QAudioOutput::bytesFree" href="qaudiooutput.html#bytesFree" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bytesFree() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="periodSize" fullname="QAudioOutput::periodSize" href="qaudiooutput.html#periodSize" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="periodSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotifyInterval" fullname="QAudioOutput::setNotifyInterval" href="qaudiooutput.html#setNotifyInterval" location="qaudiooutput.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setNotifyInterval(int ms)">
                <parameter left="int" right="" name="ms" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QAudioOutput::notifyInterval" href="qaudiooutput.html#notifyInterval" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="notifyInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="processedUSecs" fullname="QAudioOutput::processedUSecs" href="qaudiooutput.html#processedUSecs" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="processedUSecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="elapsedUSecs" fullname="QAudioOutput::elapsedUSecs" href="qaudiooutput.html#elapsedUSecs" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="elapsedUSecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QAudioOutput::error" href="qaudiooutput.html#error" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudio::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QAudioOutput::state" href="qaudiooutput.html#state" location="qaudiooutput.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudio::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QAudioOutput::stateChanged" href="qaudiooutput.html#stateChanged" location="qaudiooutput.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QAudio::State state)">
                <parameter left="QAudio::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notify" fullname="QAudioOutput::notify" href="qaudiooutput.html#notify" location="qaudiooutput.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notify()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoMapCircleObject" href="qgeomapcircleobject.html" location="qgeomapcircleobject.h" bases="QGeoMapObject" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoMapCircleObject" fullname="QGeoMapCircleObject::QGeoMapCircleObject" href="qgeomapcircleobject.html#QGeoMapCircleObject" location="qgeomapcircleobject.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoMapCircleObject(QGeoMapObject * parent)">
                <parameter left="QGeoMapObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoMapCircleObject" fullname="QGeoMapCircleObject::~QGeoMapCircleObject" href="qgeomapcircleobject.html#dtor.QGeoMapCircleObject" location="qgeomapcircleobject.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoMapCircleObject()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCenter" fullname="QGeoMapCircleObject::setCenter" href="qgeomapcircleobject.html#setCenter" location="qgeomapcircleobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCenter(const QGeoCoordinate &amp; center)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="center" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="center" fullname="QGeoMapCircleObject::center" href="qgeomapcircleobject.html#center" location="qgeomapcircleobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="center() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRadius" fullname="QGeoMapCircleObject::setRadius" href="qgeomapcircleobject.html#setRadius" location="qgeomapcircleobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRadius(qreal radius)">
                <parameter left="qreal" right="" name="radius" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="radius" fullname="QGeoMapCircleObject::radius" href="qgeomapcircleobject.html#radius" location="qgeomapcircleobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="radius() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoRoute" href="qgeoroute.html" location="qgeoroute.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRoute" fullname="QGeoRoute::QGeoRoute" href="qgeoroute.html#QGeoRoute" location="qgeoroute.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoRoute()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoRoute" fullname="QGeoRoute::QGeoRoute" href="qgeoroute.html#QGeoRoute-2" location="qgeoroute.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoRoute(const QGeoRoute &amp; other)">
                <parameter left="const QGeoRoute &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoRoute" fullname="QGeoRoute::~QGeoRoute" href="qgeoroute.html#dtor.QGeoRoute" location="qgeoroute.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoRoute()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoRoute::operator=" href="qgeoroute.html#operator=" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoRoute &amp;" signature="operator=(const QGeoRoute &amp; other)">
                <parameter left="const QGeoRoute &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRouteId" fullname="QGeoRoute::setRouteId" href="qgeoroute.html#setRouteId" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRouteId(const QString &amp; id)">
                <parameter left="const QString &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="routeId" fullname="QGeoRoute::routeId" href="qgeoroute.html#routeId" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="routeId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRequest" fullname="QGeoRoute::setRequest" href="qgeoroute.html#setRequest" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRequest(const QGeoRouteRequest &amp; request)">
                <parameter left="const QGeoRouteRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="request" fullname="QGeoRoute::request" href="qgeoroute.html#request" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest" signature="request() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBounds" fullname="QGeoRoute::setBounds" href="qgeoroute.html#setBounds" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBounds(const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bounds" fullname="QGeoRoute::bounds" href="qgeoroute.html#bounds" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoBoundingBox" signature="bounds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRouteSegments" fullname="QGeoRoute::setRouteSegments" href="qgeoroute.html#setRouteSegments" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRouteSegments(const QList&lt;QGeoRouteSegment&gt; &amp; routeSegments)">
                <parameter left="const QList&lt;QGeoRouteSegment&gt; &amp;" right="" name="routeSegments" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="routeSegments" fullname="QGeoRoute::routeSegments" href="qgeoroute.html#routeSegments" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoRouteSegment&gt;" signature="routeSegments() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTravelTime" fullname="QGeoRoute::setTravelTime" href="qgeoroute.html#setTravelTime" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTravelTime(int secs)">
                <parameter left="int" right="" name="secs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="travelTime" fullname="QGeoRoute::travelTime" href="qgeoroute.html#travelTime" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="travelTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDistance" fullname="QGeoRoute::setDistance" href="qgeoroute.html#setDistance" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDistance(qreal distance)">
                <parameter left="qreal" right="" name="distance" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="distance" fullname="QGeoRoute::distance" href="qgeoroute.html#distance" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="distance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTravelMode" fullname="QGeoRoute::setTravelMode" href="qgeoroute.html#setTravelMode" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setTravelMode(QGeoRouteRequest::TravelMode mode)">
                <parameter left="QGeoRouteRequest::TravelMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="travelMode" fullname="QGeoRoute::travelMode" href="qgeoroute.html#travelMode" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::TravelMode" signature="travelMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPath" fullname="QGeoRoute::setPath" href="qgeoroute.html#setPath" location="qgeoroute.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPath(const QList&lt;QGeoCoordinate&gt; &amp; path)">
                <parameter left="const QList&lt;QGeoCoordinate&gt; &amp;" right="" name="path" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QGeoRoute::path" href="qgeoroute.html#path" location="qgeoroute.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QGeoCoordinate&gt;" signature="path() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkProximityFilter" href="qlandmarkproximityfilter.html" location="qlandmarkproximityfilter.h" bases="QLandmarkFilter" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Selection" fullname="QLandmarkProximityFilter::Selection" href="qlandmarkproximityfilter.html#Selection-enum" location="qlandmarkproximityfilter.h">
                <value name="SelectNearestOnly" value="0"/>
                <value name="SelectAll" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkProximityFilter" fullname="QLandmarkProximityFilter::QLandmarkProximityFilter" href="qlandmarkproximityfilter.html#QLandmarkProximityFilter" location="qlandmarkproximityfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkProximityFilter(const QGeoCoordinate &amp; coordinate, double radius)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default="QGeoCoordinate()"/>
                <parameter left="double" right="" name="radius" default="-1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkProximityFilter" fullname="QLandmarkProximityFilter::QLandmarkProximityFilter" href="qlandmarkproximityfilter.html#QLandmarkProximityFilter-2" location="qlandmarkproximityfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkProximityFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkProximityFilter" fullname="QLandmarkProximityFilter::~QLandmarkProximityFilter" href="qlandmarkproximityfilter.html#dtor.QLandmarkProximityFilter" location="qlandmarkproximityfilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkProximityFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="coordinate" fullname="QLandmarkProximityFilter::coordinate" href="qlandmarkproximityfilter.html#coordinate" location="qlandmarkproximityfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="coordinate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCoordinate" fullname="QLandmarkProximityFilter::setCoordinate" href="qlandmarkproximityfilter.html#setCoordinate" location="qlandmarkproximityfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCoordinate(const QGeoCoordinate &amp; coordinate)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelection" fullname="QLandmarkProximityFilter::setSelection" href="qlandmarkproximityfilter.html#setSelection" location="qlandmarkproximityfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSelection(Selection selection)">
                <parameter left="Selection" right="" name="selection" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selection" fullname="QLandmarkProximityFilter::selection" href="qlandmarkproximityfilter.html#selection" location="qlandmarkproximityfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Selection" signature="selection() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="radius" fullname="QLandmarkProximityFilter::radius" href="qlandmarkproximityfilter.html#radius" location="qlandmarkproximityfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="radius() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRadius" fullname="QLandmarkProximityFilter::setRadius" href="qlandmarkproximityfilter.html#setRadius" location="qlandmarkproximityfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRadius(double radius)">
                <parameter left="double" right="" name="radius" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageService" href="qmessageservice.html" location="qmessageservice.h" bases="" module="QtMessaging">
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMessageService::State" href="qmessageservice.html#State-enum" location="qmessageservice.h">
                <value name="InactiveState" value="0"/>
                <value name="ActiveState" value="1"/>
                <value name="CanceledState" value="2"/>
                <value name="FinishedState" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageService" fullname="QMessageService::QMessageService" href="qmessageservice.html#QMessageService" location="qmessageservice_maemo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageService" fullname="QMessageService::~QMessageService" href="qmessageservice.html#dtor.QMessageService" location="qmessageservice_maemo.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageService()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryMessages" fullname="QMessageService::queryMessages" href="qmessageservice.html#queryMessages" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="queryMessages(const QMessageFilter &amp; filter, const QMessageSortOrder &amp; sortOrder, uint limit, uint offset)">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default="QMessageFilter()"/>
                <parameter left="const QMessageSortOrder &amp;" right="" name="sortOrder" default="QMessageSortOrder()"/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="queryMessages" fullname="QMessageService::queryMessages" href="qmessageservice.html#queryMessages-2" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="queryMessages(const QMessageFilter &amp; filter, const QString &amp; body, QMessageDataComparator::MatchFlags matchFlags, const QMessageSortOrder &amp; sortOrder, uint limit, uint offset)">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QString &amp;" right="" name="body" default=""/>
                <parameter left="QMessageDataComparator::MatchFlags" right="" name="matchFlags" default="0"/>
                <parameter left="const QMessageSortOrder &amp;" right="" name="sortOrder" default="QMessageSortOrder()"/>
                <parameter left="uint" right="" name="limit" default="0"/>
                <parameter left="uint" right="" name="offset" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="countMessages" fullname="QMessageService::countMessages" href="qmessageservice.html#countMessages" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="countMessages(const QMessageFilter &amp; filter)">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default="QMessageFilter()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="send" fullname="QMessageService::send" href="qmessageservice.html#send" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="send(QMessage &amp; message)">
                <parameter left="QMessage &amp;" right="" name="message" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="compose" fullname="QMessageService::compose" href="qmessageservice.html#compose" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="compose(const QMessage &amp; message)">
                <parameter left="const QMessage &amp;" right="" name="message" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="retrieveHeader" fullname="QMessageService::retrieveHeader" href="qmessageservice.html#retrieveHeader" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="retrieveHeader(const QMessageId &amp; id)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="retrieveBody" fullname="QMessageService::retrieveBody" href="qmessageservice.html#retrieveBody" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="retrieveBody(const QMessageId &amp; id)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="retrieve" fullname="QMessageService::retrieve" href="qmessageservice.html#retrieve" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="retrieve(const QMessageId &amp; messageId, const QMessageContentContainerId &amp; id)">
                <parameter left="const QMessageId &amp;" right="" name="messageId" default=""/>
                <parameter left="const QMessageContentContainerId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="show" fullname="QMessageService::show" href="qmessageservice.html#show" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="show(const QMessageId &amp; id)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exportUpdates" fullname="QMessageService::exportUpdates" href="qmessageservice.html#exportUpdates" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="exportUpdates(const QMessageAccountId &amp; id)">
                <parameter left="const QMessageAccountId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMessageService::state" href="qmessageservice.html#state" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMessageService::error" href="qmessageservice.html#error" location="qmessageservice_maemo.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageManager::Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QMessageService::cancel" href="qmessageservice.html#cancel" location="qmessageservice_maemo.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMessageService::stateChanged" href="qmessageservice.html#stateChanged" location="qmessageservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMessageService::State newState)">
                <parameter left="QMessageService::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messagesFound" fullname="QMessageService::messagesFound" href="qmessageservice.html#messagesFound" location="qmessageservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messagesFound(const QMessageIdList &amp; ids)">
                <parameter left="const QMessageIdList &amp;" right="" name="ids" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="messagesCounted" fullname="QMessageService::messagesCounted" href="qmessageservice.html#messagesCounted" location="qmessageservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="messagesCounted(int count)">
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="progressChanged" fullname="QMessageService::progressChanged" href="qmessageservice.html#progressChanged" location="qmessageservice.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="progressChanged(uint value, uint total)">
                <parameter left="uint" right="" name="value" default=""/>
                <parameter left="uint" right="" name="total" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractValueSpaceLayer" href="qabstractvaluespacelayer.html" location="qvaluespace_p.h" bases="" module="">
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Handle" fullname="QAbstractValueSpaceLayer::Handle" href="qabstractvaluespacelayer.html#Handle-typedef" location="qvaluespace_p.h"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QAbstractValueSpaceLayer::name" href="qabstractvaluespacelayer.html#name" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QString" signature="name()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QAbstractValueSpaceLayer::Type" href="qabstractvaluespacelayer.html#Type-enum" location="qvaluespace_p.h">
                <value name="Server" value="0"/>
                <value name="Client" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="startup" fullname="QAbstractValueSpaceLayer::startup" href="qabstractvaluespacelayer.html#startup" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startup(Type type)">
                <parameter left="Type" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="id" fullname="QAbstractValueSpaceLayer::id" href="qabstractvaluespacelayer.html#id" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QUuid" signature="id()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="order" fullname="QAbstractValueSpaceLayer::order" href="qabstractvaluespacelayer.html#order" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="unsigned int" signature="order()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Properties" fullname="QAbstractValueSpaceLayer::Properties" href="qabstractvaluespacelayer.html#Properties-enum" location="qvaluespace_p.h">
                <value name="Publish" value="0x00000001"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="item" fullname="QAbstractValueSpaceLayer::item" href="qabstractvaluespacelayer.html#item" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="Handle" signature="item(Handle parent, const QString &amp; subPath)">
                <parameter left="Handle" right="" name="parent" default=""/>
                <parameter left="const QString &amp;" right="" name="subPath" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeHandle" fullname="QAbstractValueSpaceLayer::removeHandle" href="qabstractvaluespacelayer.html#removeHandle" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="removeHandle(Handle handle)">
                <parameter left="Handle" right="" name="handle" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperty" fullname="QAbstractValueSpaceLayer::setProperty" href="qabstractvaluespacelayer.html#setProperty" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setProperty(Handle handle, Properties property)">
                <parameter left="Handle" right="" name="handle" default=""/>
                <parameter left="Properties" right="" name="property" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QAbstractValueSpaceLayer::value" href="qabstractvaluespacelayer.html#value" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="value(Handle handle, QVariant * data)">
                <parameter left="Handle" right="" name="handle" default=""/>
                <parameter left="QVariant *" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QAbstractValueSpaceLayer::value" href="qabstractvaluespacelayer.html#value-2" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="value(Handle handle, const QString &amp; subPath, QVariant * data)">
                <parameter left="Handle" right="" name="handle" default=""/>
                <parameter left="const QString &amp;" right="" name="subPath" default=""/>
                <parameter left="QVariant *" right="" name="data" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="children" fullname="QAbstractValueSpaceLayer::children" href="qabstractvaluespacelayer.html#children" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QSet&lt;QString&gt;" signature="children(Handle handle)">
                <parameter left="Handle" right="" name="handle" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="layerOptions" fullname="QAbstractValueSpaceLayer::layerOptions" href="qabstractvaluespacelayer.html#layerOptions" location="qvaluespace_p.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QValueSpace::LayerOptions" signature="layerOptions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsInterestNotification" fullname="QAbstractValueSpaceLayer::supportsInterestNotification" href="qabstractvaluespacelayer.html#supportsInterestNotification" location="qvaluespace_p.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsInterestNotification() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyInterest" fullname="QAbstractValueSpaceLayer::notifyInterest" href="qabstractvaluespacelayer.html#notifyInterest" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="notifyInterest(Handle handle, bool interested)">
                <parameter left="Handle" right="" name="handle" default=""/>
                <parameter left="bool" right="" name="interested" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QAbstractValueSpaceLayer::setValue" href="qabstractvaluespacelayer.html#setValue" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setValue(QValueSpacePublisher * creator, Handle handle, const QString &amp; subPath, const QVariant &amp; value)">
                <parameter left="QValueSpacePublisher *" right="" name="creator" default=""/>
                <parameter left="Handle" right="" name="handle" default=""/>
                <parameter left="const QString &amp;" right="" name="subPath" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeValue" fullname="QAbstractValueSpaceLayer::removeValue" href="qabstractvaluespacelayer.html#removeValue" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeValue(QValueSpacePublisher * creator, Handle handle, const QString &amp; subPath)">
                <parameter left="QValueSpacePublisher *" right="" name="creator" default=""/>
                <parameter left="Handle" right="" name="handle" default=""/>
                <parameter left="const QString &amp;" right="" name="subPath" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeSubTree" fullname="QAbstractValueSpaceLayer::removeSubTree" href="qabstractvaluespacelayer.html#removeSubTree" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeSubTree(QValueSpacePublisher * creator, Handle handle)">
                <parameter left="QValueSpacePublisher *" right="" name="creator" default=""/>
                <parameter left="Handle" right="" name="handle" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addWatch" fullname="QAbstractValueSpaceLayer::addWatch" href="qabstractvaluespacelayer.html#addWatch" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="addWatch(QValueSpacePublisher * creator, Handle handle)">
                <parameter left="QValueSpacePublisher *" right="" name="creator" default=""/>
                <parameter left="Handle" right="" name="handle" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeWatches" fullname="QAbstractValueSpaceLayer::removeWatches" href="qabstractvaluespacelayer.html#removeWatches" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="removeWatches(QValueSpacePublisher * creator, Handle parent)">
                <parameter left="QValueSpacePublisher *" right="" name="creator" default=""/>
                <parameter left="Handle" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sync" fullname="QAbstractValueSpaceLayer::sync" href="qabstractvaluespacelayer.html#sync" location="qvaluespace_p.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="sync()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="emitInterestChanged" fullname="QAbstractValueSpaceLayer::emitInterestChanged" href="qabstractvaluespacelayer.html#emitInterestChanged" location="qvaluespace_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="emitInterestChanged(QValueSpacePublisher * publisher, const QString &amp; path, bool interested)">
                <parameter left="QValueSpacePublisher *" right="" name="publisher" default=""/>
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="bool" right="" name="interested" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleChanged" fullname="QAbstractValueSpaceLayer::handleChanged" href="qabstractvaluespacelayer.html#handleChanged" location="qvaluespace_p.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="handleChanged(quintptr handle)">
                <parameter left="quintptr" right="" name="handle" default=""/>
            </function>
        </class>
        <namespace access="public" threadsafety="unspecified" status="commendable" name="QValueSpace" href="qvaluespace.html" location="qvaluespace_p.h" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="installLayer" fullname="QValueSpace::installLayer" href="qvaluespace.html#installLayer" location="qvaluespace_p.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="installLayer(QAbstractValueSpaceLayer * layer)">
                <parameter left="QAbstractValueSpaceLayer *" right="" name="layer" default=""/>
            </function>
        </namespace>
        <class access="public" threadsafety="unspecified" status="deprecated" name="QVersitContactImporterPropertyHandler" href="qversitcontactimporterpropertyhandler.html" location="qversitcontactimporter.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitContactImporterPropertyHandler" fullname="QVersitContactImporterPropertyHandler::~QVersitContactImporterPropertyHandler" href="qversitcontactimporterpropertyhandler.html#dtor.QVersitContactImporterPropertyHandler" location="qversitcontactimporter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitContactImporterPropertyHandler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="preProcessProperty" fullname="QVersitContactImporterPropertyHandler::preProcessProperty" href="qversitcontactimporterpropertyhandler.html#preProcessProperty" location="qversitcontactimporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="preProcessProperty(const QVersitDocument &amp; document, const QVersitProperty &amp; property, int contactIndex, QContact * contact)">
                <parameter left="const QVersitDocument &amp;" right="" name="document" default=""/>
                <parameter left="const QVersitProperty &amp;" right="" name="property" default=""/>
                <parameter left="int" right="" name="contactIndex" default=""/>
                <parameter left="QContact *" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="postProcessProperty" fullname="QVersitContactImporterPropertyHandler::postProcessProperty" href="qversitcontactimporterpropertyhandler.html#postProcessProperty" location="qversitcontactimporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="postProcessProperty(const QVersitDocument &amp; document, const QVersitProperty &amp; property, bool alreadyProcessed, int contactIndex, QContact * contact)">
                <parameter left="const QVersitDocument &amp;" right="" name="document" default=""/>
                <parameter left="const QVersitProperty &amp;" right="" name="property" default=""/>
                <parameter left="bool" right="" name="alreadyProcessed" default=""/>
                <parameter left="int" right="" name="contactIndex" default=""/>
                <parameter left="QContact *" right="" name="contact" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitContactImporterPropertyHandlerV2" href="qversitcontactimporterpropertyhandlerv2.html" location="qversitcontactimporter.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="createBackupHandler" fullname="QVersitContactImporterPropertyHandlerV2::createBackupHandler" href="qversitcontactimporterpropertyhandlerv2.html#createBackupHandler" location="qversitcontactimporter.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QVersitContactImporterPropertyHandlerV2 *" signature="createBackupHandler()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitContactImporterPropertyHandlerV2" fullname="QVersitContactImporterPropertyHandlerV2::~QVersitContactImporterPropertyHandlerV2" href="qversitcontactimporterpropertyhandlerv2.html#dtor.QVersitContactImporterPropertyHandlerV2" location="qversitcontactimporter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitContactImporterPropertyHandlerV2()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyProcessed" fullname="QVersitContactImporterPropertyHandlerV2::propertyProcessed" href="qversitcontactimporterpropertyhandlerv2.html#propertyProcessed" location="qversitcontactimporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="propertyProcessed(const QVersitDocument &amp; document, const QVersitProperty &amp; property, bool alreadyProcessed, const QContact &amp; contact, QList&lt;QContactDetail&gt; * updatedDetails)">
                <parameter left="const QVersitDocument &amp;" right="" name="document" default=""/>
                <parameter left="const QVersitProperty &amp;" right="" name="property" default=""/>
                <parameter left="bool" right="" name="alreadyProcessed" default=""/>
                <parameter left="const QContact &amp;" right="" name="contact" default=""/>
                <parameter left="QList&lt;QContactDetail&gt; *" right="" name="updatedDetails" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="documentProcessed" fullname="QVersitContactImporterPropertyHandlerV2::documentProcessed" href="qversitcontactimporterpropertyhandlerv2.html#documentProcessed" location="qversitcontactimporter.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="documentProcessed(const QVersitDocument &amp; document, QContact * contact)">
                <parameter left="const QVersitDocument &amp;" right="" name="document" default=""/>
                <parameter left="QContact *" right="" name="contact" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QVersitContactImporterPropertyHandlerV2::version" href="qversitcontactimporterpropertyhandlerv2.html#version" location="qversitcontactimporter.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="version() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QVersitContactImporter" href="qversitcontactimporter.html" location="qversitcontactimporter.h" bases="" module="">
            <contents name="importing-categories" title="Importing categories" level="1"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QVersitContactImporter::Error" href="qversitcontactimporter.html#Error-enum" location="qversitcontactimporter.h">
                <value name="NoError" value="0"/>
                <value name="InvalidDocumentError" value="1"/>
                <value name="EmptyDocumentError" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVersitContactImporter" fullname="QVersitContactImporter::QVersitContactImporter" href="qversitcontactimporter.html#QVersitContactImporter" location="qversitcontactimporter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVersitContactImporter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVersitContactImporter" fullname="QVersitContactImporter::~QVersitContactImporter" href="qversitcontactimporter.html#dtor.QVersitContactImporter" location="qversitcontactimporter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVersitContactImporter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="importDocuments" fullname="QVersitContactImporter::importDocuments" href="qversitcontactimporter.html#importDocuments" location="qversitcontactimporter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="importDocuments(const QList&lt;QVersitDocument&gt; &amp; documents)">
                <parameter left="const QList&lt;QVersitDocument&gt; &amp;" right="" name="documents" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contacts" fullname="QVersitContactImporter::contacts" href="qversitcontactimporter.html#contacts" location="qversitcontactimporter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="contacts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errors" fullname="QVersitContactImporter::errors" href="qversitcontactimporter.html#errors" location="qversitcontactimporter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, Error&gt;" signature="errors() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPropertyHandler" fullname="QVersitContactImporter::setPropertyHandler" href="qversitcontactimporter.html#setPropertyHandler" location="qversitcontactimporter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPropertyHandler(QVersitContactImporterPropertyHandlerV2 * handler)">
                <parameter left="QVersitContactImporterPropertyHandlerV2 *" right="" name="handler" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResourceHandler" fullname="QVersitContactImporter::setResourceHandler" href="qversitcontactimporter.html#setResourceHandler" location="qversitcontactimporter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResourceHandler(QVersitResourceHandler * handler)">
                <parameter left="QVersitResourceHandler *" right="" name="handler" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resourceHandler" fullname="QVersitContactImporter::resourceHandler" href="qversitcontactimporter.html#resourceHandler" location="qversitcontactimporter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVersitResourceHandler *" signature="resourceHandler() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetailRangeFilter" href="qcontactdetailrangefilter.html" location="qcontactdetailrangefilter.h" bases="QContactFilter" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailRangeFilter" fullname="QContactDetailRangeFilter::QContactDetailRangeFilter" href="qcontactdetailrangefilter.html#QContactDetailRangeFilter" location="qcontactdetailrangefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetailRangeFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailRangeFilter" fullname="QContactDetailRangeFilter::QContactDetailRangeFilter" href="qcontactdetailrangefilter.html#QContactDetailRangeFilter-2" location="qcontactdetailrangefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactDetailRangeFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RangeFlag" fullname="QContactDetailRangeFilter::RangeFlag" href="qcontactdetailrangefilter.html#RangeFlag-enum" location="qcontactdetailrangefilter.h" typedef="QContactDetailRangeFilter::RangeFlags">
                <value name="IncludeLower" value="0"/>
                <value name="IncludeUpper" value="1"/>
                <value name="ExcludeLower" value="2"/>
                <value name="ExcludeUpper" value="0"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="RangeFlags" fullname="QContactDetailRangeFilter::RangeFlags" href="qcontactdetailrangefilter.html#RangeFlags-typedef" location="qcontactdetailrangefilter.h" enum="QContactDetailRangeFilter::RangeFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionName" fullname="QContactDetailRangeFilter::setDetailDefinitionName" href="qcontactdetailrangefilter.html#setDetailDefinitionName" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionName(const QString &amp; definitionName, const QString &amp; fieldName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchFlags" fullname="QContactDetailRangeFilter::setMatchFlags" href="qcontactdetailrangefilter.html#setMatchFlags" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchFlags(QFlags&lt;QContactFilter::MatchFlag&gt; flags)">
                <parameter left="QFlags&lt;QContactFilter::MatchFlag&gt;" right="" name="flags" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRange" fullname="QContactDetailRangeFilter::setRange" href="qcontactdetailrangefilter.html#setRange" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRange(const QVariant &amp; min, const QVariant &amp; max, QFlags&lt;QContactDetailRangeFilter::RangeFlag&gt; flags)">
                <parameter left="const QVariant &amp;" right="" name="min" default=""/>
                <parameter left="const QVariant &amp;" right="" name="max" default=""/>
                <parameter left="QFlags&lt;QContactDetailRangeFilter::RangeFlag&gt;" right="" name="flags" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionName" fullname="QContactDetailRangeFilter::detailDefinitionName" href="qcontactdetailrangefilter.html#detailDefinitionName" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailDefinitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailFieldName" fullname="QContactDetailRangeFilter::detailFieldName" href="qcontactdetailrangefilter.html#detailFieldName" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailFieldName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchFlags" fullname="QContactDetailRangeFilter::matchFlags" href="qcontactdetailrangefilter.html#matchFlags" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactFilter::MatchFlags" signature="matchFlags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minValue" fullname="QContactDetailRangeFilter::minValue" href="qcontactdetailrangefilter.html#minValue" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="minValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxValue" fullname="QContactDetailRangeFilter::maxValue" href="qcontactdetailrangefilter.html#maxValue" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="maxValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="rangeFlags" fullname="QContactDetailRangeFilter::rangeFlags" href="qcontactdetailrangefilter.html#rangeFlags" location="qcontactdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RangeFlags" signature="rangeFlags() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemMemoryEngine" href="qorganizeritemmemoryengine.html" location="qorganizeritemmemorybackend_p.h" bases="QOrganizerItemManagerEngine" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="createMemoryEngine" fullname="QOrganizerItemMemoryEngine::createMemoryEngine" href="qorganizeritemmemoryengine.html#createMemoryEngine" location="qorganizeritemmemorybackend_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QOrganizerItemMemoryEngine *" signature="createMemoryEngine(const QMap&lt;QString, QString&gt; &amp; parameters)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QOrganizerItemMemoryEngine" fullname="QOrganizerItemMemoryEngine::~QOrganizerItemMemoryEngine" href="qorganizeritemmemoryengine.html#dtor.QOrganizerItemMemoryEngine" location="qorganizeritemmemorybackend_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QOrganizerItemMemoryEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QOrganizerItemMemoryEngine::managerName" href="qorganizeritemmemoryengine.html#managerName" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QOrganizerItemMemoryEngine::managerParameters" href="qorganizeritemmemoryengine.html#managerParameters" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemInstances" fullname="QOrganizerItemMemoryEngine::itemInstances" href="qorganizeritemmemoryengine.html#itemInstances" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="itemInstances(const QOrganizerItem &amp; generator, const QDateTime &amp; periodStart, const QDateTime &amp; periodEnd, int maxCount, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItem &amp;" right="" name="generator" default=""/>
                <parameter left="const QDateTime &amp;" right="" name="periodStart" default=""/>
                <parameter left="const QDateTime &amp;" right="" name="periodEnd" default=""/>
                <parameter left="int" right="" name="maxCount" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemIds" fullname="QOrganizerItemMemoryEngine::itemIds" href="qorganizeritemmemoryengine.html#itemIds" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemLocalId&gt;" signature="itemIds(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QOrganizerItemMemoryEngine::items" href="qorganizeritemmemoryengine.html#items" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="items(const QOrganizerItemFilter &amp; filter, const QList&lt;QOrganizerItemSortOrder&gt; &amp; sortOrders, const QOrganizerItemFetchHint &amp; fetchHint, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="item" fullname="QOrganizerItemMemoryEngine::item" href="qorganizeritemmemoryengine.html#item" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QOrganizerItem" signature="item(const QOrganizerItemLocalId &amp; organizeritemId, const QOrganizerItemFetchHint &amp; fetchHint, QOrganizerItemManager::Error * error) const">
                <parameter left="const QOrganizerItemLocalId &amp;" right="" name="organizeritemId" default=""/>
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveItems" fullname="QOrganizerItemMemoryEngine::saveItems" href="qorganizeritemmemoryengine.html#saveItems" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveItems(QList&lt;QOrganizerItem&gt; * organizeritems, QMap&lt;int, QOrganizerItemManager::Error&gt; * errorMap, QOrganizerItemManager::Error * error)">
                <parameter left="QList&lt;QOrganizerItem&gt; *" right="" name="organizeritems" default=""/>
                <parameter left="QMap&lt;int, QOrganizerItemManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItems" fullname="QOrganizerItemMemoryEngine::removeItems" href="qorganizeritemmemoryengine.html#removeItems" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItems(const QList&lt;QOrganizerItemLocalId&gt; &amp; organizeritemIds, QMap&lt;int, QOrganizerItemManager::Error&gt; * errorMap, QOrganizerItemManager::Error * error)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="organizeritemIds" default=""/>
                <parameter left="QMap&lt;int, QOrganizerItemManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetailDefinition" fullname="QOrganizerItemMemoryEngine::removeDetailDefinition" href="qorganizeritemmemoryengine.html#removeDetailDefinition" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetailDefinition(const QString &amp; definitionId, const QString &amp; organizeritemType, QOrganizerItemManager::Error * error)">
                <parameter left="const QString &amp;" right="" name="definitionId" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
                <parameter left="QOrganizerItemManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestDestroyed" fullname="QOrganizerItemMemoryEngine::requestDestroyed" href="qorganizeritemmemoryengine.html#requestDestroyed" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="requestDestroyed(QOrganizerItemAbstractRequest * req)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startRequest" fullname="QOrganizerItemMemoryEngine::startRequest" href="qorganizeritemmemoryengine.html#startRequest" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startRequest(QOrganizerItemAbstractRequest * req)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelRequest" fullname="QOrganizerItemMemoryEngine::cancelRequest" href="qorganizeritemmemoryengine.html#cancelRequest" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="cancelRequest(QOrganizerItemAbstractRequest * req)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForRequestFinished" fullname="QOrganizerItemMemoryEngine::waitForRequestFinished" href="qorganizeritemmemoryengine.html#waitForRequestFinished" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForRequestFinished(QOrganizerItemAbstractRequest * req, int msecs)">
                <parameter left="QOrganizerItemAbstractRequest *" right="" name="req" default=""/>
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QOrganizerItemMemoryEngine::hasFeature" href="qorganizeritemmemoryengine.html#hasFeature" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFeature(QOrganizerItemManager::ManagerFeature feature, const QString &amp; organizeritemType) const">
                <parameter left="QOrganizerItemManager::ManagerFeature" right="" name="feature" default=""/>
                <parameter left="const QString &amp;" right="" name="organizeritemType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFilterSupported" fullname="QOrganizerItemMemoryEngine::isFilterSupported" href="qorganizeritemmemoryengine.html#isFilterSupported" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFilterSupported(const QOrganizerItemFilter &amp; filter) const">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedDataTypes" fullname="QOrganizerItemMemoryEngine::supportedDataTypes" href="qorganizeritemmemoryengine.html#supportedDataTypes" location="qorganizeritemmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVariant::Type&gt;" signature="supportedDataTypes() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QOrganizerItemMemoryEngine" fullname="QOrganizerItemMemoryEngine::QOrganizerItemMemoryEngine" href="qorganizeritemmemoryengine.html#QOrganizerItemMemoryEngine" location="qorganizeritemmemorybackend_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemMemoryEngine(QOrganizerItemMemoryEngineData * data)">
                <parameter left="QOrganizerItemMemoryEngineData *" right="" name="data" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetail" href="qcontactdetail.html" location="qcontactdetail.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetail" fullname="QContactDetail::QContactDetail" href="qcontactdetail.html#QContactDetail" location="qcontactdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetail()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetail" fullname="QContactDetail::QContactDetail" href="qcontactdetail.html#QContactDetail-2" location="qcontactdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactDetail(const char * thisDefinitionId)">
                <parameter left="const char *" right="" name="thisDefinitionId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetail" fullname="QContactDetail::QContactDetail" href="qcontactdetail.html#QContactDetail-3" location="qcontactdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QContactDetail(const QString &amp; thisDefinitionId)">
                <parameter left="const QString &amp;" right="" name="thisDefinitionId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactDetail" fullname="QContactDetail::~QContactDetail" href="qcontactdetail.html#dtor.QContactDetail" location="qcontactdetail.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactDetail()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetail" fullname="QContactDetail::QContactDetail" href="qcontactdetail.html#QContactDetail-4" location="qcontactdetail.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QContactDetail(const QContactDetail &amp; other)">
                <parameter left="const QContactDetail &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactDetail::operator=" href="qcontactdetail.html#operator=" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactDetail &amp;" signature="operator=(const QContactDetail &amp; other)">
                <parameter left="const QContactDetail &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AccessConstraint" fullname="QContactDetail::AccessConstraint" href="qcontactdetail.html#AccessConstraint-enum" location="qcontactdetail.h" typedef="QContactDetail::AccessConstraints">
                <value name="NoConstraint" value="0"/>
                <value name="ReadOnly" value="0x01"/>
                <value name="Irremovable" value="0x02"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="AccessConstraints" fullname="QContactDetail::AccessConstraints" href="qcontactdetail.html#AccessConstraints-typedef" location="qcontactdetail.h" enum="QContactDetail::AccessConstraint"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="accessConstraints" fullname="QContactDetail::accessConstraints" href="qcontactdetail.html#accessConstraints" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="AccessConstraints" signature="accessConstraints() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="FieldContext" fullname="QContactDetail::FieldContext" href="qcontactdetail.html#FieldContext-var" location="qcontactdetail.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="ContextHome" fullname="QContactDetail::ContextHome" href="qcontactdetail.html#ContextHome-var" location="qcontactdetail.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="ContextWork" fullname="QContactDetail::ContextWork" href="qcontactdetail.html#ContextWork-var" location="qcontactdetail.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="ContextOther" fullname="QContactDetail::ContextOther" href="qcontactdetail.html#ContextOther-var" location="qcontactdetail.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="FieldDetailUri" fullname="QContactDetail::FieldDetailUri" href="qcontactdetail.html#FieldDetailUri-var" location="qcontactdetail.h" type="const QLatin1Constant" static="true"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="FieldLinkedDetailUris" fullname="QContactDetail::FieldLinkedDetailUris" href="qcontactdetail.html#FieldLinkedDetailUris-var" location="qcontactdetail.h" type="const QLatin1Constant" static="true"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactDetail::operator==" href="qcontactdetail.html#operator==" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactDetail &amp; other) const">
                <parameter left="const QContactDetail &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactDetail::operator!=" href="qcontactdetail.html#operator!=" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactDetail &amp; other) const">
                <parameter left="const QContactDetail &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitionName" fullname="QContactDetail::definitionName" href="qcontactdetail.html#definitionName" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="definitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QContactDetail::isEmpty" href="qcontactdetail.html#isEmpty" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QContactDetail::key" href="qcontactdetail.html#key" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="key() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resetKey" fullname="QContactDetail::resetKey" href="qcontactdetail.html#resetKey" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resetKey()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QContactDetail::value" href="qcontactdetail.html#value-3" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QString" signature="value(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QContactDetail::setValue" href="qcontactdetail.html#setValue" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setValue(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeValue" fullname="QContactDetail::removeValue" href="qcontactdetail.html#removeValue" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeValue(const QString &amp; key)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasValue" fullname="QContactDetail::hasValue" href="qcontactdetail.html#hasValue" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasValue(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="variantValues" fullname="QContactDetail::variantValues" href="qcontactdetail.html#variantValues" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariantMap" signature="variantValues() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="variantValue" fullname="QContactDetail::variantValue" href="qcontactdetail.html#variantValue" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="variantValue(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QContactDetail::value" href="qcontactdetail.html#value" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="T" signature="value(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QContactDetail::value" href="qcontactdetail.html#value-6" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="6" type="QString" signature="value(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setValue" fullname="QContactDetail::setValue" href="qcontactdetail.html#setValue-3" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="setValue(const QLatin1Constant &amp; key, const QVariant &amp; value)">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeValue" fullname="QContactDetail::removeValue" href="qcontactdetail.html#removeValue-3" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="bool" signature="removeValue(const QLatin1Constant &amp; key)">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasValue" fullname="QContactDetail::hasValue" href="qcontactdetail.html#hasValue-3" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="bool" signature="hasValue(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="variantValue" fullname="QContactDetail::variantValue" href="qcontactdetail.html#variantValue-3" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="3" type="QVariant" signature="variantValue(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="value" fullname="QContactDetail::value" href="qcontactdetail.html#value-2" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="T" signature="value(const QLatin1Constant &amp; key) const">
                <parameter left="const QLatin1Constant &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContexts" fullname="QContactDetail::setContexts" href="qcontactdetail.html#setContexts" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContexts(const QStringList &amp; contexts)">
                <parameter left="const QStringList &amp;" right="" name="contexts" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContexts" fullname="QContactDetail::setContexts" href="qcontactdetail.html#setContexts-2" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setContexts(const QString &amp; context)">
                <parameter left="const QString &amp;" right="" name="context" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contexts" fullname="QContactDetail::contexts" href="qcontactdetail.html#contexts" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="contexts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailUri" fullname="QContactDetail::setDetailUri" href="qcontactdetail.html#setDetailUri" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailUri(const QString &amp; detailUri)">
                <parameter left="const QString &amp;" right="" name="detailUri" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailUri" fullname="QContactDetail::detailUri" href="qcontactdetail.html#detailUri" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLinkedDetailUris" fullname="QContactDetail::setLinkedDetailUris" href="qcontactdetail.html#setLinkedDetailUris" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLinkedDetailUris(const QStringList &amp; linkedDetailUris)">
                <parameter left="const QStringList &amp;" right="" name="linkedDetailUris" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLinkedDetailUris" fullname="QContactDetail::setLinkedDetailUris" href="qcontactdetail.html#setLinkedDetailUris-2" location="qcontactdetail.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setLinkedDetailUris(const QString &amp; linkedDetailUri)">
                <parameter left="const QString &amp;" right="" name="linkedDetailUri" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="linkedDetailUris" fullname="QContactDetail::linkedDetailUris" href="qcontactdetail.html#linkedDetailUris" location="qcontactdetail.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="linkedDetailUris() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoSatelliteInfo" href="qgeosatelliteinfo.html" location="qgeosatelliteinfo.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Attribute" fullname="QGeoSatelliteInfo::Attribute" href="qgeosatelliteinfo.html#Attribute-enum" location="qgeosatelliteinfo.h">
                <value name="Elevation" value="0"/>
                <value name="Azimuth" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoSatelliteInfo" fullname="QGeoSatelliteInfo::QGeoSatelliteInfo" href="qgeosatelliteinfo.html#QGeoSatelliteInfo" location="qgeosatelliteinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoSatelliteInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoSatelliteInfo" fullname="QGeoSatelliteInfo::QGeoSatelliteInfo" href="qgeosatelliteinfo.html#QGeoSatelliteInfo-2" location="qgeosatelliteinfo.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGeoSatelliteInfo(const QGeoSatelliteInfo &amp; other)">
                <parameter left="const QGeoSatelliteInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoSatelliteInfo" fullname="QGeoSatelliteInfo::~QGeoSatelliteInfo" href="qgeosatelliteinfo.html#dtor.QGeoSatelliteInfo" location="qgeosatelliteinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoSatelliteInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QGeoSatelliteInfo::operator=" href="qgeosatelliteinfo.html#operator=" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoSatelliteInfo &amp;" signature="operator=(const QGeoSatelliteInfo &amp; other)">
                <parameter left="const QGeoSatelliteInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QGeoSatelliteInfo::operator==" href="qgeosatelliteinfo.html#operator==" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QGeoSatelliteInfo &amp; other) const">
                <parameter left="const QGeoSatelliteInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QGeoSatelliteInfo::operator!=" href="qgeosatelliteinfo.html#operator!=" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QGeoSatelliteInfo &amp; other) const">
                <parameter left="const QGeoSatelliteInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPrnNumber" fullname="QGeoSatelliteInfo::setPrnNumber" href="qgeosatelliteinfo.html#setPrnNumber" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPrnNumber(int prn)">
                <parameter left="int" right="" name="prn" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="prnNumber" fullname="QGeoSatelliteInfo::prnNumber" href="qgeosatelliteinfo.html#prnNumber" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="prnNumber() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSignalStrength" fullname="QGeoSatelliteInfo::setSignalStrength" href="qgeosatelliteinfo.html#setSignalStrength" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSignalStrength(int signalStrength)">
                <parameter left="int" right="" name="signalStrength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QGeoSatelliteInfo::signalStrength" href="qgeosatelliteinfo.html#signalStrength" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="signalStrength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QGeoSatelliteInfo::setAttribute" href="qgeosatelliteinfo.html#setAttribute" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(Attribute attribute, qreal value)">
                <parameter left="Attribute" right="" name="attribute" default=""/>
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QGeoSatelliteInfo::attribute" href="qgeosatelliteinfo.html#attribute" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="attribute(Attribute attribute) const">
                <parameter left="Attribute" right="" name="attribute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAttribute" fullname="QGeoSatelliteInfo::removeAttribute" href="qgeosatelliteinfo.html#removeAttribute" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAttribute(Attribute attribute)">
                <parameter left="Attribute" right="" name="attribute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasAttribute" fullname="QGeoSatelliteInfo::hasAttribute" href="qgeosatelliteinfo.html#hasAttribute" location="qgeosatelliteinfo.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasAttribute(Attribute attribute) const">
                <parameter left="Attribute" right="" name="attribute" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioCaptureSource" href="qaudiocapturesource.html" location="qaudiocapturesource.h" bases="QMediaObject" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioCaptureSource" fullname="QAudioCaptureSource::QAudioCaptureSource" href="qaudiocapturesource.html#QAudioCaptureSource" location="qaudiocapturesource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioCaptureSource(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioCaptureSource" fullname="QAudioCaptureSource::~QAudioCaptureSource" href="qaudiocapturesource.html#dtor.QAudioCaptureSource" location="qaudiocapturesource.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioCaptureSource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isAvailable" fullname="QAudioCaptureSource::isAvailable" href="qaudiocapturesource.html#isAvailable" location="qaudiocapturesource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availabilityError" fullname="QAudioCaptureSource::availabilityError" href="qaudiocapturesource.html#availabilityError" location="qaudiocapturesource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QtMultimediaKit::AvailabilityError" signature="availabilityError() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioInputs" fullname="QAudioCaptureSource::audioInputs" href="qaudiocapturesource.html#audioInputs" location="qaudiocapturesource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="audioInputs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioDescription" fullname="QAudioCaptureSource::audioDescription" href="qaudiocapturesource.html#audioDescription" location="qaudiocapturesource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioDescription(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultAudioInput" fullname="QAudioCaptureSource::defaultAudioInput" href="qaudiocapturesource.html#defaultAudioInput" location="qaudiocapturesource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="defaultAudioInput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeAudioInput" fullname="QAudioCaptureSource::activeAudioInput" href="qaudiocapturesource.html#activeAudioInput" location="qaudiocapturesource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="activeAudioInput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioInput" fullname="QAudioCaptureSource::setAudioInput" href="qaudiocapturesource.html#setAudioInput" location="qaudiocapturesource.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setAudioInput(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeAudioInputChanged" fullname="QAudioCaptureSource::activeAudioInputChanged" href="qaudiocapturesource.html#activeAudioInputChanged" location="qaudiocapturesource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeAudioInputChanged(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableAudioInputsChanged" fullname="QAudioCaptureSource::availableAudioInputsChanged" href="qaudiocapturesource.html#availableAudioInputsChanged" location="qaudiocapturesource.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availableAudioInputsChanged()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinitionRemoveRequest" href="qcontactdetaildefinitionremoverequest.html" location="qcontactdetaildefinitionremoverequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinitionRemoveRequest" fullname="QContactDetailDefinitionRemoveRequest::QContactDetailDefinitionRemoveRequest" href="qcontactdetaildefinitionremoverequest.html#QContactDetailDefinitionRemoveRequest" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetailDefinitionRemoveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactDetailDefinitionRemoveRequest" fullname="QContactDetailDefinitionRemoveRequest::~QContactDetailDefinitionRemoveRequest" href="qcontactdetaildefinitionremoverequest.html#dtor.QContactDetailDefinitionRemoveRequest" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactDetailDefinitionRemoveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionName" fullname="QContactDetailDefinitionRemoveRequest::setDefinitionName" href="qcontactdetaildefinitionremoverequest.html#setDefinitionName" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionName(const QString &amp; definitionName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitionNames" fullname="QContactDetailDefinitionRemoveRequest::setDefinitionNames" href="qcontactdetaildefinitionremoverequest.html#setDefinitionNames" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitionNames(const QStringList &amp; names)">
                <parameter left="const QStringList &amp;" right="" name="names" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitionNames" fullname="QContactDetailDefinitionRemoveRequest::definitionNames" href="qcontactdetaildefinitionremoverequest.html#definitionNames" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="definitionNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactType" fullname="QContactDetailDefinitionRemoveRequest::setContactType" href="qcontactdetaildefinitionremoverequest.html#setContactType" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContactType(const QString &amp; contactType)">
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactType" fullname="QContactDetailDefinitionRemoveRequest::contactType" href="qcontactdetaildefinitionremoverequest.html#contactType" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="contactType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QContactDetailDefinitionRemoveRequest::errorMap" href="qcontactdetaildefinitionremoverequest.html#errorMap" location="qcontactdetaildefinitionremoverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QContactManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinitionSaveRequest" href="qcontactdetaildefinitionsaverequest.html" location="qcontactdetaildefinitionsaverequest.h" bases="QContactAbstractRequest" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactDetailDefinitionSaveRequest" fullname="QContactDetailDefinitionSaveRequest::QContactDetailDefinitionSaveRequest" href="qcontactdetaildefinitionsaverequest.html#QContactDetailDefinitionSaveRequest" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactDetailDefinitionSaveRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactDetailDefinitionSaveRequest" fullname="QContactDetailDefinitionSaveRequest::~QContactDetailDefinitionSaveRequest" href="qcontactdetaildefinitionsaverequest.html#dtor.QContactDetailDefinitionSaveRequest" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactDetailDefinitionSaveRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinition" fullname="QContactDetailDefinitionSaveRequest::setDefinition" href="qcontactdetaildefinitionsaverequest.html#setDefinition" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinition(const QContactDetailDefinition &amp; definition)">
                <parameter left="const QContactDetailDefinition &amp;" right="" name="definition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefinitions" fullname="QContactDetailDefinitionSaveRequest::setDefinitions" href="qcontactdetaildefinitionsaverequest.html#setDefinitions" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefinitions(const QList&lt;QContactDetailDefinition&gt; &amp; definitions)">
                <parameter left="const QList&lt;QContactDetailDefinition&gt; &amp;" right="" name="definitions" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContactType" fullname="QContactDetailDefinitionSaveRequest::setContactType" href="qcontactdetaildefinitionsaverequest.html#setContactType" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setContactType(const QString &amp; contactType)">
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contactType" fullname="QContactDetailDefinitionSaveRequest::contactType" href="qcontactdetaildefinitionsaverequest.html#contactType" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="contactType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="definitions" fullname="QContactDetailDefinitionSaveRequest::definitions" href="qcontactdetaildefinitionsaverequest.html#definitions" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactDetailDefinition&gt;" signature="definitions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorMap" fullname="QContactDetailDefinitionSaveRequest::errorMap" href="qcontactdetaildefinitionsaverequest.html#errorMap" location="qcontactdetaildefinitionsaverequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;int, QContactManager::Error&gt;" signature="errorMap() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoEncoderControl" href="qvideoencodercontrol.html" location="qvideoencodercontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoEncoderControl" fullname="QVideoEncoderControl::~QVideoEncoderControl" href="qvideoencodercontrol.html#dtor.QVideoEncoderControl" location="qvideoencodercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoEncoderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedResolutions" fullname="QVideoEncoderControl::supportedResolutions" href="qvideoencodercontrol.html#supportedResolutions" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSize&gt;" signature="supportedResolutions(const QVideoEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="settings" default=""/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFrameRates" fullname="QVideoEncoderControl::supportedFrameRates" href="qvideoencodercontrol.html#supportedFrameRates" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;qreal&gt;" signature="supportedFrameRates(const QVideoEncoderSettings &amp; settings, bool * continuous) const">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="settings" default=""/>
                <parameter left="bool *" right="" name="continuous" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedVideoCodecs" fullname="QVideoEncoderControl::supportedVideoCodecs" href="qvideoencodercontrol.html#supportedVideoCodecs" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedVideoCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoCodecDescription" fullname="QVideoEncoderControl::videoCodecDescription" href="qvideoencodercontrol.html#videoCodecDescription" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="videoCodecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoSettings" fullname="QVideoEncoderControl::videoSettings" href="qvideoencodercontrol.html#videoSettings" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVideoEncoderSettings" signature="videoSettings() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoSettings" fullname="QVideoEncoderControl::setVideoSettings" href="qvideoencodercontrol.html#setVideoSettings" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoSettings(const QVideoEncoderSettings &amp; settings)">
                <parameter left="const QVideoEncoderSettings &amp;" right="" name="settings" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedEncodingOptions" fullname="QVideoEncoderControl::supportedEncodingOptions" href="qvideoencodercontrol.html#supportedEncodingOptions" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedEncodingOptions(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodingOption" fullname="QVideoEncoderControl::encodingOption" href="qvideoencodercontrol.html#encodingOption" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="encodingOption(const QString &amp; codec, const QString &amp; option) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
                <parameter left="const QString &amp;" right="" name="option" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEncodingOption" fullname="QVideoEncoderControl::setEncodingOption" href="qvideoencodercontrol.html#setEncodingOption" location="qvideoencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setEncodingOption(const QString &amp; codec, const QString &amp; option, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
                <parameter left="const QString &amp;" right="" name="option" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVideoEncoderControl" fullname="QVideoEncoderControl::QVideoEncoderControl" href="qvideoencodercontrol.html#QVideoEncoderControl" location="qvideoencodercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoEncoderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraFocusControl" href="qcamerafocuscontrol.html" location="qcamerafocuscontrol.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraFocusControl" fullname="QCameraFocusControl::~QCameraFocusControl" href="qcamerafocuscontrol.html#dtor.QCameraFocusControl" location="qcamerafocuscontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraFocusControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusMode" fullname="QCameraFocusControl::focusMode" href="qcamerafocuscontrol.html#focusMode" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraFocus::FocusMode" signature="focusMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusMode" fullname="QCameraFocusControl::setFocusMode" href="qcamerafocuscontrol.html#setFocusMode" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusMode(QCameraFocus::FocusMode mode)">
                <parameter left="QCameraFocus::FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusModeSupported" fullname="QCameraFocusControl::isFocusModeSupported" href="qcamerafocuscontrol.html#isFocusModeSupported" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusModeSupported(QCameraFocus::FocusMode mode) const">
                <parameter left="QCameraFocus::FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumOpticalZoom" fullname="QCameraFocusControl::maximumOpticalZoom" href="qcamerafocuscontrol.html#maximumOpticalZoom" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumOpticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumDigitalZoom" fullname="QCameraFocusControl::maximumDigitalZoom" href="qcamerafocuscontrol.html#maximumDigitalZoom" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumDigitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="opticalZoom" fullname="QCameraFocusControl::opticalZoom" href="qcamerafocuscontrol.html#opticalZoom" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="opticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="digitalZoom" fullname="QCameraFocusControl::digitalZoom" href="qcamerafocuscontrol.html#digitalZoom" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="digitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomTo" fullname="QCameraFocusControl::zoomTo" href="qcamerafocuscontrol.html#zoomTo" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="zoomTo(qreal optical, qreal digital)">
                <parameter left="qreal" right="" name="optical" default=""/>
                <parameter left="qreal" right="" name="digital" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusPointMode" fullname="QCameraFocusControl::focusPointMode" href="qcamerafocuscontrol.html#focusPointMode" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraFocus::FocusPointMode" signature="focusPointMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusPointMode" fullname="QCameraFocusControl::setFocusPointMode" href="qcamerafocuscontrol.html#setFocusPointMode" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusPointMode(QCameraFocus::FocusPointMode mode)">
                <parameter left="QCameraFocus::FocusPointMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusPointModeSupported" fullname="QCameraFocusControl::isFocusPointModeSupported" href="qcamerafocuscontrol.html#isFocusPointModeSupported" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusPointModeSupported(QCameraFocus::FocusPointMode mode) const">
                <parameter left="QCameraFocus::FocusPointMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customFocusPoint" fullname="QCameraFocusControl::customFocusPoint" href="qcamerafocuscontrol.html#customFocusPoint" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPointF" signature="customFocusPoint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomFocusPoint" fullname="QCameraFocusControl::setCustomFocusPoint" href="qcamerafocuscontrol.html#setCustomFocusPoint" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomFocusPoint(const QPointF &amp; point)">
                <parameter left="const QPointF &amp;" right="" name="point" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusZones" fullname="QCameraFocusControl::focusZones" href="qcamerafocuscontrol.html#focusZones" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCameraFocusZoneList" signature="focusZones() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="opticalZoomChanged" fullname="QCameraFocusControl::opticalZoomChanged" href="qcamerafocuscontrol.html#opticalZoomChanged" location="qcamerafocuscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="opticalZoomChanged(qreal zoom)">
                <parameter left="qreal" right="" name="zoom" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="digitalZoomChanged" fullname="QCameraFocusControl::digitalZoomChanged" href="qcamerafocuscontrol.html#digitalZoomChanged" location="qcamerafocuscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="digitalZoomChanged(qreal zoom)">
                <parameter left="qreal" right="" name="zoom" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusZonesChanged" fullname="QCameraFocusControl::focusZonesChanged" href="qcamerafocuscontrol.html#focusZonesChanged" location="qcamerafocuscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusZonesChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraFocusControl" fullname="QCameraFocusControl::QCameraFocusControl" href="qcamerafocuscontrol.html#QCameraFocusControl" location="qcamerafocuscontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraFocusControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMessageFilter" href="qmessagefilter.html" location="qmessagefilter.h" bases="" module="QtMessaging">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFilter" fullname="QMessageFilter::QMessageFilter" href="qmessagefilter.html#QMessageFilter" location="qmessagefilter_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMessageFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMessageFilter" fullname="QMessageFilter::QMessageFilter" href="qmessagefilter.html#QMessageFilter-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMessageFilter(const QMessageFilter &amp; other)">
                <parameter left="const QMessageFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMessageFilter" fullname="QMessageFilter::~QMessageFilter" href="qmessagefilter.html#dtor.QMessageFilter" location="qmessagefilter_symbian.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMessageFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchFlags" fullname="QMessageFilter::setMatchFlags" href="qmessagefilter.html#setMatchFlags" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchFlags(QMessageDataComparator::MatchFlags matchFlags)">
                <parameter left="QMessageDataComparator::MatchFlags" right="" name="matchFlags" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchFlags" fullname="QMessageFilter::matchFlags" href="qmessagefilter.html#matchFlags" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageDataComparator::MatchFlags" signature="matchFlags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMessageFilter::isEmpty" href="qmessagefilter.html#isEmpty" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupported" fullname="QMessageFilter::isSupported" href="qmessagefilter.html#isSupported" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator~" fullname="QMessageFilter::operator~" href="qmessagefilter.html#operator~" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFilter" signature="operator~() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" fullname="QMessageFilter::operator&amp;" href="qmessagefilter.html#operator&amp;" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFilter" signature="operator&amp;(const QMessageFilter &amp; other) const">
                <parameter left="const QMessageFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|" fullname="QMessageFilter::operator|" href="qmessagefilter.html#operator|" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMessageFilter" signature="operator|(const QMessageFilter &amp; other) const">
                <parameter left="const QMessageFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;=" fullname="QMessageFilter::operator&amp;=" href="qmessagefilter.html#operator&amp;=" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QMessageFilter &amp;" signature="operator&amp;=(const QMessageFilter &amp; other)">
                <parameter left="const QMessageFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator|=" fullname="QMessageFilter::operator|=" href="qmessagefilter.html#operator|=" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="const QMessageFilter &amp;" signature="operator|=(const QMessageFilter &amp; other)">
                <parameter left="const QMessageFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageFilter::byId" href="qmessagefilter.html#byId" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byId(const QMessageId &amp; id, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QMessageId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageFilter::byId" href="qmessagefilter.html#byId-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byId(const QMessageIdList &amp; ids, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageIdList &amp;" right="" name="ids" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byId" fullname="QMessageFilter::byId" href="qmessagefilter.html#byId-3" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="3" type="QMessageFilter" signature="byId(const QMessageFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byType" fullname="QMessageFilter::byType" href="qmessagefilter.html#byType" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byType(QMessage::Type type, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="QMessage::Type" right="" name="type" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byType" fullname="QMessageFilter::byType" href="qmessagefilter.html#byType-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byType(QFlags&lt;QMessage::Type&gt; type, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="QFlags&lt;QMessage::Type&gt;" right="" name="type" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySender" fullname="QMessageFilter::bySender" href="qmessagefilter.html#bySender" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="bySender(const QString &amp; value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySender" fullname="QMessageFilter::bySender" href="qmessagefilter.html#bySender-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="bySender(const QString &amp; value, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byRecipients" fullname="QMessageFilter::byRecipients" href="qmessagefilter.html#byRecipients" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byRecipients(const QString &amp; value, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySubject" fullname="QMessageFilter::bySubject" href="qmessagefilter.html#bySubject" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="bySubject(const QString &amp; value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySubject" fullname="QMessageFilter::bySubject" href="qmessagefilter.html#bySubject-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="bySubject(const QString &amp; value, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QString &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byTimeStamp" fullname="QMessageFilter::byTimeStamp" href="qmessagefilter.html#byTimeStamp" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byTimeStamp(const QDateTime &amp; value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QDateTime &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byTimeStamp" fullname="QMessageFilter::byTimeStamp" href="qmessagefilter.html#byTimeStamp-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byTimeStamp(const QDateTime &amp; value, QMessageDataComparator::RelationComparator cmp)">
                <parameter left="const QDateTime &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::RelationComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byReceptionTimeStamp" fullname="QMessageFilter::byReceptionTimeStamp" href="qmessagefilter.html#byReceptionTimeStamp" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byReceptionTimeStamp(const QDateTime &amp; value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QDateTime &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byReceptionTimeStamp" fullname="QMessageFilter::byReceptionTimeStamp" href="qmessagefilter.html#byReceptionTimeStamp-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byReceptionTimeStamp(const QDateTime &amp; value, QMessageDataComparator::RelationComparator cmp)">
                <parameter left="const QDateTime &amp;" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::RelationComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byStatus" fullname="QMessageFilter::byStatus" href="qmessagefilter.html#byStatus" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byStatus(QMessage::Status value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="QMessage::Status" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byStatus" fullname="QMessageFilter::byStatus" href="qmessagefilter.html#byStatus-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byStatus(QFlags&lt;QMessage::Status&gt; mask, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="QFlags&lt;QMessage::Status&gt;" right="" name="mask" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byPriority" fullname="QMessageFilter::byPriority" href="qmessagefilter.html#byPriority" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byPriority(QMessage::Priority value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="QMessage::Priority" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySize" fullname="QMessageFilter::bySize" href="qmessagefilter.html#bySize" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="bySize(int value, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="int" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bySize" fullname="QMessageFilter::bySize" href="qmessagefilter.html#bySize-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="bySize(int value, QMessageDataComparator::RelationComparator cmp)">
                <parameter left="int" right="" name="value" default=""/>
                <parameter left="QMessageDataComparator::RelationComparator" right="" name="cmp" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentAccountId" fullname="QMessageFilter::byParentAccountId" href="qmessagefilter.html#byParentAccountId" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byParentAccountId(const QMessageAccountId &amp; id, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QMessageAccountId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentAccountId" fullname="QMessageFilter::byParentAccountId" href="qmessagefilter.html#byParentAccountId-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byParentAccountId(const QMessageAccountFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageAccountFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byStandardFolder" fullname="QMessageFilter::byStandardFolder" href="qmessagefilter.html#byStandardFolder" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byStandardFolder(QMessage::StandardFolder folder, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="QMessage::StandardFolder" right="" name="folder" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentFolderId" fullname="QMessageFilter::byParentFolderId" href="qmessagefilter.html#byParentFolderId" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byParentFolderId(const QMessageFolderId &amp; id, QMessageDataComparator::EqualityComparator cmp)">
                <parameter left="const QMessageFolderId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::EqualityComparator" right="" name="cmp" default="QMessageDataComparator::Equal"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byParentFolderId" fullname="QMessageFilter::byParentFolderId" href="qmessagefilter.html#byParentFolderId-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byParentFolderId(const QMessageFolderFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byAncestorFolderIds" fullname="QMessageFilter::byAncestorFolderIds" href="qmessagefilter.html#byAncestorFolderIds" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QMessageFilter" signature="byAncestorFolderIds(const QMessageFolderId &amp; id, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderId &amp;" right="" name="id" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byAncestorFolderIds" fullname="QMessageFilter::byAncestorFolderIds" href="qmessagefilter.html#byAncestorFolderIds-2" location="qmessagefilter_symbian.cpp" virtual="non" meta="plain" const="false" static="true" overload="true" overload-number="2" type="QMessageFilter" signature="byAncestorFolderIds(const QMessageFolderFilter &amp; filter, QMessageDataComparator::InclusionComparator cmp)">
                <parameter left="const QMessageFolderFilter &amp;" right="" name="filter" default=""/>
                <parameter left="QMessageDataComparator::InclusionComparator" right="" name="cmp" default="QMessageDataComparator::Includes"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactMemoryEngine" href="qcontactmemoryengine.html" location="qcontactmemorybackend_p.h" bases="QContactManagerEngine" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="createMemoryEngine" fullname="QContactMemoryEngine::createMemoryEngine" href="qcontactmemoryengine.html#createMemoryEngine" location="qcontactmemorybackend_p.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QContactMemoryEngine *" signature="createMemoryEngine(const QMap&lt;QString, QString&gt; &amp; parameters)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactMemoryEngine" fullname="QContactMemoryEngine::~QContactMemoryEngine" href="qcontactmemoryengine.html#dtor.QContactMemoryEngine" location="qcontactmemorybackend_p.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactMemoryEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QContactMemoryEngine::managerName" href="qcontactmemoryengine.html#managerName" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QContactMemoryEngine::managerParameters" href="qcontactmemoryengine.html#managerParameters" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contacts" fullname="QContactMemoryEngine::contacts" href="qcontactmemoryengine.html#contacts" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContact&gt;" signature="contacts(const QContactFilter &amp; filter, const QList&lt;QContactSortOrder&gt; &amp; sortOrders, const QContactFetchHint &amp; fetchHint, QContactManager::Error * error) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
                <parameter left="const QList&lt;QContactSortOrder&gt; &amp;" right="" name="sortOrders" default=""/>
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contact" fullname="QContactMemoryEngine::contact" href="qcontactmemoryengine.html#contact" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContact" signature="contact(const QContactLocalId &amp; contactId, const QContactFetchHint &amp; fetchHint, QContactManager::Error * error) const">
                <parameter left="const QContactLocalId &amp;" right="" name="contactId" default=""/>
                <parameter left="const QContactFetchHint &amp;" right="" name="fetchHint" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveContacts" fullname="QContactMemoryEngine::saveContacts" href="qcontactmemoryengine.html#saveContacts" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveContacts(QList&lt;QContact&gt; * contacts, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="QList&lt;QContact&gt; *" right="" name="contacts" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeContacts" fullname="QContactMemoryEngine::removeContacts" href="qcontactmemoryengine.html#removeContacts" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeContacts(const QList&lt;QContactLocalId&gt; &amp; contactIds, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="const QList&lt;QContactLocalId&gt; &amp;" right="" name="contactIds" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selfContactId" fullname="QContactMemoryEngine::selfContactId" href="qcontactmemoryengine.html#selfContactId" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QContactLocalId" signature="selfContactId(QContactManager::Error * error) const">
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="relationships" fullname="QContactMemoryEngine::relationships" href="qcontactmemoryengine.html#relationships" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QContactRelationship&gt;" signature="relationships(const QString &amp; relationshipType, const QContactId &amp; participantId, QContactRelationship::Role role, QContactManager::Error * error) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
                <parameter left="const QContactId &amp;" right="" name="participantId" default=""/>
                <parameter left="QContactRelationship::Role" right="" name="role" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saveRelationships" fullname="QContactMemoryEngine::saveRelationships" href="qcontactmemoryengine.html#saveRelationships" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="saveRelationships(QList&lt;QContactRelationship&gt; * relationships, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="QList&lt;QContactRelationship&gt; *" right="" name="relationships" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeRelationships" fullname="QContactMemoryEngine::removeRelationships" href="qcontactmemoryengine.html#removeRelationships" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeRelationships(const QList&lt;QContactRelationship&gt; &amp; relationships, QMap&lt;int, QContactManager::Error&gt; * errorMap, QContactManager::Error * error)">
                <parameter left="const QList&lt;QContactRelationship&gt; &amp;" right="" name="relationships" default=""/>
                <parameter left="QMap&lt;int, QContactManager::Error&gt; *" right="" name="errorMap" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeDetailDefinition" fullname="QContactMemoryEngine::removeDetailDefinition" href="qcontactmemoryengine.html#removeDetailDefinition" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeDetailDefinition(const QString &amp; definitionId, const QString &amp; contactType, QContactManager::Error * error)">
                <parameter left="const QString &amp;" right="" name="definitionId" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
                <parameter left="QContactManager::Error *" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="requestDestroyed" fullname="QContactMemoryEngine::requestDestroyed" href="qcontactmemoryengine.html#requestDestroyed" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="requestDestroyed(QContactAbstractRequest * req)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startRequest" fullname="QContactMemoryEngine::startRequest" href="qcontactmemoryengine.html#startRequest" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="startRequest(QContactAbstractRequest * req)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelRequest" fullname="QContactMemoryEngine::cancelRequest" href="qcontactmemoryengine.html#cancelRequest" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="cancelRequest(QContactAbstractRequest * req)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForRequestFinished" fullname="QContactMemoryEngine::waitForRequestFinished" href="qcontactmemoryengine.html#waitForRequestFinished" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="waitForRequestFinished(QContactAbstractRequest * req, int msecs)">
                <parameter left="QContactAbstractRequest *" right="" name="req" default=""/>
                <parameter left="int" right="" name="msecs" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeature" fullname="QContactMemoryEngine::hasFeature" href="qcontactmemoryengine.html#hasFeature" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="hasFeature(QContactManager::ManagerFeature feature, const QString &amp; contactType) const">
                <parameter left="QContactManager::ManagerFeature" right="" name="feature" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRelationshipTypeSupported" fullname="QContactMemoryEngine::isRelationshipTypeSupported" href="qcontactmemoryengine.html#isRelationshipTypeSupported" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRelationshipTypeSupported(const QString &amp; relationshipType, const QString &amp; contactType) const">
                <parameter left="const QString &amp;" right="" name="relationshipType" default=""/>
                <parameter left="const QString &amp;" right="" name="contactType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFilterSupported" fullname="QContactMemoryEngine::isFilterSupported" href="qcontactmemoryengine.html#isFilterSupported" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFilterSupported(const QContactFilter &amp; filter) const">
                <parameter left="const QContactFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedDataTypes" fullname="QContactMemoryEngine::supportedDataTypes" href="qcontactmemoryengine.html#supportedDataTypes" location="qcontactmemorybackend_p.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVariant::Type&gt;" signature="supportedDataTypes() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QContactMemoryEngine" fullname="QContactMemoryEngine::QContactMemoryEngine" href="qcontactmemoryengine.html#QContactMemoryEngine" location="qcontactmemorybackend_p.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactMemoryEngine(QContactMemoryEngineData * data)">
                <parameter left="QContactMemoryEngineData *" right="" name="data" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemLocalIdFilter" href="qorganizeritemlocalidfilter.html" location="qorganizeritemlocalidfilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemLocalIdFilter" fullname="QOrganizerItemLocalIdFilter::QOrganizerItemLocalIdFilter" href="qorganizeritemlocalidfilter.html#QOrganizerItemLocalIdFilter" location="qorganizeritemlocalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemLocalIdFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemLocalIdFilter" fullname="QOrganizerItemLocalIdFilter::QOrganizerItemLocalIdFilter" href="qorganizeritemlocalidfilter.html#QOrganizerItemLocalIdFilter-2" location="qorganizeritemlocalidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemLocalIdFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIds" fullname="QOrganizerItemLocalIdFilter::setIds" href="qorganizeritemlocalidfilter.html#setIds" location="qorganizeritemlocalidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIds(const QList&lt;QOrganizerItemLocalId&gt; &amp; ids)">
                <parameter left="const QList&lt;QOrganizerItemLocalId&gt; &amp;" right="" name="ids" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="ids" fullname="QOrganizerItemLocalIdFilter::ids" href="qorganizeritemlocalidfilter.html#ids" location="qorganizeritemlocalidfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemLocalId&gt;" signature="ids() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSystemStorageInfo" href="qsystemstorageinfo.html" location="qsystemstorageinfo.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="logicalDrives" fullname="QSystemStorageInfo::logicalDrives" href="qsystemstorageinfo.html#logicalDrives-prop" location="qsystemstorageinfo.h" type="QStringList">
                <getter name="logicalDrives"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemStorageInfo" fullname="QSystemStorageInfo::QSystemStorageInfo" href="qsystemstorageinfo.html#QSystemStorageInfo" location="qsystemstorageinfo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemStorageInfo(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemStorageInfo" fullname="QSystemStorageInfo::~QSystemStorageInfo" href="qsystemstorageinfo.html#dtor.QSystemStorageInfo" location="qsystemstorageinfo.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemStorageInfo()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DriveType" fullname="QSystemStorageInfo::DriveType" href="qsystemstorageinfo.html#DriveType-enum" location="qsystemstorageinfo.h">
                <value name="NoDrive" value="0"/>
                <value name="InternalDrive" value="1"/>
                <value name="RemovableDrive" value="2"/>
                <value name="RemoteDrive" value="3"/>
                <value name="CdromDrive" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="logicalDrives" fullname="QSystemStorageInfo::logicalDrives" href="qsystemstorageinfo.html#logicalDrives-prop" location="qsystemstorageinfo.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" associated-property="logicalDrives" type="QStringList" signature="logicalDrives()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="logicalDriveChanged" fullname="QSystemStorageInfo::logicalDriveChanged" href="qsystemstorageinfo.html#logicalDriveChanged" location="qsystemstorageinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="logicalDriveChanged(bool added, const QString &amp; vol)">
                <parameter left="bool" right="" name="added" default=""/>
                <parameter left="const QString &amp;" right="" name="vol" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServiceManager" href="qservicemanager.html" location="qservicemanager.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QServiceManager::Error" href="qservicemanager.html#Error-enum" location="qservicemanager.h">
                <value name="NoError" value="0"/>
                <value name="StorageAccessError" value="1"/>
                <value name="InvalidServiceLocation" value="2"/>
                <value name="InvalidServiceXml" value="3"/>
                <value name="InvalidServiceInterfaceDescriptor" value="4"/>
                <value name="ServiceAlreadyExists" value="5"/>
                <value name="ImplementationAlreadyExists" value="6"/>
                <value name="PluginLoadingFailed" value="7"/>
                <value name="ComponentNotFound" value="8"/>
                <value name="ServiceCapabilityDenied" value="9"/>
                <value name="UnknownError" value="100"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceManager" fullname="QServiceManager::QServiceManager" href="qservicemanager.html#QServiceManager" location="qservicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceManager(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceManager" fullname="QServiceManager::QServiceManager" href="qservicemanager.html#QServiceManager-2" location="qservicemanager.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QServiceManager(QService::Scope scope, QObject * parent)">
                <parameter left="QService::Scope" right="" name="scope" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceManager" fullname="QServiceManager::~QServiceManager" href="qservicemanager.html#dtor.QServiceManager" location="qservicemanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QServiceManager::scope" href="qservicemanager.html#scope" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QService::Scope" signature="scope() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="findServices" fullname="QServiceManager::findServices" href="qservicemanager.html#findServices" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="findServices(const QString &amp; interfaceName) const">
                <parameter left="const QString &amp;" right="" name="interfaceName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findInterfaces" fullname="QServiceManager::findInterfaces" href="qservicemanager.html#findInterfaces" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QServiceInterfaceDescriptor&gt;" signature="findInterfaces(const QServiceFilter &amp; filter) const">
                <parameter left="const QServiceFilter &amp;" right="" name="filter" default="QServiceFilter()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="findInterfaces" fullname="QServiceManager::findInterfaces" href="qservicemanager.html#findInterfaces-2" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="QList&lt;QServiceInterfaceDescriptor&gt;" signature="findInterfaces(const QString &amp; serviceName) const">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadInterface" fullname="QServiceManager::loadInterface" href="qservicemanager.html#loadInterface" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QObject *" signature="loadInterface(const QString &amp; interfaceName, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""/>
                <parameter left="QServiceContext *" right="" name="context" default="0"/>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadInterface" fullname="QServiceManager::loadInterface" href="qservicemanager.html#loadInterface-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QObject *" signature="loadInterface(const QServiceInterfaceDescriptor &amp; descriptor, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="descriptor" default=""/>
                <parameter left="QServiceContext *" right="" name="context" default="0"/>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadLocalTypedInterface" fullname="QServiceManager::loadLocalTypedInterface" href="qservicemanager.html#loadLocalTypedInterface" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="T *" signature="loadLocalTypedInterface(const QString &amp; interfaceName, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""/>
                <parameter left="QServiceContext *" right="" name="context" default="0"/>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loadLocalTypedInterface" fullname="QServiceManager::loadLocalTypedInterface" href="qservicemanager.html#loadLocalTypedInterface-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="T *" signature="loadLocalTypedInterface(const QServiceInterfaceDescriptor &amp; serviceDescriptor, QServiceContext * context, QAbstractSecuritySession * session)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="serviceDescriptor" default=""/>
                <parameter left="QServiceContext *" right="" name="context" default="0"/>
                <parameter left="QAbstractSecuritySession *" right="" name="session" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addService" fullname="QServiceManager::addService" href="qservicemanager.html#addService" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="addService(const QString &amp; xmlFilePath)">
                <parameter left="const QString &amp;" right="" name="xmlFilePath" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addService" fullname="QServiceManager::addService" href="qservicemanager.html#addService-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="addService(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeService" fullname="QServiceManager::removeService" href="qservicemanager.html#removeService" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeService(const QString &amp; serviceName)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInterfaceDefault" fullname="QServiceManager::setInterfaceDefault" href="qservicemanager.html#setInterfaceDefault" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setInterfaceDefault(const QString &amp; service, const QString &amp; interfaceName)">
                <parameter left="const QString &amp;" right="" name="service" default=""/>
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInterfaceDefault" fullname="QServiceManager::setInterfaceDefault" href="qservicemanager.html#setInterfaceDefault-2" location="qservicemanager.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="setInterfaceDefault(const QServiceInterfaceDescriptor &amp; descriptor)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="descriptor" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceDefault" fullname="QServiceManager::interfaceDefault" href="qservicemanager.html#interfaceDefault" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QServiceInterfaceDescriptor" signature="interfaceDefault(const QString &amp; interfaceName) const">
                <parameter left="const QString &amp;" right="" name="interfaceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QServiceManager::error" href="qservicemanager.html#error" location="qservicemanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceAdded" fullname="QServiceManager::serviceAdded" href="qservicemanager.html#serviceAdded" location="qservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="serviceAdded(const QString &amp; serviceName, QService::Scope scope)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""/>
                <parameter left="QService::Scope" right="" name="scope" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceRemoved" fullname="QServiceManager::serviceRemoved" href="qservicemanager.html#serviceRemoved" location="qservicemanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="serviceRemoved(const QString &amp; serviceName, QService::Scope scope)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""/>
                <parameter left="QService::Scope" right="" name="scope" default=""/>
            </function>
        </class>
        <namespace access="public" threadsafety="unspecified" status="commendable" name="QAudio" href="qaudio.html" location="qaudio.h" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QAudio::Error" href="qaudio.html#Error-enum" location="qaudio.h">
                <value name="NoError" value="0"/>
                <value name="OpenError" value="1"/>
                <value name="IOError" value="2"/>
                <value name="UnderrunError" value="3"/>
                <value name="FatalError" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QAudio::State" href="qaudio.html#State-enum" location="qaudio.h">
                <value name="ActiveState" value="0"/>
                <value name="SuspendedState" value="1"/>
                <value name="StoppedState" value="2"/>
                <value name="IdleState" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Mode" fullname="QAudio::Mode" href="qaudio.html#Mode-enum" location="qaudio.h">
                <value name="AudioInput" value="0"/>
                <value name="AudioOutput" value="1"/>
            </enum>
        </namespace>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractVideoBuffer" href="qabstractvideobuffer.html" location="qabstractvideobuffer.h" bases="" module="QtMultimediaKit">
            <enum access="public" threadsafety="unspecified" status="commendable" name="HandleType" fullname="QAbstractVideoBuffer::HandleType" href="qabstractvideobuffer.html#HandleType-enum" location="qabstractvideobuffer.h">
                <value name="NoHandle" value="0"/>
                <value name="GLTextureHandle" value="1"/>
                <value name="XvShmImageHandle" value="2"/>
                <value name="CoreImageHandle" value="3"/>
                <value name="UserHandle" value="1000"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MapMode" fullname="QAbstractVideoBuffer::MapMode" href="qabstractvideobuffer.html#MapMode-enum" location="qabstractvideobuffer.h">
                <value name="NotMapped" value="0x00"/>
                <value name="ReadOnly" value="0x01"/>
                <value name="WriteOnly" value="0x02"/>
                <value name="ReadWrite" value="ReadOnly | WriteOnly"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAbstractVideoBuffer" fullname="QAbstractVideoBuffer::QAbstractVideoBuffer" href="qabstractvideobuffer.html#QAbstractVideoBuffer" location="qabstractvideobuffer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractVideoBuffer(HandleType type)">
                <parameter left="HandleType" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractVideoBuffer" fullname="QAbstractVideoBuffer::~QAbstractVideoBuffer" href="qabstractvideobuffer.html#dtor.QAbstractVideoBuffer" location="qabstractvideobuffer.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractVideoBuffer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handleType" fullname="QAbstractVideoBuffer::handleType" href="qabstractvideobuffer.html#handleType" location="qabstractvideobuffer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="HandleType" signature="handleType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapMode" fullname="QAbstractVideoBuffer::mapMode" href="qabstractvideobuffer.html#mapMode" location="qabstractvideobuffer.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="MapMode" signature="mapMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="map" fullname="QAbstractVideoBuffer::map" href="qabstractvideobuffer.html#map" location="qabstractvideobuffer.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="uchar *" signature="map(MapMode mode, int * numBytes, int * bytesPerLine)">
                <parameter left="MapMode" right="" name="mode" default=""/>
                <parameter left="int *" right="" name="numBytes" default=""/>
                <parameter left="int *" right="" name="bytesPerLine" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="unmap" fullname="QAbstractVideoBuffer::unmap" href="qabstractvideobuffer.html#unmap" location="qabstractvideobuffer.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="unmap()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="handle" fullname="QAbstractVideoBuffer::handle" href="qabstractvideobuffer.html#handle" location="qabstractvideobuffer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="handle() const"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QAbstractVideoBuffer::d_ptr" href="qabstractvideobuffer.html#d_ptr-var" location="qabstractvideobuffer.h" type="QAbstractVideoBufferPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSystemScreenSaver" href="qsystemscreensaver.html" location="qsystemscreensaver.h" bases="" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="screenSaverInhibited" fullname="QSystemScreenSaver::screenSaverInhibited" href="qsystemscreensaver.html#screenSaverInhibited-prop" location="qsystemscreensaver.h" type="bool">
                <getter name="screenSaverInhibited"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemScreenSaver" fullname="QSystemScreenSaver::QSystemScreenSaver" href="qsystemscreensaver.html#QSystemScreenSaver" location="qsystemscreensaver.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemScreenSaver(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemScreenSaver" fullname="QSystemScreenSaver::~QSystemScreenSaver" href="qsystemscreensaver.html#dtor.QSystemScreenSaver" location="qsystemscreensaver.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemScreenSaver()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="screenSaverInhibited" fullname="QSystemScreenSaver::screenSaverInhibited" href="qsystemscreensaver.html#screenSaverInhibited-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="screenSaverInhibited" type="bool" signature="screenSaverInhibited()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFetchRequest" href="qorganizeritemfetchrequest.html" location="qorganizeritemfetchrequest.h" bases="QOrganizerItemAbstractRequest" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemFetchRequest" fullname="QOrganizerItemFetchRequest::QOrganizerItemFetchRequest" href="qorganizeritemfetchrequest.html#QOrganizerItemFetchRequest" location="qorganizeritemfetchrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemFetchRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QOrganizerItemFetchRequest::setFilter" href="qorganizeritemfetchrequest.html#setFilter" location="qorganizeritemfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFilter(const QOrganizerItemFilter &amp; filter)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSorting" fullname="QOrganizerItemFetchRequest::setSorting" href="qorganizeritemfetchrequest.html#setSorting" location="qorganizeritemfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSorting(const QList&lt;QOrganizerItemSortOrder&gt; &amp; sorting)">
                <parameter left="const QList&lt;QOrganizerItemSortOrder&gt; &amp;" right="" name="sorting" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFetchHint" fullname="QOrganizerItemFetchRequest::setFetchHint" href="qorganizeritemfetchrequest.html#setFetchHint" location="qorganizeritemfetchrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFetchHint(const QOrganizerItemFetchHint &amp; fetchHint)">
                <parameter left="const QOrganizerItemFetchHint &amp;" right="" name="fetchHint" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QOrganizerItemFetchRequest::filter" href="qorganizeritemfetchrequest.html#filter" location="qorganizeritemfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sorting" fullname="QOrganizerItemFetchRequest::sorting" href="qorganizeritemfetchrequest.html#sorting" location="qorganizeritemfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItemSortOrder&gt;" signature="sorting() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="fetchHint" fullname="QOrganizerItemFetchRequest::fetchHint" href="qorganizeritemfetchrequest.html#fetchHint" location="qorganizeritemfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemFetchHint" signature="fetchHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="items" fullname="QOrganizerItemFetchRequest::items" href="qorganizeritemfetchrequest.html#items" location="qorganizeritemfetchrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QOrganizerItem&gt;" signature="items() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaContent" href="qmediacontent.html" location="qmediacontent.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaContent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent-2" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaContent(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent-3" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaContent(const QNetworkRequest &amp; request)">
                <parameter left="const QNetworkRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent-4" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMediaContent(const QMediaResource &amp; resource)">
                <parameter left="const QMediaResource &amp;" right="" name="resource" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent-5" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QMediaContent(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContent" fullname="QMediaContent::QMediaContent" href="qmediacontent.html#QMediaContent-6" location="qmediacontent.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="6" type="" signature="QMediaContent(const QMediaContent &amp; other)">
                <parameter left="const QMediaContent &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaContent" fullname="QMediaContent::~QMediaContent" href="qmediacontent.html#dtor.QMediaContent" location="qmediacontent.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaContent()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaContent::operator=" href="qmediacontent.html#operator=" location="qmediacontent.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaContent &amp;" signature="operator=(const QMediaContent &amp; other)">
                <parameter left="const QMediaContent &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMediaContent::operator==" href="qmediacontent.html#operator==" location="qmediacontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMediaContent &amp; other) const">
                <parameter left="const QMediaContent &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMediaContent::operator!=" href="qmediacontent.html#operator!=" location="qmediacontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMediaContent &amp; other) const">
                <parameter left="const QMediaContent &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaContent::isNull" href="qmediacontent.html#isNull" location="qmediacontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canonicalUrl" fullname="QMediaContent::canonicalUrl" href="qmediacontent.html#canonicalUrl" location="qmediacontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="canonicalUrl() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canonicalRequest" fullname="QMediaContent::canonicalRequest" href="qmediacontent.html#canonicalRequest" location="qmediacontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QNetworkRequest" signature="canonicalRequest() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="canonicalResource" fullname="QMediaContent::canonicalResource" href="qmediacontent.html#canonicalResource" location="qmediacontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaResource" signature="canonicalResource() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QMediaContent::resources" href="qmediacontent.html#resources" location="qmediacontent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaResourceList" signature="resources() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryItemRequest" href="qgalleryitemrequest.html" location="qgalleryitemrequest.h" bases="QGalleryAbstractRequest" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="propertyNames" fullname="QGalleryItemRequest::propertyNames" href="qgalleryitemrequest.html#propertyNames-prop" location="qgalleryitemrequest.h" type="QStringList">
                <getter name="propertyNames"/>
                <setter name="setPropertyNames"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="live" fullname="QGalleryItemRequest::live" href="qgalleryitemrequest.html#live-prop" location="qgalleryitemrequest.h" type="bool">
                <getter name="isLive"/>
                <setter name="setLive"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="itemId" fullname="QGalleryItemRequest::itemId" href="qgalleryitemrequest.html#itemId-prop" location="qgalleryitemrequest.h" type="QVariant">
                <getter name="itemId"/>
                <setter name="setItemId"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="item" fullname="QGalleryItemRequest::item" href="qgalleryitemrequest.html#item-prop" location="qgalleryitemrequest.h" type="QGalleryItemList *">
                <getter name="item"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryItemRequest" fullname="QGalleryItemRequest::QGalleryItemRequest" href="qgalleryitemrequest.html#QGalleryItemRequest" location="qgalleryitemrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryItemRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryItemRequest" fullname="QGalleryItemRequest::QGalleryItemRequest" href="qgalleryitemrequest.html#QGalleryItemRequest-2" location="qgalleryitemrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryItemRequest(QAbstractGallery * gallery, QObject * parent)">
                <parameter left="QAbstractGallery *" right="" name="gallery" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryItemRequest" fullname="QGalleryItemRequest::~QGalleryItemRequest" href="qgalleryitemrequest.html#dtor.QGalleryItemRequest" location="qgalleryitemrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryItemRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyNames" fullname="QGalleryItemRequest::propertyNames" href="qgalleryitemrequest.html#propertyNames-prop" location="qgalleryitemrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="propertyNames" type="QStringList" signature="propertyNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPropertyNames" fullname="QGalleryItemRequest::setPropertyNames" href="qgalleryitemrequest.html#propertyNames-prop" location="qgalleryitemrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="propertyNames" type="void" signature="setPropertyNames(const QStringList &amp; names)">
                <parameter left="const QStringList &amp;" right="" name="names" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isLive" fullname="QGalleryItemRequest::isLive" href="qgalleryitemrequest.html#live-prop" location="qgalleryitemrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="live" type="bool" signature="isLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLive" fullname="QGalleryItemRequest::setLive" href="qgalleryitemrequest.html#live-prop" location="qgalleryitemrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="live" type="void" signature="setLive(bool live)">
                <parameter left="bool" right="" name="live" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemId" fullname="QGalleryItemRequest::itemId" href="qgalleryitemrequest.html#itemId-prop" location="qgalleryitemrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemId" type="QVariant" signature="itemId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemId" fullname="QGalleryItemRequest::setItemId" href="qgalleryitemrequest.html#itemId-prop" location="qgalleryitemrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="itemId" type="void" signature="setItemId(const QVariant &amp; id)">
                <parameter left="const QVariant &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="item" fullname="QGalleryItemRequest::item" href="qgalleryitemrequest.html#item-prop" location="qgalleryitemrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="item" type="QGalleryItemList *" signature="item() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemChanged" fullname="QGalleryItemRequest::itemChanged" href="qgalleryitemrequest.html#itemChanged" location="qgalleryitemrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemChanged(QGalleryItemList * item)">
                <parameter left="QGalleryItemList *" right="" name="item" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setResponse" fullname="QGalleryItemRequest::setResponse" href="qgalleryitemrequest.html#setResponse" location="qgalleryitemrequest.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setResponse(QGalleryAbstractResponse * response)">
                <parameter left="QGalleryAbstractResponse *" right="" name="response" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactFilter" href="qcontactfilter.html" location="qcontactfilter.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactFilter" fullname="QContactFilter::QContactFilter" href="qcontactfilter.html#QContactFilter" location="qcontactfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QContactFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactFilter" fullname="QContactFilter::~QContactFilter" href="qcontactfilter.html#dtor.QContactFilter" location="qcontactfilter.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QContactFilter" fullname="QContactFilter::QContactFilter" href="qcontactfilter.html#QContactFilter-2" location="qcontactfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QContactFilter(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QContactFilter::operator=" href="qcontactfilter.html#operator=" location="qcontactfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QContactFilter &amp;" signature="operator=(const QContactFilter &amp; other)">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FilterType" fullname="QContactFilter::FilterType" href="qcontactfilter.html#FilterType-enum" location="qcontactfilter.h">
                <value name="InvalidFilter" value="0"/>
                <value name="ContactDetailFilter" value="1"/>
                <value name="ContactDetailRangeFilter" value="2"/>
                <value name="ChangeLogFilter" value="3"/>
                <value name="ActionFilter" value="4"/>
                <value name="RelationshipFilter" value="5"/>
                <value name="IntersectionFilter" value="6"/>
                <value name="UnionFilter" value="7"/>
                <value name="LocalIdFilter" value="8"/>
                <value name="DefaultFilter" value="9"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QContactFilter::type" href="qcontactfilter.html#type" location="qcontactfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FilterType" signature="type() const"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MatchFlag" fullname="QContactFilter::MatchFlag" href="qcontactfilter.html#MatchFlag-enum" location="qcontactfilter.h" typedef="QContactFilter::MatchFlags">
                <value name="MatchExactly" value="Qt::MatchExactly"/>
                <value name="MatchContains" value="Qt::MatchContains"/>
                <value name="MatchStartsWith" value="Qt::MatchStartsWith"/>
                <value name="MatchEndsWith" value="Qt::MatchEndsWith"/>
                <value name="MatchFixedString" value="Qt::MatchFixedString"/>
                <value name="MatchCaseSensitive" value="Qt::MatchCaseSensitive"/>
                <value name="MatchPhoneNumber" value="1024"/>
                <value name="MatchKeypadCollation" value="2048"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="MatchFlags" fullname="QContactFilter::MatchFlags" href="qcontactfilter.html#MatchFlags-typedef" location="qcontactfilter.h" enum="QContactFilter::MatchFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QContactFilter::operator==" href="qcontactfilter.html#operator==" location="qcontactfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QContactFilter &amp; other) const">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QContactFilter::operator!=" href="qcontactfilter.html#operator!=" location="qcontactfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QContactFilter &amp; other) const">
                <parameter left="const QContactFilter &amp;" right="" name="other" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QContactFilter::d_ptr" href="qcontactfilter.html#d_ptr-var" location="qcontactfilter.h" type="QSharedDataPointer&lt;QContactFilterPrivate&gt;" static="false"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator&amp;" href="qcontactfilter.html#operator&amp;-3" location="qcontactfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" relates="QContactFilter" type="const Q_CONTACTS_EXPORT" signature="operator&amp;(const QContactFilter &amp; left, const QContactFilter &amp; right)">
            <parameter left="const QContactFilter &amp;" right="" name="left" default=""/>
            <parameter left="const QContactFilter &amp;" right="" name="right" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator|" href="qcontactfilter.html#operator|-3" location="qcontactfilter.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" relates="QContactFilter" type="const Q_CONTACTS_EXPORT" signature="operator|(const QContactFilter &amp; left, const QContactFilter &amp; right)">
            <parameter left="const QContactFilter &amp;" right="" name="left" default=""/>
            <parameter left="const QContactFilter &amp;" right="" name="right" default=""/>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QContactAbstractRequest" href="qcontactabstractrequest.html" location="qcontactabstractrequest.h" bases="" module="QtContacts">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QContactAbstractRequest" fullname="QContactAbstractRequest::~QContactAbstractRequest" href="qcontactabstractrequest.html#dtor.QContactAbstractRequest" location="qcontactabstractrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QContactAbstractRequest()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QContactAbstractRequest::State" href="qcontactabstractrequest.html#State-enum" location="qcontactabstractrequest.h">
                <value name="InactiveState" value="0"/>
                <value name="ActiveState" value="1"/>
                <value name="CanceledState" value="2"/>
                <value name="FinishedState" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QContactAbstractRequest::state" href="qcontactabstractrequest.html#state" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isInactive" fullname="QContactAbstractRequest::isInactive" href="qcontactabstractrequest.html#isInactive" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isInactive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActive" fullname="QContactAbstractRequest::isActive" href="qcontactabstractrequest.html#isActive" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isActive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFinished" fullname="QContactAbstractRequest::isFinished" href="qcontactabstractrequest.html#isFinished" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFinished() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isCanceled" fullname="QContactAbstractRequest::isCanceled" href="qcontactabstractrequest.html#isCanceled" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isCanceled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QContactAbstractRequest::error" href="qcontactabstractrequest.html#error" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactManager::Error" signature="error() const"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RequestType" fullname="QContactAbstractRequest::RequestType" href="qcontactabstractrequest.html#RequestType-enum" location="qcontactabstractrequest.h">
                <value name="InvalidRequest" value="0"/>
                <value name="ContactFetchRequest" value="1"/>
                <value name="ContactLocalIdFetchRequest" value="2"/>
                <value name="ContactRemoveRequest" value="3"/>
                <value name="ContactSaveRequest" value="4"/>
                <value name="DetailDefinitionFetchRequest" value="5"/>
                <value name="DetailDefinitionRemoveRequest" value="6"/>
                <value name="DetailDefinitionSaveRequest" value="7"/>
                <value name="RelationshipFetchRequest" value="8"/>
                <value name="RelationshipRemoveRequest" value="9"/>
                <value name="RelationshipSaveRequest" value="10"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QContactAbstractRequest::type" href="qcontactabstractrequest.html#type" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RequestType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manager" fullname="QContactAbstractRequest::manager" href="qcontactabstractrequest.html#manager" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QContactManager *" signature="manager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManager" fullname="QContactAbstractRequest::setManager" href="qcontactabstractrequest.html#setManager" location="qcontactabstractrequest.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManager(QContactManager * manager)">
                <parameter left="QContactManager *" right="" name="manager" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QContactAbstractRequest::start" href="qcontactabstractrequest.html#start" location="qcontactabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="QContactAbstractRequest::cancel" href="qcontactabstractrequest.html#cancel" location="qcontactabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="cancel()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="waitForFinished" fullname="QContactAbstractRequest::waitForFinished" href="qcontactabstractrequest.html#waitForFinished" location="qcontactabstractrequest.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="bool" signature="waitForFinished(int msecs)">
                <parameter left="int" right="" name="msecs" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QContactAbstractRequest::stateChanged" href="qcontactabstractrequest.html#stateChanged" location="qcontactabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QContactAbstractRequest::State newState)">
                <parameter left="QContactAbstractRequest::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resultsAvailable" fullname="QContactAbstractRequest::resultsAvailable" href="qcontactabstractrequest.html#resultsAvailable" location="qcontactabstractrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="resultsAvailable()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QContactAbstractRequest::d_ptr" href="qcontactabstractrequest.html#d_ptr-var" location="qcontactabstractrequest.h" type="QContactAbstractRequestPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGalleryCountRequest" href="qgallerycountrequest.html" location="qgallerycountrequest.h" bases="QGalleryAbstractRequest" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="live" fullname="QGalleryCountRequest::live" href="qgallerycountrequest.html#live-prop" location="qgallerycountrequest.h" type="bool">
                <getter name="isLive"/>
                <setter name="setLive"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QGalleryCountRequest::itemType" href="qgallerycountrequest.html#itemType-prop" location="qgallerycountrequest.h" type="QString">
                <getter name="itemType"/>
                <setter name="setItemType"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QGalleryCountRequest::filter" href="qgallerycountrequest.html#filter-prop" location="qgallerycountrequest.h" type="QGalleryFilter">
                <getter name="filter"/>
                <setter name="setFilter"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QGalleryCountRequest::scope" href="qgallerycountrequest.html#scope-prop" location="qgallerycountrequest.h" type="QGalleryAbstractRequest::Scope">
                <getter name="scope"/>
                <setter name="setScope"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="scopeItemId" fullname="QGalleryCountRequest::scopeItemId" href="qgallerycountrequest.html#scopeItemId-prop" location="qgallerycountrequest.h" type="QVariant">
                <getter name="scopeItemId"/>
                <setter name="setScopeItemId"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QGalleryCountRequest::count" href="qgallerycountrequest.html#count-prop" location="qgallerycountrequest.h" type="int">
                <getter name="count"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryCountRequest" fullname="QGalleryCountRequest::QGalleryCountRequest" href="qgallerycountrequest.html#QGalleryCountRequest" location="qgallerycountrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGalleryCountRequest(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGalleryCountRequest" fullname="QGalleryCountRequest::QGalleryCountRequest" href="qgallerycountrequest.html#QGalleryCountRequest-2" location="qgallerycountrequest.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QGalleryCountRequest(QAbstractGallery * gallery, QObject * parent)">
                <parameter left="QAbstractGallery *" right="" name="gallery" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGalleryCountRequest" fullname="QGalleryCountRequest::~QGalleryCountRequest" href="qgallerycountrequest.html#dtor.QGalleryCountRequest" location="qgallerycountrequest.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGalleryCountRequest()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isLive" fullname="QGalleryCountRequest::isLive" href="qgallerycountrequest.html#live-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="live" type="bool" signature="isLive() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLive" fullname="QGalleryCountRequest::setLive" href="qgallerycountrequest.html#live-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="live" type="void" signature="setLive(bool live)">
                <parameter left="bool" right="" name="live" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="QGalleryCountRequest::itemType" href="qgallerycountrequest.html#itemType-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="itemType" type="QString" signature="itemType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setItemType" fullname="QGalleryCountRequest::setItemType" href="qgallerycountrequest.html#itemType-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="itemType" type="void" signature="setItemType(const QString &amp; type)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QGalleryCountRequest::filter" href="qgallerycountrequest.html#filter-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="filter" type="QGalleryFilter" signature="filter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFilter" fullname="QGalleryCountRequest::setFilter" href="qgallerycountrequest.html#filter-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="filter" type="void" signature="setFilter(const QGalleryFilter &amp; filter)">
                <parameter left="const QGalleryFilter &amp;" right="" name="filter" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QGalleryCountRequest::scope" href="qgallerycountrequest.html#scope-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="scope" type="QGalleryAbstractRequest::Scope" signature="scope() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setScope" fullname="QGalleryCountRequest::setScope" href="qgallerycountrequest.html#scope-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="scope" type="void" signature="setScope(QGalleryAbstractRequest::Scope scope)">
                <parameter left="QGalleryAbstractRequest::Scope" right="" name="scope" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="scopeItemId" fullname="QGalleryCountRequest::scopeItemId" href="qgallerycountrequest.html#scopeItemId-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="scopeItemId" type="QVariant" signature="scopeItemId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setScopeItemId" fullname="QGalleryCountRequest::setScopeItemId" href="qgallerycountrequest.html#scopeItemId-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="scopeItemId" type="void" signature="setScopeItemId(const QVariant &amp; id)">
                <parameter left="const QVariant &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="count" fullname="QGalleryCountRequest::count" href="qgallerycountrequest.html#count-prop" location="qgallerycountrequest.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="count" type="int" signature="count() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="countChanged" fullname="QGalleryCountRequest::countChanged" href="qgallerycountrequest.html#countChanged" location="qgallerycountrequest.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="countChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setResponse" fullname="QGalleryCountRequest::setResponse" href="qgallerycountrequest.html#setResponse" location="qgallerycountrequest.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setResponse(QGalleryAbstractResponse * response)">
                <parameter left="QGalleryAbstractResponse *" right="" name="response" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIdFilter" href="qlandmarkidfilter.html" location="qlandmarkidfilter.h" bases="QLandmarkFilter" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MatchingScheme" fullname="QLandmarkIdFilter::MatchingScheme" href="qlandmarkidfilter.html#MatchingScheme-enum" location="qlandmarkidfilter.h">
                <value name="MatchAll" value="0"/>
                <value name="MatchSubset" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIdFilter" fullname="QLandmarkIdFilter::QLandmarkIdFilter" href="qlandmarkidfilter.html#QLandmarkIdFilter" location="qlandmarkidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkIdFilter(const QList&lt;QLandmarkId&gt; &amp; ids, MatchingScheme matchingScheme)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="ids" default="QList&lt;QLandmarkId&gt; ()"/>
                <parameter left="MatchingScheme" right="" name="matchingScheme" default="MatchSubset"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkIdFilter" fullname="QLandmarkIdFilter::QLandmarkIdFilter" href="qlandmarkidfilter.html#QLandmarkIdFilter-2" location="qlandmarkidfilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkIdFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkIdFilter" fullname="QLandmarkIdFilter::~QLandmarkIdFilter" href="qlandmarkidfilter.html#dtor.QLandmarkIdFilter" location="qlandmarkidfilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkIdFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="landmarkIds" fullname="QLandmarkIdFilter::landmarkIds" href="qlandmarkidfilter.html#landmarkIds" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkId&gt;" signature="landmarkIds() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLandmarkIds" fullname="QLandmarkIdFilter::setLandmarkIds" href="qlandmarkidfilter.html#setLandmarkIds" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setLandmarkIds(const QList&lt;QLandmarkId&gt; &amp; ids)">
                <parameter left="const QList&lt;QLandmarkId&gt; &amp;" right="" name="ids" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="append" fullname="QLandmarkIdFilter::append" href="qlandmarkidfilter.html#append" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="append(const QLandmarkId &amp; id)">
                <parameter left="const QLandmarkId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="remove" fullname="QLandmarkIdFilter::remove" href="qlandmarkidfilter.html#remove" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="remove(const QLandmarkId &amp; id)">
                <parameter left="const QLandmarkId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QLandmarkIdFilter::clear" href="qlandmarkidfilter.html#clear" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchingScheme" fullname="QLandmarkIdFilter::matchingScheme" href="qlandmarkidfilter.html#matchingScheme" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MatchingScheme" signature="matchingScheme() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchingScheme" fullname="QLandmarkIdFilter::setMatchingScheme" href="qlandmarkidfilter.html#setMatchingScheme" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchingScheme(MatchingScheme matchingScheme)">
                <parameter left="MatchingScheme" right="" name="matchingScheme" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator&lt;&lt;" fullname="QLandmarkIdFilter::operator&lt;&lt;" href="qlandmarkidfilter.html#operator&lt;&lt;" location="qlandmarkidfilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkIdFilter &amp;" signature="operator&lt;&lt;(const QLandmarkId &amp; id)">
                <parameter left="const QLandmarkId &amp;" right="" name="id" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QSystemInfo" href="qsysteminfo.html" location="qsystemgeneralinfo.h" bases="" module="QtSystemInfo">
            <property access="public" threadsafety="unspecified" status="commendable" name="currentLanguage" fullname="QSystemInfo::currentLanguage" href="qsysteminfo.html#currentLanguage-prop" location="qsystemgeneralinfo.h" type="QString">
                <getter name="currentLanguage"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="availableLanguages" fullname="QSystemInfo::availableLanguages" href="qsysteminfo.html#availableLanguages-prop" location="qsystemgeneralinfo.h" type="QStringList">
                <getter name="availableLanguages"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentCountryCode" fullname="QSystemInfo::currentCountryCode" href="qsysteminfo.html#currentCountryCode-prop" location="qsystemgeneralinfo.h" type="QString">
                <getter name="currentCountryCode"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QSystemInfo" fullname="QSystemInfo::QSystemInfo" href="qsysteminfo.html#QSystemInfo" location="qsysteminfo.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSystemInfo(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSystemInfo" fullname="QSystemInfo::~QSystemInfo" href="qsysteminfo.html#dtor.QSystemInfo" location="qsystemgeneralinfo.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSystemInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentLanguage" fullname="QSystemInfo::currentLanguage" href="qsysteminfo.html#currentLanguage-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentLanguage" type="QString" signature="currentLanguage()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableLanguages" fullname="QSystemInfo::availableLanguages" href="qsysteminfo.html#availableLanguages-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="availableLanguages" type="QStringList" signature="availableLanguages()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentCountryCode" fullname="QSystemInfo::currentCountryCode" href="qsysteminfo.html#currentCountryCode-prop" location="qsysteminfo.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="currentCountryCode" type="QString" signature="currentCountryCode()"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Version" fullname="QSystemInfo::Version" href="qsysteminfo.html#Version-enum" location="qsystemgeneralinfo.h">
                <value name="Os" value="1"/>
                <value name="QtCore" value="2"/>
                <value name="Firmware" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="version" fullname="QSystemInfo::version" href="qsysteminfo.html#version" location="qsystemgeneralinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QString" signature="version(QSystemInfo::Version type, const QString &amp; parameter)">
                <parameter left="QSystemInfo::Version" right="" name="type" default=""/>
                <parameter left="const QString &amp;" right="" name="parameter" default="QString()"/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Feature" fullname="QSystemInfo::Feature" href="qsysteminfo.html#Feature-enum" location="qsystemgeneralinfo.h">
                <value name="BluetoothFeature" value="0"/>
                <value name="CameraFeature" value="1"/>
                <value name="FmradioFeature" value="2"/>
                <value name="IrFeature" value="3"/>
                <value name="LedFeature" value="4"/>
                <value name="MemcardFeature" value="5"/>
                <value name="UsbFeature" value="6"/>
                <value name="VibFeature" value="7"/>
                <value name="WlanFeature" value="8"/>
                <value name="SimFeature" value="9"/>
                <value name="LocationFeature" value="10"/>
                <value name="VideoOutFeature" value="11"/>
                <value name="HapticsFeature" value="12"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="hasFeatureSupported" fullname="QSystemInfo::hasFeatureSupported" href="qsysteminfo.html#hasFeatureSupported" location="qsystemgeneralinfo.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="hasFeatureSupported(QSystemInfo::Feature feature)">
                <parameter left="QSystemInfo::Feature" right="" name="feature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentLanguageChanged" fullname="QSystemInfo::currentLanguageChanged" href="qsysteminfo.html#currentLanguageChanged" location="qsystemgeneralinfo.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentLanguageChanged(const QString &amp; lang)">
                <parameter left="const QString &amp;" right="" name="lang" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QProximityReading" href="qproximityreading.html" location="qproximitysensor.h" bases="QSensorReading" module="">
            <target name="qproximityreading-units"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QProximityReading::close" href="qproximityreading.html#close-prop" location="qproximitysensor.h" type="bool">
                <getter name="close"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="close" fullname="QProximityReading::close" href="qproximityreading.html#close-prop" location="qproximitysensor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="close" type="bool" signature="close() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setClose" fullname="QProximityReading::setClose" href="qproximityreading.html#setClose" location="qproximitysensor.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setClose(bool close)">
                <parameter left="bool" right="" name="close" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QProximityFilter" href="qproximityfilter.html" location="qproximitysensor.h" bases="QSensorFilter" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="QProximityFilter::filter" href="qproximityfilter.html#filter" location="qproximitysensor.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="filter(QProximityReading * reading)">
                <parameter left="QProximityReading *" right="" name="reading" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QProximitySensor" href="qproximitysensor.html" location="qproximitysensor.h" bases="QSensor" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QProximitySensor" fullname="QProximitySensor::QProximitySensor" href="qproximitysensor.html#QProximitySensor" location="qproximitysensor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QProximitySensor(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QProximitySensor" fullname="QProximitySensor::~QProximitySensor" href="qproximitysensor.html#dtor.QProximitySensor" location="qproximitysensor.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QProximitySensor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="QProximitySensor::reading" href="qproximitysensor.html#reading" location="qproximitysensor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QProximityReading *" signature="reading() const"/>
            <variable access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QProximitySensor::type" href="qproximitysensor.html#type-var" location="qproximitysensor.h" type="char const * const" static="true"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoSearchManagerEngine" href="qgeosearchmanagerengine.html" location="qgeosearchmanagerengine.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoSearchManagerEngine" fullname="QGeoSearchManagerEngine::QGeoSearchManagerEngine" href="qgeosearchmanagerengine.html#QGeoSearchManagerEngine" location="qgeosearchmanagerengine.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoSearchManagerEngine(const QMap&lt;QString, QString&gt; &amp; parameters, QObject * parent)">
                <parameter left="const QMap&lt;QString, QString&gt; &amp;" right="" name="parameters" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoSearchManagerEngine" fullname="QGeoSearchManagerEngine::~QGeoSearchManagerEngine" href="qgeosearchmanagerengine.html#dtor.QGeoSearchManagerEngine" location="qgeosearchmanagerengine.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoSearchManagerEngine()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QGeoSearchManagerEngine::managerName" href="qgeosearchmanagerengine.html#managerName" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QGeoSearchManagerEngine::managerParameters" href="qgeosearchmanagerengine.html#managerParameters" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QGeoSearchManagerEngine::managerVersion" href="qgeosearchmanagerengine.html#managerVersion" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="geocode" fullname="QGeoSearchManagerEngine::geocode" href="qgeosearchmanagerengine.html#geocode" location="qgeosearchmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QGeoSearchReply *" signature="geocode(const QGeoAddress &amp; address, const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QGeoAddress &amp;" right="" name="address" default=""/>
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="geocode" fullname="QGeoSearchManagerEngine::geocode" href="qgeosearchmanagerengine.html#geocode-2" location="qgeosearchmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QGeoSearchReply *" signature="geocode(const QGeoCoordinate &amp; coordinate, const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="placeSearch" fullname="QGeoSearchManagerEngine::placeSearch" href="qgeosearchmanagerengine.html#placeSearch" location="qgeosearchmanagerengine.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QGeoSearchReply *" signature="placeSearch(const QString &amp; searchString, QFlags&lt;QGeoSearchManager::SearchType&gt; searchTypes, const QGeoBoundingBox &amp; bounds)">
                <parameter left="const QString &amp;" right="" name="searchString" default=""/>
                <parameter left="QFlags&lt;QGeoSearchManager::SearchType&gt;" right="" name="searchTypes" default=""/>
                <parameter left="const QGeoBoundingBox &amp;" right="" name="bounds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsGeocoding" fullname="QGeoSearchManagerEngine::supportsGeocoding" href="qgeosearchmanagerengine.html#supportsGeocoding" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsGeocoding() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSearchTypes" fullname="QGeoSearchManagerEngine::supportedSearchTypes" href="qgeosearchmanagerengine.html#supportedSearchTypes" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoSearchManager::SearchTypes" signature="supportedSearchTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultLandmarkManager" fullname="QGeoSearchManagerEngine::defaultLandmarkManager" href="qgeosearchmanagerengine.html#defaultLandmarkManager" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkManager *" signature="defaultLandmarkManager() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAdditionalLandmarkManagers" fullname="QGeoSearchManagerEngine::setAdditionalLandmarkManagers" href="qgeosearchmanagerengine.html#setAdditionalLandmarkManagers" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAdditionalLandmarkManagers(const QList&lt;QLandmarkManager *&gt; &amp; landmarkManagers)">
                <parameter left="const QList&lt;QLandmarkManager *&gt; &amp;" right="" name="landmarkManagers" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="additionalLandmarkManagers" fullname="QGeoSearchManagerEngine::additionalLandmarkManagers" href="qgeosearchmanagerengine.html#additionalLandmarkManagers" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QLandmarkManager *&gt;" signature="additionalLandmarkManagers() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAdditionalLandmarkManager" fullname="QGeoSearchManagerEngine::addAdditionalLandmarkManager" href="qgeosearchmanagerengine.html#addAdditionalLandmarkManager" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addAdditionalLandmarkManager(QLandmarkManager * landmarkManager)">
                <parameter left="QLandmarkManager *" right="" name="landmarkManager" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGeoSearchManagerEngine::finished" href="qgeosearchmanagerengine.html#finished" location="qgeosearchmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished(QGeoSearchReply * reply)">
                <parameter left="QGeoSearchReply *" right="" name="reply" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoSearchManagerEngine::error" href="qgeosearchmanagerengine.html#error" location="qgeosearchmanagerengine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(QGeoSearchReply * reply, QGeoSearchReply::Error error, QString errorString)">
                <parameter left="QGeoSearchReply *" right="" name="reply" default=""/>
                <parameter left="QGeoSearchReply::Error" right="" name="error" default=""/>
                <parameter left="QString" right="" name="errorString" default="QString()"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setDefaultLandmarkManager" fullname="QGeoSearchManagerEngine::setDefaultLandmarkManager" href="qgeosearchmanagerengine.html#setDefaultLandmarkManager" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultLandmarkManager(QLandmarkManager * landmarkManager)">
                <parameter left="QLandmarkManager *" right="" name="landmarkManager" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportsGeocoding" fullname="QGeoSearchManagerEngine::setSupportsGeocoding" href="qgeosearchmanagerengine.html#setSupportsGeocoding" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportsGeocoding(bool supported)">
                <parameter left="bool" right="" name="supported" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="setSupportedSearchTypes" fullname="QGeoSearchManagerEngine::setSupportedSearchTypes" href="qgeosearchmanagerengine.html#setSupportedSearchTypes" location="qgeosearchmanagerengine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSupportedSearchTypes(QFlags&lt;QGeoSearchManager::SearchType&gt; searchTypes)">
                <parameter left="QFlags&lt;QGeoSearchManager::SearchType&gt;" right="" name="searchTypes" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFeedbackHapticsInterface" href="qfeedbackhapticsinterface.html" location="qfeedbackplugininterfaces.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="EffectProperty" fullname="QFeedbackHapticsInterface::EffectProperty" href="qfeedbackhapticsinterface.html#EffectProperty-enum" location="qfeedbackplugininterfaces.h">
                <value name="Duration" value="0"/>
                <value name="Intensity" value="1"/>
                <value name="AttackTime" value="2"/>
                <value name="AttackIntensity" value="3"/>
                <value name="FadeTime" value="4"/>
                <value name="FadeIntensity" value="5"/>
                <value name="Period" value="6"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ActuatorProperty" fullname="QFeedbackHapticsInterface::ActuatorProperty" href="qfeedbackhapticsinterface.html#ActuatorProperty-enum" location="qfeedbackplugininterfaces.h">
                <value name="Name" value="0"/>
                <value name="State" value="1"/>
                <value name="Enabled" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="actuators" fullname="QFeedbackHapticsInterface::actuators" href="qfeedbackhapticsinterface.html#actuators" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QFeedbackActuator&gt;" signature="actuators()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFeedbackHapticsInterface" fullname="QFeedbackHapticsInterface::~QFeedbackHapticsInterface" href="qfeedbackhapticsinterface.html#dtor.QFeedbackHapticsInterface" location="qfeedbackplugininterfaces.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFeedbackHapticsInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pluginPriority" fullname="QFeedbackHapticsInterface::pluginPriority" href="qfeedbackhapticsinterface.html#pluginPriority" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="PluginPriority" signature="pluginPriority()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActuatorProperty" fullname="QFeedbackHapticsInterface::setActuatorProperty" href="qfeedbackhapticsinterface.html#setActuatorProperty" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setActuatorProperty(const QFeedbackActuator &amp; actuator, ActuatorProperty property, const QVariant &amp; priority)">
                <parameter left="const QFeedbackActuator &amp;" right="" name="actuator" default=""/>
                <parameter left="ActuatorProperty" right="" name="property" default=""/>
                <parameter left="const QVariant &amp;" right="" name="priority" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actuatorProperty" fullname="QFeedbackHapticsInterface::actuatorProperty" href="qfeedbackhapticsinterface.html#actuatorProperty" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QVariant" signature="actuatorProperty(const QFeedbackActuator &amp; actuator, ActuatorProperty property)">
                <parameter left="const QFeedbackActuator &amp;" right="" name="actuator" default=""/>
                <parameter left="ActuatorProperty" right="" name="property" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isActuatorCapabilitySupported" fullname="QFeedbackHapticsInterface::isActuatorCapabilitySupported" href="qfeedbackhapticsinterface.html#isActuatorCapabilitySupported" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isActuatorCapabilitySupported(const QFeedbackActuator &amp; actuator, QFeedbackActuator::Capability capability)">
                <parameter left="const QFeedbackActuator &amp;" right="" name="actuator" default=""/>
                <parameter left="QFeedbackActuator::Capability" right="" name="capability" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateEffectProperty" fullname="QFeedbackHapticsInterface::updateEffectProperty" href="qfeedbackhapticsinterface.html#updateEffectProperty" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateEffectProperty(const QFeedbackHapticsEffect * effect, EffectProperty property)">
                <parameter left="const QFeedbackHapticsEffect *" right="" name="effect" default=""/>
                <parameter left="EffectProperty" right="" name="property" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEffectState" fullname="QFeedbackHapticsInterface::setEffectState" href="qfeedbackhapticsinterface.html#setEffectState" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setEffectState(const QFeedbackHapticsEffect * effect, QFeedbackEffect::State state)">
                <parameter left="const QFeedbackHapticsEffect *" right="" name="effect" default=""/>
                <parameter left="QFeedbackEffect::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="effectState" fullname="QFeedbackHapticsInterface::effectState" href="qfeedbackhapticsinterface.html#effectState" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QFeedbackEffect::State" signature="effectState(const QFeedbackHapticsEffect * effect)">
                <parameter left="const QFeedbackHapticsEffect *" right="" name="effect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QFeedbackHapticsInterface::instance" href="qfeedbackhapticsinterface.html#instance" location="qfeedbackplugin.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QFeedbackHapticsInterface *" signature="instance()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="createFeedbackActuator" fullname="QFeedbackHapticsInterface::createFeedbackActuator" href="qfeedbackhapticsinterface.html#createFeedbackActuator" location="qfeedbackplugin.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QFeedbackActuator" signature="createFeedbackActuator(int id)">
                <parameter left="int" right="" name="id" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFeedbackThemeInterface" href="qfeedbackthemeinterface.html" location="qfeedbackplugininterfaces.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFeedbackThemeInterface" fullname="QFeedbackThemeInterface::~QFeedbackThemeInterface" href="qfeedbackthemeinterface.html#dtor.QFeedbackThemeInterface" location="qfeedbackplugininterfaces.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFeedbackThemeInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pluginPriority" fullname="QFeedbackThemeInterface::pluginPriority" href="qfeedbackthemeinterface.html#pluginPriority" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="PluginPriority" signature="pluginPriority()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QFeedbackThemeInterface::play" href="qfeedbackthemeinterface.html#play" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="play(QFeedbackEffect::ThemeEffect effect)">
                <parameter left="QFeedbackEffect::ThemeEffect" right="" name="effect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QFeedbackThemeInterface::instance" href="qfeedbackthemeinterface.html#instance" location="qfeedbackplugin.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QFeedbackThemeInterface *" signature="instance()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QFeedbackFileInterface" href="qfeedbackfileinterface.html" location="qfeedbackplugininterfaces.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QFeedbackFileInterface" fullname="QFeedbackFileInterface::~QFeedbackFileInterface" href="qfeedbackfileinterface.html#dtor.QFeedbackFileInterface" location="qfeedbackplugininterfaces.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QFeedbackFileInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLoaded" fullname="QFeedbackFileInterface::setLoaded" href="qfeedbackfileinterface.html#setLoaded" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setLoaded(QFeedbackFileEffect * effect, bool value)">
                <parameter left="QFeedbackFileEffect *" right="" name="effect" default=""/>
                <parameter left="bool" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEffectState" fullname="QFeedbackFileInterface::setEffectState" href="qfeedbackfileinterface.html#setEffectState" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setEffectState(QFeedbackFileEffect * effect, QFeedbackEffect::State state)">
                <parameter left="QFeedbackFileEffect *" right="" name="effect" default=""/>
                <parameter left="QFeedbackEffect::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="effectState" fullname="QFeedbackFileInterface::effectState" href="qfeedbackfileinterface.html#effectState" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QFeedbackEffect::State" signature="effectState(const QFeedbackFileEffect * effect)">
                <parameter left="const QFeedbackFileEffect *" right="" name="effect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="effectDuration" fullname="QFeedbackFileInterface::effectDuration" href="qfeedbackfileinterface.html#effectDuration" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="int" signature="effectDuration(const QFeedbackFileEffect * effect)">
                <parameter left="const QFeedbackFileEffect *" right="" name="effect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMimeTypes" fullname="QFeedbackFileInterface::supportedMimeTypes" href="qfeedbackfileinterface.html#supportedMimeTypes" location="qfeedbackplugininterfaces.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QStringList" signature="supportedMimeTypes()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="instance" fullname="QFeedbackFileInterface::instance" href="qfeedbackfileinterface.html#instance" location="qfeedbackplugin.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QFeedbackFileInterface *" signature="instance()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="reportLoadFinished" fullname="QFeedbackFileInterface::reportLoadFinished" href="qfeedbackfileinterface.html#reportLoadFinished" location="qfeedbackplugin.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="void" signature="reportLoadFinished(QFeedbackFileEffect * effect, bool success)">
                <parameter left="QFeedbackFileEffect *" right="" name="effect" default=""/>
                <parameter left="bool" right="" name="success" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html" location="qserviceinterfacedescriptor.h" bases="" module="">
            <contents name="namespaces" title="Namespaces" level="1"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Attribute" fullname="QServiceInterfaceDescriptor::Attribute" href="qserviceinterfacedescriptor.html#Attribute-enum" location="qserviceinterfacedescriptor.h">
                <value name="Capabilities" value="0"/>
                <value name="Location" value="1"/>
                <value name="ServiceDescription" value="2"/>
                <value name="InterfaceDescription" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceInterfaceDescriptor" fullname="QServiceInterfaceDescriptor::QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html#QServiceInterfaceDescriptor" location="qserviceinterfacedescriptor.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QServiceInterfaceDescriptor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QServiceInterfaceDescriptor" fullname="QServiceInterfaceDescriptor::QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html#QServiceInterfaceDescriptor-2" location="qserviceinterfacedescriptor.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QServiceInterfaceDescriptor(const QServiceInterfaceDescriptor &amp; other)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QServiceInterfaceDescriptor" fullname="QServiceInterfaceDescriptor::~QServiceInterfaceDescriptor" href="qserviceinterfacedescriptor.html#dtor.QServiceInterfaceDescriptor" location="qserviceinterfacedescriptor.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QServiceInterfaceDescriptor()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QServiceInterfaceDescriptor::operator=" href="qserviceinterfacedescriptor.html#operator=" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QServiceInterfaceDescriptor &amp;" signature="operator=(const QServiceInterfaceDescriptor &amp; other)">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QServiceInterfaceDescriptor::operator==" href="qserviceinterfacedescriptor.html#operator==" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QServiceInterfaceDescriptor &amp; other) const">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QServiceInterfaceDescriptor::operator!=" href="qserviceinterfacedescriptor.html#operator!=" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QServiceInterfaceDescriptor &amp; other) const">
                <parameter left="const QServiceInterfaceDescriptor &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="serviceName" fullname="QServiceInterfaceDescriptor::serviceName" href="qserviceinterfacedescriptor.html#serviceName" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="serviceName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interfaceName" fullname="QServiceInterfaceDescriptor::interfaceName" href="qserviceinterfacedescriptor.html#interfaceName" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="interfaceName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="majorVersion" fullname="QServiceInterfaceDescriptor::majorVersion" href="qserviceinterfacedescriptor.html#majorVersion" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="majorVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minorVersion" fullname="QServiceInterfaceDescriptor::minorVersion" href="qserviceinterfacedescriptor.html#minorVersion" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="minorVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QServiceInterfaceDescriptor::isValid" href="qserviceinterfacedescriptor.html#isValid" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="QServiceInterfaceDescriptor::scope" href="qserviceinterfacedescriptor.html#scope" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QService::Scope" signature="scope() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QServiceInterfaceDescriptor::attribute" href="qserviceinterfacedescriptor.html#attribute" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attribute(QServiceInterfaceDescriptor::Attribute which) const">
                <parameter left="QServiceInterfaceDescriptor::Attribute" right="" name="which" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customAttribute" fullname="QServiceInterfaceDescriptor::customAttribute" href="qserviceinterfacedescriptor.html#customAttribute" location="qserviceinterfacedescriptor.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="customAttribute(const QString &amp; which) const">
                <parameter left="const QString &amp;" right="" name="which" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customAttributes" fullname="QServiceInterfaceDescriptor::customAttributes" href="qserviceinterfacedescriptor.html#customAttributes" location="qserviceinterfacedescriptor.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="customAttributes() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioEndpointSelector" href="qaudioendpointselector.html" location="qaudioendpointselector.h" bases="QMediaControl" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioEndpointSelector" fullname="QAudioEndpointSelector::~QAudioEndpointSelector" href="qaudioendpointselector.html#dtor.QAudioEndpointSelector" location="qaudioendpointselector.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioEndpointSelector()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableEndpoints" fullname="QAudioEndpointSelector::availableEndpoints" href="qaudioendpointselector.html#availableEndpoints" location="qaudioendpointselector.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="availableEndpoints() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="endpointDescription" fullname="QAudioEndpointSelector::endpointDescription" href="qaudioendpointselector.html#endpointDescription" location="qaudioendpointselector.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="endpointDescription(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultEndpoint" fullname="QAudioEndpointSelector::defaultEndpoint" href="qaudioendpointselector.html#defaultEndpoint" location="qaudioendpointselector.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="defaultEndpoint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeEndpoint" fullname="QAudioEndpointSelector::activeEndpoint" href="qaudioendpointselector.html#activeEndpoint" location="qaudioendpointselector.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="activeEndpoint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActiveEndpoint" fullname="QAudioEndpointSelector::setActiveEndpoint" href="qaudioendpointselector.html#setActiveEndpoint" location="qaudioendpointselector.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="setActiveEndpoint(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeEndpointChanged" fullname="QAudioEndpointSelector::activeEndpointChanged" href="qaudioendpointselector.html#activeEndpointChanged" location="qaudioendpointselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeEndpointChanged(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableEndpointsChanged" fullname="QAudioEndpointSelector::availableEndpointsChanged" href="qaudioendpointselector.html#availableEndpointsChanged" location="qaudioendpointselector.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="availableEndpointsChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAudioEndpointSelector" fullname="QAudioEndpointSelector::QAudioEndpointSelector" href="qaudioendpointselector.html#QAudioEndpointSelector" location="qaudioendpointselector.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioEndpointSelector(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailRangeFilter" href="qorganizeritemdetailrangefilter.html" location="qorganizeritemdetailrangefilter.h" bases="QOrganizerItemFilter" module="QtOrganizer">
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailRangeFilter" fullname="QOrganizerItemDetailRangeFilter::QOrganizerItemDetailRangeFilter" href="qorganizeritemdetailrangefilter.html#QOrganizerItemDetailRangeFilter" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QOrganizerItemDetailRangeFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QOrganizerItemDetailRangeFilter" fullname="QOrganizerItemDetailRangeFilter::QOrganizerItemDetailRangeFilter" href="qorganizeritemdetailrangefilter.html#QOrganizerItemDetailRangeFilter-2" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QOrganizerItemDetailRangeFilter(const QOrganizerItemFilter &amp; other)">
                <parameter left="const QOrganizerItemFilter &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RangeFlag" fullname="QOrganizerItemDetailRangeFilter::RangeFlag" href="qorganizeritemdetailrangefilter.html#RangeFlag-enum" location="qorganizeritemdetailrangefilter.h" typedef="QOrganizerItemDetailRangeFilter::RangeFlags">
                <value name="IncludeLower" value="0"/>
                <value name="IncludeUpper" value="1"/>
                <value name="ExcludeLower" value="2"/>
                <value name="ExcludeUpper" value="0"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="RangeFlags" fullname="QOrganizerItemDetailRangeFilter::RangeFlags" href="qorganizeritemdetailrangefilter.html#RangeFlags-typedef" location="qorganizeritemdetailrangefilter.h" enum="QOrganizerItemDetailRangeFilter::RangeFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDetailDefinitionName" fullname="QOrganizerItemDetailRangeFilter::setDetailDefinitionName" href="qorganizeritemdetailrangefilter.html#setDetailDefinitionName" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDetailDefinitionName(const QString &amp; definitionName, const QString &amp; fieldName)">
                <parameter left="const QString &amp;" right="" name="definitionName" default=""/>
                <parameter left="const QString &amp;" right="" name="fieldName" default="QString()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMatchFlags" fullname="QOrganizerItemDetailRangeFilter::setMatchFlags" href="qorganizeritemdetailrangefilter.html#setMatchFlags" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMatchFlags(QFlags&lt;QOrganizerItemFilter::MatchFlag&gt; flags)">
                <parameter left="QFlags&lt;QOrganizerItemFilter::MatchFlag&gt;" right="" name="flags" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRange" fullname="QOrganizerItemDetailRangeFilter::setRange" href="qorganizeritemdetailrangefilter.html#setRange" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setRange(const QVariant &amp; min, const QVariant &amp; max, QFlags&lt;QOrganizerItemDetailRangeFilter::RangeFlag&gt; flags)">
                <parameter left="const QVariant &amp;" right="" name="min" default=""/>
                <parameter left="const QVariant &amp;" right="" name="max" default=""/>
                <parameter left="QFlags&lt;QOrganizerItemDetailRangeFilter::RangeFlag&gt;" right="" name="flags" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailDefinitionName" fullname="QOrganizerItemDetailRangeFilter::detailDefinitionName" href="qorganizeritemdetailrangefilter.html#detailDefinitionName" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailDefinitionName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="detailFieldName" fullname="QOrganizerItemDetailRangeFilter::detailFieldName" href="qorganizeritemdetailrangefilter.html#detailFieldName" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="detailFieldName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="matchFlags" fullname="QOrganizerItemDetailRangeFilter::matchFlags" href="qorganizeritemdetailrangefilter.html#matchFlags" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QOrganizerItemFilter::MatchFlags" signature="matchFlags() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minValue" fullname="QOrganizerItemDetailRangeFilter::minValue" href="qorganizeritemdetailrangefilter.html#minValue" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="minValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maxValue" fullname="QOrganizerItemDetailRangeFilter::maxValue" href="qorganizeritemdetailrangefilter.html#maxValue" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="maxValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="rangeFlags" fullname="QOrganizerItemDetailRangeFilter::rangeFlags" href="qorganizeritemdetailrangefilter.html#rangeFlags" location="qorganizeritemdetailrangefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="RangeFlags" signature="rangeFlags() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaImageViewer" href="qmediaimageviewer.html" location="qmediaimageviewer.h" bases="QMediaObject" module="QtMultimediaKit">
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaImageViewer::state" href="qmediaimageviewer.html#state-prop" location="qmediaimageviewer.h" type="State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaImageViewer::mediaStatus" href="qmediaimageviewer.html#mediaStatus-prop" location="qmediaimageviewer.h" type="MediaStatus">
                <getter name="mediaStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaImageViewer::media" href="qmediaimageviewer.html#media-prop" location="qmediaimageviewer.h" type="QMediaContent">
                <getter name="media"/>
                <setter name="setMedia"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="timeout" fullname="QMediaImageViewer::timeout" href="qmediaimageviewer.html#timeout-prop" location="qmediaimageviewer.h" type="int">
                <getter name="timeout"/>
                <setter name="setTimeout"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="elapsedTime" fullname="QMediaImageViewer::elapsedTime" href="qmediaimageviewer.html#elapsedTime-prop" location="qmediaimageviewer.h" type="int">
                <getter name="elapsedTime"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaImageViewer::State" href="qmediaimageviewer.html#State-enum" location="qmediaimageviewer.h">
                <value name="StoppedState" value="0"/>
                <value name="PlayingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MediaStatus" fullname="QMediaImageViewer::MediaStatus" href="qmediaimageviewer.html#MediaStatus-enum" location="qmediaimageviewer.h">
                <value name="NoMedia" value="0"/>
                <value name="LoadingMedia" value="1"/>
                <value name="LoadedMedia" value="2"/>
                <value name="InvalidMedia" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaImageViewer" fullname="QMediaImageViewer::QMediaImageViewer" href="qmediaimageviewer.html#QMediaImageViewer" location="qmediaimageviewer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaImageViewer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaImageViewer" fullname="QMediaImageViewer::~QMediaImageViewer" href="qmediaimageviewer.html#dtor.QMediaImageViewer" location="qmediaimageviewer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaImageViewer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaImageViewer::state" href="qmediaimageviewer.html#state-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaImageViewer::mediaStatus" href="qmediaimageviewer.html#mediaStatus-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="mediaStatus" type="MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaImageViewer::media" href="qmediaimageviewer.html#media-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="media" type="QMediaContent" signature="media() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlist" fullname="QMediaImageViewer::playlist" href="qmediaimageviewer.html#playlist" location="qmediaimageviewer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylist *" signature="playlist() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeout" fullname="QMediaImageViewer::timeout" href="qmediaimageviewer.html#timeout-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="timeout" type="int" signature="timeout() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="elapsedTime" fullname="QMediaImageViewer::elapsedTime" href="qmediaimageviewer.html#elapsedTime-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="elapsedTime" type="int" signature="elapsedTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMedia" fullname="QMediaImageViewer::setMedia" href="qmediaimageviewer.html#media-prop" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="media" type="void" signature="setMedia(const QMediaContent &amp; media)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylist" fullname="QMediaImageViewer::setPlaylist" href="qmediaimageviewer.html#setPlaylist" location="qmediaimageviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="setPlaylist(QMediaPlaylist * playlist)">
                <parameter left="QMediaPlaylist *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaImageViewer::play" href="qmediaimageviewer.html#play" location="qmediaimageviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaImageViewer::pause" href="qmediaimageviewer.html#pause" location="qmediaimageviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaImageViewer::stop" href="qmediaimageviewer.html#stop" location="qmediaimageviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimeout" fullname="QMediaImageViewer::setTimeout" href="qmediaimageviewer.html#timeout-prop" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="timeout" type="void" signature="setTimeout(int timeout)">
                <parameter left="int" right="" name="timeout" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaImageViewer::stateChanged" href="qmediaimageviewer.html#stateChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaImageViewer::State state)">
                <parameter left="QMediaImageViewer::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaImageViewer::mediaStatusChanged" href="qmediaimageviewer.html#mediaStatusChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaImageViewer::MediaStatus status)">
                <parameter left="QMediaImageViewer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaChanged" fullname="QMediaImageViewer::mediaChanged" href="qmediaimageviewer.html#mediaChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaChanged(const QMediaContent &amp; media)">
                <parameter left="const QMediaContent &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="elapsedTimeChanged" fullname="QMediaImageViewer::elapsedTimeChanged" href="qmediaimageviewer.html#elapsedTimeChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="elapsedTimeChanged(int time)">
                <parameter left="int" right="" name="time" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategory" href="qlandmarkcategory.html" location="qlandmarkcategory.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategory" fullname="QLandmarkCategory::QLandmarkCategory" href="qlandmarkcategory.html#QLandmarkCategory" location="qlandmarkcategory.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkCategory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkCategory" fullname="QLandmarkCategory::QLandmarkCategory" href="qlandmarkcategory.html#QLandmarkCategory-2" location="qlandmarkcategory.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkCategory(const QLandmarkCategory &amp; other)">
                <parameter left="const QLandmarkCategory &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkCategory" fullname="QLandmarkCategory::~QLandmarkCategory" href="qlandmarkcategory.html#dtor.QLandmarkCategory" location="qlandmarkcategory.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkCategory()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QLandmarkCategory::operator=" href="qlandmarkcategory.html#operator=" location="qlandmarkcategory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QLandmarkCategory &amp;" signature="operator=(const QLandmarkCategory &amp; other)">
                <parameter left="const QLandmarkCategory &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QLandmarkCategory::operator==" href="qlandmarkcategory.html#operator==" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QLandmarkCategory &amp; other) const">
                <parameter left="const QLandmarkCategory &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QLandmarkCategory::operator!=" href="qlandmarkcategory.html#operator!=" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QLandmarkCategory &amp; other) const">
                <parameter left="const QLandmarkCategory &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QLandmarkCategory::name" href="qlandmarkcategory.html#name" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QLandmarkCategory::setName" href="qlandmarkcategory.html#setName" location="qlandmarkcategory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="iconUrl" fullname="QLandmarkCategory::iconUrl" href="qlandmarkcategory.html#iconUrl" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="iconUrl() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setIconUrl" fullname="QLandmarkCategory::setIconUrl" href="qlandmarkcategory.html#setIconUrl" location="qlandmarkcategory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setIconUrl(const QUrl &amp; url)">
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QLandmarkCategory::description" href="qlandmarkcategory.html#description" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="description() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDescription" fullname="QLandmarkCategory::setDescription" href="qlandmarkcategory.html#setDescription" location="qlandmarkcategory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDescription(const QString &amp; description)">
                <parameter left="const QString &amp;" right="" name="description" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="categoryId" fullname="QLandmarkCategory::categoryId" href="qlandmarkcategory.html#categoryId" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QLandmarkCategoryId" signature="categoryId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCategoryId" fullname="QLandmarkCategory::setCategoryId" href="qlandmarkcategory.html#setCategoryId" location="qlandmarkcategory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCategoryId(const QLandmarkCategoryId &amp; id)">
                <parameter left="const QLandmarkCategoryId &amp;" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attribute" fullname="QLandmarkCategory::attribute" href="qlandmarkcategory.html#attribute" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="attribute(const QString &amp; key, const QVariant &amp; defaultValue) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="defaultValue" default="QVariant()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAttribute" fullname="QLandmarkCategory::setAttribute" href="qlandmarkcategory.html#setAttribute" location="qlandmarkcategory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAttribute(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="attributeKeys" fullname="QLandmarkCategory::attributeKeys" href="qlandmarkcategory.html#attributeKeys" location="qlandmarkcategory.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="attributeKeys() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QLandmarkCategory::clear" href="qlandmarkcategory.html#clear" location="qlandmarkcategory.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfiguration" href="qnetworkconfiguration.html" location="qnetworkconfiguration.h" bases="" module="QtNetwork">
            <contents name="configuration-states" title="Configuration states" level="1"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfiguration" fullname="QNetworkConfiguration::QNetworkConfiguration" href="qnetworkconfiguration.html#QNetworkConfiguration" location="qnetworkconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QNetworkConfiguration()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QNetworkConfiguration" fullname="QNetworkConfiguration::QNetworkConfiguration" href="qnetworkconfiguration.html#QNetworkConfiguration-2" location="qnetworkconfiguration.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QNetworkConfiguration(const QNetworkConfiguration &amp; other)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QNetworkConfiguration::operator=" href="qnetworkconfiguration.html#operator=" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QNetworkConfiguration &amp;" signature="operator=(const QNetworkConfiguration &amp; other)">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QNetworkConfiguration" fullname="QNetworkConfiguration::~QNetworkConfiguration" href="qnetworkconfiguration.html#dtor.QNetworkConfiguration" location="qnetworkconfiguration.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QNetworkConfiguration()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QNetworkConfiguration::operator==" href="qnetworkconfiguration.html#operator==" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QNetworkConfiguration &amp; other) const">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QNetworkConfiguration::operator!=" href="qnetworkconfiguration.html#operator!=" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QNetworkConfiguration &amp; other) const">
                <parameter left="const QNetworkConfiguration &amp;" right="" name="other" default=""/>
            </function>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QNetworkConfiguration::Type" href="qnetworkconfiguration.html#Type-enum" location="qnetworkconfiguration.h">
                <value name="InternetAccessPoint" value="0"/>
                <value name="ServiceNetwork" value="1"/>
                <value name="UserChoice" value="2"/>
                <value name="Invalid" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Purpose" fullname="QNetworkConfiguration::Purpose" href="qnetworkconfiguration.html#Purpose-enum" location="qnetworkconfiguration.h">
                <value name="UnknownPurpose" value="0"/>
                <value name="PublicPurpose" value="1"/>
                <value name="PrivatePurpose" value="2"/>
                <value name="ServiceSpecificPurpose" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="StateFlag" fullname="QNetworkConfiguration::StateFlag" href="qnetworkconfiguration.html#StateFlag-enum" location="qnetworkconfiguration.h" typedef="QNetworkConfiguration::StateFlags">
                <value name="Undefined" value="0x0000001"/>
                <value name="Defined" value="0x0000002"/>
                <value name="Discovered" value="0x0000006"/>
                <value name="Active" value="0x000000e"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="StateFlags" fullname="QNetworkConfiguration::StateFlags" href="qnetworkconfiguration.html#StateFlags-typedef" location="qnetworkconfiguration.h" enum="QNetworkConfiguration::StateFlag"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QNetworkConfiguration::state" href="qnetworkconfiguration.html#state" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="StateFlags" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QNetworkConfiguration::type" href="qnetworkconfiguration.html#type" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="purpose" fullname="QNetworkConfiguration::purpose" href="qnetworkconfiguration.html#purpose" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Purpose" signature="purpose() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bearerName" fullname="QNetworkConfiguration::bearerName" href="qnetworkconfiguration.html#bearerName" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="bearerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="identifier" fullname="QNetworkConfiguration::identifier" href="qnetworkconfiguration.html#identifier" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="identifier() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isRoamingAvailable" fullname="QNetworkConfiguration::isRoamingAvailable" href="qnetworkconfiguration.html#isRoamingAvailable" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isRoamingAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="children" fullname="QNetworkConfiguration::children" href="qnetworkconfiguration.html#children" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QNetworkConfiguration&gt;" signature="children() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QNetworkConfiguration::name" href="qnetworkconfiguration.html#name" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QNetworkConfiguration::isValid" href="qnetworkconfiguration.html#isValid" location="qnetworkconfiguration.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoRoutingManager" href="qgeoroutingmanager.html" location="qgeoroutingmanager.h" bases="" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoRoutingManager" fullname="QGeoRoutingManager::~QGeoRoutingManager" href="qgeoroutingmanager.html#dtor.QGeoRoutingManager" location="qgeoroutingmanager.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoRoutingManager()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerName" fullname="QGeoRoutingManager::managerName" href="qgeoroutingmanager.html#managerName" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="managerName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerParameters" fullname="QGeoRoutingManager::managerParameters" href="qgeoroutingmanager.html#managerParameters" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QString&gt;" signature="managerParameters() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="managerVersion" fullname="QGeoRoutingManager::managerVersion" href="qgeoroutingmanager.html#managerVersion" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="managerVersion() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="calculateRoute" fullname="QGeoRoutingManager::calculateRoute" href="qgeoroutingmanager.html#calculateRoute" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoRouteReply *" signature="calculateRoute(const QGeoRouteRequest &amp; request)">
                <parameter left="const QGeoRouteRequest &amp;" right="" name="request" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="updateRoute" fullname="QGeoRoutingManager::updateRoute" href="qgeoroutingmanager.html#updateRoute" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QGeoRouteReply *" signature="updateRoute(const QGeoRoute &amp; route, const QGeoCoordinate &amp; position)">
                <parameter left="const QGeoRoute &amp;" right="" name="route" default=""/>
                <parameter left="const QGeoCoordinate &amp;" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsRouteUpdates" fullname="QGeoRoutingManager::supportsRouteUpdates" href="qgeoroutingmanager.html#supportsRouteUpdates" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsRouteUpdates() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsAlternativeRoutes" fullname="QGeoRoutingManager::supportsAlternativeRoutes" href="qgeoroutingmanager.html#supportsAlternativeRoutes" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsAlternativeRoutes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportsExcludeAreas" fullname="QGeoRoutingManager::supportsExcludeAreas" href="qgeoroutingmanager.html#supportsExcludeAreas" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="supportsExcludeAreas() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedTravelModes" fullname="QGeoRoutingManager::supportedTravelModes" href="qgeoroutingmanager.html#supportedTravelModes" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::TravelModes" signature="supportedTravelModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedAvoidFeatureTypes" fullname="QGeoRoutingManager::supportedAvoidFeatureTypes" href="qgeoroutingmanager.html#supportedAvoidFeatureTypes" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::AvoidFeatureTypes" signature="supportedAvoidFeatureTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedRouteOptimizations" fullname="QGeoRoutingManager::supportedRouteOptimizations" href="qgeoroutingmanager.html#supportedRouteOptimizations" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::RouteOptimizations" signature="supportedRouteOptimizations() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSegmentDetails" fullname="QGeoRoutingManager::supportedSegmentDetails" href="qgeoroutingmanager.html#supportedSegmentDetails" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::SegmentDetails" signature="supportedSegmentDetails() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedInstructionDetails" fullname="QGeoRoutingManager::supportedInstructionDetails" href="qgeoroutingmanager.html#supportedInstructionDetails" location="qgeoroutingmanager.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoRouteRequest::InstructionDetails" signature="supportedInstructionDetails() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QGeoRoutingManager::finished" href="qgeoroutingmanager.html#finished" location="qgeoroutingmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished(QGeoRouteReply * reply)">
                <parameter left="QGeoRouteReply *" right="" name="reply" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QGeoRoutingManager::error" href="qgeoroutingmanager.html#error" location="qgeoroutingmanager.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(QGeoRouteReply * reply, QGeoRouteReply::Error error, QString errorString)">
                <parameter left="QGeoRouteReply *" right="" name="reply" default=""/>
                <parameter left="QGeoRouteReply::Error" right="" name="error" default=""/>
                <parameter left="QString" right="" name="errorString" default="QString()"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QLandmarkNameFilter" href="qlandmarknamefilter.html" location="qlandmarknamefilter.h" bases="QLandmarkFilter" module="QtLocation">
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkNameFilter" fullname="QLandmarkNameFilter::QLandmarkNameFilter" href="qlandmarknamefilter.html#QLandmarkNameFilter" location="qlandmarknamefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QLandmarkNameFilter(const QString &amp; name, Qt::CaseSensitivity sensitivity)">
                <parameter left="const QString &amp;" right="" name="name" default="QString()"/>
                <parameter left="Qt::CaseSensitivity" right="" name="sensitivity" default="Qt::CaseInsensitive"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QLandmarkNameFilter" fullname="QLandmarkNameFilter::QLandmarkNameFilter" href="qlandmarknamefilter.html#QLandmarkNameFilter-2" location="qlandmarknamefilter.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QLandmarkNameFilter(const QLandmarkFilter &amp; other)">
                <parameter left="const QLandmarkFilter &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QLandmarkNameFilter" fullname="QLandmarkNameFilter::~QLandmarkNameFilter" href="qlandmarknamefilter.html#dtor.QLandmarkNameFilter" location="qlandmarknamefilter.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QLandmarkNameFilter()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QLandmarkNameFilter::name" href="qlandmarknamefilter.html#name" location="qlandmarknamefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setName" fullname="QLandmarkNameFilter::setName" href="qlandmarknamefilter.html#setName" location="qlandmarknamefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="caseSensitivity" fullname="QLandmarkNameFilter::caseSensitivity" href="qlandmarknamefilter.html#caseSensitivity" location="qlandmarknamefilter.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::CaseSensitivity" signature="caseSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCaseSensitivity" fullname="QLandmarkNameFilter::setCaseSensitivity" href="qlandmarknamefilter.html#setCaseSensitivity" location="qlandmarknamefilter.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCaseSensitivity(Qt::CaseSensitivity caseSensitivity)">
                <parameter left="Qt::CaseSensitivity" right="" name="caseSensitivity" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QGeoMapWidget" href="qgeomapwidget.html" location="qgeomapwidget.h" bases="" module="QtLocation">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MapType" fullname="QGeoMapWidget::MapType" href="qgeomapwidget.html#MapType-enum" location="qgeomapwidget.h">
                <value name="NoMap" value="0"/>
                <value name="StreetMap" value="1"/>
                <value name="SatelliteMapDay" value="2"/>
                <value name="SatelliteMapNight" value="3"/>
                <value name="TerrainMap" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QGeoMapWidget" fullname="QGeoMapWidget::QGeoMapWidget" href="qgeomapwidget.html#QGeoMapWidget" location="qgeomapwidget.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QGeoMapWidget(QGeoMappingManager * manager, QGraphicsItem * parent)">
                <parameter left="QGeoMappingManager *" right="" name="manager" default=""/>
                <parameter left="QGraphicsItem *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QGeoMapWidget" fullname="QGeoMapWidget::~QGeoMapWidget" href="qgeomapwidget.html#dtor.QGeoMapWidget" location="qgeomapwidget.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QGeoMapWidget()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shape" fullname="QGeoMapWidget::shape" href="qgeomapwidget.html#shape" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPainterPath" signature="shape() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="paint" fullname="QGeoMapWidget::paint" href="qgeomapwidget.html#paint" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="paint(QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * parent)">
                <parameter left="QPainter *" right="" name="painter" default=""/>
                <parameter left="const QStyleOptionGraphicsItem *" right="" name="option" default=""/>
                <parameter left="QWidget *" right="" name="parent" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumZoomLevel" fullname="QGeoMapWidget::minimumZoomLevel" href="qgeomapwidget.html#minimumZoomLevel" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="minimumZoomLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumZoomLevel" fullname="QGeoMapWidget::maximumZoomLevel" href="qgeomapwidget.html#maximumZoomLevel" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumZoomLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZoomLevel" fullname="QGeoMapWidget::setZoomLevel" href="qgeomapwidget.html#setZoomLevel" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setZoomLevel(qreal zoomLevel)">
                <parameter left="qreal" right="" name="zoomLevel" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomLevel" fullname="QGeoMapWidget::zoomLevel" href="qgeomapwidget.html#zoomLevel" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="zoomLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="startPanning" fullname="QGeoMapWidget::startPanning" href="qgeomapwidget.html#startPanning" location="qgeomapwidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="startPanning()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopPanning" fullname="QGeoMapWidget::stopPanning" href="qgeomapwidget.html#stopPanning" location="qgeomapwidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stopPanning()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pan" fullname="QGeoMapWidget::pan" href="qgeomapwidget.html#pan" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="pan(int dx, int dy)">
                <parameter left="int" right="" name="dx" default=""/>
                <parameter left="int" right="" name="dy" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCenter" fullname="QGeoMapWidget::setCenter" href="qgeomapwidget.html#setCenter" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCenter(const QGeoCoordinate &amp; center)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="center" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="center" fullname="QGeoMapWidget::center" href="qgeomapwidget.html#center" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="center() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMapTypes" fullname="QGeoMapWidget::supportedMapTypes" href="qgeomapwidget.html#supportedMapTypes" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;MapType&gt;" signature="supportedMapTypes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMapType" fullname="QGeoMapWidget::setMapType" href="qgeomapwidget.html#setMapType" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMapType(MapType mapType)">
                <parameter left="MapType" right="" name="mapType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapType" fullname="QGeoMapWidget::mapType" href="qgeomapwidget.html#mapType" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MapType" signature="mapType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="addMapObject" fullname="QGeoMapWidget::addMapObject" href="qgeomapwidget.html#addMapObject" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addMapObject(QGeoMapObject * mapObject)">
                <parameter left="QGeoMapObject *" right="" name="mapObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeMapObject" fullname="QGeoMapWidget::removeMapObject" href="qgeomapwidget.html#removeMapObject" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeMapObject(QGeoMapObject * mapObject)">
                <parameter left="QGeoMapObject *" right="" name="mapObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapObjects" fullname="QGeoMapWidget::mapObjects" href="qgeomapwidget.html#mapObjects" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="mapObjects()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="visibleMapObjects" fullname="QGeoMapWidget::visibleMapObjects" href="qgeomapwidget.html#visibleMapObjects" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="visibleMapObjects()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapObjectsAtScreenPosition" fullname="QGeoMapWidget::mapObjectsAtScreenPosition" href="qgeomapwidget.html#mapObjectsAtScreenPosition" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="mapObjectsAtScreenPosition(const QPointF &amp; screenPosition)">
                <parameter left="const QPointF &amp;" right="" name="screenPosition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapObjectsInScreenRect" fullname="QGeoMapWidget::mapObjectsInScreenRect" href="qgeomapwidget.html#mapObjectsInScreenRect" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QList&lt;QGeoMapObject *&gt;" signature="mapObjectsInScreenRect(const QRectF &amp; screenRect)">
                <parameter left="const QRectF &amp;" right="" name="screenRect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="coordinateToScreenPosition" fullname="QGeoMapWidget::coordinateToScreenPosition" href="qgeomapwidget.html#coordinateToScreenPosition" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPointF" signature="coordinateToScreenPosition(const QGeoCoordinate &amp; coordinate) const">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="screenPositionToCoordinate" fullname="QGeoMapWidget::screenPositionToCoordinate" href="qgeomapwidget.html#screenPositionToCoordinate" location="qgeomapwidget.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QGeoCoordinate" signature="screenPositionToCoordinate(QPointF screenPosition) const">
                <parameter left="QPointF" right="" name="screenPosition" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resizeEvent" fullname="QGeoMapWidget::resizeEvent" href="qgeomapwidget.html#resizeEvent" location="qgeomapwidget.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="resizeEvent(QGraphicsSceneResizeEvent * event)">
                <parameter left="QGraphicsSceneResizeEvent *" right="" name="event" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomLevelChanged" fullname="QGeoMapWidget::zoomLevelChanged" href="qgeomapwidget.html#zoomLevelChanged" location="qgeomapwidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="zoomLevelChanged(qreal zoomLevel)">
                <parameter left="qreal" right="" name="zoomLevel" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="centered" fullname="QGeoMapWidget::centered" href="qgeomapwidget.html#centered" location="qgeomapwidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="centered(const QGeoCoordinate &amp; coordinate)">
                <parameter left="const QGeoCoordinate &amp;" right="" name="coordinate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mapTypeChanged" fullname="QGeoMapWidget::mapTypeChanged" href="qgeomapwidget.html#mapTypeChanged" location="qgeomapwidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mapTypeChanged(MapType mapType)">
                <parameter left="MapType" right="" name="mapType" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeInterval" href="qmediatimeinterval.html" location="qmediatimerange.h" bases="" module="QtMultimediaKit">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeInterval" fullname="QMediaTimeInterval::QMediaTimeInterval" href="qmediatimeinterval.html#QMediaTimeInterval" location="qmediatimerange.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaTimeInterval()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeInterval" fullname="QMediaTimeInterval::QMediaTimeInterval" href="qmediatimeinterval.html#QMediaTimeInterval-2" location="qmediatimerange.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaTimeInterval(qint64 start, qint64 end)">
                <parameter left="qint64" right="" name="start" default=""/>
                <parameter left="qint64" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeInterval" fullname="QMediaTimeInterval::QMediaTimeInterval" href="qmediatimeinterval.html#QMediaTimeInterval-3" location="qmediatimerange.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaTimeInterval(const QMediaTimeInterval &amp; other)">
                <parameter left="const QMediaTimeInterval &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QMediaTimeInterval::start" href="qmediatimeinterval.html#start" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="start() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="end" fullname="QMediaTimeInterval::end" href="qmediatimeinterval.html#end" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="end() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QMediaTimeInterval::contains" href="qmediatimeinterval.html#contains" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(qint64 time) const">
                <parameter left="qint64" right="" name="time" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNormal" fullname="QMediaTimeInterval::isNormal" href="qmediatimeinterval.html#isNormal" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNormal() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="normalized" fullname="QMediaTimeInterval::normalized" href="qmediatimeinterval.html#normalized" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaTimeInterval" signature="normalized() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="translated" fullname="QMediaTimeInterval::translated" href="qmediatimeinterval.html#translated" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaTimeInterval" signature="translated(qint64 offset) const">
                <parameter left="qint64" right="" name="offset" default=""/>
            </function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator==" href="qmediatimerange.html#operator==-13" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="13" relates="QMediaTimeRange" type="Q_MULTIMEDIA_EXPORT" signature="operator==(const QMediaTimeInterval &amp; a, const QMediaTimeInterval &amp; b)">
            <parameter left="const QMediaTimeInterval &amp;" right="" name="a" default=""/>
            <parameter left="const QMediaTimeInterval &amp;" right="" name="b" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" href="qmediatimerange.html#operator!=-12" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="12" relates="QMediaTimeRange" type="Q_MULTIMEDIA_EXPORT" signature="operator!=(const QMediaTimeInterval &amp; a, const QMediaTimeInterval &amp; b)">
            <parameter left="const QMediaTimeInterval &amp;" right="" name="a" default=""/>
            <parameter left="const QMediaTimeInterval &amp;" right="" name="b" default=""/>
        </function>
        <class access="public" threadsafety="reentrant" status="commendable" name="QMediaTimeRange" href="qmediatimerange.html" location="qmediatimerange.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange" location="qmediatimerange.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaTimeRange()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange-2" location="qmediatimerange.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaTimeRange(qint64 start, qint64 end)">
                <parameter left="qint64" right="" name="start" default=""/>
                <parameter left="qint64" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange-3" location="qmediatimerange.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaTimeRange(const QMediaTimeInterval &amp; interval)">
                <parameter left="const QMediaTimeInterval &amp;" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange-4" location="qmediatimerange.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMediaTimeRange(const QMediaTimeRange &amp; range)">
                <parameter left="const QMediaTimeRange &amp;" right="" name="range" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaTimeRange" fullname="QMediaTimeRange::~QMediaTimeRange" href="qmediatimerange.html#dtor.QMediaTimeRange" location="qmediatimerange.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaTimeRange()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaTimeRange::operator=" href="qmediatimerange.html#operator=" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaTimeRange &amp;" signature="operator=(const QMediaTimeRange &amp; other)">
                <parameter left="const QMediaTimeRange &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaTimeRange::operator=" href="qmediatimerange.html#operator=-2" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QMediaTimeRange &amp;" signature="operator=(const QMediaTimeInterval &amp; interval)">
                <parameter left="const QMediaTimeInterval &amp;" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="earliestTime" fullname="QMediaTimeRange::earliestTime" href="qmediatimerange.html#earliestTime" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="earliestTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="latestTime" fullname="QMediaTimeRange::latestTime" href="qmediatimerange.html#latestTime" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="latestTime() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="intervals" fullname="QMediaTimeRange::intervals" href="qmediatimerange.html#intervals" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMediaTimeInterval&gt;" signature="intervals() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMediaTimeRange::isEmpty" href="qmediatimerange.html#isEmpty" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isContinuous" fullname="QMediaTimeRange::isContinuous" href="qmediatimerange.html#isContinuous" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isContinuous() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contains" fullname="QMediaTimeRange::contains" href="qmediatimerange.html#contains" location="qmediatimerange.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="contains(qint64 time) const">
                <parameter left="qint64" right="" name="time" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addInterval" fullname="QMediaTimeRange::addInterval" href="qmediatimerange.html#addInterval-2" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="addInterval(qint64 start, qint64 end)">
                <parameter left="qint64" right="" name="start" default=""/>
                <parameter left="qint64" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addInterval" fullname="QMediaTimeRange::addInterval" href="qmediatimerange.html#addInterval" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addInterval(const QMediaTimeInterval &amp; interval)">
                <parameter left="const QMediaTimeInterval &amp;" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTimeRange" fullname="QMediaTimeRange::addTimeRange" href="qmediatimerange.html#addTimeRange" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addTimeRange(const QMediaTimeRange &amp; range)">
                <parameter left="const QMediaTimeRange &amp;" right="" name="range" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeInterval" fullname="QMediaTimeRange::removeInterval" href="qmediatimerange.html#removeInterval-2" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="removeInterval(qint64 start, qint64 end)">
                <parameter left="qint64" right="" name="start" default=""/>
                <parameter left="qint64" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeInterval" fullname="QMediaTimeRange::removeInterval" href="qmediatimerange.html#removeInterval" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeInterval(const QMediaTimeInterval &amp; interval)">
                <parameter left="const QMediaTimeInterval &amp;" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeTimeRange" fullname="QMediaTimeRange::removeTimeRange" href="qmediatimerange.html#removeTimeRange" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeTimeRange(const QMediaTimeRange &amp; range)">
                <parameter left="const QMediaTimeRange &amp;" right="" name="range" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator+=" fullname="QMediaTimeRange::operator+=" href="qmediatimerange.html#operator+=" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaTimeRange &amp;" signature="operator+=(const QMediaTimeRange &amp; other)">
                <parameter left="const QMediaTimeRange &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator+=" fullname="QMediaTimeRange::operator+=" href="qmediatimerange.html#operator+=-2" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QMediaTimeRange &amp;" signature="operator+=(const QMediaTimeInterval &amp; interval)">
                <parameter left="const QMediaTimeInterval &amp;" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator-=" fullname="QMediaTimeRange::operator-=" href="qmediatimerange.html#operator-=" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaTimeRange &amp;" signature="operator-=(const QMediaTimeRange &amp; other)">
                <parameter left="const QMediaTimeRange &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator-=" fullname="QMediaTimeRange::operator-=" href="qmediatimerange.html#operator-=-2" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QMediaTimeRange &amp;" signature="operator-=(const QMediaTimeInterval &amp; interval)">
                <parameter left="const QMediaTimeInterval &amp;" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMediaTimeRange::clear" href="qmediatimerange.html#clear" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clear()"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator==" href="qmediatimerange.html#operator==-14" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="14" relates="QMediaTimeRange" type="Q_MULTIMEDIA_EXPORT" signature="operator==(const QMediaTimeRange &amp; a, const QMediaTimeRange &amp; b)">
            <parameter left="const QMediaTimeRange &amp;" right="" name="a" default=""/>
            <parameter left="const QMediaTimeRange &amp;" right="" name="b" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" href="qmediatimerange.html#operator!=-13" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="13" relates="QMediaTimeRange" type="Q_MULTIMEDIA_EXPORT" signature="operator!=(const QMediaTimeRange &amp; a, const QMediaTimeRange &amp; b)">
            <parameter left="const QMediaTimeRange &amp;" right="" name="a" default=""/>
            <parameter left="const QMediaTimeRange &amp;" right="" name="b" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator+" href="#operator+" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="Q_MULTIMEDIA_EXPORT" signature="operator+(const QMediaTimeRange &amp; r1, const QMediaTimeRange &amp; r2)">
            <parameter left="const QMediaTimeRange &amp;" right="" name="r1" default=""/>
            <parameter left="const QMediaTimeRange &amp;" right="" name="r2" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="operator-" href="#operator-" location="qmediatimerange.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="Q_MULTIMEDIA_EXPORT" signature="operator-(const QMediaTimeRange &amp; r1, const QMediaTimeRange &amp; r2)">
            <parameter left="const QMediaTimeRange &amp;" right="" name="r1" default=""/>
            <parameter left="const QMediaTimeRange &amp;" right="" name="r2" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QImageEncoderControl_iid" href="qimageencodercontrol.html#QImageEncoderControl_iid" location="qimageencodercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QImageEncoderControl" type="" signature="QImageEncoderControl_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="REGISTER_STATIC_PLUGIN" href="qsensormanager.html#REGISTER_STATIC_PLUGIN" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QSensorManager" type="" signature="REGISTER_STATIC_PLUGIN( pluginname)">
            <parameter left="" right="" name="pluginname" default=""/>
        </function>
        <page access="public" status="commendable" name="trademarks.html" href="trademarks.html" subtype="page" title="Trademarks" fulltitle="Trademarks" subtitle="" location="trademarks.qdoc"/>
        <page access="public" status="commendable" name="notesmanagerplugin" href="notesmanagerplugin.html" subtype="example" title="Notes Manager Plugin Example" fulltitle="Notes Manager Plugin Example" subtitle="" location="notesmanagerplugin.qdoc">
            <page access="public" status="commendable" name="notesmanagerplugin/note.h" href="notesmanagerplugin-note-h.html" subtype="file" title="" fulltitle="note.h Example File" subtitle="notesmanagerplugin/note.h" location=""/>
            <page access="public" status="commendable" name="notesmanagerplugin/notesmanager.cpp" href="notesmanagerplugin-notesmanager-cpp.html" subtype="file" title="" fulltitle="notesmanager.cpp Example File" subtitle="notesmanagerplugin/notesmanager.cpp" location=""/>
            <page access="public" status="commendable" name="notesmanagerplugin/notesmanager.h" href="notesmanagerplugin-notesmanager-h.html" subtype="file" title="" fulltitle="notesmanager.h Example File" subtitle="notesmanagerplugin/notesmanager.h" location=""/>
            <page access="public" status="commendable" name="notesmanagerplugin/notesmanagerplugin.cpp" href="notesmanagerplugin-notesmanagerplugin-cpp.html" subtype="file" title="" fulltitle="notesmanagerplugin.cpp Example File" subtitle="notesmanagerplugin/notesmanagerplugin.cpp" location=""/>
            <page access="public" status="commendable" name="notesmanagerplugin/notesmanagerplugin.h" href="notesmanagerplugin-notesmanagerplugin-h.html" subtype="file" title="" fulltitle="notesmanagerplugin.h Example File" subtitle="notesmanagerplugin/notesmanagerplugin.h" location=""/>
            <page access="public" status="commendable" name="notesmanagerplugin/notesmanagerservice.xml" href="notesmanagerplugin-notesmanagerservice-xml.html" subtype="file" title="" fulltitle="notesmanagerservice.xml Example File" subtitle="notesmanagerplugin/notesmanagerservice.xml" location=""/>
            <page access="public" status="commendable" name="notesmanagerplugin/notesmanagerplugin.pro" href="notesmanagerplugin-notesmanagerplugin-pro.html" subtype="file" title="" fulltitle="notesmanagerplugin.pro Example File" subtitle="notesmanagerplugin/notesmanagerplugin.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="preview.html" href="preview.html" subtype="page" title="Technology Preview" fulltitle="Technology Preview" subtitle="" location="preview.qdoc">
            <target name="management-of-versit-documents"/>
            <target name="sensor-classes"/>
            <contents name="management-of-versit-documents" title="Management of Versit Documents" level="1"/>
            <contents name="sensor-api" title="Sensor API" level="1"/>
            <contents name="main-classes" title="Main Classes" level="2"/>
            <contents name="helper-classes" title="Helper Classes" level="2"/>
            <contents name="backend-classes" title="Backend Classes" level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistControl_iid" href="qmediaplaylistcontrol.html#QMediaPlaylistControl_iid" location="qmediaplaylistcontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMediaPlaylistControl" type="" signature="QMediaPlaylistControl_iid()"/>
        <page access="public" status="commendable" name="audiorecorder" href="audiorecorder.html" subtype="example" title="Audio Recorder Example" fulltitle="Audio Recorder Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.cpp" href="audiorecorder-audiorecorder-cpp.html" subtype="file" title="" fulltitle="audiorecorder.cpp Example File" subtitle="audiorecorder/audiorecorder.cpp" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.h" href="audiorecorder-audiorecorder-h.html" subtype="file" title="" fulltitle="audiorecorder.h Example File" subtitle="audiorecorder/audiorecorder.h" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.ui" href="audiorecorder-audiorecorder-ui.html" subtype="file" title="" fulltitle="audiorecorder.ui Example File" subtitle="audiorecorder/audiorecorder.ui" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder_small.ui" href="audiorecorder-audiorecorder-small-ui.html" subtype="file" title="" fulltitle="audiorecorder_small.ui Example File" subtitle="audiorecorder/audiorecorder_small.ui" location=""/>
            <page access="public" status="commendable" name="audiorecorder/main.cpp" href="audiorecorder-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="audiorecorder/main.cpp" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.pro" href="audiorecorder-audiorecorder-pro.html" subtype="file" title="" fulltitle="audiorecorder.pro Example File" subtitle="audiorecorder/audiorecorder.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="declarative-sfw-dialer" href="declarative-sfw-dialer.html" subtype="example" title="Declarative Service Framework Example" fulltitle="Declarative Service Framework Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/declarative-sfw-dialer.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-declarative-sfw-dialer-qml.html" subtype="file" title="" fulltitle="declarative-sfw-dialer.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/declarative-sfw-dialer.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/DialButton.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-content-dialbutton-qml.html" subtype="file" title="" fulltitle="DialButton.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/DialButton.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/DialScreen.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-content-dialscreen-qml.html" subtype="file" title="" fulltitle="DialScreen.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/DialScreen.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/DialerList.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-content-dialerlist-qml.html" subtype="file" title="" fulltitle="DialerList.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/DialerList.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialer.cpp" href="declarative-sfw-dialer-landlinedialer-landlinedialer-cpp.html" subtype="file" title="" fulltitle="landlinedialer.cpp Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialer.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialer.h" href="declarative-sfw-dialer-landlinedialer-landlinedialer-h.html" subtype="file" title="" fulltitle="landlinedialer.h Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialer.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.cpp" href="declarative-sfw-dialer-landlinedialer-landlinedialerplugin-cpp.html" subtype="file" title="" fulltitle="landlinedialerplugin.cpp Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.h" href="declarative-sfw-dialer-landlinedialer-landlinedialerplugin-h.html" subtype="file" title="" fulltitle="landlinedialerplugin.h Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialerservice.xml" href="declarative-sfw-dialer-landlinedialer-landlinedialerservice-xml.html" subtype="file" title="" fulltitle="landlinedialerservice.xml Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialerservice.xml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialer.cpp" href="declarative-sfw-dialer-voipdialer-voipdialer-cpp.html" subtype="file" title="" fulltitle="voipdialer.cpp Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialer.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialer.h" href="declarative-sfw-dialer-voipdialer-voipdialer-h.html" subtype="file" title="" fulltitle="voipdialer.h Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialer.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialerplugin.cpp" href="declarative-sfw-dialer-voipdialer-voipdialerplugin-cpp.html" subtype="file" title="" fulltitle="voipdialerplugin.cpp Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialerplugin.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialerplugin.h" href="declarative-sfw-dialer-voipdialer-voipdialerplugin-h.html" subtype="file" title="" fulltitle="voipdialerplugin.h Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialerplugin.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialerservice.xml" href="declarative-sfw-dialer-voipdialer-voipdialerservice-xml.html" subtype="file" title="" fulltitle="voipdialerservice.xml Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialerservice.xml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/xmldata/voipdialerservice.xml" href="declarative-sfw-dialer-voipdialer-xmldata-voipdialerservice-xml.html" subtype="file" title="" fulltitle="voipdialerservice.xml Example File" subtitle="declarative-sfw-dialer/voipdialer/xmldata/voipdialerservice.xml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer.pro" href="declarative-sfw-dialer-declarative-sfw-dialer-pro.html" subtype="file" title="" fulltitle="declarative-sfw-dialer.pro Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer.pro" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/qmldir" href="declarative-sfw-dialer-declarative-sfw-dialer-content-qmldir.html" subtype="file" title="" fulltitle="qmldir Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/qmldir" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialer.pro" href="declarative-sfw-dialer-landlinedialer-landlinedialer-pro.html" subtype="file" title="" fulltitle="landlinedialer.pro Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialer.pro" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialer.pro" href="declarative-sfw-dialer-voipdialer-voipdialer-pro.html" subtype="file" title="" fulltitle="voipdialer.pro Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialer.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="fetchgooglemaps" href="fetchgooglemaps.html" subtype="example" title="Fetch Google Maps Example" fulltitle="Fetch Google Maps Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="fetchgooglemaps/mapwindow.cpp" href="fetchgooglemaps-mapwindow-cpp.html" subtype="file" title="" fulltitle="mapwindow.cpp Example File" subtitle="fetchgooglemaps/mapwindow.cpp" location=""/>
            <page access="public" status="commendable" name="fetchgooglemaps/mapwindow.h" href="fetchgooglemaps-mapwindow-h.html" subtype="file" title="" fulltitle="mapwindow.h Example File" subtitle="fetchgooglemaps/mapwindow.h" location=""/>
            <page access="public" status="commendable" name="fetchgooglemaps/main.cpp" href="fetchgooglemaps-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="fetchgooglemaps/main.cpp" location=""/>
            <page access="public" status="commendable" name="fetchgooglemaps/fetchgooglemaps.pro" href="fetchgooglemaps-fetchgooglemaps-pro.html" subtype="file" title="" fulltitle="fetchgooglemaps.pro Example File" subtitle="fetchgooglemaps/fetchgooglemaps.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="keepintouch" href="keepintouch.html" subtype="example" title="Keep in Touch Example" fulltitle="Keep in Touch Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="keepintouch/addressfinder.cpp" href="keepintouch-addressfinder-cpp.html" subtype="file" title="" fulltitle="addressfinder.cpp Example File" subtitle="keepintouch/addressfinder.cpp" location=""/>
            <page access="public" status="commendable" name="keepintouch/addressfinder.h" href="keepintouch-addressfinder-h.html" subtype="file" title="" fulltitle="addressfinder.h Example File" subtitle="keepintouch/addressfinder.h" location=""/>
            <page access="public" status="commendable" name="keepintouch/main.cpp" href="keepintouch-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="keepintouch/main.cpp" location=""/>
            <page access="public" status="commendable" name="keepintouch/keepintouch.pro" href="keepintouch-keepintouch-pro.html" subtype="file" title="" fulltitle="keepintouch.pro Example File" subtitle="keepintouch/keepintouch.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="logfilepositionsource" href="logfilepositionsource.html" subtype="example" title="Log File Position Source Example" fulltitle="Log File Position Source Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="logfilepositionsource/clientapplication.cpp" href="logfilepositionsource-clientapplication-cpp.html" subtype="file" title="" fulltitle="clientapplication.cpp Example File" subtitle="logfilepositionsource/clientapplication.cpp" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/clientapplication.h" href="logfilepositionsource-clientapplication-h.html" subtype="file" title="" fulltitle="clientapplication.h Example File" subtitle="logfilepositionsource/clientapplication.h" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/logfilepositionsource.cpp" href="logfilepositionsource-logfilepositionsource-cpp.html" subtype="file" title="" fulltitle="logfilepositionsource.cpp Example File" subtitle="logfilepositionsource/logfilepositionsource.cpp" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/logfilepositionsource.h" href="logfilepositionsource-logfilepositionsource-h.html" subtype="file" title="" fulltitle="logfilepositionsource.h Example File" subtitle="logfilepositionsource/logfilepositionsource.h" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/main.cpp" href="logfilepositionsource-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="logfilepositionsource/main.cpp" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/logfilepositionsource.pro" href="logfilepositionsource-logfilepositionsource-pro.html" subtype="file" title="" fulltitle="logfilepositionsource.pro Example File" subtitle="logfilepositionsource/logfilepositionsource.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="player" href="player.html" subtype="example" title="Player Example" fulltitle="Player Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="player/mediakeysobserver.cpp" href="player-mediakeysobserver-cpp.html" subtype="file" title="" fulltitle="mediakeysobserver.cpp Example File" subtitle="player/mediakeysobserver.cpp" location=""/>
            <page access="public" status="commendable" name="player/mediakeysobserver.h" href="player-mediakeysobserver-h.html" subtype="file" title="" fulltitle="mediakeysobserver.h Example File" subtitle="player/mediakeysobserver.h" location=""/>
            <page access="public" status="commendable" name="player/player.cpp" href="player-player-cpp.html" subtype="file" title="" fulltitle="player.cpp Example File" subtitle="player/player.cpp" location=""/>
            <page access="public" status="commendable" name="player/player.h" href="player-player-h.html" subtype="file" title="" fulltitle="player.h Example File" subtitle="player/player.h" location=""/>
            <page access="public" status="commendable" name="player/playercontrols.cpp" href="player-playercontrols-cpp.html" subtype="file" title="" fulltitle="playercontrols.cpp Example File" subtitle="player/playercontrols.cpp" location=""/>
            <page access="public" status="commendable" name="player/playercontrols.h" href="player-playercontrols-h.html" subtype="file" title="" fulltitle="playercontrols.h Example File" subtitle="player/playercontrols.h" location=""/>
            <page access="public" status="commendable" name="player/playlistmodel.cpp" href="player-playlistmodel-cpp.html" subtype="file" title="" fulltitle="playlistmodel.cpp Example File" subtitle="player/playlistmodel.cpp" location=""/>
            <page access="public" status="commendable" name="player/playlistmodel.h" href="player-playlistmodel-h.html" subtype="file" title="" fulltitle="playlistmodel.h Example File" subtitle="player/playlistmodel.h" location=""/>
            <page access="public" status="commendable" name="player/videowidget.cpp" href="player-videowidget-cpp.html" subtype="file" title="" fulltitle="videowidget.cpp Example File" subtitle="player/videowidget.cpp" location=""/>
            <page access="public" status="commendable" name="player/videowidget.h" href="player-videowidget-h.html" subtype="file" title="" fulltitle="videowidget.h Example File" subtitle="player/videowidget.h" location=""/>
            <page access="public" status="commendable" name="player/main.cpp" href="player-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="player/main.cpp" location=""/>
            <page access="public" status="commendable" name="player/player.pro" href="player-player-pro.html" subtype="file" title="" fulltitle="player.pro Example File" subtitle="player/player.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="querymessages" href="querymessages.html" subtype="example" title="Query Messages Example" fulltitle="Query Messages Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="querymessages/main.cpp" href="querymessages-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="querymessages/main.cpp" location=""/>
            <page access="public" status="commendable" name="querymessages/querymessages.pro" href="querymessages-querymessages-pro.html" subtype="file" title="" fulltitle="querymessages.pro Example File" subtitle="querymessages/querymessages.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="radio" href="radio.html" subtype="example" title="Radio Example" fulltitle="Radio Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="radio/radio.cpp" href="radio-radio-cpp.html" subtype="file" title="" fulltitle="radio.cpp Example File" subtitle="radio/radio.cpp" location=""/>
            <page access="public" status="commendable" name="radio/radio.h" href="radio-radio-h.html" subtype="file" title="" fulltitle="radio.h Example File" subtitle="radio/radio.h" location=""/>
            <page access="public" status="commendable" name="radio/main.cpp" href="radio-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="radio/main.cpp" location=""/>
            <page access="public" status="commendable" name="radio/radio.pro" href="radio-radio-pro.html" subtype="file" title="" fulltitle="radio.pro Example File" subtitle="radio/radio.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="writemessage" href="writemessage.html" subtype="example" title="Write Message Example" fulltitle="Write Message Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="writemessage/messagesender.cpp" href="writemessage-messagesender-cpp.html" subtype="file" title="" fulltitle="messagesender.cpp Example File" subtitle="writemessage/messagesender.cpp" location=""/>
            <page access="public" status="commendable" name="writemessage/messagesender.h" href="writemessage-messagesender-h.html" subtype="file" title="" fulltitle="messagesender.h Example File" subtitle="writemessage/messagesender.h" location=""/>
            <page access="public" status="commendable" name="writemessage/main.cpp" href="writemessage-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="writemessage/main.cpp" location=""/>
            <page access="public" status="commendable" name="writemessage/writemessage.pro" href="writemessage-writemessage-pro.html" subtype="file" title="" fulltitle="writemessage.pro Example File" subtitle="writemessage/writemessage.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="serviceactions" href="serviceactions.html" subtype="example" title="Service Actions Example" fulltitle="Service Actions Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="serviceactions/attachmentlistwidget.cpp" href="serviceactions-attachmentlistwidget-cpp.html" subtype="file" title="" fulltitle="attachmentlistwidget.cpp Example File" subtitle="serviceactions/attachmentlistwidget.cpp" location=""/>
            <page access="public" status="commendable" name="serviceactions/attachmentlistwidget.h" href="serviceactions-attachmentlistwidget-h.html" subtype="file" title="" fulltitle="attachmentlistwidget.h Example File" subtitle="serviceactions/attachmentlistwidget.h" location=""/>
            <page access="public" status="commendable" name="serviceactions/mainwindow.cpp" href="serviceactions-mainwindow-cpp.html" subtype="file" title="" fulltitle="mainwindow.cpp Example File" subtitle="serviceactions/mainwindow.cpp" location=""/>
            <page access="public" status="commendable" name="serviceactions/mainwindow.h" href="serviceactions-mainwindow-h.html" subtype="file" title="" fulltitle="mainwindow.h Example File" subtitle="serviceactions/mainwindow.h" location=""/>
            <page access="public" status="commendable" name="serviceactions/main.cpp" href="serviceactions-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="serviceactions/main.cpp" location=""/>
            <page access="public" status="commendable" name="serviceactions/serviceactions.pro" href="serviceactions-serviceactions-pro.html" subtype="file" title="" fulltitle="serviceactions.pro Example File" subtitle="serviceactions/serviceactions.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="slideshow" href="slideshow.html" subtype="example" title="Slideshow Example" fulltitle="Slideshow Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="slideshow/slideshow.cpp" href="slideshow-slideshow-cpp.html" subtype="file" title="" fulltitle="slideshow.cpp Example File" subtitle="slideshow/slideshow.cpp" location=""/>
            <page access="public" status="commendable" name="slideshow/slideshow.h" href="slideshow-slideshow-h.html" subtype="file" title="" fulltitle="slideshow.h Example File" subtitle="slideshow/slideshow.h" location=""/>
            <page access="public" status="commendable" name="slideshow/main.cpp" href="slideshow-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="slideshow/main.cpp" location=""/>
            <page access="public" status="commendable" name="slideshow/slideshow.pro" href="slideshow-slideshow-pro.html" subtype="file" title="" fulltitle="slideshow.pro Example File" subtitle="slideshow/slideshow.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="sysinfo" href="sysinfo.html" subtype="example" title="System Information Example" fulltitle="System Information Example" subtitle="" location="undocumented.qdoc">
            <page access="public" status="commendable" name="sysinfo/dialog.cpp" href="sysinfo-dialog-cpp.html" subtype="file" title="" fulltitle="dialog.cpp Example File" subtitle="sysinfo/dialog.cpp" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog.h" href="sysinfo-dialog-h.html" subtype="file" title="" fulltitle="dialog.h Example File" subtitle="sysinfo/dialog.h" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog.ui" href="sysinfo-dialog-ui.html" subtype="file" title="" fulltitle="dialog.ui Example File" subtitle="sysinfo/dialog.ui" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog_landscape.ui" href="sysinfo-dialog-landscape-ui.html" subtype="file" title="" fulltitle="dialog_landscape.ui Example File" subtitle="sysinfo/dialog_landscape.ui" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog_s60.ui" href="sysinfo-dialog-s60-ui.html" subtype="file" title="" fulltitle="dialog_s60.ui Example File" subtitle="sysinfo/dialog_s60.ui" location=""/>
            <page access="public" status="commendable" name="sysinfo/main.cpp" href="sysinfo-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="sysinfo/main.cpp" location=""/>
            <page access="public" status="commendable" name="sysinfo/examples.qrc" href="sysinfo-examples-qrc.html" subtype="file" title="" fulltitle="examples.qrc Example File" subtitle="sysinfo/examples.qrc" location=""/>
            <page access="public" status="commendable" name="sysinfo/sysinfo.pro" href="sysinfo-sysinfo-pro.html" subtype="file" title="" fulltitle="sysinfo.pro Example File" subtitle="sysinfo/sysinfo.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="feedback.html" href="feedback.html" subtype="page" title="Feedback" fulltitle="Feedback" subtitle="" location="feedback.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="usage" title="Usage" level="1"/>
            <contents name="main-classes" title="Main Classes" level="1"/>
        </page>
        <page access="public" status="commendable" name="writemessage" href="writemessage.html" subtype="example" title="'Write Message' Example" fulltitle="'Write Message' Example" subtitle="" location="writemessage.qdoc">
            <page access="public" status="commendable" name="writemessage/messagesender.cpp" href="writemessage-messagesender-cpp.html" subtype="file" title="" fulltitle="messagesender.cpp Example File" subtitle="writemessage/messagesender.cpp" location=""/>
            <page access="public" status="commendable" name="writemessage/messagesender.h" href="writemessage-messagesender-h.html" subtype="file" title="" fulltitle="messagesender.h Example File" subtitle="writemessage/messagesender.h" location=""/>
            <page access="public" status="commendable" name="writemessage/main.cpp" href="writemessage-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="writemessage/main.cpp" location=""/>
            <page access="public" status="commendable" name="writemessage/writemessage.pro" href="writemessage-writemessage-pro.html" subtype="file" title="" fulltitle="writemessage.pro Example File" subtitle="writemessage/writemessage.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DECLARE_CUSTOM_ORGANIZER_ITEM" href="qorganizeritem.html#Q_DECLARE_CUSTOM_ORGANIZER_ITEM" location="qorganizeritem.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QOrganizerItem" type="" signature="Q_DECLARE_CUSTOM_ORGANIZER_ITEM()"/>
        <page access="public" status="commendable" name="contactssync.html" href="contactssync.html" subtype="page" title="Contacts Synchronous API" fulltitle="Contacts Synchronous API" subtitle="" location="contactssync.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="using-the-api" title="Using The API" level="1"/>
            <contents name="error-reporting" title="Error Reporting" level="2"/>
            <contents name="contact-manipulation" title="Contact Manipulation" level="2"/>
            <contents name="relationship-manipulation" title="Relationship Manipulation" level="2"/>
            <contents name="schema-manipulation" title="Schema Manipulation" level="2"/>
            <contents name="examples-of-usage" title="Examples Of Usage" level="1"/>
            <contents name="saving-a-new-contact-to-the-default-manager" title="Saving a new contact to the default manager" level="2"/>
            <contents name="filtering-by-detail-definition-and-value" title="Filtering by detail definition and value" level="2"/>
            <contents name="installing-a-plugin-that-modifies-the-definition-of-one-type-of-detail" title="Installing a plugin that modifies the definition of one type of detail" level="2"/>
            <contents name="modifying-an-existing-contact-and-saving-the-modifications" title="Modifying an existing contact and saving the modifications" level="3"/>
        </page>
        <page access="public" status="commendable" name="slideshow" href="slideshow.html" subtype="example" title="SlideShow Example" fulltitle="SlideShow Example" subtitle="" location="slideshow.qdoc">
            <page access="public" status="commendable" name="slideshow/slideshow.cpp" href="slideshow-slideshow-cpp.html" subtype="file" title="" fulltitle="slideshow.cpp Example File" subtitle="slideshow/slideshow.cpp" location=""/>
            <page access="public" status="commendable" name="slideshow/slideshow.h" href="slideshow-slideshow-h.html" subtype="file" title="" fulltitle="slideshow.h Example File" subtitle="slideshow/slideshow.h" location=""/>
            <page access="public" status="commendable" name="slideshow/main.cpp" href="slideshow-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="slideshow/main.cpp" location=""/>
            <page access="public" status="commendable" name="slideshow/slideshow.pro" href="slideshow-slideshow-pro.html" subtype="file" title="" fulltitle="slideshow.pro Example File" subtitle="slideshow/slideshow.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoRendererControl_iid" href="qvideorenderercontrol.html#QVideoRendererControl_iid" location="qvideorenderercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoRendererControl" type="" signature="QVideoRendererControl_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMediaContainerControl_iid" href="qmediacontainercontrol.html#QMediaContainerControl_iid" location="qmediacontainercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMediaContainerControl" type="" signature="QMediaContainerControl_iid()"/>
        <page access="public" status="commendable" name="lgpl.html" href="lgpl.html" subtype="page" title="GNU Lesser General Public License (LGPL)" fulltitle="GNU Lesser General Public License (LGPL)" subtitle="" location="gpl.qdoc">
            <contents name="the-gnu-lesser-general-public-license-version-2-1" title="The GNU Lesser General Public License (Version 2.1)" level="1"/>
            <contents name="nokia-qt-lgpl-exception-version-1-0" title="Nokia Qt LGPL Exception version 1.0" level="1"/>
        </page>
        <page access="public" status="commendable" name="gallery" href="gallery.html" subtype="group" title="Document Gallery" fulltitle="Document Gallery" subtitle="" location="gallery.qdoc"/>
        <page access="public" status="commendable" name="gallery-requests" href="gallery-requests.html" subtype="group" title="Document Gallery Requests" fulltitle="Document Gallery Requests" subtitle="" location="gallery.qdoc"/>
        <page access="public" status="commendable" name="gallery-filters" href="gallery-filters.html" subtype="group" title="Document Gallery Filters" fulltitle="Document Gallery Filters" subtitle="" location="gallery.qdoc"/>
        <page access="public" status="commendable" name="gallery-galleries" href="gallery-galleries.html" subtype="group" title="Document Galleries." fulltitle="Document Galleries." subtitle="" location="gallery.qdoc"/>
        <page access="public" status="commendable" name="gallery-examples" href="gallery-examples.html" subtype="group" title="Document Gallery Examples" fulltitle="Document Gallery Examples" subtitle="" location="gallery.qdoc"/>
        <page access="public" status="commendable" name="gallery.html" href="gallery.html" subtype="page" title="Document Gallery" fulltitle="Document Gallery" subtitle="" location="gallery.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="requests" title="Requests" level="2"/>
            <contents name="filters" title="Filters" level="2"/>
            <contents name="galleries" title="Galleries" level="2"/>
            <contents name="examples" title="Examples" level="1"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QAudioEndpointSelector_iid" href="qaudioendpointselector.html#QAudioEndpointSelector_iid" location="qaudioendpointselector.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QAudioEndpointSelector" type="" signature="QAudioEndpointSelector_iid()"/>
        <page access="public" status="commendable" name="battery-charge" href="battery-charge.html" subtype="example" title="Accessing Publish and Subscribe from QML" fulltitle="Accessing Publish and Subscribe from QML" subtitle="" location="battery-charge.qdoc">
            <contents name="battery-subscriber" title="Battery Subscriber" level="2"/>
            <contents name="qml" title="QML" level="3"/>
            <page access="public" status="commendable" name="battery-charge/battery-publisher/batterypublisher.cpp" href="battery-charge-battery-publisher-batterypublisher-cpp.html" subtype="file" title="" fulltitle="batterypublisher.cpp Example File" subtitle="battery-charge/battery-publisher/batterypublisher.cpp" location=""/>
            <page access="public" status="commendable" name="battery-charge/battery-publisher/batterypublisher.h" href="battery-charge-battery-publisher-batterypublisher-h.html" subtype="file" title="" fulltitle="batterypublisher.h Example File" subtitle="battery-charge/battery-publisher/batterypublisher.h" location=""/>
            <page access="public" status="commendable" name="battery-charge/battery-publisher/batterypublisher.ui" href="battery-charge-battery-publisher-batterypublisher-ui.html" subtype="file" title="" fulltitle="batterypublisher.ui Example File" subtitle="battery-charge/battery-publisher/batterypublisher.ui" location=""/>
            <page access="public" status="commendable" name="battery-charge/battery-subscriber/battery-subscriber.qml" href="battery-charge-battery-subscriber-battery-subscriber-qml.html" subtype="file" title="" fulltitle="battery-subscriber.qml Example File" subtitle="battery-charge/battery-subscriber/battery-subscriber.qml" location=""/>
            <page access="public" status="commendable" name="battery-charge/battery-publisher/main.cpp" href="battery-charge-battery-publisher-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="battery-charge/battery-publisher/main.cpp" location=""/>
            <page access="public" status="commendable" name="battery-charge/battery-charge.pro" href="battery-charge-battery-charge-pro.html" subtype="file" title="" fulltitle="battery-charge.pro Example File" subtitle="battery-charge/battery-charge.pro" location=""/>
            <page access="public" status="commendable" name="battery-charge/battery-publisher/battery-publisher.pro" href="battery-charge-battery-publisher-battery-publisher-pro.html" subtype="file" title="" fulltitle="battery-publisher.pro Example File" subtitle="battery-charge/battery-publisher/battery-publisher.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="publish-subscribe" href="publish-subscribe.html" subtype="example" title="Publish and Subscribe Example" fulltitle="Publish and Subscribe Example" subtitle="" location="publish-subscribe.qdoc">
            <contents name="publisher" title="Publisher" level="2"/>
            <contents name="subscriber" title="Subscriber" level="2"/>
            <page access="public" status="commendable" name="publish-subscribe/publisherdialog.cpp" href="publish-subscribe-publisherdialog-cpp.html" subtype="file" title="" fulltitle="publisherdialog.cpp Example File" subtitle="publish-subscribe/publisherdialog.cpp" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/publisherdialog.h" href="publish-subscribe-publisherdialog-h.html" subtype="file" title="" fulltitle="publisherdialog.h Example File" subtitle="publish-subscribe/publisherdialog.h" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/publisherdialog.ui" href="publish-subscribe-publisherdialog-ui.html" subtype="file" title="" fulltitle="publisherdialog.ui Example File" subtitle="publish-subscribe/publisherdialog.ui" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/publisherdialog_hor.ui" href="publish-subscribe-publisherdialog-hor-ui.html" subtype="file" title="" fulltitle="publisherdialog_hor.ui Example File" subtitle="publish-subscribe/publisherdialog_hor.ui" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/subscriberdialog.cpp" href="publish-subscribe-subscriberdialog-cpp.html" subtype="file" title="" fulltitle="subscriberdialog.cpp Example File" subtitle="publish-subscribe/subscriberdialog.cpp" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/subscriberdialog.h" href="publish-subscribe-subscriberdialog-h.html" subtype="file" title="" fulltitle="subscriberdialog.h Example File" subtitle="publish-subscribe/subscriberdialog.h" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/subscriberdialog.ui" href="publish-subscribe-subscriberdialog-ui.html" subtype="file" title="" fulltitle="subscriberdialog.ui Example File" subtitle="publish-subscribe/subscriberdialog.ui" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/subscriberdialog_hor.ui" href="publish-subscribe-subscriberdialog-hor-ui.html" subtype="file" title="" fulltitle="subscriberdialog_hor.ui Example File" subtitle="publish-subscribe/subscriberdialog_hor.ui" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/main.cpp" href="publish-subscribe-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="publish-subscribe/main.cpp" location=""/>
            <page access="public" status="commendable" name="publish-subscribe/publish-subscribe.pro" href="publish-subscribe-publish-subscribe-pro.html" subtype="file" title="" fulltitle="publish-subscribe.pro Example File" subtitle="publish-subscribe/publish-subscribe.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="lightmaps" href="lightmaps.html" subtype="example" title="LightMaps Example" fulltitle="LightMaps Example" subtitle="" location="lightmaps.qdoc">
            <page access="public" status="commendable" name="lightmaps/lightmaps.cpp" href="lightmaps-lightmaps-cpp.html" subtype="file" title="" fulltitle="lightmaps.cpp Example File" subtitle="lightmaps/lightmaps.cpp" location=""/>
            <page access="public" status="commendable" name="lightmaps/lightmaps.pro" href="lightmaps-lightmaps-pro.html" subtype="file" title="" fulltitle="lightmaps.pro Example File" subtitle="lightmaps/lightmaps.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QCameraFocusControl_iid" href="qcamerafocuscontrol.html#QCameraFocusControl_iid" location="qcamerafocuscontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QCameraFocusControl" type="" signature="QCameraFocusControl_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QRadioTunerControl_iid" href="qradiotunercontrol.html#QRadioTunerControl_iid" location="qradiotunercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QRadioTunerControl" type="" signature="QRadioTunerControl_iid()"/>
        <page access="public" status="commendable" name="bearermonitor" href="bearermonitor.html" subtype="example" title="Bearer Monitor Example" fulltitle="Bearer Monitor Example" subtitle="" location="bearermonitor.qdoc">
            <page access="public" status="commendable" name="bearermonitor/bearermonitor.cpp" href="bearermonitor-bearermonitor-cpp.html" subtype="file" title="" fulltitle="bearermonitor.cpp Example File" subtitle="bearermonitor/bearermonitor.cpp" location=""/>
            <page access="public" status="commendable" name="bearermonitor/bearermonitor.h" href="bearermonitor-bearermonitor-h.html" subtype="file" title="" fulltitle="bearermonitor.h Example File" subtitle="bearermonitor/bearermonitor.h" location=""/>
            <page access="public" status="commendable" name="bearermonitor/bearermonitor_240_320.ui" href="bearermonitor-bearermonitor-240-320-ui.html" subtype="file" title="" fulltitle="bearermonitor_240_320.ui Example File" subtitle="bearermonitor/bearermonitor_240_320.ui" location=""/>
            <page access="public" status="commendable" name="bearermonitor/bearermonitor_640_480.ui" href="bearermonitor-bearermonitor-640-480-ui.html" subtype="file" title="" fulltitle="bearermonitor_640_480.ui Example File" subtitle="bearermonitor/bearermonitor_640_480.ui" location=""/>
            <page access="public" status="commendable" name="bearermonitor/bearermonitor_maemo.ui" href="bearermonitor-bearermonitor-maemo-ui.html" subtype="file" title="" fulltitle="bearermonitor_maemo.ui Example File" subtitle="bearermonitor/bearermonitor_maemo.ui" location=""/>
            <page access="public" status="commendable" name="bearermonitor/sessionwidget.cpp" href="bearermonitor-sessionwidget-cpp.html" subtype="file" title="" fulltitle="sessionwidget.cpp Example File" subtitle="bearermonitor/sessionwidget.cpp" location=""/>
            <page access="public" status="commendable" name="bearermonitor/sessionwidget.h" href="bearermonitor-sessionwidget-h.html" subtype="file" title="" fulltitle="sessionwidget.h Example File" subtitle="bearermonitor/sessionwidget.h" location=""/>
            <page access="public" status="commendable" name="bearermonitor/sessionwidget.ui" href="bearermonitor-sessionwidget-ui.html" subtype="file" title="" fulltitle="sessionwidget.ui Example File" subtitle="bearermonitor/sessionwidget.ui" location=""/>
            <page access="public" status="commendable" name="bearermonitor/sessionwidget_maemo.ui" href="bearermonitor-sessionwidget-maemo-ui.html" subtype="file" title="" fulltitle="sessionwidget_maemo.ui Example File" subtitle="bearermonitor/sessionwidget_maemo.ui" location=""/>
            <page access="public" status="commendable" name="bearermonitor/main.cpp" href="bearermonitor-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="bearermonitor/main.cpp" location=""/>
            <page access="public" status="commendable" name="bearermonitor/bearermonitor.pro" href="bearermonitor-bearermonitor-pro.html" subtype="file" title="" fulltitle="bearermonitor.pro Example File" subtitle="bearermonitor/bearermonitor.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QCameraImageProcessingControl_iid" href="qcameraimageprocessingcontrol.html#QCameraImageProcessingControl_iid" location="qcameraimageprocessingcontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QCameraImageProcessingControl" type="" signature="QCameraImageProcessingControl_iid()"/>
        <page access="public" status="commendable" name="sysinfo" href="sysinfo.html" subtype="example" title="System Information Example" fulltitle="System Information Example" subtitle="" location="sysinfo.qdoc">
            <page access="public" status="commendable" name="sysinfo/dialog.cpp" href="sysinfo-dialog-cpp.html" subtype="file" title="" fulltitle="dialog.cpp Example File" subtitle="sysinfo/dialog.cpp" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog.h" href="sysinfo-dialog-h.html" subtype="file" title="" fulltitle="dialog.h Example File" subtitle="sysinfo/dialog.h" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog.ui" href="sysinfo-dialog-ui.html" subtype="file" title="" fulltitle="dialog.ui Example File" subtitle="sysinfo/dialog.ui" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog_landscape.ui" href="sysinfo-dialog-landscape-ui.html" subtype="file" title="" fulltitle="dialog_landscape.ui Example File" subtitle="sysinfo/dialog_landscape.ui" location=""/>
            <page access="public" status="commendable" name="sysinfo/dialog_s60.ui" href="sysinfo-dialog-s60-ui.html" subtype="file" title="" fulltitle="dialog_s60.ui Example File" subtitle="sysinfo/dialog_s60.ui" location=""/>
            <page access="public" status="commendable" name="sysinfo/main.cpp" href="sysinfo-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="sysinfo/main.cpp" location=""/>
            <page access="public" status="commendable" name="sysinfo/examples.qrc" href="sysinfo-examples-qrc.html" subtype="file" title="" fulltitle="examples.qrc Example File" subtitle="sysinfo/examples.qrc" location=""/>
            <page access="public" status="commendable" name="sysinfo/sysinfo.pro" href="sysinfo-sysinfo-pro.html" subtype="file" title="" fulltitle="sysinfo.pro Example File" subtitle="sysinfo/sysinfo.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistSourceControl_iid" href="qmediaplaylistsourcecontrol.html#QMediaPlaylistSourceControl_iid" location="qmediaplaylistsourcecontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMediaPlaylistSourceControl" type="" signature="QMediaPlaylistSourceControl_iid()"/>
        <page access="public" status="commendable" name="GalleryQueryCount" href="qml-galleryquerycount.html" subtype="qmlclass" title="QML GalleryQueryCount Element" fulltitle="QML GalleryQueryCount Element" subtitle="" location="qdeclarativegalleryquerycount.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="gallery" fullname="GalleryQueryCount#gallery" href="qml-galleryquerycount.html#gallery-prop" type="QAbstractGallery"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="state" fullname="GalleryQueryCount#state" href="qml-galleryquerycount.html#state-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="result" fullname="GalleryQueryCount#result" href="qml-galleryquerycount.html#result-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="currentProgress" fullname="GalleryQueryCount#currentProgress" href="qml-galleryquerycount.html#currentProgress-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="maximumProgress" fullname="GalleryQueryCount#maximumProgress" href="qml-galleryquerycount.html#maximumProgress-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="properties" fullname="GalleryQueryCount#properties" href="qml-galleryquerycount.html#properties-prop" type="stringlist"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="live" fullname="GalleryQueryCount#live" href="qml-galleryquerycount.html#live-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="GalleryQueryCount#itemType" href="qml-galleryquerycount.html#itemType-prop" type="string"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="GalleryQueryCount#filter" href="qml-galleryquerycount.html#filter-prop" type="GalleryFilter"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="GalleryQueryCount#scope" href="qml-galleryquerycount.html#scope-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="scopeItemId" fullname="GalleryQueryCount#scopeItemId" href="qml-galleryquerycount.html#scopeItemId-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="count" fullname="GalleryQueryCount#count" href="qml-galleryquerycount.html#count-prop" type="int"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="reload" fullname="GalleryQueryCount#reload" href="qml-galleryquerycount.html#reload-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="GalleryQueryCount#cancel" href="qml-galleryquerycount.html#cancel-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="GalleryQueryCount#clear" href="qml-galleryquerycount.html#clear-method"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onSucceeded" fullname="GalleryQueryCount#onSucceeded" href="qml-galleryquerycount.html#onSucceeded-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onCancelled" fullname="GalleryQueryCount#onCancelled" href="qml-galleryquerycount.html#onCancelled-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onFailed" fullname="GalleryQueryCount#onFailed" href="qml-galleryquerycount.html#onFailed-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onFinished" fullname="GalleryQueryCount#onFinished" href="qml-galleryquerycount.html#onFinished-signal"/>
        </page>
        <page access="public" status="commendable" name="all-examples.html" href="all-examples.html" subtype="page" title="Qt Mobility Examples" fulltitle="Qt Mobility Examples" subtitle="" location="examples.qdoc">
            <contents name="bearer-management" title="Bearer Management" level="2"/>
            <contents name="contacts" title="Contacts" level="2"/>
            <contents name="location" title="Location" level="2"/>
            <contents name="messaging" title="Messaging" level="2"/>
            <contents name="multimedia" title="Multimedia" level="2"/>
            <contents name="publish-and-subscribe" title="Publish and Subscribe" level="2"/>
            <contents name="service-framework" title="Service Framework" level="2"/>
            <contents name="system-information" title="System Information" level="2"/>
        </page>
        <page access="public" status="commendable" name="organizer.html" href="organizer.html" subtype="page" title="Organizer" fulltitle="Organizer" subtitle="" location="organizer.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="client-facing-api" title="Client-Facing API" level="1"/>
            <contents name="container-classes" title="Container Classes" level="2"/>
            <contents name="item" title="Item" level="3"/>
            <contents name="detail" title="Detail" level="3"/>
            <contents name="detail-definition" title="Detail Definition" level="3"/>
            <contents name="manager" title="Manager" level="2"/>
            <contents name="meta-data-api" title="Meta Data API" level="3"/>
            <contents name="asynchronous-api" title="Asynchronous API" level="3"/>
            <contents name="synchronous-api" title="Synchronous API" level="3"/>
            <contents name="non-client-facing-api" title="Non-Client-Facing API" level="1"/>
            <contents name="manager-engine" title="Manager Engine" level="2"/>
            <contents name="using-the-api" title="Using the API" level="1"/>
            <contents name="building-and-compiling" title="Building and compiling" level="1"/>
            <contents name="reference-documentation" title="Reference documentation" level="1"/>
            <contents name="main-classes" title="Main classes" level="2"/>
            <contents name="organizer-item-details-leaf-classes" title="&quot;Organizer Item Details&quot; Leaf Classes" level="2"/>
            <contents name="asynchronous-requests" title="Asynchronous Requests" level="2"/>
            <contents name="organizer-item-selection-and-sorting" title="Organizer Item Selection And Sorting" level="2"/>
            <contents name="implementing-backends" title="Implementing Backends" level="2"/>
            <contents name="synchronization-and-serialization" title="Synchronization and Serialization" level="2"/>
            <contents name="examples" title="Examples" level="2"/>
        </page>
        <page access="public" status="commendable" name="contactsusage.html" href="contactsusage.html" subtype="page" title="Contacts API Usage" fulltitle="Contacts API Usage" subtitle="" location="contactsusage.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="manager-settings-and-configuration" title="Manager Settings And Configuration" level="1"/>
            <contents name="loading-the-default-manager-for-the-platform" title="Loading the default manager for the platform" level="2"/>
            <contents name="querying-a-manager-for-capabilities" title="Querying a manager for capabilities" level="2"/>
            <contents name="loading-the-manager-for-a-specific-backend" title="Loading the manager for a specific backend" level="2"/>
            <contents name="loading-a-manager-with-specific-parameters" title="Loading a manager with specific parameters" level="2"/>
            <contents name="contact-detail-manipulation" title="Contact Detail Manipulation" level="1"/>
            <contents name="adding-a-detail-to-a-contact" title="Adding a detail to a contact" level="2"/>
            <contents name="updating-a-detail-in-a-contact" title="Updating a detail in a contact" level="2"/>
            <contents name="removing-a-detail-from-a-contact" title="Removing a detail from a contact" level="2"/>
            <contents name="viewing-a-specific-detail-of-a-contact" title="Viewing a specific detail of a contact" level="2"/>
            <contents name="viewing-all-of-the-details-of-a-contact" title="Viewing all of the details of a contact" level="2"/>
            <contents name="persistent-contact-information" title="Persistent Contact Information" level="1"/>
            <contents name="creating-a-new-contact-in-a-manager" title="Creating a new contact in a manager" level="2"/>
            <contents name="retrieving-contacts-from-a-manager" title="Retrieving contacts from a manager" level="2"/>
            <contents name="updating-an-existing-contact-in-a-manager" title="Updating an existing contact in a manager" level="2"/>
            <contents name="removing-a-contact-from-a-manager" title="Removing a contact from a manager" level="2"/>
            <contents name="creating-a-new-relationship-between-two-contacts" title="Creating a new relationship between two contacts" level="2"/>
            <contents name="retrieving-relationships-between-contacts" title="Retrieving relationships between contacts" level="2"/>
            <contents name="removing-a-relationship-between-two-contacts" title="Removing a relationship between two contacts" level="2"/>
            <contents name="querying-the-schema-supported-by-a-manager" title="Querying the schema supported by a manager" level="2"/>
            <contents name="modifying-the-schema-supported-by-a-manager" title="Modifying the schema supported by a manager" level="2"/>
        </page>
        <page access="public" status="commendable" name="versit.html" href="versit.html" subtype="page" title="Versit API" fulltitle="Versit API" subtitle="" location="versit.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="usage" title="Usage" level="1"/>
            <contents name="main-classes" title="Main Classes" level="1"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QAudioEncoderControl_iid" href="qaudioencodercontrol.html#QAudioEncoderControl_iid" location="qaudioencodercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QAudioEncoderControl" type="" signature="QAudioEncoderControl_iid()"/>
        <page access="public" status="commendable" name="mediabrowser" href="mediabrowser.html" subtype="example" title="Media Browser" fulltitle="Media Browser" subtitle="" location="mediabrowser.qdoc">
            <page access="public" status="commendable" name="mediabrowser/albumdelegate.cpp" href="mediabrowser-albumdelegate-cpp.html" subtype="file" title="" fulltitle="albumdelegate.cpp Example File" subtitle="mediabrowser/albumdelegate.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/albumdelegate.h" href="mediabrowser-albumdelegate-h.html" subtype="file" title="" fulltitle="albumdelegate.h Example File" subtitle="mediabrowser/albumdelegate.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/albumview.cpp" href="mediabrowser-albumview-cpp.html" subtype="file" title="" fulltitle="albumview.cpp Example File" subtitle="mediabrowser/albumview.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/albumview.h" href="mediabrowser-albumview-h.html" subtype="file" title="" fulltitle="albumview.h Example File" subtitle="mediabrowser/albumview.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/artistdelegate.cpp" href="mediabrowser-artistdelegate-cpp.html" subtype="file" title="" fulltitle="artistdelegate.cpp Example File" subtitle="mediabrowser/artistdelegate.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/artistdelegate.h" href="mediabrowser-artistdelegate-h.html" subtype="file" title="" fulltitle="artistdelegate.h Example File" subtitle="mediabrowser/artistdelegate.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/artistview.cpp" href="mediabrowser-artistview-cpp.html" subtype="file" title="" fulltitle="artistview.cpp Example File" subtitle="mediabrowser/artistview.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/artistview.h" href="mediabrowser-artistview-h.html" subtype="file" title="" fulltitle="artistview.h Example File" subtitle="mediabrowser/artistview.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/browser.cpp" href="mediabrowser-browser-cpp.html" subtype="file" title="" fulltitle="browser.cpp Example File" subtitle="mediabrowser/browser.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/browser.h" href="mediabrowser-browser-h.html" subtype="file" title="" fulltitle="browser.h Example File" subtitle="mediabrowser/browser.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/galleryview.cpp" href="mediabrowser-galleryview-cpp.html" subtype="file" title="" fulltitle="galleryview.cpp Example File" subtitle="mediabrowser/galleryview.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/galleryview.h" href="mediabrowser-galleryview-h.html" subtype="file" title="" fulltitle="galleryview.h Example File" subtitle="mediabrowser/galleryview.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/photodelegate.cpp" href="mediabrowser-photodelegate-cpp.html" subtype="file" title="" fulltitle="photodelegate.cpp Example File" subtitle="mediabrowser/photodelegate.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/photodelegate.h" href="mediabrowser-photodelegate-h.html" subtype="file" title="" fulltitle="photodelegate.h Example File" subtitle="mediabrowser/photodelegate.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/photoview.cpp" href="mediabrowser-photoview-cpp.html" subtype="file" title="" fulltitle="photoview.cpp Example File" subtitle="mediabrowser/photoview.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/photoview.h" href="mediabrowser-photoview-h.html" subtype="file" title="" fulltitle="photoview.h Example File" subtitle="mediabrowser/photoview.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/songview.cpp" href="mediabrowser-songview-cpp.html" subtype="file" title="" fulltitle="songview.cpp Example File" subtitle="mediabrowser/songview.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/songview.h" href="mediabrowser-songview-h.html" subtype="file" title="" fulltitle="songview.h Example File" subtitle="mediabrowser/songview.h" location=""/>
            <page access="public" status="commendable" name="mediabrowser/main.cpp" href="mediabrowser-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="mediabrowser/main.cpp" location=""/>
            <page access="public" status="commendable" name="mediabrowser/mediabrowser.pro" href="mediabrowser-mediabrowser-pro.html" subtype="file" title="" fulltitle="mediabrowser.pro Example File" subtitle="mediabrowser/mediabrowser.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="contactsasync.html" href="contactsasync.html" subtype="page" title="Contacts Asynchronous API" fulltitle="Contacts Asynchronous API" subtitle="" location="contactsasync.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="using-the-api" title="Using the API" level="1"/>
            <contents name="contact-manipulation" title="Contact Manipulation" level="2"/>
            <contents name="relationship-manipulation" title="Relationship Manipulation" level="3"/>
            <contents name="schema-manipulation" title="Schema Manipulation" level="2"/>
            <contents name="examples-of-usage" title="Examples Of Usage" level="1"/>
            <contents name="fetching-contacts" title="Fetching Contacts" level="2"/>
            <contents name="other-asynchronous-operations" title="Other Asynchronous Operations" level="2"/>
        </page>
        <page access="public" status="commendable" name="declarative-sfw-dialer" href="declarative-sfw-dialer.html" subtype="example" title="Service Framework using QML Example" fulltitle="Service Framework using QML Example" subtitle="" location="declarative-sfw-dialer.qdoc">
            <target name="guidesign"/>
            <target name="voipdialer-h-0"/>
            <target name="dialerlist-qml-2"/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/declarative-sfw-dialer.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-declarative-sfw-dialer-qml.html" subtype="file" title="" fulltitle="declarative-sfw-dialer.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/declarative-sfw-dialer.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/DialButton.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-content-dialbutton-qml.html" subtype="file" title="" fulltitle="DialButton.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/DialButton.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/DialScreen.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-content-dialscreen-qml.html" subtype="file" title="" fulltitle="DialScreen.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/DialScreen.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/DialerList.qml" href="declarative-sfw-dialer-declarative-sfw-dialer-content-dialerlist-qml.html" subtype="file" title="" fulltitle="DialerList.qml Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/DialerList.qml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialer.cpp" href="declarative-sfw-dialer-landlinedialer-landlinedialer-cpp.html" subtype="file" title="" fulltitle="landlinedialer.cpp Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialer.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialer.h" href="declarative-sfw-dialer-landlinedialer-landlinedialer-h.html" subtype="file" title="" fulltitle="landlinedialer.h Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialer.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.cpp" href="declarative-sfw-dialer-landlinedialer-landlinedialerplugin-cpp.html" subtype="file" title="" fulltitle="landlinedialerplugin.cpp Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.h" href="declarative-sfw-dialer-landlinedialer-landlinedialerplugin-h.html" subtype="file" title="" fulltitle="landlinedialerplugin.h Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialerplugin.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialerservice.xml" href="declarative-sfw-dialer-landlinedialer-landlinedialerservice-xml.html" subtype="file" title="" fulltitle="landlinedialerservice.xml Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialerservice.xml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialer.cpp" href="declarative-sfw-dialer-voipdialer-voipdialer-cpp.html" subtype="file" title="" fulltitle="voipdialer.cpp Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialer.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialer.h" href="declarative-sfw-dialer-voipdialer-voipdialer-h.html" subtype="file" title="" fulltitle="voipdialer.h Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialer.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialerplugin.cpp" href="declarative-sfw-dialer-voipdialer-voipdialerplugin-cpp.html" subtype="file" title="" fulltitle="voipdialerplugin.cpp Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialerplugin.cpp" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialerplugin.h" href="declarative-sfw-dialer-voipdialer-voipdialerplugin-h.html" subtype="file" title="" fulltitle="voipdialerplugin.h Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialerplugin.h" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialerservice.xml" href="declarative-sfw-dialer-voipdialer-voipdialerservice-xml.html" subtype="file" title="" fulltitle="voipdialerservice.xml Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialerservice.xml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/xmldata/voipdialerservice.xml" href="declarative-sfw-dialer-voipdialer-xmldata-voipdialerservice-xml.html" subtype="file" title="" fulltitle="voipdialerservice.xml Example File" subtitle="declarative-sfw-dialer/voipdialer/xmldata/voipdialerservice.xml" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer.pro" href="declarative-sfw-dialer-declarative-sfw-dialer-pro.html" subtype="file" title="" fulltitle="declarative-sfw-dialer.pro Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer.pro" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/declarative-sfw-dialer/content/qmldir" href="declarative-sfw-dialer-declarative-sfw-dialer-content-qmldir.html" subtype="file" title="" fulltitle="qmldir Example File" subtitle="declarative-sfw-dialer/declarative-sfw-dialer/content/qmldir" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/landlinedialer/landlinedialer.pro" href="declarative-sfw-dialer-landlinedialer-landlinedialer-pro.html" subtype="file" title="" fulltitle="landlinedialer.pro Example File" subtitle="declarative-sfw-dialer/landlinedialer/landlinedialer.pro" location=""/>
            <page access="public" status="commendable" name="declarative-sfw-dialer/voipdialer/voipdialer.pro" href="declarative-sfw-dialer-voipdialer-voipdialer-pro.html" subtype="file" title="" fulltitle="voipdialer.pro Example File" subtitle="declarative-sfw-dialer/voipdialer/voipdialer.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="Audio" href="qml-audio.html" subtype="qmlclass" title="QML Audio Element" fulltitle="QML Audio Element" subtitle="" location="qdeclarativeaudio.cpp">
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="play" fullname="Audio#play" href="qml-audio.html#play-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="Audio#pause" href="qml-audio.html#pause-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="Audio#stop" href="qml-audio.html#stop-method"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="source" fullname="Audio#source" href="qml-audio.html#source-prop" type="url"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="autoLoad" fullname="Audio#autoLoad" href="qml-audio.html#autoLoad-prop" type="url"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="playing" fullname="Audio#playing" href="qml-audio.html#playing-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="paused" fullname="Audio#paused" href="qml-audio.html#paused-prop" type="bool"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onStarted" fullname="Audio#onStarted" href="qml-audio.html#onStarted-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onResumed" fullname="Audio#onResumed" href="qml-audio.html#onResumed-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onPaused" fullname="Audio#onPaused" href="qml-audio.html#onPaused-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onStopped" fullname="Audio#onStopped" href="qml-audio.html#onStopped-signal"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="status" fullname="Audio#status" href="qml-audio.html#status-prop" type="enumeration"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onLoaded" fullname="Audio#onLoaded" href="qml-audio.html#onLoaded-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onBuffering" fullname="Audio#onBuffering" href="qml-audio.html#onBuffering-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onStalled" fullname="Audio#onStalled" href="qml-audio.html#onStalled-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onBuffered" fullname="Audio#onBuffered" href="qml-audio.html#onBuffered-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onEndOfMedia" fullname="Audio#onEndOfMedia" href="qml-audio.html#onEndOfMedia-signal"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="Audio#duration" href="qml-audio.html#duration-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="position" fullname="Audio#position" href="qml-audio.html#position-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="Audio#volume" href="qml-audio.html#volume-prop" type="real"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="Audio#muted" href="qml-audio.html#muted-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="bufferProgress" fullname="Audio#bufferProgress" href="qml-audio.html#bufferProgress-prop" type="real"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="seekable" fullname="Audio#seekable" href="qml-audio.html#seekable-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="Audio#playbackRate" href="qml-audio.html#playbackRate-prop" type="real"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="error" fullname="Audio#error" href="qml-audio.html#error-prop" type="enumeration"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="Audio#errorString" href="qml-audio.html#errorString-prop" type="string"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onError" fullname="Audio#onError" href="qml-audio.html#onError-signal"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWidgetControl_iid" href="qvideowidgetcontrol.html#QVideoWidgetControl_iid" location="qvideowidgetcontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoWidgetControl" type="" signature="QVideoWidgetControl_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DECLARE_CUSTOM_ORGANIZER_DETAIL" href="qorganizeritemdetail.html#Q_DECLARE_CUSTOM_ORGANIZER_DETAIL" location="qorganizeritemdetail.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QOrganizerItemDetail" type="" signature="Q_DECLARE_CUSTOM_ORGANIZER_DETAIL()"/>
        <page access="public" status="commendable" name="http://bugreports.qt.nokia.com" href="http-bugreports-qt-nokia-com.html" subtype="externalpage" title="QtMobility Project Bug Tracker" fulltitle="QtMobility Project Bug Tracker" subtitle="" location="qtmobility-known-issues.qdoc"/>
        <page access="public" status="commendable" name="qtmobility-known-issues.html" href="qtmobility-known-issues.html" subtype="page" title="Release Notes of the QtMobility Project" fulltitle="Release Notes of the QtMobility Project" subtitle="" location="qtmobility-known-issues.qdoc">
            <contents name="new-features" title="New Features" level="1"/>
            <contents name="detailed-feature-support-symbian-s60" title="Detailed Feature support - Symbian/S60" level="2"/>
            <contents name="bearer-management-api" title="Bearer Management API" level="3"/>
            <contents name="contacts-api" title="Contacts API" level="3"/>
            <contents name="messaging-api" title="Messaging API" level="3"/>
            <contents name="multimedia-api" title="Multimedia API" level="3"/>
            <contents name="service-framework-api" title="Service Framework API" level="3"/>
            <contents name="system-info-api" title="System Info API" level="3"/>
            <contents name="known-issues" title="Known Issues" level="1"/>
            <contents name="non-api-specific-issues" title="Non-API specific issues" level="2"/>
            <contents name="bearer-management-api" title="Bearer Management API" level="2"/>
            <contents name="bearer-management-api" title="Bearer Management API" level="2"/>
            <contents name="contacts-api" title="Contacts API" level="2"/>
            <contents name="bearer-management-api" title="Bearer Management API" level="2"/>
            <contents name="messaging-api" title="Messaging API" level="2"/>
            <contents name="multimedia-api" title="Multimedia API" level="2"/>
            <contents name="system-info-api" title="System Info API" level="2"/>
        </page>
        <page access="public" status="commendable" name="messaging-installation-on-windows-mobile.html" href="messaging-installation-on-windows-mobile.html" subtype="page" title="Messaging Installation On Windows Mobile" fulltitle="Messaging Installation On Windows Mobile" subtitle="" location="messaging-installation-on-windows-mobile.qdoc">
            <contents name="get-qt-mobility-and-qt-packages" title="Get Qt Mobility and Qt packages" level="1"/>
            <contents name="install-pre-requisites" title="Install pre-requisites" level="1"/>
            <contents name="build-qt" title="Build Qt" level="1"/>
            <contents name="build-mobility-messaging" title="Build Mobility Messaging" level="1"/>
            <contents name="deploy" title="Deploy" level="1"/>
        </page>
        <page access="public" status="commendable" name="bearer" href="bearer.html" subtype="group" title="Qt Bearer Management API" fulltitle="Qt Bearer Management API" subtitle="" location="bearermanagement.qdoc"/>
        <page access="public" status="commendable" name="bearer-management.html" href="bearer-management.html" subtype="page" title="Bearer Management" fulltitle="Bearer Management" subtitle="" location="bearermanagement.qdoc">
            <contents name="overview" title="Overview" level="1"/>
            <contents name="migration-to-qt-4-7-or-higher" title="Migration to Qt 4.7 or higher" level="2"/>
            <contents name="the-api-in-detail" title="The API in Detail" level="2"/>
            <contents name="service-networks" title="Service networks" level="3"/>
            <contents name="managing-network-sessions" title="Managing network sessions" level="3"/>
            <contents name="roaming" title="Roaming" level="3"/>
            <contents name="platform-capabilities" title="Platform capabilities" level="3"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="bearer-cloud-example" title="Bearer Cloud Example" level="2"/>
            <contents name="bearer-monitor-example" title="Bearer Monitor Example" level="2"/>
            <contents name="flickr-demo" title="Flickr Demo" level="2"/>
            <contents name="weather-info-demo" title="Weather Info Demo" level="2"/>
            <contents name="light-maps-demo" title="Light Maps Demo" level="2"/>
            <contents name="classes" title="Classes" level="1"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoEncoderControl_iid" href="qvideoencodercontrol.html#QVideoEncoderControl_iid" location="qvideoencodercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoEncoderControl" type="" signature="QVideoEncoderControl_iid()"/>
        <page access="public" status="commendable" name="camera.html" href="camera.html" subtype="page" title="Camera" fulltitle="Camera" subtitle="" location="camera.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="still-images" title="Still Images" level="1"/>
            <contents name="video-clips" title="Video Clips" level="1"/>
            <contents name="focus" title="Focus" level="1"/>
            <contents name="cancelling-asynchronous-operations" title="Cancelling Asynchronous Operations" level="1"/>
            <contents name="camera-controls" title="Camera Controls" level="1"/>
            <contents name="classes" title="Classes" level="1"/>
        </page>
        <page access="public" status="commendable" name="3rdparty.html" href="3rdparty.html" subtype="page" title="Third-Party Licenses Used in Qt" fulltitle="Third-Party Licenses Used in Qt" subtitle="" location="3rdparty.qdoc">
            <contents name="des" title="DES ()" level="1"/>
            <contents name="freetype-2-version-2-3-6" title="FreeType 2 () version 2.3.6" level="1"/>
            <contents name="harfbuzz" title="HarfBuzz ()" level="1"/>
            <contents name="the-independent-jpeg-group-s-jpeg-software-version-6b" title="The Independent JPEG Group's JPEG Software () version 6b" level="1"/>
            <contents name="md4-and" title="MD4 ( and )" level="1"/>
            <contents name="md5-and" title="MD5 ( and )" level="1"/>
            <contents name="mng-library-version-1-0-10" title="MNG Library () version 1.0.10" level="1"/>
            <contents name="png-reference-library-version-1-2-29" title="PNG Reference Library () version 1.2.29" level="1"/>
            <contents name="the-ptmalloc-memory-allocator-version-1-8" title="The ptmalloc memory allocator () version 1.8" level="1"/>
            <contents name="sha-1" title="SHA-1 ()" level="1"/>
            <contents name="sqlite-version-3-5-9" title="SQLite () version 3.5.9" level="1"/>
            <contents name="tiff-software-distribution-version-3-8-2" title="TIFF Software Distribution () version 3.8.2" level="1"/>
            <contents name="wintab-api" title="Wintab API ()" level="1"/>
            <contents name="data-compression-library-version-1-2-3" title="Data Compression Library () version 1.2.3" level="1"/>
        </page>
        <page access="public" status="commendable" name="opensourceedition.html" href="opensourceedition.html" subtype="page" title="Open Source Versions of Qt" fulltitle="Open Source Versions of Qt" subtitle="" location="opensourceedition.qdoc"/>
        <page access="public" status="commendable" name="GalleryItem" href="qml-galleryitem.html" subtype="qmlclass" title="QML GalleryItem Element" fulltitle="QML GalleryItem Element" subtitle="" location="qdeclarativegalleryitem.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="gallery" fullname="GalleryItem#gallery" href="qml-galleryitem.html#gallery-prop" type="QAbstractGallery"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="state" fullname="GalleryItem#state" href="qml-galleryitem.html#state-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="result" fullname="GalleryItem#result" href="qml-galleryitem.html#result-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="currentProgress" fullname="GalleryItem#currentProgress" href="qml-galleryitem.html#currentProgress-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="maximumProgress" fullname="GalleryItem#maximumProgress" href="qml-galleryitem.html#maximumProgress-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="properties" fullname="GalleryItem#properties" href="qml-galleryitem.html#properties-prop" type="QStringList"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="live" fullname="GalleryItem#live" href="qml-galleryitem.html#live-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="item" fullname="GalleryItem#item" href="qml-galleryitem.html#item-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="available" fullname="GalleryItem#available" href="qml-galleryitem.html#available-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="reading" fullname="GalleryItem#reading" href="qml-galleryitem.html#reading-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="writing" fullname="GalleryItem#writing" href="qml-galleryitem.html#writing-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="GalleryItem#itemType" href="qml-galleryitem.html#itemType-prop" type="string"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="itemUrl" fullname="GalleryItem#itemUrl" href="qml-galleryitem.html#itemUrl-prop" type="url"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="GalleryItem#metaData" href="qml-galleryitem.html#metaData-prop" type="object"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="reload" fullname="GalleryItem#reload" href="qml-galleryitem.html#reload-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="GalleryItem#cancel" href="qml-galleryitem.html#cancel-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="GalleryItem#clear" href="qml-galleryitem.html#clear-method"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onSucceeded" fullname="GalleryItem#onSucceeded" href="qml-galleryitem.html#onSucceeded-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onCancelled" fullname="GalleryItem#onCancelled" href="qml-galleryitem.html#onCancelled-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onFailed" fullname="GalleryItem#onFailed" href="qml-galleryitem.html#onFailed-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onFinished" fullname="GalleryItem#onFinished" href="qml-galleryitem.html#onFinished-signal"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QCameraControl_iid" href="qcameracontrol.html#QCameraControl_iid" location="qcameracontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QCameraControl" type="" signature="QCameraControl_iid()"/>
        <page access="public" status="commendable" name="keepintouch" href="keepintouch.html" subtype="example" title="'Keep in Touch' Example" fulltitle="'Keep in Touch' Example" subtitle="" location="keepintouch.qdoc">
            <page access="public" status="commendable" name="keepintouch/addressfinder.cpp" href="keepintouch-addressfinder-cpp.html" subtype="file" title="" fulltitle="addressfinder.cpp Example File" subtitle="keepintouch/addressfinder.cpp" location=""/>
            <page access="public" status="commendable" name="keepintouch/addressfinder.h" href="keepintouch-addressfinder-h.html" subtype="file" title="" fulltitle="addressfinder.h Example File" subtitle="keepintouch/addressfinder.h" location=""/>
            <page access="public" status="commendable" name="keepintouch/main.cpp" href="keepintouch-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="keepintouch/main.cpp" location=""/>
            <page access="public" status="commendable" name="keepintouch/keepintouch.pro" href="keepintouch-keepintouch-pro.html" subtype="file" title="" fulltitle="keepintouch.pro Example File" subtitle="keepintouch/keepintouch.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="modules" href="modules.html" subtype="group" title="All Modules" fulltitle="All Modules" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtContacts" href="qtcontacts.html" subtype="module" title="QtContacts Module" fulltitle="QtContacts Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtOrganizer" href="qtorganizer.html" subtype="module" title="QtOrganizer Module" fulltitle="QtOrganizer Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtFeedback" href="qtfeedback.html" subtype="module" title="QtFeedback Module" fulltitle="QtFeedback Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtLocation" href="qtlocation.html" subtype="module" title="QtLocation Module" fulltitle="QtLocation Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtMessaging" href="qtmessaging.html" subtype="module" title="QtMessaging Module" fulltitle="QtMessaging Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtMultimediaKit" href="qtmultimediakit.html" subtype="module" title="QtMultimediaKit Module" fulltitle="QtMultimediaKit Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtPublishSubscribe" href="qtpublishsubscribe.html" subtype="module" title="QtPublishSubscribe Module" fulltitle="QtPublishSubscribe Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtServiceFramework" href="qtserviceframework.html" subtype="module" title="QtServiceFramework Module" fulltitle="QtServiceFramework Module" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="QtSystemInfo" href="qtsysteminfo.html" subtype="module" title="System Information Classes" fulltitle="System Information Classes" subtitle="" location="modules.qdoc"/>
        <page access="public" status="commendable" name="qmlcontacts" href="qmlcontacts.html" subtype="example" title="Sample QML-based Phonebook Example" fulltitle="Sample QML-based Phonebook Example" subtitle="" location="qmlcontacts.qdoc">
            <contents name="phone-book" title="Phone Book" level="1"/>
            <contents name="motivation" title="Motivation" level="2"/>
            <contents name="interface" title="Interface" level="2"/>
            <contents name="known-issues" title="Known Issues" level="2"/>
            <page access="public" status="commendable" name="qmlcontacts/contacts.qml" href="qmlcontacts-contacts-qml.html" subtype="file" title="" fulltitle="contacts.qml Example File" subtitle="qmlcontacts/contacts.qml" location=""/>
            <page access="public" status="commendable" name="qmlcontacts/contents/MediaButton.qml" href="qmlcontacts-contents-mediabutton-qml.html" subtype="file" title="" fulltitle="MediaButton.qml Example File" subtitle="qmlcontacts/contents/MediaButton.qml" location=""/>
            <page access="public" status="commendable" name="qmlcontacts/contents/ScrollBar.qml" href="qmlcontacts-contents-scrollbar-qml.html" subtype="file" title="" fulltitle="ScrollBar.qml Example File" subtitle="qmlcontacts/contents/ScrollBar.qml" location=""/>
            <page access="public" status="commendable" name="qmlcontacts/contents/default.svg" href="qmlcontacts-contents-default-svg.html" subtype="file" title="" fulltitle="default.svg Example File" subtitle="qmlcontacts/contents/default.svg" location=""/>
        </page>
        <page access="public" status="commendable" name="weatherinfo" href="weatherinfo.html" subtype="example" title="Weather Info Example" fulltitle="Weather Info Example" subtitle="" location="weatherinfo.qdoc">
            <page access="public" status="commendable" name="weatherinfo/weatherinfo.cpp" href="weatherinfo-weatherinfo-cpp.html" subtype="file" title="" fulltitle="weatherinfo.cpp Example File" subtitle="weatherinfo/weatherinfo.cpp" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-few-clouds.svg" href="weatherinfo-icons-weather-few-clouds-svg.html" subtype="file" title="" fulltitle="weather-few-clouds.svg Example File" subtitle="weatherinfo/icons/weather-few-clouds.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-fog.svg" href="weatherinfo-icons-weather-fog-svg.html" subtype="file" title="" fulltitle="weather-fog.svg Example File" subtitle="weatherinfo/icons/weather-fog.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-haze.svg" href="weatherinfo-icons-weather-haze-svg.html" subtype="file" title="" fulltitle="weather-haze.svg Example File" subtitle="weatherinfo/icons/weather-haze.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-icy.svg" href="weatherinfo-icons-weather-icy-svg.html" subtype="file" title="" fulltitle="weather-icy.svg Example File" subtitle="weatherinfo/icons/weather-icy.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-overcast.svg" href="weatherinfo-icons-weather-overcast-svg.html" subtype="file" title="" fulltitle="weather-overcast.svg Example File" subtitle="weatherinfo/icons/weather-overcast.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-showers.svg" href="weatherinfo-icons-weather-showers-svg.html" subtype="file" title="" fulltitle="weather-showers.svg Example File" subtitle="weatherinfo/icons/weather-showers.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-sleet.svg" href="weatherinfo-icons-weather-sleet-svg.html" subtype="file" title="" fulltitle="weather-sleet.svg Example File" subtitle="weatherinfo/icons/weather-sleet.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-snow.svg" href="weatherinfo-icons-weather-snow-svg.html" subtype="file" title="" fulltitle="weather-snow.svg Example File" subtitle="weatherinfo/icons/weather-snow.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-storm.svg" href="weatherinfo-icons-weather-storm-svg.html" subtype="file" title="" fulltitle="weather-storm.svg Example File" subtitle="weatherinfo/icons/weather-storm.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-sunny-very-few-clouds.svg" href="weatherinfo-icons-weather-sunny-very-few-clouds-svg.html" subtype="file" title="" fulltitle="weather-sunny-very-few-clouds.svg Example File" subtitle="weatherinfo/icons/weather-sunny-very-few-clouds.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-sunny.svg" href="weatherinfo-icons-weather-sunny-svg.html" subtype="file" title="" fulltitle="weather-sunny.svg Example File" subtitle="weatherinfo/icons/weather-sunny.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/icons/weather-thundershower.svg" href="weatherinfo-icons-weather-thundershower-svg.html" subtype="file" title="" fulltitle="weather-thundershower.svg Example File" subtitle="weatherinfo/icons/weather-thundershower.svg" location=""/>
            <page access="public" status="commendable" name="weatherinfo/weatherinfo.pro" href="weatherinfo-weatherinfo-pro.html" subtype="file" title="" fulltitle="weatherinfo.pro Example File" subtitle="weatherinfo/weatherinfo.pro" location=""/>
            <page access="public" status="commendable" name="weatherinfo/weatherinfo.qrc" href="weatherinfo-weatherinfo-qrc.html" subtype="file" title="" fulltitle="weatherinfo.qrc Example File" subtitle="weatherinfo/weatherinfo.qrc" location=""/>
        </page>
        <page access="public" status="commendable" name="servicebrowser" href="servicebrowser.html" subtype="example" title="Service Browser Example" fulltitle="Service Browser Example" subtitle="" location="servicebrowser.qdoc">
            <contents name="servicebrowser-class-definition" title="ServiceBrowser Class Definition" level="1"/>
            <contents name="servicebrowser-class-implementation" title="ServiceBrowser Class Implementation" level="1"/>
            <contents name="invoking-attributes-an-example" title="Invoking attributes: an example" level="2"/>
            <page access="public" status="commendable" name="servicebrowser/servicebrowser.cpp" href="servicebrowser-servicebrowser-cpp.html" subtype="file" title="" fulltitle="servicebrowser.cpp Example File" subtitle="servicebrowser/servicebrowser.cpp" location=""/>
            <page access="public" status="commendable" name="servicebrowser/servicebrowser.h" href="servicebrowser-servicebrowser-h.html" subtype="file" title="" fulltitle="servicebrowser.h Example File" subtitle="servicebrowser/servicebrowser.h" location=""/>
            <page access="public" status="commendable" name="servicebrowser/main.cpp" href="servicebrowser-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="servicebrowser/main.cpp" location=""/>
            <page access="public" status="commendable" name="servicebrowser/servicebrowser.pro" href="servicebrowser-servicebrowser-pro.html" subtype="file" title="" fulltitle="servicebrowser.pro Example File" subtitle="servicebrowser/servicebrowser.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoDeviceControl_iid" href="qvideodevicecontrol.html#QVideoDeviceControl_iid" location="qvideodevicecontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoDeviceControl" type="" signature="QVideoDeviceControl_iid()"/>
        <page access="public" status="commendable" name="mobility" href="mobility.html" subtype="group" title="Qt Mobility Project APIs" fulltitle="Qt Mobility Project APIs" subtitle="" location="index.qdoc"/>
        <page access="public" status="commendable" name="index.html" href="index.html" subtype="page" title="Qt Mobility Project APIs Overview (Technology Preview)" fulltitle="Qt Mobility Project APIs Overview (Technology Preview)" subtitle="" location="index.qdoc">
            <contents name="overview" title="Overview" level="1"/>
            <contents name="introducing-the-qt-mobility-apis" title="Introducing the Qt Mobility APIs" level="2"/>
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="getting-started" title="Getting Started" level="1"/>
            <contents name="known-issues" title="Known Issues" level="2"/>
            <contents name="the-qt-mobility-apis" title="The Qt Mobility APIs" level="1"/>
            <contents name="service-framework" title="Service Framework" level="2"/>
            <contents name="messaging" title="Messaging" level="2"/>
            <contents name="bearer-management" title="Bearer Management" level="2"/>
            <contents name="publish-and-subscribe" title="Publish and Subscribe" level="2"/>
            <contents name="contacts" title="Contacts" level="2"/>
            <contents name="location" title="Location" level="2"/>
            <contents name="multimedia" title="Multimedia" level="2"/>
            <contents name="system-information" title="System Information" level="2"/>
            <contents name="sensors" title="Sensors" level="2"/>
            <contents name="versit-vcard" title="Versit (vCard)" level="2"/>
            <contents name="preview-apis" title="Preview APIs" level="1"/>
            <contents name="organizer" title="Organizer" level="2"/>
            <contents name="versit-organizer" title="Versit (Organizer)" level="2"/>
            <contents name="camera" title="Camera" level="2"/>
            <contents name="landmarks" title="Landmarks" level="2"/>
            <contents name="document-gallery" title="Document Gallery" level="2"/>
            <contents name="feedback" title="Feedback" level="2"/>
            <contents name="telephony" title="Telephony" level="2"/>
            <contents name="the-qtmobility-namespace" title="The QtMobility Namespace" level="1"/>
            <contents name="platform-compatibility" title="Platform Compatibility" level="1"/>
            <contents name="feedback-and-bug-reports" title="Feedback and bug reports" level="1"/>
            <contents name="acknowledgements" title="Acknowledgements" level="1"/>
        </page>
        <page access="public" status="commendable" name="servicefw" href="servicefw.html" subtype="group" title="Service Frameworks Classes" fulltitle="Service Frameworks Classes" subtitle="" location="sf.qdoc"/>
        <page access="public" status="commendable" name="service-frameworks.html" href="service-frameworks.html" subtype="page" title="Qt Service Framework" fulltitle="Qt Service Framework" subtitle="" location="sf.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="using-the-framework" title="Using the Framework" level="1"/>
            <contents name="verbose-lookup" title="Verbose Lookup" level="2"/>
            <contents name="default-lookup" title="Default Lookup" level="2"/>
            <contents name="qobject-based-services" title="QObject based services" level="3"/>
            <contents name="typed-services" title="Typed services" level="3"/>
            <contents name="service-scope" title="Service Scope" level="1"/>
            <contents name="user-scope" title="User Scope" level="2"/>
            <contents name="system-scope" title="System Scope" level="2"/>
            <contents name="adding-and-removing-of-services" title="Adding and Removing of Services" level="1"/>
            <contents name="xml-format" title="XML Format" level="2"/>
            <contents name="tools-for-xml-generation" title="Tools for XML Generation" level="1"/>
            <contents name="installing-the-service-at-runtime" title="Installing the Service at Runtime" level="1"/>
            <contents name="identifying-services" title="Identifying Services" level="1"/>
            <contents name="upgrading-services" title="Upgrading Services" level="2"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="main-classes" title="Main Classes" level="1"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_SERVICE" href="qremoteserviceclassregister.html#Q_SERVICE" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QRemoteServiceClassRegister" type="" signature="Q_SERVICE( T,  name,  interface,  version)">
            <parameter left="" right="" name="T" default=""/>
            <parameter left="" right="" name="name" default=""/>
            <parameter left="" right="" name="interface" default=""/>
            <parameter left="" right="" name="version" default=""/>
        </function>
        <page access="public" status="commendable" name="sensors-api.html" href="sensors-api.html" subtype="page" title="Sensors API" fulltitle="Sensors API" subtitle="" location="sensors.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="sensor-types" title="Sensor Types" level="1"/>
            <contents name="common-conventions" title="Common Conventions" level="1"/>
            <contents name="using-a-sensor" title="Using a Sensor" level="1"/>
            <contents name="accessing-sensor-data-in-a-generic-fashion" title="Accessing sensor data in a generic fashion" level="1"/>
            <contents name="front-end-back-end" title="Front end, back end" level="1"/>
            <contents name="main-classes" title="Main Classes" level="1"/>
            <contents name="reading-classes" title="Reading Classes" level="1"/>
            <contents name="sensor-classes" title="Sensor Classes" level="1"/>
            <contents name="filter-classes" title="Filter Classes" level="1"/>
        </page>
        <page access="public" status="commendable" name="sensors-backend.html" href="sensors-backend.html" subtype="page" title="Sensors Backend" fulltitle="Sensors Backend" subtitle="" location="sensors.qdoc">
            <contents name="overview" title="Overview" level="1"/>
            <contents name="backend-api" title="Backend API" level="1"/>
            <contents name="backend-classes" title="Backend Classes" level="1"/>
        </page>
        <page access="public" status="commendable" name="creating-a-sensor-plugin.html" href="creating-a-sensor-plugin.html" subtype="page" title="Creating a sensor plugin" fulltitle="Creating a sensor plugin" subtitle="" location="sensors.qdoc">
            <contents name="how-a-sensor-plugin-is-loaded" title="How a sensor plugin is loaded" level="1"/>
        </page>
        <page access="public" status="commendable" name="organizerengines.html" href="organizerengines.html" subtype="page" title="Qt Organizer Manager Engines" fulltitle="Qt Organizer Manager Engines" subtitle="" location="organizerengines.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="information-for-clients" title="Information For Clients" level="1"/>
            <contents name="where-is-the-data-stored" title="Where Is The Data Stored?" level="2"/>
            <contents name="schema-differences" title="Schema Differences" level="2"/>
            <contents name="provided-engines" title="Provided Engines" level="2"/>
            <contents name="in-memory-example-engine" title="In-Memory Example Engine" level="3"/>
            <contents name="symbian-engine" title="Symbian Engine" level="3"/>
            <contents name="maemo-5-fremantle-engine" title="Maemo 5 (Fremantle) Engine" level="3"/>
            <contents name="information-for-engine-implementors" title="Information For Engine Implementors" level="1"/>
            <contents name="which-functions-do-i-need-to-implement" title="Which Functions Do I Need To Implement" level="2"/>
            <contents name="mandatory-functions" title="Mandatory Functions" level="3"/>
            <contents name="optional-functionality" title="Optional Functionality" level="3"/>
            <contents name="optional-implementation" title="Optional Implementation" level="3"/>
            <contents name="which-signals-do-i-need-to-emit" title="Which Signals Do I Need To Emit" level="2"/>
            <contents name="other-considerations" title="Other Considerations" level="2"/>
            <contents name="example-implementation" title="Example Implementation" level="2"/>
        </page>
        <page access="public" status="commendable" name="itemssync.html" href="itemssync.html" subtype="page" title="Organizer Synchronous API" fulltitle="Organizer Synchronous API" subtitle="" location="organizersync.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="using-the-api" title="Using The API" level="1"/>
            <contents name="error-reporting" title="Error Reporting" level="2"/>
            <contents name="organizer-item-manipulation" title="Organizer Item Manipulation" level="2"/>
            <contents name="schema-manipulation" title="Schema Manipulation" level="2"/>
            <contents name="examples-of-usage" title="Examples Of Usage" level="1"/>
            <contents name="saving-a-new-item-to-the-default-manager" title="Saving a new item to the default manager" level="2"/>
            <contents name="filtering-by-detail-definition-and-value" title="Filtering by detail definition and value" level="2"/>
            <contents name="modifying-an-existing-item-and-saving-the-modifications" title="Modifying an existing item and saving the modifications" level="3"/>
        </page>
        <page access="public" status="commendable" name="landmarks.html" href="landmarks.html" subtype="page" title="Landmark Examples" fulltitle="Landmark Examples" subtitle="" location="qlandmarks.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="creating-categories-and-landmarks" title="Creating categories and landmarks" level="1"/>
            <contents name="synchronous" title="Synchronous" level="2"/>
            <contents name="creating-a-category" title="Creating a category" level="3"/>
            <contents name="creating-landmark" title="Creating landmark" level="3"/>
            <contents name="asynchronous" title="Asynchronous" level="2"/>
            <contents name="creating-a-category" title="Creating a category" level="3"/>
            <contents name="creating-a-landmark" title="Creating a landmark" level="3"/>
            <contents name="retrieving-categories-and-landmarks" title="Retrieving categories and landmarks" level="1"/>
            <contents name="synchronous" title="Synchronous" level="2"/>
            <contents name="retrieving-categories" title="Retrieving categories" level="3"/>
            <contents name="retrieving-landmarks" title="Retrieving landmarks" level="3"/>
            <contents name="asynchronous" title="Asynchronous" level="2"/>
            <contents name="retrieving-categories" title="Retrieving categories" level="3"/>
            <contents name="retrieving-landmarks" title="Retrieving landmarks" level="3"/>
            <contents name="deleting-categories-and-landmarks" title="Deleting categories and landmarks" level="1"/>
            <contents name="synchronous" title="Synchronous" level="2"/>
            <contents name="deleting-a-category" title="Deleting a category" level="3"/>
            <contents name="deleting-a-landmark" title="Deleting a landmark" level="3"/>
            <contents name="asynchronous" title="Asynchronous" level="2"/>
            <contents name="deleting-a-category" title="Deleting a category" level="3"/>
            <contents name="deleting-a-landmark" title="Deleting a landmark" level="3"/>
        </page>
        <page access="public" status="commendable" name="sfw-notes" href="sfw-notes.html" subtype="example" title="Service Framework Notes Manager" fulltitle="Service Framework Notes Manager" subtitle="" location="sfw-notes.qdoc">
            <page access="public" status="commendable" name="sfw-notes/sfwnotes.cpp" href="sfw-notes-sfwnotes-cpp.html" subtype="file" title="" fulltitle="sfwnotes.cpp Example File" subtitle="sfw-notes/sfwnotes.cpp" location=""/>
            <page access="public" status="commendable" name="sfw-notes/sfwnotes.h" href="sfw-notes-sfwnotes-h.html" subtype="file" title="" fulltitle="sfwnotes.h Example File" subtitle="sfw-notes/sfwnotes.h" location=""/>
            <page access="public" status="commendable" name="sfw-notes/sfwnotes.ui" href="sfw-notes-sfwnotes-ui.html" subtype="file" title="" fulltitle="sfwnotes.ui Example File" subtitle="sfw-notes/sfwnotes.ui" location=""/>
            <page access="public" status="commendable" name="sfw-notes/sfwnotes_small.ui" href="sfw-notes-sfwnotes-small-ui.html" subtype="file" title="" fulltitle="sfwnotes_small.ui Example File" subtitle="sfw-notes/sfwnotes_small.ui" location=""/>
            <page access="public" status="commendable" name="sfw-notes/main.cpp" href="sfw-notes-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="sfw-notes/main.cpp" location=""/>
            <page access="public" status="commendable" name="sfw-notes/sfw-notes.pro" href="sfw-notes-sfw-notes-pro.html" subtype="file" title="" fulltitle="sfw-notes.pro Example File" subtitle="sfw-notes/sfw-notes.pro" location=""/>
            <page access="public" status="commendable" name="sfw-notes/sfwnotes.qrc" href="sfw-notes-sfwnotes-qrc.html" subtype="file" title="" fulltitle="sfwnotes.qrc Example File" subtitle="sfw-notes/sfwnotes.qrc" location=""/>
        </page>
        <page access="public" status="commendable" name="GalleryQueryModel" href="qml-galleryquerymodel.html" subtype="qmlclass" title="QML GalleryQueryModel Element" fulltitle="QML GalleryQueryModel Element" subtitle="" location="qdeclarativegalleryquerymodel.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="gallery" fullname="GalleryQueryModel#gallery" href="qml-galleryquerymodel.html#gallery-prop" type="QAbstractGallery"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="state" fullname="GalleryQueryModel#state" href="qml-galleryquerymodel.html#state-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="result" fullname="GalleryQueryModel#result" href="qml-galleryquerymodel.html#result-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="currentProgress" fullname="GalleryQueryModel#currentProgress" href="qml-galleryquerymodel.html#currentProgress-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="maximumProgress" fullname="GalleryQueryModel#maximumProgress" href="qml-galleryquerymodel.html#maximumProgress-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="properties" fullname="GalleryQueryModel#properties" href="qml-galleryquerymodel.html#properties-prop" type="QStringList"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="sortProperties" fullname="GalleryQueryModel#sortProperties" href="qml-galleryquerymodel.html#sortProperties-prop" type="QStringList"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="live" fullname="GalleryQueryModel#live" href="qml-galleryquerymodel.html#live-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="cursorPosition" fullname="GalleryQueryModel#cursorPosition" href="qml-galleryquerymodel.html#cursorPosition-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="minimumPagedItems" fullname="GalleryQueryModel#minimumPagedItems" href="qml-galleryquerymodel.html#minimumPagedItems-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="itemType" fullname="GalleryQueryModel#itemType" href="qml-galleryquerymodel.html#itemType-prop" type="string"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="filter" fullname="GalleryQueryModel#filter" href="qml-galleryquerymodel.html#filter-prop" type="GalleryFilter"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="scopeItemId" fullname="GalleryQueryModel#scopeItemId" href="qml-galleryquerymodel.html#scopeItemId-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="scope" fullname="GalleryQueryModel#scope" href="qml-galleryquerymodel.html#scope-prop" type="enum"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="reload" fullname="GalleryQueryModel#reload" href="qml-galleryquerymodel.html#reload-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="cancel" fullname="GalleryQueryModel#cancel" href="qml-galleryquerymodel.html#cancel-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="GalleryQueryModel#clear" href="qml-galleryquerymodel.html#clear-method"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onSucceeded" fullname="GalleryQueryModel#onSucceeded" href="qml-galleryquerymodel.html#onSucceeded-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onCancelled" fullname="GalleryQueryModel#onCancelled" href="qml-galleryquerymodel.html#onCancelled-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onFailed" fullname="GalleryQueryModel#onFailed" href="qml-galleryquerymodel.html#onFailed-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onFinished" fullname="GalleryQueryModel#onFinished" href="qml-galleryquerymodel.html#onFinished-signal"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMediaRecorderControl_iid" href="qmediarecordercontrol.html#QMediaRecorderControl_iid" location="qmediarecordercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMediaRecorderControl" type="" signature="QMediaRecorderControl_iid()"/>
        <page access="public" status="commendable" name="bluetoothtransferplugin" href="bluetoothtransferplugin.html" subtype="example" title="Bluetooth Transfer Plugin Example" fulltitle="Bluetooth Transfer Plugin Example" subtitle="" location="bluetoothtransferplugin.qdoc">
            <contents name="registering-the-service" title="Registering the Service" level="1"/>
            <contents name="writing-the-plugin" title="Writing the Plugin" level="1"/>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransfer.cpp" href="bluetoothtransferplugin-bluetoothtransfer-cpp.html" subtype="file" title="" fulltitle="bluetoothtransfer.cpp Example File" subtitle="bluetoothtransferplugin/bluetoothtransfer.cpp" location=""/>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransfer.h" href="bluetoothtransferplugin-bluetoothtransfer-h.html" subtype="file" title="" fulltitle="bluetoothtransfer.h Example File" subtitle="bluetoothtransferplugin/bluetoothtransfer.h" location=""/>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferplugin.cpp" href="bluetoothtransferplugin-bluetoothtransferplugin-cpp.html" subtype="file" title="" fulltitle="bluetoothtransferplugin.cpp Example File" subtitle="bluetoothtransferplugin/bluetoothtransferplugin.cpp" location=""/>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferplugin.h" href="bluetoothtransferplugin-bluetoothtransferplugin-h.html" subtype="file" title="" fulltitle="bluetoothtransferplugin.h Example File" subtitle="bluetoothtransferplugin/bluetoothtransferplugin.h" location=""/>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferservice.xml" href="bluetoothtransferplugin-bluetoothtransferservice-xml.html" subtype="file" title="" fulltitle="bluetoothtransferservice.xml Example File" subtitle="bluetoothtransferplugin/bluetoothtransferservice.xml" location=""/>
            <page access="public" status="commendable" name="bluetoothtransferplugin/bluetoothtransferplugin.pro" href="bluetoothtransferplugin-bluetoothtransferplugin-pro.html" subtype="file" title="" fulltitle="bluetoothtransferplugin.pro Example File" subtitle="bluetoothtransferplugin/bluetoothtransferplugin.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="QtMessaging" href="qtmessaging.html" subtype="module" title="QtMessaging Module" fulltitle="QtMessaging Module" subtitle="" location="messaging.qdoc"/>
        <page access="public" status="commendable" name="messaging.html" href="messaging.html" subtype="page" title="Messaging" fulltitle="Messaging" subtitle="" location="messaging.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="reference-documentation" title="Reference documentation" level="1"/>
            <contents name="main-classes" title="Main classes" level="2"/>
            <contents name="composition-and-manipulation-of-messages" title="Composition and Manipulation of Messages" level="1"/>
            <contents name="message-accounts" title="Message Accounts" level="1"/>
            <contents name="sorting-and-filtering-functionality" title="Sorting and Filtering Functionality" level="1"/>
            <contents name="using-the-ordering-functions" title="Using the Ordering Functions" level="2"/>
            <contents name="using-the-filter-functions" title="Using the Filter Functions" level="2"/>
            <contents name="messaging-services" title="Messaging Services" level="1"/>
            <contents name="concurrent-access-to-messaging-data" title="Concurrent Access to Messaging Data" level="1"/>
            <contents name="abstraction-of-messaging-data-storage-mechanism" title="Abstraction of Messaging Data Storage Mechanism" level="1"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="keep-in-touch" title="Keep In Touch" level="2"/>
            <contents name="service-actions" title="Service Actions" level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QCameraExposureControl_iid" href="qcameraexposurecontrol.html#QCameraExposureControl_iid" location="qcameraexposurecontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QCameraExposureControl" type="" signature="QCameraExposureControl_iid()"/>
        <page access="public" status="commendable" name="declarative-sfw-notes" href="declarative-sfw-notes.html" subtype="example" title="Declarative Service Framework Notes Manager" fulltitle="Declarative Service Framework Notes Manager" subtitle="" location="declarative-sfw-notes.qdoc"/>
        <page access="public" status="commendable" name="filemanagerplugin" href="filemanagerplugin.html" subtype="example" title="File Manager Plugin Example" fulltitle="File Manager Plugin Example" subtitle="" location="filemanagerplugin.qdoc">
            <contents name="registering-the-service" title="Registering the Service" level="1"/>
            <contents name="writing-the-plug-in" title="Writing the Plug-In" level="1"/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerplugin.cpp" href="filemanagerplugin-filemanagerplugin-cpp.html" subtype="file" title="" fulltitle="filemanagerplugin.cpp Example File" subtitle="filemanagerplugin/filemanagerplugin.cpp" location=""/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerplugin.h" href="filemanagerplugin-filemanagerplugin-h.html" subtype="file" title="" fulltitle="filemanagerplugin.h Example File" subtitle="filemanagerplugin/filemanagerplugin.h" location=""/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerservice.xml" href="filemanagerplugin-filemanagerservice-xml.html" subtype="file" title="" fulltitle="filemanagerservice.xml Example File" subtitle="filemanagerplugin/filemanagerservice.xml" location=""/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerstorage.cpp" href="filemanagerplugin-filemanagerstorage-cpp.html" subtype="file" title="" fulltitle="filemanagerstorage.cpp Example File" subtitle="filemanagerplugin/filemanagerstorage.cpp" location=""/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerstorage.h" href="filemanagerplugin-filemanagerstorage-h.html" subtype="file" title="" fulltitle="filemanagerstorage.h Example File" subtitle="filemanagerplugin/filemanagerstorage.h" location=""/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagertransfer.cpp" href="filemanagerplugin-filemanagertransfer-cpp.html" subtype="file" title="" fulltitle="filemanagertransfer.cpp Example File" subtitle="filemanagerplugin/filemanagertransfer.cpp" location=""/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagertransfer.h" href="filemanagerplugin-filemanagertransfer-h.html" subtype="file" title="" fulltitle="filemanagertransfer.h Example File" subtitle="filemanagerplugin/filemanagertransfer.h" location=""/>
            <page access="public" status="commendable" name="filemanagerplugin/filemanagerplugin.pro" href="filemanagerplugin-filemanagerplugin-pro.html" subtype="file" title="" fulltitle="filemanagerplugin.pro Example File" subtitle="filemanagerplugin/filemanagerplugin.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="service-framework-on-symbian.html" href="service-framework-on-symbian.html" subtype="page" title="Qt Service Framework on Symbian" fulltitle="Qt Service Framework on Symbian" subtitle="" location="sfw_s60.qdoc">
            <contents name="how-to-register-and-unregister-service-plugins-in-s60" title="How to register and unregister service plugins in S60?" level="1"/>
            <contents name="what-s-special-from-the-security-perspective" title="What's special from the security perspective?" level="1"/>
            <contents name="directory-structure" title="Directory structure" level="1"/>
        </page>
        <page access="public" status="commendable" name="serviceactions" href="serviceactions.html" subtype="example" title="Service Actions Example" fulltitle="Service Actions Example" subtitle="" location="serviceactions.qdoc">
            <contents name="send-and-compose" title="Send and Compose" level="1"/>
            <contents name="show" title="Show" level="1"/>
            <contents name="query-and-retrieve" title="Query and Retrieve" level="1"/>
            <contents name="store-signals" title="Store Signals" level="1"/>
            <page access="public" status="commendable" name="serviceactions/attachmentlistwidget.cpp" href="serviceactions-attachmentlistwidget-cpp.html" subtype="file" title="" fulltitle="attachmentlistwidget.cpp Example File" subtitle="serviceactions/attachmentlistwidget.cpp" location=""/>
            <page access="public" status="commendable" name="serviceactions/attachmentlistwidget.h" href="serviceactions-attachmentlistwidget-h.html" subtype="file" title="" fulltitle="attachmentlistwidget.h Example File" subtitle="serviceactions/attachmentlistwidget.h" location=""/>
            <page access="public" status="commendable" name="serviceactions/mainwindow.cpp" href="serviceactions-mainwindow-cpp.html" subtype="file" title="" fulltitle="mainwindow.cpp Example File" subtitle="serviceactions/mainwindow.cpp" location=""/>
            <page access="public" status="commendable" name="serviceactions/mainwindow.h" href="serviceactions-mainwindow-h.html" subtype="file" title="" fulltitle="mainwindow.h Example File" subtitle="serviceactions/mainwindow.h" location=""/>
            <page access="public" status="commendable" name="serviceactions/main.cpp" href="serviceactions-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="serviceactions/main.cpp" location=""/>
            <page access="public" status="commendable" name="serviceactions/serviceactions.pro" href="serviceactions-serviceactions-pro.html" subtype="file" title="" fulltitle="serviceactions.pro Example File" subtitle="serviceactions/serviceactions.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="flickrdemo" href="flickrdemo.html" subtype="example" title="Flickr Demo Example" fulltitle="Flickr Demo Example" subtitle="" location="flickrdemo.qdoc">
            <page access="public" status="commendable" name="flickrdemo/connectivityhelper.cpp" href="flickrdemo-connectivityhelper-cpp.html" subtype="file" title="" fulltitle="connectivityhelper.cpp Example File" subtitle="flickrdemo/connectivityhelper.cpp" location=""/>
            <page access="public" status="commendable" name="flickrdemo/connectivityhelper.h" href="flickrdemo-connectivityhelper-h.html" subtype="file" title="" fulltitle="connectivityhelper.h Example File" subtitle="flickrdemo/connectivityhelper.h" location=""/>
            <page access="public" status="commendable" name="flickrdemo/flickr_icon.svg" href="flickrdemo-flickr-icon-svg.html" subtype="file" title="" fulltitle="flickr_icon.svg Example File" subtitle="flickrdemo/flickr_icon.svg" location=""/>
            <page access="public" status="commendable" name="flickrdemo/flickrdemo.cpp" href="flickrdemo-flickrdemo-cpp.html" subtype="file" title="" fulltitle="flickrdemo.cpp Example File" subtitle="flickrdemo/flickrdemo.cpp" location=""/>
            <page access="public" status="commendable" name="flickrdemo/flickrdemo.h" href="flickrdemo-flickrdemo-h.html" subtype="file" title="" fulltitle="flickrdemo.h Example File" subtitle="flickrdemo/flickrdemo.h" location=""/>
            <page access="public" status="commendable" name="flickrdemo/xqlistwidget.cpp" href="flickrdemo-xqlistwidget-cpp.html" subtype="file" title="" fulltitle="xqlistwidget.cpp Example File" subtitle="flickrdemo/xqlistwidget.cpp" location=""/>
            <page access="public" status="commendable" name="flickrdemo/xqlistwidget.h" href="flickrdemo-xqlistwidget-h.html" subtype="file" title="" fulltitle="xqlistwidget.h Example File" subtitle="flickrdemo/xqlistwidget.h" location=""/>
            <page access="public" status="commendable" name="flickrdemo/main.cpp" href="flickrdemo-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="flickrdemo/main.cpp" location=""/>
            <page access="public" status="commendable" name="flickrdemo/flickrdemo.pro" href="flickrdemo-flickrdemo-pro.html" subtype="file" title="" fulltitle="flickrdemo.pro Example File" subtitle="flickrdemo/flickrdemo.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMetaDataReaderControl_iid" href="qmetadatareadercontrol.html#QMetaDataReaderControl_iid" location="qmetadatareadercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMetaDataReaderControl" type="" signature="QMetaDataReaderControl_iid()"/>
        <page access="public" status="commendable" name="location" href="location.html" subtype="group" title="Location API" fulltitle="Location API" subtitle="" location="location.qdoc"/>
        <page access="public" status="commendable" name="location-overview.html" href="location-overview.html" subtype="page" title="Location" fulltitle="Location" subtitle="" location="location.qdoc">
            <target name="asynchronous-landmark-requests"/>
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="location-positioning" title="Location Positioning" level="1"/>
            <contents name="example-creating-a-custom-location-data-source" title="Example: Creating a custom location data source" level="2"/>
            <contents name="examples" title="Examples" level="2"/>
            <contents name="flickr-demo" title="Flickr Demo" level="3"/>
            <contents name="weather-info-demo" title="Weather Info Demo" level="3"/>
            <contents name="light-maps-demo" title="Light Maps Demo" level="3"/>
            <contents name="location-classes" title="Location classes" level="2"/>
            <contents name="landmarks" title="Landmarks" level="1"/>
            <contents name="landmark-examples" title="Landmark Examples" level="2"/>
            <contents name="landmark-classes" title="Landmark classes" level="2"/>
            <contents name="main-landmark-classes" title="Main Landmark Classes" level="3"/>
            <contents name="landmark-selection-classes" title="Landmark Selection classes" level="3"/>
            <contents name="filters" title="Filters" level="4"/>
            <contents name="sortorders" title="SortOrders" level="4"/>
            <contents name="asynchronous-requests" title="Asynchronous Requests" level="3"/>
            <contents name="implementing-backends" title="Implementing backends" level="3"/>
            <contents name="maps-and-navigation" title="Maps and Navigation" level="1"/>
            <contents name="common-classes" title="Common classes" level="2"/>
            <contents name="mapping" title="Mapping" level="2"/>
            <contents name="map-objects" title="Map objects" level="3"/>
            <contents name="routing" title="Routing" level="2"/>
            <contents name="geocoding-and-searching-for-places" title="Geocoding and searching for places" level="2"/>
            <contents name="implementing-backends" title="Implementing backends" level="2"/>
        </page>
        <page access="public" status="commendable" name="publ-subs.html" href="publ-subs.html" subtype="page" title="Publish and Subscribe" fulltitle="Publish and Subscribe" subtitle="" location="publ-subs.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="detailed-layer-descriptions" title="Detailed Layer Descriptions" level="1"/>
            <contents name="shared-memory-layer" title="Shared Memory Layer" level="2"/>
            <contents name="symbian-settings-layer" title="Symbian Settings Layer" level="2"/>
            <contents name="declaring-value-space-paths" title="Declaring Value Space Paths" level="3"/>
            <contents name="location-of-qcrml-files" title="Location of QCRML Files" level="3"/>
            <contents name="limitations" title="Limitations" level="3"/>
            <contents name="gconf-layer" title="GConf Layer" level="2"/>
            <contents name="limitations" title="Limitations" level="3"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="publish-and-subscribe" title="Publish and Subscribe" level="2"/>
            <contents name="battery-charging-accessing-publish-and-subscribe-from-qml" title="Battery Charging - Accessing Publish and Subscribe from QML" level="2"/>
            <contents name="namespaces-and-classes" title="Namespaces and Classes" level="1"/>
        </page>
        <page access="public" status="commendable" name="logfilepositionsource" href="logfilepositionsource.html" subtype="example" title="Log File Position Source Example" fulltitle="Log File Position Source Example" subtitle="" location="logfilepositionsource.qdoc">
            <page access="public" status="commendable" name="logfilepositionsource/clientapplication.cpp" href="logfilepositionsource-clientapplication-cpp.html" subtype="file" title="" fulltitle="clientapplication.cpp Example File" subtitle="logfilepositionsource/clientapplication.cpp" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/clientapplication.h" href="logfilepositionsource-clientapplication-h.html" subtype="file" title="" fulltitle="clientapplication.h Example File" subtitle="logfilepositionsource/clientapplication.h" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/logfilepositionsource.cpp" href="logfilepositionsource-logfilepositionsource-cpp.html" subtype="file" title="" fulltitle="logfilepositionsource.cpp Example File" subtitle="logfilepositionsource/logfilepositionsource.cpp" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/logfilepositionsource.h" href="logfilepositionsource-logfilepositionsource-h.html" subtype="file" title="" fulltitle="logfilepositionsource.h Example File" subtitle="logfilepositionsource/logfilepositionsource.h" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/main.cpp" href="logfilepositionsource-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="logfilepositionsource/main.cpp" location=""/>
            <page access="public" status="commendable" name="logfilepositionsource/logfilepositionsource.pro" href="logfilepositionsource-logfilepositionsource-pro.html" subtype="file" title="" fulltitle="logfilepositionsource.pro Example File" subtitle="logfilepositionsource/logfilepositionsource.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="systeminfo" href="systeminfo.html" subtype="group" title="System Information Classes" fulltitle="System Information Classes" subtitle="" location="si.qdoc"/>
        <page access="public" status="commendable" name="systeminfo.html" href="systeminfo.html" subtype="page" title="System Information" fulltitle="System Information" subtitle="" location="si.qdoc">
            <contents name="system-information" title="System Information" level="1"/>
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="information-categories" title="Information Categories" level="2"/>
            <contents name="version" title="Version" level="3"/>
            <contents name="features-hardware" title="Features (hardware)" level="3"/>
            <contents name="network" title="Network" level="3"/>
            <contents name="display-information" title="Display Information" level="3"/>
            <contents name="storage-information" title="Storage Information" level="3"/>
            <contents name="device-information" title="Device Information" level="3"/>
            <contents name="screensaver" title="Screensaver" level="3"/>
            <contents name="building-and-compiling" title="Building and compiling" level="1"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="system-information-example" title="System Information Example" level="2"/>
        </page>
        <page access="public" status="commendable" name="quickstart" href="quickstart.html" subtype="example" title="Quickstart Example" fulltitle="Quickstart Example" subtitle="" location="quickstart.qdoc">
            <page access="public" status="commendable" name="quickstart/main.cpp" href="quickstart-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="quickstart/main.cpp" location=""/>
            <page access="public" status="commendable" name="quickstart/quickstart.pro" href="quickstart-quickstart-pro.html" subtype="file" title="" fulltitle="quickstart.pro Example File" subtitle="quickstart/quickstart.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="audiorecorder" href="audiorecorder.html" subtype="example" title="Audio Recorder Example" fulltitle="Audio Recorder Example" subtitle="" location="audiorecorder.qdoc">
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.cpp" href="audiorecorder-audiorecorder-cpp.html" subtype="file" title="" fulltitle="audiorecorder.cpp Example File" subtitle="audiorecorder/audiorecorder.cpp" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.h" href="audiorecorder-audiorecorder-h.html" subtype="file" title="" fulltitle="audiorecorder.h Example File" subtitle="audiorecorder/audiorecorder.h" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.ui" href="audiorecorder-audiorecorder-ui.html" subtype="file" title="" fulltitle="audiorecorder.ui Example File" subtitle="audiorecorder/audiorecorder.ui" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder_small.ui" href="audiorecorder-audiorecorder-small-ui.html" subtype="file" title="" fulltitle="audiorecorder_small.ui Example File" subtitle="audiorecorder/audiorecorder_small.ui" location=""/>
            <page access="public" status="commendable" name="audiorecorder/main.cpp" href="audiorecorder-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="audiorecorder/main.cpp" location=""/>
            <page access="public" status="commendable" name="audiorecorder/audiorecorder.pro" href="audiorecorder-audiorecorder-pro.html" subtype="file" title="" fulltitle="audiorecorder.pro Example File" subtitle="audiorecorder/audiorecorder.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="querymessages" href="querymessages.html" subtype="example" title="Query Messages Example" fulltitle="Query Messages Example" subtitle="" location="querymessages.qdoc">
            <page access="public" status="commendable" name="querymessages/main.cpp" href="querymessages-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="querymessages/main.cpp" location=""/>
            <page access="public" status="commendable" name="querymessages/querymessages.pro" href="querymessages-querymessages-pro.html" subtype="file" title="" fulltitle="querymessages.pro Example File" subtitle="querymessages/querymessages.pro" location=""/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DECLARE_CUSTOM_CONTACT_DETAIL" href="qcontactdetail.html#Q_DECLARE_CUSTOM_CONTACT_DETAIL" location="qcontactdetail.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QContactDetail" type="" signature="Q_DECLARE_CUSTOM_CONTACT_DETAIL()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DECLARE_LATIN1_CONSTANT" href="#Q_DECLARE_LATIN1_CONSTANT" location="qcontactdetail.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" type="" signature="Q_DECLARE_LATIN1_CONSTANT()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_DEFINE_LATIN1_CONSTANT" href="#Q_DEFINE_LATIN1_CONSTANT" location="qcontactdetail.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" type="" signature="Q_DEFINE_LATIN1_CONSTANT()"/>
        <page access="public" status="commendable" name="contactsschema.html" href="contactsschema.html" subtype="page" title="Qt Contacts Schema" fulltitle="Qt Contacts Schema" subtitle="" location="contactsschema.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="schema-definition" title="Schema Definition" level="1"/>
            <contents name="default-schema" title="Default Schema" level="1"/>
            <contents name="detail-definition-uniqueness" title="Detail Definition Uniqueness" level="2"/>
            <contents name="detail-access-constraints" title="Detail Access Constraints" level="2"/>
            <contents name="backend-provided-details" title="Backend-provided Details" level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_MEDIA_DECLARE_CONTROL" href="qmediacontrol.html#Q_MEDIA_DECLARE_CONTROL" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QMediaControl" type="" signature="Q_MEDIA_DECLARE_CONTROL( Class,  IId)">
            <parameter left="" right="" name="Class" default=""/>
            <parameter left="" right="" name="IId" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QCameraImageCaptureControl_iid" href="qcameraimagecapturecontrol.html#QCameraImageCaptureControl_iid" location="qcameraimagecapturecontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QCameraImageCaptureControl" type="" signature="QCameraImageCaptureControl_iid()"/>
        <page access="public" status="commendable" name="telephony.html" href="telephony.html" subtype="page" title="Telephony API" fulltitle="Telephony API" subtitle="" location="telephony.qdoc">
            <contents name="namespace" title="Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="reference-documentation" title="Reference documentation" level="1"/>
            <contents name="main-classes" title="Main classes" level="2"/>
            <contents name="information-and-events-of-calls" title="Information and Events of Calls" level="1"/>
        </page>
        <page access="public" status="commendable" name="bearercloud" href="bearercloud.html" subtype="example" title="Bearer Cloud Example" fulltitle="Bearer Cloud Example" subtitle="" location="bearercloud.qdoc">
            <contents name="setting-the-scene" title="Setting the scene" level="1"/>
            <contents name="responding-to-changes" title="Responding to changes" level="1"/>
            <page access="public" status="commendable" name="bearercloud/bearercloud.cpp" href="bearercloud-bearercloud-cpp.html" subtype="file" title="" fulltitle="bearercloud.cpp Example File" subtitle="bearercloud/bearercloud.cpp" location=""/>
            <page access="public" status="commendable" name="bearercloud/bearercloud.h" href="bearercloud-bearercloud-h.html" subtype="file" title="" fulltitle="bearercloud.h Example File" subtitle="bearercloud/bearercloud.h" location=""/>
            <page access="public" status="commendable" name="bearercloud/cloud.cpp" href="bearercloud-cloud-cpp.html" subtype="file" title="" fulltitle="cloud.cpp Example File" subtitle="bearercloud/cloud.cpp" location=""/>
            <page access="public" status="commendable" name="bearercloud/cloud.h" href="bearercloud-cloud-h.html" subtype="file" title="" fulltitle="cloud.h Example File" subtitle="bearercloud/cloud.h" location=""/>
            <page access="public" status="commendable" name="bearercloud/lan.svg" href="bearercloud-lan-svg.html" subtype="file" title="" fulltitle="lan.svg Example File" subtitle="bearercloud/lan.svg" location=""/>
            <page access="public" status="commendable" name="bearercloud/unknown.svg" href="bearercloud-unknown-svg.html" subtype="file" title="" fulltitle="unknown.svg Example File" subtitle="bearercloud/unknown.svg" location=""/>
            <page access="public" status="commendable" name="bearercloud/wlan.svg" href="bearercloud-wlan-svg.html" subtype="file" title="" fulltitle="wlan.svg Example File" subtitle="bearercloud/wlan.svg" location=""/>
            <page access="public" status="commendable" name="bearercloud/main.cpp" href="bearercloud-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="bearercloud/main.cpp" location=""/>
            <page access="public" status="commendable" name="bearercloud/bearercloud.pro" href="bearercloud-bearercloud-pro.html" subtype="file" title="" fulltitle="bearercloud.pro Example File" subtitle="bearercloud/bearercloud.pro" location=""/>
            <page access="public" status="commendable" name="bearercloud/icons.qrc" href="bearercloud-icons-qrc.html" subtype="file" title="" fulltitle="icons.qrc Example File" subtitle="bearercloud/icons.qrc" location=""/>
        </page>
        <page access="public" status="commendable" name="organizerschema.html" href="organizerschema.html" subtype="page" title="Qt Organizer Schema" fulltitle="Qt Organizer Schema" subtitle="" location="organizerschema.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="schema-definition" title="Schema Definition" level="1"/>
            <contents name="default-schema" title="Default Schema" level="1"/>
            <contents name="detail-definition-uniqueness" title="Detail Definition Uniqueness" level="2"/>
            <contents name="detail-access-constraints" title="Detail Access Constraints" level="2"/>
            <contents name="backend-provided-details" title="Backend-provided Details" level="2"/>
        </page>
        <page access="public" status="commendable" name="organizerasync.html" href="organizerasync.html" subtype="page" title="Organizer Asynchronous API" fulltitle="Organizer Asynchronous API" subtitle="" location="organizerasync.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="using-the-api" title="Using the API" level="1"/>
            <contents name="organizer-item-manipulation" title="Organizer Item Manipulation" level="2"/>
            <contents name="schema-manipulation" title="Schema Manipulation" level="2"/>
            <contents name="examples-of-usage" title="Examples Of Usage" level="1"/>
            <contents name="fetching-items" title="Fetching Items" level="2"/>
            <contents name="other-asynchronous-operations" title="Other Asynchronous Operations" level="2"/>
        </page>
        <page access="public" status="commendable" name="installation.html" href="installation.html" subtype="page" title="Installation Guide" fulltitle="Installation Guide" subtitle="" location="installation.qdoc">
            <contents name="get-the-qt-mobility-api-package" title="Get the Qt Mobility API Package" level="1"/>
            <contents name="pre-requisites-dependencies" title="Pre-requisites &amp; Dependencies" level="1"/>
            <contents name="unpacking" title="Unpacking" level="1"/>
            <contents name="building" title="Building" level="1"/>
            <contents name="building-on-unix" title="Building On Unix" level="2"/>
            <contents name="building-on-windows" title="Building On Windows" level="2"/>
            <contents name="building-for-windows-ce" title="Building For Windows CE" level="2"/>
            <contents name="building-for-symbian-on-windows" title="Building For Symbian On Windows" level="2"/>
            <contents name="building-for-mac-os-x" title="Building For Mac OS X" level="2"/>
            <contents name="building-individual-qt-mobility-modules" title="Building Individual Qt Mobility Modules" level="2"/>
            <contents name="making-the-libraries-available-to-applications" title="Making the libraries available to applications" level="1"/>
            <contents name="making-the-libraries-available-on-unix" title="Making the libraries available on Unix" level="2"/>
            <contents name="making-the-libraries-available-on-windows" title="Making the libraries available on Windows" level="2"/>
            <contents name="making-the-libraries-available-on-windows-ce" title="Making the libraries available on Windows CE" level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMetaDataWriterControl_iid" href="qmetadatawritercontrol.html#QMetaDataWriterControl_iid" location="qmetadatawritercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMetaDataWriterControl" type="" signature="QMetaDataWriterControl_iid()"/>
        <page access="public" status="commendable" name="multimedia" href="multimedia.html" subtype="group" title="Mobility Multimedia" fulltitle="Mobility Multimedia" subtitle="" location="multimedia.qdoc"/>
        <page access="public" status="commendable" name="multimedia.html" href="multimedia.html" subtype="page" title="Multimedia" fulltitle="Multimedia" subtitle="" location="multimedia.qdoc">
            <contents name="no-special-namespace" title="No Special Namespace" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="audio" title="Audio" level="2"/>
            <contents name="video" title="Video" level="2"/>
            <contents name="radio" title="Radio" level="2"/>
            <contents name="extending-the-api-for-symbian-and-maemo" title="Extending the API for Symbian and Maemo" level="1"/>
            <contents name="adding-a-media-service-provider" title="Adding a Media Service Provider" level="2"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="record-a-sound-source" title="Record a Sound Source" level="2"/>
            <contents name="play-a-media-file" title="Play a Media File" level="2"/>
            <contents name="slide-show" title="Slide Show" level="2"/>
            <contents name="reference-documentation" title="Reference documentation" level="1"/>
            <contents name="main-classes" title="Main classes" level="2"/>
            <contents name="classes-for-service-implementers" title="Classes for service implementers." level="2"/>
            <contents name="qml-multimedia-elements" title="QML multimedia elements" level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QCameraLocksControl_iid" href="qcameralockscontrol.html#QCameraLocksControl_iid" location="qcameralockscontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QCameraLocksControl" type="" signature="QCameraLocksControl_iid()"/>
        <page access="public" status="commendable" name="contacts.html" href="contacts.html" subtype="page" title="Contacts" fulltitle="Contacts" subtitle="" location="contacts.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="client-facing-api" title="Client-Facing API" level="1"/>
            <contents name="container-classes" title="Container Classes" level="2"/>
            <contents name="contact" title="Contact" level="3"/>
            <contents name="detail" title="Detail" level="3"/>
            <contents name="detail-definition" title="Detail Definition" level="3"/>
            <contents name="relationships" title="Relationships" level="3"/>
            <contents name="manager" title="Manager" level="2"/>
            <contents name="meta-data-api" title="Meta Data API" level="3"/>
            <contents name="asynchronous-api" title="Asynchronous API" level="3"/>
            <contents name="synchronous-api" title="Synchronous API" level="3"/>
            <contents name="actions" title="Actions" level="2"/>
            <contents name="non-client-facing-api" title="Non-Client-Facing API" level="1"/>
            <contents name="manager-engine" title="Manager Engine" level="2"/>
            <contents name="using-the-api" title="Using the API" level="1"/>
            <contents name="building-and-compiling" title="Building and compiling" level="1"/>
            <contents name="reference-documentation" title="Reference documentation" level="1"/>
            <contents name="main-classes" title="Main classes" level="2"/>
            <contents name="contact-details-leaf-classes" title="&quot;Contact Details&quot; Leaf Classes" level="2"/>
            <contents name="asynchronous-requests" title="Asynchronous Requests" level="2"/>
            <contents name="contact-selection" title="Contact Selection" level="2"/>
            <contents name="actions" title="Actions" level="2"/>
            <contents name="implementing-backends" title="Implementing Backends" level="2"/>
            <contents name="synchronization-and-serialization" title="Synchronization and Serialization" level="2"/>
            <contents name="examples" title="Examples" level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlayerControl_iid" href="qmediaplayercontrol.html#QMediaPlayerControl_iid" location="qmediaplayercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMediaPlayerControl" type="" signature="QMediaPlayerControl_iid()"/>
        <page access="public" status="commendable" name="SoundEffect" href="qml-soundeffect.html" subtype="qmlclass" title="QML SoundEffect Element" fulltitle="QML SoundEffect Element" subtitle="" location="qsoundeffect.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="source" fullname="SoundEffect#source" href="qml-soundeffect.html#source-prop" type="url"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="loops" fullname="SoundEffect#loops" href="qml-soundeffect.html#loops-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="SoundEffect#volume" href="qml-soundeffect.html#volume-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="SoundEffect#muted" href="qml-soundeffect.html#muted-prop" type="bool"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="sourceChanged" fullname="SoundEffect#sourceChanged" href="qml-soundeffect.html#sourceChanged-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="loopsChanged" fullname="SoundEffect#loopsChanged" href="qml-soundeffect.html#loopsChanged-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="SoundEffect#volumeChanged" href="qml-soundeffect.html#volumeChanged-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="mutedChanged" fullname="SoundEffect#mutedChanged" href="qml-soundeffect.html#mutedChanged-signal"/>
        </page>
        <page access="public" status="commendable" name="documentshare" href="documentshare.html" subtype="example" title="Document Sharing" fulltitle="Document Sharing" subtitle="" location="documentshare.qdoc">
            <page access="public" status="commendable" name="documentshare/download.cpp" href="documentshare-download-cpp.html" subtype="file" title="" fulltitle="download.cpp Example File" subtitle="documentshare/download.cpp" location=""/>
            <page access="public" status="commendable" name="documentshare/download.h" href="documentshare-download-h.html" subtype="file" title="" fulltitle="download.h Example File" subtitle="documentshare/download.h" location=""/>
            <page access="public" status="commendable" name="documentshare/downloaddelegate.cpp" href="documentshare-downloaddelegate-cpp.html" subtype="file" title="" fulltitle="downloaddelegate.cpp Example File" subtitle="documentshare/downloaddelegate.cpp" location=""/>
            <page access="public" status="commendable" name="documentshare/downloaddelegate.h" href="documentshare-downloaddelegate-h.html" subtype="file" title="" fulltitle="downloaddelegate.h Example File" subtitle="documentshare/downloaddelegate.h" location=""/>
            <page access="public" status="commendable" name="documentshare/downloadmodel.cpp" href="documentshare-downloadmodel-cpp.html" subtype="file" title="" fulltitle="downloadmodel.cpp Example File" subtitle="documentshare/downloadmodel.cpp" location=""/>
            <page access="public" status="commendable" name="documentshare/downloadmodel.h" href="documentshare-downloadmodel-h.html" subtype="file" title="" fulltitle="downloadmodel.h Example File" subtitle="documentshare/downloadmodel.h" location=""/>
            <page access="public" status="commendable" name="documentshare/iteminformationdialog.cpp" href="documentshare-iteminformationdialog-cpp.html" subtype="file" title="" fulltitle="iteminformationdialog.cpp Example File" subtitle="documentshare/iteminformationdialog.cpp" location=""/>
            <page access="public" status="commendable" name="documentshare/iteminformationdialog.h" href="documentshare-iteminformationdialog-h.html" subtype="file" title="" fulltitle="iteminformationdialog.h Example File" subtitle="documentshare/iteminformationdialog.h" location=""/>
            <page access="public" status="commendable" name="documentshare/sharewidget.cpp" href="documentshare-sharewidget-cpp.html" subtype="file" title="" fulltitle="sharewidget.cpp Example File" subtitle="documentshare/sharewidget.cpp" location=""/>
            <page access="public" status="commendable" name="documentshare/sharewidget.h" href="documentshare-sharewidget-h.html" subtype="file" title="" fulltitle="sharewidget.h Example File" subtitle="documentshare/sharewidget.h" location=""/>
            <page access="public" status="commendable" name="documentshare/main.cpp" href="documentshare-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="documentshare/main.cpp" location=""/>
            <page access="public" status="commendable" name="documentshare/documentshare.pro" href="documentshare-documentshare-pro.html" subtype="file" title="" fulltitle="documentshare.pro Example File" subtitle="documentshare/documentshare.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="editions.html" href="editions.html" subtype="page" title="Qt Editions" fulltitle="Qt Editions" subtitle="" location="editions.qdoc"/>
        <page access="public" status="commendable" name="fetchgooglemaps" href="fetchgooglemaps.html" subtype="example" title="Fetch Google Maps Example" fulltitle="Fetch Google Maps Example" subtitle="" location="fetchgooglemaps.qdoc">
            <page access="public" status="commendable" name="fetchgooglemaps/mapwindow.cpp" href="fetchgooglemaps-mapwindow-cpp.html" subtype="file" title="" fulltitle="mapwindow.cpp Example File" subtitle="fetchgooglemaps/mapwindow.cpp" location=""/>
            <page access="public" status="commendable" name="fetchgooglemaps/mapwindow.h" href="fetchgooglemaps-mapwindow-h.html" subtype="file" title="" fulltitle="mapwindow.h Example File" subtitle="fetchgooglemaps/mapwindow.h" location=""/>
            <page access="public" status="commendable" name="fetchgooglemaps/main.cpp" href="fetchgooglemaps-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="fetchgooglemaps/main.cpp" location=""/>
            <page access="public" status="commendable" name="fetchgooglemaps/fetchgooglemaps.pro" href="fetchgooglemaps-fetchgooglemaps-pro.html" subtype="file" title="" fulltitle="fetchgooglemaps.pro Example File" subtitle="fetchgooglemaps/fetchgooglemaps.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="classlists" href="classlists.html" subtype="group" title="Class and Function Documentation" fulltitle="Class and Function Documentation" subtitle="" location="classes.qdoc">
            <contents name="class-lists" title="Class Lists" level="2"/>
            <contents name="function-lists" title="Function Lists" level="2"/>
        </page>
        <page access="public" status="commendable" name="classes.html" href="classes.html" subtype="page" title="All Qt Mobility Classes" fulltitle="All Qt Mobility Classes" subtitle="" location="classes.qdoc"/>
        <page access="public" status="commendable" name="annotated.html" href="annotated.html" subtype="page" title="Annotated Class List" fulltitle="Annotated Class List" subtitle="" location="classes.qdoc"/>
        <page access="public" status="commendable" name="hierarchy.html" href="hierarchy.html" subtype="page" title="Inheritance Hierarchy" fulltitle="Inheritance Hierarchy" subtitle="" location="classes.qdoc"/>
        <page access="public" status="commendable" name="functions.html" href="functions.html" subtype="page" title="All Functions" fulltitle="All Functions" subtitle="" location="classes.qdoc"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWindowControl_iid" href="qvideowindowcontrol.html#QVideoWindowControl_iid" location="qvideowindowcontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoWindowControl" type="" signature="QVideoWindowControl_iid()"/>
        <page access="public" status="commendable" name="Video" href="qml-video.html" subtype="qmlclass" title="QML Video Element" fulltitle="QML Video Element" subtitle="" location="qdeclarativevideo.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="source" fullname="Video#source" href="qml-video.html#source-prop" type="url"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="autoLoad" fullname="Video#autoLoad" href="qml-video.html#autoLoad-prop" type="url"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="playing" fullname="Video#playing" href="qml-video.html#playing-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="paused" fullname="Video#paused" href="qml-video.html#paused-prop" type="bool"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onStarted" fullname="Video#onStarted" href="qml-video.html#onStarted-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onResumed" fullname="Video#onResumed" href="qml-video.html#onResumed-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onPaused" fullname="Video#onPaused" href="qml-video.html#onPaused-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onStopped" fullname="Video#onStopped" href="qml-video.html#onStopped-signal"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="status" fullname="Video#status" href="qml-video.html#status-prop" type="enumeration"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onLoaded" fullname="Video#onLoaded" href="qml-video.html#onLoaded-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onBuffering" fullname="Video#onBuffering" href="qml-video.html#onBuffering-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onStalled" fullname="Video#onStalled" href="qml-video.html#onStalled-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onBuffered" fullname="Video#onBuffered" href="qml-video.html#onBuffered-signal"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onEndOfMedia" fullname="Video#onEndOfMedia" href="qml-video.html#onEndOfMedia-signal"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="Video#duration" href="qml-video.html#duration-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="position" fullname="Video#position" href="qml-video.html#position-prop" type="int"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="Video#volume" href="qml-video.html#volume-prop" type="real"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="Video#muted" href="qml-video.html#muted-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="hasAudio" fullname="Video#hasAudio" href="qml-video.html#hasAudio-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="hasVideo" fullname="Video#hasVideo" href="qml-video.html#hasVideo-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="bufferProgress" fullname="Video#bufferProgress" href="qml-video.html#bufferProgress-prop" type="real"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="seekable" fullname="Video#seekable" href="qml-video.html#seekable-prop" type="bool"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="Video#playbackRate" href="qml-video.html#playbackRate-prop" type="real"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="error" fullname="Video#error" href="qml-video.html#error-prop" type="enumeration"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="Video#errorString" href="qml-video.html#errorString-prop" type="string"/>
            <qmlsignal access="public" threadsafety="unspecified" status="commendable" name="onError" fullname="Video#onError" href="qml-video.html#onError-signal"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="fillMode" fullname="Video#fillMode" href="qml-video.html#fillMode-prop" type="enumeration"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="play" fullname="Video#play" href="qml-video.html#play-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="Video#pause" href="qml-video.html#pause-method"/>
            <qmlmethod access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="Video#stop" href="qml-video.html#stop-method"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="title" fullname="Video#title" href="qml-video.html#title-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="subTitle" fullname="Video#subTitle" href="qml-video.html#subTitle-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="author" fullname="Video#author" href="qml-video.html#author-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="comment" fullname="Video#comment" href="qml-video.html#comment-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="description" fullname="Video#description" href="qml-video.html#description-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="category" fullname="Video#category" href="qml-video.html#category-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="genre" fullname="Video#genre" href="qml-video.html#genre-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="year" fullname="Video#year" href="qml-video.html#year-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="date" fullname="Video#date" href="qml-video.html#date-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="userRating" fullname="Video#userRating" href="qml-video.html#userRating-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="keywords" fullname="Video#keywords" href="qml-video.html#keywords-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="language" fullname="Video#language" href="qml-video.html#language-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="publisher" fullname="Video#publisher" href="qml-video.html#publisher-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="copyright" fullname="Video#copyright" href="qml-video.html#copyright-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="parentalRating" fullname="Video#parentalRating" href="qml-video.html#parentalRating-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="ratingOrganisation" fullname="Video#ratingOrganisation" href="qml-video.html#ratingOrganisation-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="size" fullname="Video#size" href="qml-video.html#size-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="mediaType" fullname="Video#mediaType" href="qml-video.html#mediaType-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="audioBitRate" fullname="Video#audioBitRate" href="qml-video.html#audioBitRate-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="Video#audioCodec" href="qml-video.html#audioCodec-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="averageLevel" fullname="Video#averageLevel" href="qml-video.html#averageLevel-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="channelCount" fullname="Video#channelCount" href="qml-video.html#channelCount-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="peakValue" fullname="Video#peakValue" href="qml-video.html#peakValue-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="sampleRate" fullname="Video#sampleRate" href="qml-video.html#sampleRate-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="albumTitle" fullname="Video#albumTitle" href="qml-video.html#albumTitle-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="albumArtist" fullname="Video#albumArtist" href="qml-video.html#albumArtist-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="contributingArtist" fullname="Video#contributingArtist" href="qml-video.html#contributingArtist-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="composer" fullname="Video#composer" href="qml-video.html#composer-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="conductor" fullname="Video#conductor" href="qml-video.html#conductor-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="lyrics" fullname="Video#lyrics" href="qml-video.html#lyrics-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="mood" fullname="Video#mood" href="qml-video.html#mood-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="trackNumber" fullname="Video#trackNumber" href="qml-video.html#trackNumber-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="trackCount" fullname="Video#trackCount" href="qml-video.html#trackCount-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="coverArtUrlSmall" fullname="Video#coverArtUrlSmall" href="qml-video.html#coverArtUrlSmall-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="coverArtUrlLarge" fullname="Video#coverArtUrlLarge" href="qml-video.html#coverArtUrlLarge-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="Video#resolution" href="qml-video.html#resolution-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="pixelAspectRatio" fullname="Video#pixelAspectRatio" href="qml-video.html#pixelAspectRatio-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="videoFrameRate" fullname="Video#videoFrameRate" href="qml-video.html#videoFrameRate-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="videoBitRate" fullname="Video#videoBitRate" href="qml-video.html#videoBitRate-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="videoCodec" fullname="Video#videoCodec" href="qml-video.html#videoCodec-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="posterUrl" fullname="Video#posterUrl" href="qml-video.html#posterUrl-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="chapterNumber" fullname="Video#chapterNumber" href="qml-video.html#chapterNumber-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="director" fullname="Video#director" href="qml-video.html#director-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="leadPerformer" fullname="Video#leadPerformer" href="qml-video.html#leadPerformer-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="writer" fullname="Video#writer" href="qml-video.html#writer-prop" type="variant"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVALUESPACE_AUTO_INSTALL_LAYER" href="qabstractvaluespacelayer.html#QVALUESPACE_AUTO_INSTALL_LAYER" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QAbstractValueSpaceLayer" type="" signature="QVALUESPACE_AUTO_INSTALL_LAYER( className)">
            <parameter left="" right="" name="className" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVALUESPACE_SHAREDMEMORY_LAYER" href="qvaluespace.html#QVALUESPACE_SHAREDMEMORY_LAYER" location="qvaluespace.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QValueSpace" type="" signature="QVALUESPACE_SHAREDMEMORY_LAYER()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVALUESPACE_VOLATILEREGISTRY_LAYER" href="qvaluespace.html#QVALUESPACE_VOLATILEREGISTRY_LAYER" location="qvaluespace.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QValueSpace" type="" signature="QVALUESPACE_VOLATILEREGISTRY_LAYER()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVALUESPACE_NONVOLATILEREGISTRY_LAYER" href="qvaluespace.html#QVALUESPACE_NONVOLATILEREGISTRY_LAYER" location="qvaluespace.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QValueSpace" type="" signature="QVALUESPACE_NONVOLATILEREGISTRY_LAYER()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVALUESPACE_CONTEXTKIT_LAYER" href="qvaluespace.html#QVALUESPACE_CONTEXTKIT_LAYER" location="qvaluespace.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QValueSpace" type="" signature="QVALUESPACE_CONTEXTKIT_LAYER()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVALUESPACE_SYMBIAN_SETTINGS_LAYER" href="qvaluespace.html#QVALUESPACE_SYMBIAN_SETTINGS_LAYER" location="qvaluespace.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QValueSpace" type="" signature="QVALUESPACE_SYMBIAN_SETTINGS_LAYER()"/>
        <page access="public" status="commendable" name="samplephonebook" href="samplephonebook.html" subtype="example" title="Sample Phonebook Example" fulltitle="Sample Phonebook Example" subtitle="" location="samplephonebook.qdoc">
            <contents name="phone-book" title="Phone Book" level="1"/>
            <contents name="motivation" title="Motivation" level="2"/>
            <contents name="use-case" title="Use Case" level="2"/>
            <contents name="interface" title="Interface" level="2"/>
            <contents name="known-issues" title="Known Issues" level="2"/>
            <page access="public" status="commendable" name="samplephonebook/contacteditor.cpp" href="samplephonebook-contacteditor-cpp.html" subtype="file" title="" fulltitle="contacteditor.cpp Example File" subtitle="samplephonebook/contacteditor.cpp" location=""/>
            <page access="public" status="commendable" name="samplephonebook/contacteditor.h" href="samplephonebook-contacteditor-h.html" subtype="file" title="" fulltitle="contacteditor.h Example File" subtitle="samplephonebook/contacteditor.h" location=""/>
            <page access="public" status="commendable" name="samplephonebook/contactlistpage.cpp" href="samplephonebook-contactlistpage-cpp.html" subtype="file" title="" fulltitle="contactlistpage.cpp Example File" subtitle="samplephonebook/contactlistpage.cpp" location=""/>
            <page access="public" status="commendable" name="samplephonebook/contactlistpage.h" href="samplephonebook-contactlistpage-h.html" subtype="file" title="" fulltitle="contactlistpage.h Example File" subtitle="samplephonebook/contactlistpage.h" location=""/>
            <page access="public" status="commendable" name="samplephonebook/filterpage.cpp" href="samplephonebook-filterpage-cpp.html" subtype="file" title="" fulltitle="filterpage.cpp Example File" subtitle="samplephonebook/filterpage.cpp" location=""/>
            <page access="public" status="commendable" name="samplephonebook/filterpage.h" href="samplephonebook-filterpage-h.html" subtype="file" title="" fulltitle="filterpage.h Example File" subtitle="samplephonebook/filterpage.h" location=""/>
            <page access="public" status="commendable" name="samplephonebook/phonebook.cpp" href="samplephonebook-phonebook-cpp.html" subtype="file" title="" fulltitle="phonebook.cpp Example File" subtitle="samplephonebook/phonebook.cpp" location=""/>
            <page access="public" status="commendable" name="samplephonebook/phonebook.h" href="samplephonebook-phonebook-h.html" subtype="file" title="" fulltitle="phonebook.h Example File" subtitle="samplephonebook/phonebook.h" location=""/>
            <page access="public" status="commendable" name="samplephonebook/main.cpp" href="samplephonebook-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="samplephonebook/main.cpp" location=""/>
            <page access="public" status="commendable" name="samplephonebook/samplephonebook.pro" href="samplephonebook-samplephonebook-pro.html" subtype="file" title="" fulltitle="samplephonebook.pro Example File" subtitle="samplephonebook/samplephonebook.pro" location=""/>
        </page>
        <page access="public" status="commendable" name="future.html" href="future.html" subtype="page" title="Future Additional APIs" fulltitle="Future Additional APIs" subtitle="" location="future.qdoc"/>
        <page access="public" status="commendable" name="organizerusage.html" href="organizerusage.html" subtype="page" title="Organizer API Usage" fulltitle="Organizer API Usage" subtitle="" location="organizerusage.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="manager-settings-and-configuration" title="Manager Settings And Configuration" level="1"/>
            <contents name="querying-a-manager-for-capabilities" title="Querying a manager for capabilities" level="2"/>
            <contents name="loading-the-manager-for-a-specific-backend" title="Loading the manager for a specific backend" level="2"/>
            <contents name="loading-a-manager-with-specific-parameters" title="Loading a manager with specific parameters" level="2"/>
            <contents name="organizer-item-detail-manipulation" title="Organizer Item Detail Manipulation" level="1"/>
            <contents name="persistent-organizer-item-information" title="Persistent Organizer Item Information" level="1"/>
            <contents name="creating-a-new-item-in-a-manager" title="Creating a new item in a manager" level="2"/>
            <contents name="retrieving-items-from-a-manager" title="Retrieving items from a manager" level="2"/>
            <contents name="updating-an-existing-item-in-a-manager" title="Updating an existing item in a manager" level="2"/>
            <contents name="removing-an-item-from-a-manager" title="Removing an item from a manager" level="2"/>
            <contents name="optimization-in-item-retrieval" title="Optimization in item retrieval" level="2"/>
            <contents name="querying-the-schema-supported-by-a-manager" title="Querying the schema supported by a manager" level="2"/>
            <contents name="modifying-the-schema-supported-by-a-manager" title="Modifying the schema supported by a manager" level="2"/>
            <contents name="recurring-items" title="Recurring items" level="1"/>
            <contents name="multiple-organizers" title="Multiple organizers" level="1"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="DECLARE_READING" href="qsensorreading.html#DECLARE_READING" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QSensorReading" type="" signature="DECLARE_READING( classname)">
            <parameter left="" right="" name="classname" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="IMPLEMENT_READING" href="qsensorreading.html#IMPLEMENT_READING" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QSensorReading" type="" signature="IMPLEMENT_READING( classname)">
            <parameter left="" right="" name="classname" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMediaStreamsControl_iid" href="qmediastreamscontrol.html#QMediaStreamsControl_iid" location="qmediastreamscontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMediaStreamsControl" type="" signature="QMediaStreamsControl_iid()"/>
        <page access="public" status="commendable" name="contactsengines.html" href="contactsengines.html" subtype="page" title="Qt Contacts Manager Engines" fulltitle="Qt Contacts Manager Engines" subtitle="" location="contactsengines.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="information-for-clients" title="Information For Clients" level="1"/>
            <contents name="where-is-the-data-stored" title="Where Is The Data Stored?" level="2"/>
            <contents name="schema-differences" title="Schema Differences" level="2"/>
            <contents name="provided-engines" title="Provided Engines" level="2"/>
            <contents name="in-memory-example-engine" title="In-Memory Example Engine" level="3"/>
            <contents name="symbian-engine" title="Symbian Engine" level="3"/>
            <contents name="symbian-sim-engine" title="Symbian Sim Engine" level="3"/>
            <contents name="maemo-5-fremantle-engine" title="Maemo 5 (Fremantle) Engine" level="3"/>
            <contents name="windows-ce-engine" title="Windows CE Engine" level="3"/>
            <contents name="information-for-engine-implementors" title="Information For Engine Implementors" level="1"/>
            <contents name="which-functions-do-i-need-to-implement" title="Which Functions Do I Need To Implement" level="2"/>
            <contents name="mandatory-functions" title="Mandatory Functions" level="3"/>
            <contents name="optional-functionality" title="Optional Functionality" level="3"/>
            <contents name="optional-implementation" title="Optional Implementation" level="3"/>
            <contents name="which-signals-do-i-need-to-emit" title="Which Signals Do I Need To Emit" level="2"/>
            <contents name="other-considerations" title="Other Considerations" level="2"/>
            <contents name="example-implementation" title="Example Implementation" level="2"/>
        </page>
        <page access="public" status="commendable" name="GalleryFilter" href="qml-galleryfilter.html" subtype="qmlclass" title="QML GalleryFilter Element" fulltitle="QML GalleryFilter Element" subtitle="" location="qdeclarativegalleryfilter.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="property" fullname="GalleryFilter#property" href="qml-galleryfilter.html#property-prop" type="string"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="value" fullname="GalleryFilter#value" href="qml-galleryfilter.html#value-prop" type="variant"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="comparator" fullname="GalleryFilter#comparator" href="qml-galleryfilter.html#comparator-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="caseSensitivity" fullname="GalleryFilter#caseSensitivity" href="qml-galleryfilter.html#caseSensitivity-prop" type="enum"/>
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="inverted" fullname="GalleryFilter#inverted" href="qml-galleryfilter.html#inverted-prop" type="bool"/>
        </page>
        <page access="public" status="commendable" name="GalleryFilterUnion" href="qml-galleryfilterunion.html" subtype="qmlclass" title="QML GalleryFilterUnion Element" fulltitle="QML GalleryFilterUnion Element" subtitle="" location="qdeclarativegalleryfilter.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="GalleryFilterUnion#filters" href="qml-galleryfilterunion.html#filters-prop" type="filterlist"/>
        </page>
        <page access="public" status="commendable" name="GalleryFilterIntersection" href="qml-galleryfilterintersection.html" subtype="qmlclass" title="QML GalleryFilterIntersection Element" fulltitle="QML GalleryFilterIntersection Element" subtitle="" location="qdeclarativegalleryfilter.cpp">
            <qmlproperty access="public" threadsafety="unspecified" status="commendable" name="filters" fullname="GalleryFilterIntersection#filters" href="qml-galleryfilterintersection.html#filters-prop" type="filterlist"/>
        </page>
        <page access="public" status="commendable" name="player" href="player.html" subtype="example" title="Media Player Example" fulltitle="Media Player Example" subtitle="" location="player.qdoc">
            <page access="public" status="commendable" name="player/mediakeysobserver.cpp" href="player-mediakeysobserver-cpp.html" subtype="file" title="" fulltitle="mediakeysobserver.cpp Example File" subtitle="player/mediakeysobserver.cpp" location=""/>
            <page access="public" status="commendable" name="player/mediakeysobserver.h" href="player-mediakeysobserver-h.html" subtype="file" title="" fulltitle="mediakeysobserver.h Example File" subtitle="player/mediakeysobserver.h" location=""/>
            <page access="public" status="commendable" name="player/player.cpp" href="player-player-cpp.html" subtype="file" title="" fulltitle="player.cpp Example File" subtitle="player/player.cpp" location=""/>
            <page access="public" status="commendable" name="player/player.h" href="player-player-h.html" subtype="file" title="" fulltitle="player.h Example File" subtitle="player/player.h" location=""/>
            <page access="public" status="commendable" name="player/playercontrols.cpp" href="player-playercontrols-cpp.html" subtype="file" title="" fulltitle="playercontrols.cpp Example File" subtitle="player/playercontrols.cpp" location=""/>
            <page access="public" status="commendable" name="player/playercontrols.h" href="player-playercontrols-h.html" subtype="file" title="" fulltitle="playercontrols.h Example File" subtitle="player/playercontrols.h" location=""/>
            <page access="public" status="commendable" name="player/playlistmodel.cpp" href="player-playlistmodel-cpp.html" subtype="file" title="" fulltitle="playlistmodel.cpp Example File" subtitle="player/playlistmodel.cpp" location=""/>
            <page access="public" status="commendable" name="player/playlistmodel.h" href="player-playlistmodel-h.html" subtype="file" title="" fulltitle="playlistmodel.h Example File" subtitle="player/playlistmodel.h" location=""/>
            <page access="public" status="commendable" name="player/videowidget.cpp" href="player-videowidget-cpp.html" subtype="file" title="" fulltitle="videowidget.cpp Example File" subtitle="player/videowidget.cpp" location=""/>
            <page access="public" status="commendable" name="player/videowidget.h" href="player-videowidget-h.html" subtype="file" title="" fulltitle="videowidget.h Example File" subtitle="player/videowidget.h" location=""/>
            <page access="public" status="commendable" name="player/main.cpp" href="player-main-cpp.html" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="player/main.cpp" location=""/>
            <page access="public" status="commendable" name="player/player.pro" href="player-player-pro.html" subtype="file" title="" fulltitle="player.pro Example File" subtitle="player/player.pro" location=""/>
        </page>
    </namespace>
</INDEX>
