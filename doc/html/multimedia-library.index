<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="Multimedia Library Reference Documentation" version="">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="" module="">
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaImageViewer" href="qmediaimageviewer.html" location="qmediaimageviewer.h" bases="QWidget" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaResources" fullname="QMediaImageViewer::mediaResources" href="qmediaimageviewer.html#mediaResources-prop" location="qmediaimageviewer.h" type="QMediaResourceList">
                <getter name="mediaResources"/>
                <setter name="setMediaResources"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="interval" fullname="QMediaImageViewer::interval" href="qmediaimageviewer.html#interval-prop" location="qmediaimageviewer.h" type="int">
                <getter name="interval"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaImageViewer::state" href="qmediaimageviewer.html#state-prop" location="qmediaimageviewer.h" type="State">
                <getter name="state"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaImageViewer::State" href="qmediaimageviewer.html#State-enum" location="qmediaimageviewer.h">
                <value name="LoadingState" value="0"/>
                <value name="PlayingState" value="1"/>
                <value name="PausedState" value="2"/>
                <value name="StoppedState" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaImageViewer" fullname="QMediaImageViewer::QMediaImageViewer" href="qmediaimageviewer.html#QMediaImageViewer" location="qmediaimageviewer.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaImageViewer(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaImageViewer" fullname="QMediaImageViewer::~QMediaImageViewer" href="qmediaimageviewer.html#dtor.QMediaImageViewer" location="qmediaimageviewer.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaImageViewer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="interval" fullname="QMediaImageViewer::interval" href="qmediaimageviewer.html#interval-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="interval" type="int" signature="interval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaImageViewer::state" href="qmediaimageviewer.html#state-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaResources" fullname="QMediaImageViewer::mediaResources" href="qmediaimageviewer.html#mediaResources-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="mediaResources" type="QMediaResourceList" signature="mediaResources() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMediaResources" fullname="QMediaImageViewer::setMediaResources" href="qmediaimageviewer.html#mediaResources-prop" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="mediaResources" type="void" signature="setMediaResources(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaImageViewer::play" href="qmediaimageviewer.html#play" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaImageViewer::pause" href="qmediaimageviewer.html#pause" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaImageViewer::stop" href="qmediaimageviewer.html#stop" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="skipForward" fullname="QMediaImageViewer::skipForward" href="qmediaimageviewer.html#skipForward" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="skipForward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="skipBackward" fullname="QMediaImageViewer::skipBackward" href="qmediaimageviewer.html#skipBackward" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="skipBackward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="intervalChanged" fullname="QMediaImageViewer::intervalChanged" href="qmediaimageviewer.html#intervalChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="intervalChanged(int interval)">
                <parameter left="int" right="" name="interval" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaImageViewer::stateChanged" href="qmediaimageviewer.html#stateChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaImageViewer::State state)">
                <parameter left="QMediaImageViewer::State" right="" name="state" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QRadioPlayerControl" href="qradioplayercontrol.html" location="qradioplayercontrol.h" bases="QAbstractMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRadioPlayerControl" fullname="QRadioPlayerControl::~QRadioPlayerControl" href="qradioplayercontrol.html#dtor.QRadioPlayerControl" location="qradioplayercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRadioPlayerControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioPlayerControl::band" href="qradioplayercontrol.html#band" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRadioPlayer::Band" signature="band() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBand" fullname="QRadioPlayerControl::setBand" href="qradioplayercontrol.html#setBand" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBand(QRadioPlayer::Band band)">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupportedBand" fullname="QRadioPlayerControl::isSupportedBand" href="qradioplayercontrol.html#isSupportedBand" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupportedBand(QRadioPlayer::Band band) const">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioPlayerControl::frequency" href="qradioplayercontrol.html#frequency" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QRadioPlayerControl::setFrequency" href="qradioplayercontrol.html#setFrequency" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStereo" fullname="QRadioPlayerControl::isStereo" href="qradioplayercontrol.html#isStereo" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isStereo() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStereo" fullname="QRadioPlayerControl::setStereo" href="qradioplayercontrol.html#setStereo" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setStereo(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioPlayerControl::signalStrength" href="qradioplayercontrol.html#signalStrength" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="signalStrength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QRadioPlayerControl::duration" href="qradioplayercontrol.html#duration" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioPlayerControl::volume" href="qradioplayercontrol.html#volume" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QRadioPlayerControl::setVolume" href="qradioplayercontrol.html#setVolume" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QRadioPlayerControl::isMuted" href="qradioplayercontrol.html#isMuted" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QRadioPlayerControl::setMuted" href="qradioplayercontrol.html#setMuted" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSearching" fullname="QRadioPlayerControl::isSearching" href="qradioplayercontrol.html#isSearching" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSearching() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchForward" fullname="QRadioPlayerControl::searchForward" href="qradioplayercontrol.html#searchForward" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="searchForward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchBackward" fullname="QRadioPlayerControl::searchBackward" href="qradioplayercontrol.html#searchBackward" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="searchBackward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelSearch" fullname="QRadioPlayerControl::cancelSearch" href="qradioplayercontrol.html#cancelSearch" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="cancelSearch()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bandChanged" fullname="QRadioPlayerControl::bandChanged" href="qradioplayercontrol.html#bandChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bandChanged(QRadioPlayer::Band band)">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyChanged" fullname="QRadioPlayerControl::frequencyChanged" href="qradioplayercontrol.html#frequencyChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="frequencyChanged(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoStatusChanged" fullname="QRadioPlayerControl::stereoStatusChanged" href="qradioplayercontrol.html#stereoStatusChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stereoStatusChanged(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchingStatusChanged" fullname="QRadioPlayerControl::searchingStatusChanged" href="qradioplayercontrol.html#searchingStatusChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchingStatusChanged(bool searching)">
                <parameter left="bool" right="" name="searching" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrengthChanged" fullname="QRadioPlayerControl::signalStrengthChanged" href="qradioplayercontrol.html#signalStrengthChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="signalStrengthChanged(int signalStrength)">
                <parameter left="int" right="" name="signalStrength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QRadioPlayerControl::durationChanged" href="qradioplayercontrol.html#durationChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QRadioPlayerControl::volumeChanged" href="qradioplayercontrol.html#volumeChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QRadioPlayerControl::mutingChanged" href="qradioplayercontrol.html#mutingChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QRadioPlayerControl" fullname="QRadioPlayerControl::QRadioPlayerControl" href="qradioplayercontrol.html#QRadioPlayerControl" location="qradioplayercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRadioPlayerControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWidget" href="qvideowidget.html" location="qvideowidget.h" bases="QWidget" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="displayMode" fullname="QVideoWidget::displayMode" href="qvideowidget.html#displayMode-prop" location="qvideowidget.h" type="DisplayMode">
                <getter name="displayMode"/>
                <setter name="setDisplayMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidget::brightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.h" type="int">
                <getter name="brightness"/>
                <setter name="setBrightness"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidget::contrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.h" type="int">
                <getter name="contrast"/>
                <setter name="setContrast"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidget::hue" href="qvideowidget.html#hue-prop" location="qvideowidget.h" type="int">
                <getter name="hue"/>
                <setter name="setHue"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidget::saturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.h" type="int">
                <getter name="saturation"/>
                <setter name="setSaturation"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DisplayMode" fullname="QVideoWidget::DisplayMode" href="qvideowidget.html#DisplayMode-enum" location="qvideowidget.h">
                <value name="WindowedDisplay" value="0"/>
                <value name="FullscreenDisplay" value="1"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWidget" fullname="QVideoWidget::QVideoWidget" href="qvideowidget.html#QVideoWidget" location="qvideowidget.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWidget(QAbstractMediaObject * object, QWidget * parent)">
                <parameter left="QAbstractMediaObject *" right="" name="object" default=""/>
                <parameter left="QWidget *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWidget" fullname="QVideoWidget::~QVideoWidget" href="qvideowidget.html#dtor.QVideoWidget" location="qvideowidget.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWidget()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayMode" fullname="QVideoWidget::displayMode" href="qvideowidget.html#displayMode-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="displayMode" type="DisplayMode" signature="displayMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidget::brightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="brightness" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidget::contrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="contrast" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidget::hue" href="qvideowidget.html#hue-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="hue" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidget::saturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="saturation" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sizeHint" fullname="QVideoWidget::sizeHint" href="qvideowidget.html#sizeHint" location="qvideowidget.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="sizeHint() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVisible" fullname="QVideoWidget::setVisible" href="qvideowidget.html#setVisible" location="qvideowidget.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setVisible(bool visible)">
                <parameter left="bool" right="" name="visible" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayMode" fullname="QVideoWidget::setDisplayMode" href="qvideowidget.html#displayMode-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="displayMode" type="void" signature="setDisplayMode(DisplayMode mode)">
                <parameter left="DisplayMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWidget::setBrightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="brightness" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWidget::setContrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="contrast" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWidget::setHue" href="qvideowidget.html#hue-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="hue" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWidget::setSaturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="saturation" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayModeChanged" fullname="QVideoWidget::displayModeChanged" href="qvideowidget.html#displayModeChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="displayModeChanged(QVideoWidget::DisplayMode mode)">
                <parameter left="QVideoWidget::DisplayMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWidget::brightnessChanged" href="qvideowidget.html#brightnessChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWidget::contrastChanged" href="qvideowidget.html#contrastChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWidget::hueChanged" href="qvideowidget.html#hueChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWidget::saturationChanged" href="qvideowidget.html#saturationChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="showEvent" fullname="QVideoWidget::showEvent" href="qvideowidget.html#showEvent" location="qvideowidget.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="showEvent(QShowEvent * event)">
                <parameter left="QShowEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="hideEvent" fullname="QVideoWidget::hideEvent" href="qvideowidget.html#hideEvent" location="qvideowidget.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="hideEvent(QHideEvent * event)">
                <parameter left="QHideEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="moveEvent" fullname="QVideoWidget::moveEvent" href="qvideowidget.html#moveEvent" location="qvideowidget.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="moveEvent(QMoveEvent * event)">
                <parameter left="QMoveEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="resizeEvent" fullname="QVideoWidget::resizeEvent" href="qvideowidget.html#resizeEvent" location="qvideowidget.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="resizeEvent(QResizeEvent * event)">
                <parameter left="QResizeEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="paintEvent" fullname="QVideoWidget::paintEvent" href="qvideowidget.html#paintEvent" location="qvideowidget.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="paintEvent(QPaintEvent * event)">
                <parameter left="QPaintEvent *" right="" name="event" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="keyPressEvent" fullname="QVideoWidget::keyPressEvent" href="qvideowidget.html#keyPressEvent" location="qvideowidget.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="keyPressEvent(QKeyEvent * event)">
                <parameter left="QKeyEvent *" right="" name="event" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QVideoWidget::d_ptr" href="qvideowidget.html#d_ptr-var" location="qvideowidget.h" type="QVideoWidgetPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMediaEndpointInterface" href="qmediaendpointinterface.html" location="qmediaendpointinterface.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Direction" fullname="QMediaEndpointInterface::Direction" href="qmediaendpointinterface.html#Direction-enum" location="qmediaendpointinterface.h">
                <value name="Input" value="0x01"/>
                <value name="Output" value="0x02"/>
                <value name="InputOutput" value="Input | Output"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaEndpointInterface" fullname="QMediaEndpointInterface::~QMediaEndpointInterface" href="qmediaendpointinterface.html#dtor.QMediaEndpointInterface" location="qmediaendpointinterface.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaEndpointInterface()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QMediaEndpointInterface::direction" href="qmediaendpointinterface.html#direction" location="qmediaendpointinterface.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Direction" signature="direction() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRadioPlayer" href="qradioplayer.html" location="qradioplayer.h" bases="QAbstractMediaObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioPlayer::band" href="qradioplayer.html#band-prop" location="qradioplayer.h" type="Band">
                <getter name="band"/>
                <setter name="setBand"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioPlayer::frequency" href="qradioplayer.html#frequency-prop" location="qradioplayer.h" type="int">
                <getter name="frequency"/>
                <setter name="setFrequency"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="stereo" fullname="QRadioPlayer::stereo" href="qradioplayer.html#stereo-prop" location="qradioplayer.h" type="bool">
                <getter name="isStereo"/>
                <setter name="setStereo"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioPlayer::signalStrength" href="qradioplayer.html#signalStrength-prop" location="qradioplayer.h" type="int">
                <getter name="signalStrength"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QRadioPlayer::duration" href="qradioplayer.html#duration-prop" location="qradioplayer.h" type="qint64">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioPlayer::volume" href="qradioplayer.html#volume-prop" location="qradioplayer.h" type="int">
                <getter name="volume"/>
                <setter name="setVolume"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="QRadioPlayer::muted" href="qradioplayer.html#muted-prop" location="qradioplayer.h" type="bool">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="searching" fullname="QRadioPlayer::searching" href="qradioplayer.html#searching-prop" location="qradioplayer.h" type="bool">
                <getter name="isSearching"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Band" fullname="QRadioPlayer::Band" href="qradioplayer.html#Band-enum" location="qradioplayer.h">
                <value name="AM" value="0"/>
                <value name="FM" value="1"/>
                <value name="SW" value="2"/>
                <value name="LW" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QRadioPlayer" fullname="QRadioPlayer::QRadioPlayer" href="qradioplayer.html#QRadioPlayer" location="qradioplayer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRadioPlayer(QRadioService * service, QObject * parent)">
                <parameter left="QRadioService *" right="" name="service" default="createRadioService()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRadioPlayer" fullname="QRadioPlayer::~QRadioPlayer" href="qradioplayer.html#dtor.QRadioPlayer" location="qradioplayer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRadioPlayer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QRadioPlayer::isValid" href="qradioplayer.html#isValid" location="qradioplayer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioPlayer::band" href="qradioplayer.html#band-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="band" type="Band" signature="band() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupportedBand" fullname="QRadioPlayer::isSupportedBand" href="qradioplayer.html#isSupportedBand" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupportedBand(Band b) const">
                <parameter left="Band" right="" name="b" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioPlayer::frequency" href="qradioplayer.html#frequency-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="frequency" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStereo" fullname="QRadioPlayer::isStereo" href="qradioplayer.html#stereo-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="stereo" type="bool" signature="isStereo() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioPlayer::signalStrength" href="qradioplayer.html#signalStrength-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="signalStrength" type="int" signature="signalStrength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QRadioPlayer::duration" href="qradioplayer.html#duration-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioPlayer::volume" href="qradioplayer.html#volume-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="volume" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QRadioPlayer::isMuted" href="qradioplayer.html#muted-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="muted" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSearching" fullname="QRadioPlayer::isSearching" href="qradioplayer.html#searching-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="searching" type="bool" signature="isSearching() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QRadioPlayer::service" href="qradioplayer.html#service" location="qradioplayer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QAbstractMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchForward" fullname="QRadioPlayer::searchForward" href="qradioplayer.html#searchForward" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="searchForward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchBackward" fullname="QRadioPlayer::searchBackward" href="qradioplayer.html#searchBackward" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="searchBackward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelSearch" fullname="QRadioPlayer::cancelSearch" href="qradioplayer.html#cancelSearch" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancelSearch()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBand" fullname="QRadioPlayer::setBand" href="qradioplayer.html#band-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="band" type="void" signature="setBand(Band band)">
                <parameter left="Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QRadioPlayer::setFrequency" href="qradioplayer.html#frequency-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="frequency" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStereo" fullname="QRadioPlayer::setStereo" href="qradioplayer.html#stereo-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="stereo" type="void" signature="setStereo(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QRadioPlayer::setVolume" href="qradioplayer.html#volume-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="volume" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QRadioPlayer::setMuted" href="qradioplayer.html#muted-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="muted" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bandChanged" fullname="QRadioPlayer::bandChanged" href="qradioplayer.html#bandChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bandChanged(QRadioPlayer::Band band)">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyChanged" fullname="QRadioPlayer::frequencyChanged" href="qradioplayer.html#frequencyChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="frequencyChanged(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoStatusChanged" fullname="QRadioPlayer::stereoStatusChanged" href="qradioplayer.html#stereoStatusChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stereoStatusChanged(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchingStatusChanged" fullname="QRadioPlayer::searchingStatusChanged" href="qradioplayer.html#searchingStatusChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchingStatusChanged(bool searching)">
                <parameter left="bool" right="" name="searching" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrengthChanged" fullname="QRadioPlayer::signalStrengthChanged" href="qradioplayer.html#signalStrengthChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="signalStrengthChanged(int signalStrength)">
                <parameter left="int" right="" name="signalStrength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QRadioPlayer::durationChanged" href="qradioplayer.html#durationChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QRadioPlayer::volumeChanged" href="qradioplayer.html#volumeChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QRadioPlayer::mutingChanged" href="qradioplayer.html#mutingChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioRendererEndpoint" href="qaudiorendererendpoint.html" location="qaudiorendererendpoint.h" bases="QMediaEndpointInterface,QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioRendererEndpoint" fullname="QAudioRendererEndpoint::QAudioRendererEndpoint" href="qaudiorendererendpoint.html#QAudioRendererEndpoint" location="qaudiorendererendpoint.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioRendererEndpoint(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioRendererEndpoint" fullname="QAudioRendererEndpoint::~QAudioRendererEndpoint" href="qaudiorendererendpoint.html#dtor.QAudioRendererEndpoint" location="qaudiorendererendpoint.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioRendererEndpoint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QAudioRendererEndpoint::direction" href="qaudiorendererendpoint.html#direction" location="qaudiorendererendpoint.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="Direction" signature="direction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QAudioRendererEndpoint::device" href="qaudiorendererendpoint.html#device" location="qaudiorendererendpoint.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QAudioRendererEndpoint::setDevice" href="qaudiorendererendpoint.html#setDevice" location="qaudiorendererendpoint.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QAudioRendererEndpoint::d_ptr" href="qaudiorendererendpoint.html#d_ptr-var" location="qaudiorendererendpoint.h" type="QAudioRendererEndpointPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCamera" href="qcamera.html" location="qcamera.h" bases="QAbstractMediaObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QCamera::State" href="qcamera.html#State-enum" location="qcamera.h">
                <value name="ActiveState" value="0"/>
                <value name="StoppedState" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FlashMode" fullname="QCamera::FlashMode" href="qcamera.html#FlashMode-enum" location="qcamera.h" typedef="QCamera::FlashModes">
                <value name="FlashOff" value="0x1"/>
                <value name="FlashOn" value="0x2"/>
                <value name="FlashAuto" value="0x4"/>
                <value name="FlashRedEyeReduction" value="0x8"/>
                <value name="FlashFill" value="0x10"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FlashModes" fullname="QCamera::FlashModes" href="qcamera.html#FlashModes-typedef" location="qcamera.h" enum="QCamera::FlashMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FocusMode" fullname="QCamera::FocusMode" href="qcamera.html#FocusMode-enum" location="qcamera.h" typedef="QCamera::FocusModes">
                <value name="ManualFocus" value="0x1"/>
                <value name="AutoFocus" value="0x2"/>
                <value name="ContinuousFocus" value="0x4"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FocusModes" fullname="QCamera::FocusModes" href="qcamera.html#FocusModes-typedef" location="qcamera.h" enum="QCamera::FocusMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FocusStatus" fullname="QCamera::FocusStatus" href="qcamera.html#FocusStatus-enum" location="qcamera.h">
                <value name="FocusDisabled" value="0"/>
                <value name="FocusRequested" value="1"/>
                <value name="FocusReached" value="2"/>
                <value name="FocusLost" value="3"/>
                <value name="FocusUnableToReach" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ExposureMode" fullname="QCamera::ExposureMode" href="qcamera.html#ExposureMode-enum" location="qcamera.h" typedef="QCamera::ExposureModes">
                <value name="ExposureManual" value="0x1"/>
                <value name="ExposureAuto" value="0x2"/>
                <value name="ExposureNight" value="0x4"/>
                <value name="ExposureBacklight" value="0x8"/>
                <value name="ExposureSpotlight" value="0x10"/>
                <value name="ExposureSports" value="0x20"/>
                <value name="ExposureSnow" value="0x40"/>
                <value name="ExposureBeach" value="0x80"/>
                <value name="ExposureLargeAperture" value="0x100"/>
                <value name="ExposureSmallAperture" value="0x200"/>
                <value name="ExposurePortrait" value="0x400"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ExposureModes" fullname="QCamera::ExposureModes" href="qcamera.html#ExposureModes-typedef" location="qcamera.h" enum="QCamera::ExposureMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ExposureStatus" fullname="QCamera::ExposureStatus" href="qcamera.html#ExposureStatus-enum" location="qcamera.h">
                <value name="CorrectExposure" value="0"/>
                <value name="UnderExposure" value="1"/>
                <value name="OverExposure" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MeteringMode" fullname="QCamera::MeteringMode" href="qcamera.html#MeteringMode-enum" location="qcamera.h" typedef="QCamera::MeteringModes">
                <value name="MeteringAverage" value="0x1"/>
                <value name="MeteringSpot" value="0x2"/>
                <value name="MeteringMatrix" value="0x4"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="MeteringModes" fullname="QCamera::MeteringModes" href="qcamera.html#MeteringModes-typedef" location="qcamera.h" enum="QCamera::MeteringMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="WhiteBalanceMode" fullname="QCamera::WhiteBalanceMode" href="qcamera.html#WhiteBalanceMode-enum" location="qcamera.h" typedef="QCamera::WhiteBalanceModes">
                <value name="WhiteBalanceManual" value="0x1"/>
                <value name="WhiteBalanceAuto" value="0x2"/>
                <value name="WhiteBalanceSunlight" value="0x4"/>
                <value name="WhiteBalanceCloudy" value="0x8"/>
                <value name="WhiteBalanceShade" value="0x10"/>
                <value name="WhiteBalanceTungsten" value="0x20"/>
                <value name="WhiteBalanceFluorescent" value="0x40"/>
                <value name="WhiteBalanceIncandescent" value="0x80"/>
                <value name="WhiteBalanceFlash" value="0x100"/>
                <value name="WhiteBalanceSunset" value="0x200"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="WhiteBalanceModes" fullname="QCamera::WhiteBalanceModes" href="qcamera.html#WhiteBalanceModes-typedef" location="qcamera.h" enum="QCamera::WhiteBalanceMode"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCamera::state" href="qcamera.html#state-prop" location="qcamera.h" type="QCamera::State">
                <getter name="state"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCamera" fullname="QCamera::QCamera" href="qcamera.html#QCamera" location="qcamera.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCamera(QAbstractMediaService * service, QObject * parent)">
                <parameter left="QAbstractMediaService *" right="" name="service" default="createCameraService()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCamera" fullname="QCamera::~QCamera" href="qcamera.html#dtor.QCamera" location="qcamera.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCamera()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceList" fullname="QCamera::deviceList" href="qcamera.html#deviceList" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="deviceList()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QCamera::setDevice" href="qcamera.html#setDevice" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(const QByteArray &amp; device)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceDescription" fullname="QCamera::deviceDescription" href="qcamera.html#deviceDescription" location="qcamera.h" virtual="non" meta="plain" const="false" static="true" overload="false" type="QString" signature="deviceDescription(const QByteArray &amp; device)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QCamera::isValid" href="qcamera.html#isValid" location="qcamera.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QCamera::service" href="qcamera.html#service" location="qcamera.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QAbstractMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QCamera::start" href="qcamera.html#start" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QCamera::stop" href="qcamera.html#stop" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCamera::state" href="qcamera.html#state-prop" location="qcamera.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashMode" fullname="QCamera::flashMode" href="qcamera.html#flashMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FlashMode" signature="flashMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlashMode" fullname="QCamera::setFlashMode" href="qcamera.html#setFlashMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFlashMode(FlashMode mode)">
                <parameter left="FlashMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFlashModes" fullname="QCamera::supportedFlashModes" href="qcamera.html#supportedFlashModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FlashModes" signature="supportedFlashModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashReady" fullname="QCamera::isFlashReady" href="qcamera.html#isFlashReady" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashReady() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusMode" fullname="QCamera::focusMode" href="qcamera.html#focusMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FocusMode" signature="focusMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusMode" fullname="QCamera::setFocusMode" href="qcamera.html#setFocusMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusMode(FocusMode mode)">
                <parameter left="FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFocusModes" fullname="QCamera::supportedFocusModes" href="qcamera.html#supportedFocusModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FocusModes" signature="supportedFocusModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatus" fullname="QCamera::focusStatus" href="qcamera.html#focusStatus" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FocusStatus" signature="focusStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="macroFocusingEnabled" fullname="QCamera::macroFocusingEnabled" href="qcamera.html#macroFocusingEnabled" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="macroFocusingEnabled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMacroFocusingSupported" fullname="QCamera::isMacroFocusingSupported" href="qcamera.html#isMacroFocusingSupported" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMacroFocusingSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMacroFocusingEnabled" fullname="QCamera::setMacroFocusingEnabled" href="qcamera.html#setMacroFocusingEnabled" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMacroFocusingEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureMode" fullname="QCamera::exposureMode" href="qcamera.html#exposureMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ExposureMode" signature="exposureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureMode" fullname="QCamera::setExposureMode" href="qcamera.html#setExposureMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureMode(ExposureMode mode)">
                <parameter left="ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedExposureModes" fullname="QCamera::supportedExposureModes" href="qcamera.html#supportedExposureModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ExposureModes" signature="supportedExposureModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureCompensation" fullname="QCamera::exposureCompensation" href="qcamera.html#exposureCompensation" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="exposureCompensation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureCompensation" fullname="QCamera::setExposureCompensation" href="qcamera.html#setExposureCompensation" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureCompensation(double ev)">
                <parameter left="double" right="" name="ev" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="meteringMode" fullname="QCamera::meteringMode" href="qcamera.html#meteringMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MeteringMode" signature="meteringMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMeteringMode" fullname="QCamera::setMeteringMode" href="qcamera.html#setMeteringMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMeteringMode(MeteringMode mode)">
                <parameter left="MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMeteringModes" fullname="QCamera::supportedMeteringModes" href="qcamera.html#supportedMeteringModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MeteringModes" signature="supportedMeteringModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="whiteBalanceMode" fullname="QCamera::whiteBalanceMode" href="qcamera.html#whiteBalanceMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WhiteBalanceMode" signature="whiteBalanceMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWhiteBalanceMode" fullname="QCamera::setWhiteBalanceMode" href="qcamera.html#setWhiteBalanceMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWhiteBalanceMode(WhiteBalanceMode mode)">
                <parameter left="WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedWhiteBalanceModes" fullname="QCamera::supportedWhiteBalanceModes" href="qcamera.html#supportedWhiteBalanceModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WhiteBalanceModes" signature="supportedWhiteBalanceModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manualWhiteBalance" fullname="QCamera::manualWhiteBalance" href="qcamera.html#manualWhiteBalance" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="manualWhiteBalance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualWhiteBalance" fullname="QCamera::setManualWhiteBalance" href="qcamera.html#setManualWhiteBalance" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualWhiteBalance(int colorTemperature)">
                <parameter left="int" right="" name="colorTemperature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isoSensitivity" fullname="QCamera::isoSensitivity" href="qcamera.html#isoSensitivity" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="isoSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedIsoSensitivityRange" fullname="QCamera::supportedIsoSensitivityRange" href="qcamera.html#supportedIsoSensitivityRange" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;int, int&gt;" signature="supportedIsoSensitivityRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualIsoSensitivity" fullname="QCamera::setManualIsoSensitivity" href="qcamera.html#setManualIsoSensitivity" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualIsoSensitivity(int iso)">
                <parameter left="int" right="" name="iso" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoIsoSensitivity" fullname="QCamera::setAutoIsoSensitivity" href="qcamera.html#setAutoIsoSensitivity" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoIsoSensitivity()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aperture" fullname="QCamera::aperture" href="qcamera.html#aperture" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="aperture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedApertureRange" fullname="QCamera::supportedApertureRange" href="qcamera.html#supportedApertureRange" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;double, double&gt;" signature="supportedApertureRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualAperture" fullname="QCamera::setManualAperture" href="qcamera.html#setManualAperture" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualAperture(double aperture)">
                <parameter left="double" right="" name="aperture" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoAperture" fullname="QCamera::setAutoAperture" href="qcamera.html#setAutoAperture" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoAperture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutterSpeed" fullname="QCamera::shutterSpeed" href="qcamera.html#shutterSpeed" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="shutterSpeed() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedShutterSpeedRange" fullname="QCamera::supportedShutterSpeedRange" href="qcamera.html#supportedShutterSpeedRange" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;double, double&gt;" signature="supportedShutterSpeedRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualShutterSpeed" fullname="QCamera::setManualShutterSpeed" href="qcamera.html#setManualShutterSpeed" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualShutterSpeed(double seconds)">
                <parameter left="double" right="" name="seconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoShutterSpeed" fullname="QCamera::setAutoShutterSpeed" href="qcamera.html#setAutoShutterSpeed" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoShutterSpeed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumOpticalZoom" fullname="QCamera::maximumOpticalZoom" href="qcamera.html#maximumOpticalZoom" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="maximumOpticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumDigitalZoom" fullname="QCamera::maximumDigitalZoom" href="qcamera.html#maximumDigitalZoom" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="maximumDigitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValue" fullname="QCamera::zoomValue" href="qcamera.html#zoomValue" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="double" signature="zoomValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomTo" fullname="QCamera::zoomTo" href="qcamera.html#zoomTo" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="zoomTo(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isExposureLocked" fullname="QCamera::isExposureLocked" href="qcamera.html#isExposureLocked" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isExposureLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusLocked" fullname="QCamera::isFocusLocked" href="qcamera.html#isFocusLocked" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockExposure" fullname="QCamera::lockExposure" href="qcamera.html#lockExposure" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="lockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockExposure" fullname="QCamera::unlockExposure" href="qcamera.html#unlockExposure" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockFocus" fullname="QCamera::lockFocus" href="qcamera.html#lockFocus" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="lockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockFocus" fullname="QCamera::unlockFocus" href="qcamera.html#unlockFocus" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashReady" fullname="QCamera::flashReady" href="qcamera.html#flashReady" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="flashReady(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatusChanged" fullname="QCamera::focusStatusChanged" href="qcamera.html#focusStatusChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusStatusChanged(FocusStatus status)">
                <parameter left="FocusStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValueChanged" fullname="QCamera::zoomValueChanged" href="qcamera.html#zoomValueChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="zoomValueChanged(double value)">
                <parameter left="double" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureLocked" fullname="QCamera::exposureLocked" href="qcamera.html#exposureLocked" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="exposureLocked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusLocked" fullname="QCamera::focusLocked" href="qcamera.html#focusLocked" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusLocked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QCamera::stateChanged" href="qcamera.html#stateChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QCamera::State state)">
                <parameter left="QCamera::State" right="" name="state" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistControl" href="qmediaplaylistcontrol.html" location="qmediaplaylistcontrol.h" bases="QAbstractMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistControl" fullname="QMediaPlaylistControl::~QMediaPlaylistControl" href="qmediaplaylistcontrol.html#dtor.QMediaPlaylistControl" location="qmediaplaylistcontrol.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProvider" fullname="QMediaPlaylistControl::playlistProvider" href="qmediaplaylistcontrol.html#playlistProvider" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylistProvider *" signature="playlistProvider() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylistProvider" fullname="QMediaPlaylistControl::setPlaylistProvider" href="qmediaplaylistcontrol.html#setPlaylistProvider" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setPlaylistProvider(QMediaPlaylistProvider * playlist)">
                <parameter left="QMediaPlaylistProvider *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentPosition" fullname="QMediaPlaylistControl::currentPosition" href="qmediaplaylistcontrol.html#currentPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="currentPosition() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentPosition" fullname="QMediaPlaylistControl::setCurrentPosition" href="qmediaplaylistcontrol.html#setCurrentPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCurrentPosition(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPosition" fullname="QMediaPlaylistControl::nextPosition" href="qmediaplaylistcontrol.html#nextPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="nextPosition(int steps) const">
                <parameter left="int" right="" name="steps" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousPosition" fullname="QMediaPlaylistControl::previousPosition" href="qmediaplaylistcontrol.html#previousPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="previousPosition(int steps) const">
                <parameter left="int" right="" name="steps" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="advance" fullname="QMediaPlaylistControl::advance" href="qmediaplaylistcontrol.html#advance" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="advance()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="back" fullname="QMediaPlaylistControl::back" href="qmediaplaylistcontrol.html#back" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="back()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylistControl::playbackMode" href="qmediaplaylistcontrol.html#playbackMode" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylistNavigator::PlaybackMode" signature="playbackMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackMode" fullname="QMediaPlaylistControl::setPlaybackMode" href="qmediaplaylistcontrol.html#setPlaybackMode" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaybackMode(QMediaPlaylistNavigator::PlaybackMode mode)">
                <parameter left="QMediaPlaylistNavigator::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProviderChanged" fullname="QMediaPlaylistControl::playlistProviderChanged" href="qmediaplaylistcontrol.html#playlistProviderChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistProviderChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistPositionChanged" fullname="QMediaPlaylistControl::playlistPositionChanged" href="qmediaplaylistcontrol.html#playlistPositionChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistPositionChanged(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackModeChanged" fullname="QMediaPlaylistControl::playbackModeChanged" href="qmediaplaylistcontrol.html#playbackModeChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackModeChanged(QMediaPlaylistNavigator::PlaybackMode mode)">
                <parameter left="QMediaPlaylistNavigator::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlaylistControl" fullname="QMediaPlaylistControl::QMediaPlaylistControl" href="qmediaplaylistcontrol.html#QMediaPlaylistControl" location="qmediaplaylistcontrol.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWindowControl" href="qvideowindowcontrol.html" location="qvideowindowcontrol.h" bases="QAbstractMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWindowControl" fullname="QVideoWindowControl::QVideoWindowControl" href="qvideowindowcontrol.html#QVideoWindowControl" location="qvideowindowcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWindowControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWindowControl" fullname="QVideoWindowControl::~QVideoWindowControl" href="qvideowindowcontrol.html#dtor.QVideoWindowControl" location="qvideowindowcontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWindowControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="winId" fullname="QVideoWindowControl::winId" href="qvideowindowcontrol.html#winId" location="qvideowindowcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WId" signature="winId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWinId" fullname="QVideoWindowControl::setWinId" href="qvideowindowcontrol.html#setWinId" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setWinId(WId id)">
                <parameter left="WId" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayRect" fullname="QVideoWindowControl::displayRect" href="qvideowindowcontrol.html#displayRect" location="qvideowindowcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QRect" signature="displayRect() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayRect" fullname="QVideoWindowControl::setDisplayRect" href="qvideowindowcontrol.html#setDisplayRect" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDisplayRect(const QRect &amp; rect)">
                <parameter left="const QRect &amp;" right="" name="rect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFullscreen" fullname="QVideoWindowControl::isFullscreen" href="qvideowindowcontrol.html#isFullscreen" location="qvideowindowcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFullscreen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFullscreen" fullname="QVideoWindowControl::setFullscreen" href="qvideowindowcontrol.html#setFullscreen" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFullscreen(bool fullscreen)">
                <parameter left="bool" right="" name="fullscreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repaint" fullname="QVideoWindowControl::repaint" href="qvideowindowcontrol.html#repaint" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="repaint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSize" fullname="QVideoWindowControl::nativeSize" href="qvideowindowcontrol.html#nativeSize" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="nativeSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWindowControl::brightness" href="qvideowindowcontrol.html#brightness" location="qvideowindowcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWindowControl::setBrightness" href="qvideowindowcontrol.html#setBrightness" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWindowControl::contrast" href="qvideowindowcontrol.html#contrast" location="qvideowindowcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWindowControl::setContrast" href="qvideowindowcontrol.html#setContrast" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWindowControl::hue" href="qvideowindowcontrol.html#hue" location="qvideowindowcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWindowControl::setHue" href="qvideowindowcontrol.html#setHue" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWindowControl::saturation" href="qvideowindowcontrol.html#saturation" location="qvideowindowcontrol.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWindowControl::setSaturation" href="qvideowindowcontrol.html#setSaturation" location="qvideowindowcontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullscreenChanged" fullname="QVideoWindowControl::fullscreenChanged" href="qvideowindowcontrol.html#fullscreenChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fullscreenChanged(bool fullscreen)">
                <parameter left="bool" right="" name="fullscreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWindowControl::brightnessChanged" href="qvideowindowcontrol.html#brightnessChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWindowControl::contrastChanged" href="qvideowindowcontrol.html#contrastChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWindowControl::hueChanged" href="qvideowindowcontrol.html#hueChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWindowControl::saturationChanged" href="qvideowindowcontrol.html#saturationChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSizeChanged" fullname="QVideoWindowControl::nativeSizeChanged" href="qvideowindowcontrol.html#nativeSizeChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="nativeSizeChanged()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlayerControl" href="qmediaplayercontrol.html" location="qmediaplayercontrol.h" bases="QAbstractMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlayerControl" fullname="QMediaPlayerControl::~QMediaPlayerControl" href="qmediaplayercontrol.html#dtor.QMediaPlayerControl" location="qmediaplayercontrol.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlayerControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayerControl::state" href="qmediaplayercontrol.html#state" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlayer::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayerControl::mediaStatus" href="qmediaplayercontrol.html#mediaStatus" location="qmediaplayercontrol.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaPlayer::MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayerControl::duration" href="qmediaplayercontrol.html#duration" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayerControl::position" href="qmediaplayercontrol.html#position" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="position() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPosition" fullname="QMediaPlayerControl::setPosition" href="qmediaplayercontrol.html#setPosition" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPosition(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayerControl::volume" href="qmediaplayercontrol.html#volume" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaPlayerControl::setVolume" href="qmediaplayercontrol.html#setVolume" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaPlayerControl::isMuted" href="qmediaplayercontrol.html#isMuted" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaPlayerControl::setMuted" href="qmediaplayercontrol.html#setMuted" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayerControl::bufferStatus" href="qmediaplayercontrol.html#bufferStatus" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="bufferStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVideoAvailable" fullname="QMediaPlayerControl::isVideoAvailable" href="qmediaplayercontrol.html#isVideoAvailable" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isVideoAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSeekable" fullname="QMediaPlayerControl::isSeekable" href="qmediaplayercontrol.html#isSeekable" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSeekable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayerControl::playbackRate" href="qmediaplayercontrol.html#playbackRate" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="float" signature="playbackRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackRate" fullname="QMediaPlayerControl::setPlaybackRate" href="qmediaplayercontrol.html#setPlaybackRate" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaybackRate(float rate)">
                <parameter left="float" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentResources" fullname="QMediaPlayerControl::currentResources" href="qmediaplayercontrol.html#currentResources" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaResourceList" signature="currentResources() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentResources" fullname="QMediaPlayerControl::setCurrentResources" href="qmediaplayercontrol.html#setCurrentResources" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCurrentResources(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaPlayerControl::play" href="qmediaplayercontrol.html#play" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaPlayerControl::pause" href="qmediaplayercontrol.html#pause" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaPlayerControl::stop" href="qmediaplayercontrol.html#stop" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentResourcesChanged" fullname="QMediaPlayerControl::currentResourcesChanged" href="qmediaplayercontrol.html#currentResourcesChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentResourcesChanged(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaPlayerControl::durationChanged" href="qmediaplayercontrol.html#durationChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaPlayerControl::positionChanged" href="qmediaplayercontrol.html#positionChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaPlayerControl::stateChanged" href="qmediaplayercontrol.html#stateChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaPlayer::State newState)">
                <parameter left="QMediaPlayer::State" right="" name="newState" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaPlayerControl::mediaStatusChanged" href="qmediaplayercontrol.html#mediaStatusChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaPlayer::MediaStatus status)">
                <parameter left="QMediaPlayer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaPlayerControl::volumeChanged" href="qmediaplayercontrol.html#volumeChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QMediaPlayerControl::mutingChanged" href="qmediaplayercontrol.html#mutingChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoAvailabilityChanged" fullname="QMediaPlayerControl::videoAvailabilityChanged" href="qmediaplayercontrol.html#videoAvailabilityChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoAvailabilityChanged(bool videoAvailable)">
                <parameter left="bool" right="" name="videoAvailable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatusChanged" fullname="QMediaPlayerControl::bufferStatusChanged" href="qmediaplayercontrol.html#bufferStatusChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bufferStatusChanged(int percentFilled)">
                <parameter left="int" right="" name="percentFilled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seekableChanged" fullname="QMediaPlayerControl::seekableChanged" href="qmediaplayercontrol.html#seekableChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="seekableChanged(bool )">
                <parameter left="bool" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayerControl::error" href="qmediaplayercontrol.html#error" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlayerControl" fullname="QMediaPlayerControl::QMediaPlayerControl" href="qmediaplayercontrol.html#QMediaPlayerControl" location="qmediaplayercontrol.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlayerControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioDeviceEndpoint" href="qaudiodeviceendpoint.html" location="qaudiodeviceendpoint.h" bases="QMediaEndpointInterface,QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="directionFilter" fullname="QAudioDeviceEndpoint::directionFilter" href="qaudiodeviceendpoint.html#directionFilter-prop" location="qaudiodeviceendpoint.h" type="DeviceDirection">
                <getter name="directionFilter"/>
                <setter name="setDirectionFilter"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="roleFilter" fullname="QAudioDeviceEndpoint::roleFilter" href="qaudiodeviceendpoint.html#roleFilter-prop" location="qaudiodeviceendpoint.h" type="Roles">
                <getter name="roleFilter"/>
                <setter name="setRoleFilter"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="formFactorFilter" fullname="QAudioDeviceEndpoint::formFactorFilter" href="qaudiodeviceendpoint.html#formFactorFilter-prop" location="qaudiodeviceendpoint.h" type="FormFactors">
                <getter name="formFactorFilter"/>
                <setter name="setFormFactorFilter"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QAudioDeviceEndpoint::selectedDevice" href="qaudiodeviceendpoint.html#selectedDevice-prop" location="qaudiodeviceendpoint.h" type="int">
                <getter name="selectedDevice"/>
                <setter name="setSelectedDevice"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DeviceDirection" fullname="QAudioDeviceEndpoint::DeviceDirection" href="qaudiodeviceendpoint.html#DeviceDirection-enum" location="qaudiodeviceendpoint.h">
                <value name="InputDevice" value="0x01"/>
                <value name="OutputDevice" value="0x02"/>
                <value name="InputOutputDevice" value="InputDevice | OutputDevice"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Role" fullname="QAudioDeviceEndpoint::Role" href="qaudiodeviceendpoint.html#Role-enum" location="qaudiodeviceendpoint.h" typedef="QAudioDeviceEndpoint::Roles">
                <value name="ConsoleRole" value="0x01"/>
                <value name="MultimediaRole" value="0x02"/>
                <value name="CommunicationsRole" value="0x04"/>
                <value name="AllRoles" value="~0"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="Roles" fullname="QAudioDeviceEndpoint::Roles" href="qaudiodeviceendpoint.html#Roles-typedef" location="qaudiodeviceendpoint.h" enum="QAudioDeviceEndpoint::Role"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FormFactor" fullname="QAudioDeviceEndpoint::FormFactor" href="qaudiodeviceendpoint.html#FormFactor-enum" location="qaudiodeviceendpoint.h" typedef="QAudioDeviceEndpoint::FormFactors">
                <value name="UnknownFormFactor" value="0x0000"/>
                <value name="RemoteNetworkDevice" value="0x0001"/>
                <value name="Speakers" value="0x0002"/>
                <value name="LineLevel" value="0x0004"/>
                <value name="Headphones" value="0x0008"/>
                <value name="Microphone" value="0x0010"/>
                <value name="Headset" value="0x0020"/>
                <value name="Handset" value="0x0040"/>
                <value name="UnknownDigitalPassthrough" value="0x0080"/>
                <value name="SPDIF" value="0x0100"/>
                <value name="HDMI" value="0x0200"/>
                <value name="AllFormFactors" value="~0"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FormFactors" fullname="QAudioDeviceEndpoint::FormFactors" href="qaudiodeviceendpoint.html#FormFactors-typedef" location="qaudiodeviceendpoint.h" enum="QAudioDeviceEndpoint::FormFactor"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioDeviceEndpoint" fullname="QAudioDeviceEndpoint::QAudioDeviceEndpoint" href="qaudiodeviceendpoint.html#QAudioDeviceEndpoint" location="qaudiodeviceendpoint.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioDeviceEndpoint(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioDeviceEndpoint" fullname="QAudioDeviceEndpoint::~QAudioDeviceEndpoint" href="qaudiodeviceendpoint.html#dtor.QAudioDeviceEndpoint" location="qaudiodeviceendpoint.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioDeviceEndpoint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QAudioDeviceEndpoint::direction" href="qaudiodeviceendpoint.html#direction" location="qaudiodeviceendpoint.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="Direction" signature="direction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="directionFilter" fullname="QAudioDeviceEndpoint::directionFilter" href="qaudiodeviceendpoint.html#directionFilter-prop" location="qaudiodeviceendpoint.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="directionFilter" type="DeviceDirection" signature="directionFilter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDirectionFilter" fullname="QAudioDeviceEndpoint::setDirectionFilter" href="qaudiodeviceendpoint.html#directionFilter-prop" location="qaudiodeviceendpoint.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="directionFilter" type="void" signature="setDirectionFilter(DeviceDirection direction)">
                <parameter left="DeviceDirection" right="" name="direction" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="roleFilter" fullname="QAudioDeviceEndpoint::roleFilter" href="qaudiodeviceendpoint.html#roleFilter-prop" location="qaudiodeviceendpoint.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="roleFilter" type="Roles" signature="roleFilter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRoleFilter" fullname="QAudioDeviceEndpoint::setRoleFilter" href="qaudiodeviceendpoint.html#roleFilter-prop" location="qaudiodeviceendpoint.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="roleFilter" type="void" signature="setRoleFilter(QFlags&lt;QAudioDeviceEndpoint::Role&gt; roles)">
                <parameter left="QFlags&lt;QAudioDeviceEndpoint::Role&gt;" right="" name="roles" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="formFactorFilter" fullname="QAudioDeviceEndpoint::formFactorFilter" href="qaudiodeviceendpoint.html#formFactorFilter-prop" location="qaudiodeviceendpoint.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="formFactorFilter" type="FormFactors" signature="formFactorFilter() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormFactorFilter" fullname="QAudioDeviceEndpoint::setFormFactorFilter" href="qaudiodeviceendpoint.html#formFactorFilter-prop" location="qaudiodeviceendpoint.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="formFactorFilter" type="void" signature="setFormFactorFilter(QFlags&lt;QAudioDeviceEndpoint::FormFactor&gt; form)">
                <parameter left="QFlags&lt;QAudioDeviceEndpoint::FormFactor&gt;" right="" name="form" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceCount" fullname="QAudioDeviceEndpoint::deviceCount" href="qaudiodeviceendpoint.html#deviceCount" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="deviceCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QAudioDeviceEndpoint::direction" href="qaudiodeviceendpoint.html#direction-2" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="true" overload-number="2" type="int" signature="direction(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="roles" fullname="QAudioDeviceEndpoint::roles" href="qaudiodeviceendpoint.html#roles" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="Roles" signature="roles(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="formFactor" fullname="QAudioDeviceEndpoint::formFactor" href="qaudiodeviceendpoint.html#formFactor" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="FormFactor" signature="formFactor(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QAudioDeviceEndpoint::name" href="qaudiodeviceendpoint.html#name" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QAudioDeviceEndpoint::description" href="qaudiodeviceendpoint.html#description" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="description(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QAudioDeviceEndpoint::icon" href="qaudiodeviceendpoint.html#icon" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultInputDevice" fullname="QAudioDeviceEndpoint::defaultInputDevice" href="qaudiodeviceendpoint.html#defaultInputDevice" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="defaultInputDevice(Role role) const">
                <parameter left="Role" right="" name="role" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultOutputDevice" fullname="QAudioDeviceEndpoint::defaultOutputDevice" href="qaudiodeviceendpoint.html#defaultOutputDevice" location="qaudiodeviceendpoint.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="defaultOutputDevice(Role role) const">
                <parameter left="Role" right="" name="role" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QAudioDeviceEndpoint::selectedDevice" href="qaudiodeviceendpoint.html#selectedDevice-prop" location="qaudiodeviceendpoint.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="selectedDevice" type="int" signature="selectedDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectedDevice" fullname="QAudioDeviceEndpoint::setSelectedDevice" href="qaudiodeviceendpoint.html#selectedDevice-prop" location="qaudiodeviceendpoint.h" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="selectedDevice" type="void" signature="setSelectedDevice(int device)">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QAudioDeviceEndpoint::selectedDeviceChanged" href="qaudiodeviceendpoint.html#selectedDeviceChanged" location="qaudiodeviceendpoint.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selectedDeviceChanged(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QAudioDeviceEndpoint::selectedDeviceChanged" href="qaudiodeviceendpoint.html#selectedDeviceChanged-2" location="qaudiodeviceendpoint.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="selectedDeviceChanged(const QString &amp; deviceName)">
                <parameter left="const QString &amp;" right="" name="deviceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devicesInserted" fullname="QAudioDeviceEndpoint::devicesInserted" href="qaudiodeviceendpoint.html#devicesInserted" location="qaudiodeviceendpoint.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="devicesInserted(int index, int count)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devicesRemoved" fullname="QAudioDeviceEndpoint::devicesRemoved" href="qaudiodeviceendpoint.html#devicesRemoved" location="qaudiodeviceendpoint.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="devicesRemoved(int index, int count)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devicesChanged" fullname="QAudioDeviceEndpoint::devicesChanged" href="qaudiodeviceendpoint.html#devicesChanged" location="qaudiodeviceendpoint.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="devicesChanged(int index, int count)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="int" right="" name="count" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QAudioDeviceEndpoint::d_ptr" href="qaudiodeviceendpoint.html#d_ptr-var" location="qaudiodeviceendpoint.h" type="QAudioDeviceEndpointPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QMediaRecorderControl" href="qmediarecordercontrol.html" location="qmediarecordercontrol.h" bases="QAbstractMediaControl" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorderControl::duration" href="qmediarecordercontrol.html#duration-prop" location="qmediarecordercontrol.h" type="qint64">
                <getter name="duration"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaRecorderControl" fullname="QMediaRecorderControl::~QMediaRecorderControl" href="qmediarecordercontrol.html#dtor.QMediaRecorderControl" location="qmediarecordercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaRecorderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sink" fullname="QMediaRecorderControl::sink" href="qmediarecordercontrol.html#sink" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="sink() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSink" fullname="QMediaRecorderControl::setSink" href="qmediarecordercontrol.html#setSink" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSink(const QUrl &amp; sink)">
                <parameter left="const QUrl &amp;" right="" name="sink" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaRecorderControl::state" href="qmediarecordercontrol.html#state" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaRecorder::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorderControl::duration" href="qmediarecordercontrol.html#duration-prop" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaRecorderControl::stateChanged" href="qmediarecordercontrol.html#stateChanged" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaRecorder::State state)">
                <parameter left="QMediaRecorder::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaRecorderControl::durationChanged" href="qmediarecordercontrol.html#durationChanged" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorderControl::error" href="qmediarecordercontrol.html#error" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QMediaRecorderControl::record" href="qmediarecordercontrol.html#record" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="record()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaRecorderControl::pause" href="qmediarecordercontrol.html#pause" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaRecorderControl::stop" href="qmediarecordercontrol.html#stop" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaRecorderControl" fullname="QMediaRecorderControl::QMediaRecorderControl" href="qmediarecordercontrol.html#QMediaRecorderControl" location="qmediarecordercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaRecorderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaStreamInfo" href="qmediastreaminfo.html" location="qmediastreams.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="StreamType" fullname="QMediaStreamInfo::StreamType" href="qmediastreaminfo.html#StreamType-enum" location="qmediastreams.h">
                <value name="UnknownStream" value="0"/>
                <value name="VideoStream" value="1"/>
                <value name="AudioStream" value="2"/>
                <value name="SubPictureStream" value="3"/>
                <value name="DataStream" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaStreamInfo" fullname="QMediaStreamInfo::QMediaStreamInfo" href="qmediastreaminfo.html#QMediaStreamInfo" location="qmediastreams.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaStreamInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaStreamInfo" fullname="QMediaStreamInfo::QMediaStreamInfo" href="qmediastreaminfo.html#QMediaStreamInfo-2" location="qmediastreams.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaStreamInfo(StreamType streamType, int streamId)">
                <parameter left="StreamType" right="" name="streamType" default=""/>
                <parameter left="int" right="" name="streamId" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaStreamInfo" fullname="QMediaStreamInfo::QMediaStreamInfo" href="qmediastreaminfo.html#QMediaStreamInfo-3" location="qmediastreams.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaStreamInfo(const QMediaStreamInfo &amp; other)">
                <parameter left="const QMediaStreamInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaStreamInfo::operator=" href="qmediastreaminfo.html#operator=" location="qmediastreams.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaStreamInfo &amp;" signature="operator=(const QMediaStreamInfo &amp; other)">
                <parameter left="const QMediaStreamInfo &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaStreamInfo" fullname="QMediaStreamInfo::~QMediaStreamInfo" href="qmediastreaminfo.html#dtor.QMediaStreamInfo" location="qmediastreams.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaStreamInfo()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaStreamInfo::isNull" href="qmediastreaminfo.html#isNull" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QMediaStreamInfo::type" href="qmediastreaminfo.html#type" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="StreamType" signature="type() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="streamId" fullname="QMediaStreamInfo::streamId" href="qmediastreaminfo.html#streamId" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="streamId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="streamName" fullname="QMediaStreamInfo::streamName" href="qmediastreaminfo.html#streamName" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="streamName() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStreamName" fullname="QMediaStreamInfo::setStreamName" href="qmediastreaminfo.html#setStreamName" location="qmediastreams.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStreamName(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="streamLanguage" fullname="QMediaStreamInfo::streamLanguage" href="qmediastreaminfo.html#streamLanguage" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="streamLanguage() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStreamLanguage" fullname="QMediaStreamInfo::setStreamLanguage" href="qmediastreaminfo.html#setStreamLanguage" location="qmediastreams.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setStreamLanguage(const QString &amp; language)">
                <parameter left="const QString &amp;" right="" name="language" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="property" fullname="QMediaStreamInfo::property" href="qmediastreaminfo.html#property" location="qmediastreams.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="property(const QString &amp; name) const">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyNames" fullname="QMediaStreamInfo::propertyNames" href="qmediastreaminfo.html#propertyNames" location="qmediastreams.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="propertyNames() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperty" fullname="QMediaStreamInfo::setProperty" href="qmediastreaminfo.html#setProperty" location="qmediastreams.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProperty(const QString &amp; name, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearProperty" fullname="QMediaStreamInfo::clearProperty" href="qmediastreaminfo.html#clearProperty" location="qmediastreams.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearProperty(const QString &amp; name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="properties" fullname="QMediaStreamInfo::properties" href="qmediastreaminfo.html#properties" location="qmediastreams.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMap&lt;QString, QVariant&gt;" signature="properties() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setProperties" fullname="QMediaStreamInfo::setProperties" href="qmediastreaminfo.html#setProperties" location="qmediastreams.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setProperties(const QMap&lt;QString, QVariant&gt; &amp; properties)">
                <parameter left="const QMap&lt;QString, QVariant&gt; &amp;" right="" name="properties" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaStreams" href="qmediastreams.html" location="qmediastreams.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaStreams" fullname="QMediaStreams::QMediaStreams" href="qmediastreams.html#QMediaStreams" location="qmediastreams.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaStreams(QAbstractMediaObject * mediaObject, QObject * parent)">
                <parameter left="QAbstractMediaObject *" right="" name="mediaObject" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaStreams" fullname="QMediaStreams::~QMediaStreams" href="qmediastreams.html#dtor.QMediaStreams" location="qmediastreams.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaStreams()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStreamsInformationAvailable" fullname="QMediaStreams::isStreamsInformationAvailable" href="qmediastreams.html#isStreamsInformationAvailable" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isStreamsInformationAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultLanguage" fullname="QMediaStreams::defaultLanguage" href="qmediastreams.html#defaultLanguage" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="defaultLanguage(QMediaStreamInfo::StreamType streamType) const">
                <parameter left="QMediaStreamInfo::StreamType" right="" name="streamType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultLanguage" fullname="QMediaStreams::setDefaultLanguage" href="qmediastreams.html#setDefaultLanguage" location="qmediastreams.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultLanguage(QMediaStreamInfo::StreamType streamType, const QString &amp; language)">
                <parameter left="QMediaStreamInfo::StreamType" right="" name="streamType" default=""/>
                <parameter left="const QString &amp;" right="" name="language" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="streams" fullname="QMediaStreams::streams" href="qmediastreams.html#streams" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QMediaStreamInfo&gt;" signature="streams(QMediaStreamInfo::StreamType streamType) const">
                <parameter left="QMediaStreamInfo::StreamType" right="" name="streamType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeStream" fullname="QMediaStreams::activeStream" href="qmediastreams.html#activeStream" location="qmediastreams.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaStreamInfo" signature="activeStream(QMediaStreamInfo::StreamType streamType) const">
                <parameter left="QMediaStreamInfo::StreamType" right="" name="streamType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActiveStream" fullname="QMediaStreams::setActiveStream" href="qmediastreams.html#setActiveStream" location="qmediastreams.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setActiveStream(const QMediaStreamInfo &amp; stream)">
                <parameter left="const QMediaStreamInfo &amp;" right="" name="stream" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="streamsChanged" fullname="QMediaStreams::streamsChanged" href="qmediastreams.html#streamsChanged" location="qmediastreams.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="streamsChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeStreamsChanged" fullname="QMediaStreams::activeStreamsChanged" href="qmediastreams.html#activeStreamsChanged" location="qmediastreams.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="activeStreamsChanged()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaStreams::d_ptr" href="qmediastreams.html#d_ptr-var" location="qmediastreams.h" type="QMediaStreamsPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaRecorder" href="qmediarecorder.html" location="qmediarecorder.h" bases="QAbstractMediaObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" location="qmediarecorder.h" type="qint64">
                <getter name="duration"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaRecorder::State" href="qmediarecorder.html#State-enum" location="qmediarecorder.h">
                <value name="StoppedState" value="0"/>
                <value name="RecordingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMediaRecorder::Error" href="qmediarecorder.html#Error-enum" location="qmediarecorder.h">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaRecorder" fullname="QMediaRecorder::QMediaRecorder" href="qmediarecorder.html#QMediaRecorder" location="qmediarecorder.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaRecorder(QAbstractMediaService * service, QObject * parent)">
                <parameter left="QAbstractMediaService *" right="" name="service" default="createMediaCaptureService()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaRecorder" fullname="QMediaRecorder::QMediaRecorder" href="qmediarecorder.html#QMediaRecorder-2" location="qmediarecorder.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaRecorder(QAbstractMediaObject * mediaObject, QObject * parent)">
                <parameter left="QAbstractMediaObject *" right="" name="mediaObject" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaRecorder" fullname="QMediaRecorder::~QMediaRecorder" href="qmediarecorder.html#dtor.QMediaRecorder" location="qmediarecorder.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaRecorder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMediaRecorder::isValid" href="qmediarecorder.html#isValid" location="qmediarecorder.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QMediaRecorder::service" href="qmediarecorder.html#service" location="qmediarecorder.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QAbstractMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sink" fullname="QMediaRecorder::sink" href="qmediarecorder.html#sink" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="sink() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSink" fullname="QMediaRecorder::setSink" href="qmediarecorder.html#setSink" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSink(const QUrl &amp; sink)">
                <parameter left="const QUrl &amp;" right="" name="sink" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaRecorder::state" href="qmediarecorder.html#state" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaRecorder::errorString" href="qmediarecorder.html#errorString" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unsetError" fullname="QMediaRecorder::unsetError" href="qmediarecorder.html#unsetError" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unsetError()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPositionUpdatePeriod" fullname="QMediaRecorder::setPositionUpdatePeriod" href="qmediarecorder.html#setPositionUpdatePeriod" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPositionUpdatePeriod(int ms)">
                <parameter left="int" right="" name="ms" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QMediaRecorder::record" href="qmediarecorder.html#record" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="record()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaRecorder::pause" href="qmediarecorder.html#pause" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaRecorder::stop" href="qmediarecorder.html#stop" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaRecorder::stateChanged" href="qmediarecorder.html#stateChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaRecorder::State state)">
                <parameter left="QMediaRecorder::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaRecorder::durationChanged" href="qmediarecorder.html#durationChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error-2" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QMediaRecorder::Error error)">
                <parameter left="QMediaRecorder::Error" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorStringChanged" fullname="QMediaRecorder::errorStringChanged" href="qmediarecorder.html#errorStringChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="errorStringChanged(const QString &amp; error)">
                <parameter left="const QString &amp;" right="" name="error" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaResource" href="qmediaresource.html" location="qmediaresource.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ResourceRole" fullname="QMediaResource::ResourceRole" href="qmediaresource.html#ResourceRole-enum" location="qmediaresource.h">
                <value name="ContentRole" value="0"/>
                <value name="PreviewRole" value="1"/>
                <value name="PosterRole" value="2"/>
                <value name="CoverArtRole" value="3"/>
                <value name="ThumbnailRole" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaResource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-2" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaResource(const QUrl &amp; uri, ResourceRole role)">
                <parameter left="const QUrl &amp;" right="" name="uri" default=""/>
                <parameter left="ResourceRole" right="" name="role" default="ContentRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-3" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaResource(const QUrl &amp; uri, const QString &amp; type, ResourceRole role)">
                <parameter left="const QUrl &amp;" right="" name="uri" default=""/>
                <parameter left="const QString &amp;" right="" name="type" default=""/>
                <parameter left="ResourceRole" right="" name="role" default="ContentRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-4" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMediaResource(const QMediaResource &amp; other)">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaResource::operator=" href="qmediaresource.html#operator=" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaResource &amp;" signature="operator=(const QMediaResource &amp; other)">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaResource" fullname="QMediaResource::~QMediaResource" href="qmediaresource.html#dtor.QMediaResource" location="qmediaresource.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaResource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaResource::isNull" href="qmediaresource.html#isNull" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMediaResource::operator==" href="qmediaresource.html#operator==" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMediaResource &amp; other) const">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMediaResource::operator!=" href="qmediaresource.html#operator!=" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMediaResource &amp; other) const">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uri" fullname="QMediaResource::uri" href="qmediaresource.html#uri" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="uri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="role" fullname="QMediaResource::role" href="qmediaresource.html#role" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ResourceRole" signature="role() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QMediaResource::mimeType" href="qmediaresource.html#mimeType" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="mimeType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="QMediaResource::audioCodec" href="qmediaresource.html#audioCodec" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioCodec" fullname="QMediaResource::setAudioCodec" href="qmediaresource.html#setAudioCodec" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoCodec" fullname="QMediaResource::videoCodec" href="qmediaresource.html#videoCodec" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="videoCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoCodec" fullname="QMediaResource::setVideoCodec" href="qmediaresource.html#setVideoCodec" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMediaResource::size" href="qmediaresource.html#size" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSize" fullname="QMediaResource::setSize" href="qmediaresource.html#setSize" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSize(const qint64 size)">
                <parameter left="const qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaResource::duration" href="qmediaresource.html#duration" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDuration" fullname="QMediaResource::setDuration" href="qmediaresource.html#setDuration" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDuration(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioBitRate" fullname="QMediaResource::audioBitRate" href="qmediaresource.html#audioBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="audioBitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioBitRate" fullname="QMediaResource::setAudioBitRate" href="qmediaresource.html#setAudioBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioBitRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleSize" fullname="QMediaResource::sampleSize" href="qmediaresource.html#sampleSize" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleSize" fullname="QMediaResource::setSampleSize" href="qmediaresource.html#setSampleSize" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QMediaResource::frequency" href="qmediaresource.html#frequency" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QMediaResource::setFrequency" href="qmediaresource.html#setFrequency" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QMediaResource::channels" href="qmediaresource.html#channels" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channels() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannels" fullname="QMediaResource::setChannels" href="qmediaresource.html#setChannels" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannels(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoBitRate" fullname="QMediaResource::videoBitRate" href="qmediaresource.html#videoBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="videoBitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoBitRate" fullname="QMediaResource::setVideoBitRate" href="qmediaresource.html#setVideoBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoBitRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="QMediaResource::resolution" href="qmediaresource.html#resolution" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="resolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QMediaResource::setResolution" href="qmediaresource.html#setResolution" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResolution(const QSize &amp; resolution)">
                <parameter left="const QSize &amp;" right="" name="resolution" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QMediaResource::setResolution" href="qmediaresource.html#setResolution-2" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setResolution(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bitsPerPixel" fullname="QMediaResource::bitsPerPixel" href="qmediaresource.html#bitsPerPixel" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bitsPerPixel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBitsPerPixel" fullname="QMediaResource::setBitsPerPixel" href="qmediaresource.html#setBitsPerPixel" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBitsPerPixel(int bits)">
                <parameter left="int" right="" name="bits" default=""/>
            </function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMediaResourceList" href="#QMediaResourceList-typedef" location="qmediaresource.h"/>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAbstractMediaControl" href="qabstractmediacontrol.html" location="qabstractmediacontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractMediaControl" fullname="QAbstractMediaControl::~QAbstractMediaControl" href="qabstractmediacontrol.html#dtor.QAbstractMediaControl" location="qabstractmediacontrol.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractMediaControl()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAbstractMediaControl" fullname="QAbstractMediaControl::QAbstractMediaControl" href="qabstractmediacontrol.html#QAbstractMediaControl" location="qabstractmediacontrol.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractMediaControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QAbstractMediaControl::d_ptr" href="qabstractmediacontrol.html#d_ptr-var" location="qabstractmediacontrol.h" type="QAbstractMediaControlPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlayer" href="qmediaplayer.html" location="qmediaplayer.h" bases="QAbstractMediaObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaResources" fullname="QMediaPlayer::mediaResources" href="qmediaplayer.html#mediaResources-prop" location="qmediaplayer.h" type="QMediaResourceList">
                <getter name="currentMediaResources"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration-prop" location="qmediaplayer.h" type="qint64">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position-prop" location="qmediaplayer.h" type="qint64">
                <getter name="position"/>
                <setter name="setPosition"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayer::volume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.h" type="int">
                <getter name="volume"/>
                <setter name="setVolume"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="QMediaPlayer::muted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.h" type="bool">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayer::bufferStatus" href="qmediaplayer.html#bufferStatus-prop" location="qmediaplayer.h" type="int">
                <getter name="bufferStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoAvailable" fullname="QMediaPlayer::videoAvailable" href="qmediaplayer.html#videoAvailable-prop" location="qmediaplayer.h" type="bool">
                <getter name="isVideoAvailable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="seekable" fullname="QMediaPlayer::seekable" href="qmediaplayer.html#seekable-prop" location="qmediaplayer.h" type="bool">
                <getter name="isSeekable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.h" type="float">
                <getter name="playbackRate"/>
                <setter name="setPlaybackRate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayer::state" href="qmediaplayer.html#state-prop" location="qmediaplayer.h" type="State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" location="qmediaplayer.h" type="MediaStatus">
                <getter name="mediaStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error-prop" location="qmediaplayer.h" type="QString">
                <getter name="errorString"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaPlayer::State" href="qmediaplayer.html#State-enum" location="qmediaplayer.h">
                <value name="StoppedState" value="0"/>
                <value name="PlayingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MediaStatus" fullname="QMediaPlayer::MediaStatus" href="qmediaplayer.html#MediaStatus-enum" location="qmediaplayer.h">
                <value name="UnknownMediaStatus" value="0"/>
                <value name="NoMedia" value="1"/>
                <value name="LoadingMedia" value="2"/>
                <value name="LoadedMedia" value="3"/>
                <value name="StalledMedia" value="4"/>
                <value name="BufferingMedia" value="5"/>
                <value name="BufferedMedia" value="6"/>
                <value name="EndOfMedia" value="7"/>
                <value name="InvalidMedia" value="8"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMediaPlayer::Error" href="qmediaplayer.html#Error-enum" location="qmediaplayer.h">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
                <value name="NetworkError" value="3"/>
                <value name="AccessDeniedError" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlayer" fullname="QMediaPlayer::QMediaPlayer" href="qmediaplayer.html#QMediaPlayer" location="qmediaplayer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlayer(QMediaPlayerService * service, QObject * parent)">
                <parameter left="QMediaPlayerService *" right="" name="service" default="createMediaPlayerService()"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlayer" fullname="QMediaPlayer::~QMediaPlayer" href="qmediaplayer.html#dtor.QMediaPlayer" location="qmediaplayer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlayer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMediaPlayer::isValid" href="qmediaplayer.html#isValid" location="qmediaplayer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMediaResources" fullname="QMediaPlayer::currentMediaResources" href="qmediaplayer.html#mediaResources-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="mediaResources" type="QMediaResourceList" signature="currentMediaResources() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration-prop" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position-prop" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="position" type="qint64" signature="position() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayer::volume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="volume" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaPlayer::isMuted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="muted" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayer::bufferStatus" href="qmediaplayer.html#bufferStatus-prop" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="bufferStatus" type="int" signature="bufferStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVideoAvailable" fullname="QMediaPlayer::isVideoAvailable" href="qmediaplayer.html#videoAvailable-prop" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoAvailable" type="bool" signature="isVideoAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSeekable" fullname="QMediaPlayer::isSeekable" href="qmediaplayer.html#seekable-prop" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="seekable" type="bool" signature="isSeekable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playbackRate" type="float" signature="playbackRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayer::state" href="qmediaplayer.html#state-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="mediaStatus" type="MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaPlayer::errorString" href="qmediaplayer.html#error-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="error" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unsetError" fullname="QMediaPlayer::unsetError" href="qmediaplayer.html#unsetError" location="qmediaplayer.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="unsetError()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QMediaPlayer::service" href="qmediaplayer.html#service" location="qmediaplayer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QAbstractMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaPlayer::play" href="qmediaplayer.html#play" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaPlayer::pause" href="qmediaplayer.html#pause" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaPlayer::stop" href="qmediaplayer.html#stop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPosition" fullname="QMediaPlayer::setPosition" href="qmediaplayer.html#position-prop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="position" type="void" signature="setPosition(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaPlayer::setVolume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="volume" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaPlayer::setMuted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="muted" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackRate" fullname="QMediaPlayer::setPlaybackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="playbackRate" type="void" signature="setPlaybackRate(float rate)">
                <parameter left="float" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaPlayer::durationChanged" href="qmediaplayer.html#durationChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaPlayer::positionChanged" href="qmediaplayer.html#positionChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMediaResourcesChanged" fullname="QMediaPlayer::currentMediaResourcesChanged" href="qmediaplayer.html#currentMediaResourcesChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMediaResourcesChanged(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaPlayer::stateChanged" href="qmediaplayer.html#stateChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaPlayer::State state)">
                <parameter left="QMediaPlayer::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaPlayer::volumeChanged" href="qmediaplayer.html#volumeChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QMediaPlayer::mutingChanged" href="qmediaplayer.html#mutingChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoAvailabilityChanged" fullname="QMediaPlayer::videoAvailabilityChanged" href="qmediaplayer.html#videoAvailabilityChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoAvailabilityChanged(bool videoAvailable)">
                <parameter left="bool" right="" name="videoAvailable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferingChanged" fullname="QMediaPlayer::bufferingChanged" href="qmediaplayer.html#bufferingChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bufferingChanged(bool buffering)">
                <parameter left="bool" right="" name="buffering" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatusChanged" fullname="QMediaPlayer::bufferStatusChanged" href="qmediaplayer.html#bufferStatusChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bufferStatusChanged(int percentFilled)">
                <parameter left="int" right="" name="percentFilled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seekableChanged" fullname="QMediaPlayer::seekableChanged" href="qmediaplayer.html#seekableChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="seekableChanged(bool seekable)">
                <parameter left="bool" right="" name="seekable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRateChanged" fullname="QMediaPlayer::playbackRateChanged" href="qmediaplayer.html#playbackRateChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackRateChanged(float rate)">
                <parameter left="float" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaPlayer::mediaStatusChanged" href="qmediaplayer.html#mediaStatusChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaPlayer::MediaStatus status)">
                <parameter left="QMediaPlayer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error-2" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QMediaPlayer::Error error)">
                <parameter left="QMediaPlayer::Error" right="" name="error" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorStringChanged" fullname="QMediaPlayer::errorStringChanged" href="qmediaplayer.html#errorStringChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="errorStringChanged(const QString &amp; string)">
                <parameter left="const QString &amp;" right="" name="string" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistProvider" href="qmediaplaylistprovider.html" location="qmediaplaylistprovider.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistProvider" fullname="QMediaPlaylistProvider::QMediaPlaylistProvider" href="qmediaplaylistprovider.html#QMediaPlaylistProvider" location="qmediaplaylistprovider.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistProvider(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistProvider" fullname="QMediaPlaylistProvider::~QMediaPlaylistProvider" href="qmediaplaylistprovider.html#dtor.QMediaPlaylistProvider" location="qmediaplaylistprovider.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistProvider()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylistProvider::load" href="qmediaplaylistprovider.html#load" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="load(const QString &amp; location, const char * format)">
                <parameter left="const QString &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylistProvider::load" href="qmediaplaylistprovider.html#load-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="load(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylistProvider::save" href="qmediaplaylistprovider.html#save" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(const QString &amp; location, const char * format)">
                <parameter left="const QString &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylistProvider::save" href="qmediaplaylistprovider.html#save-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="save(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMediaPlaylistProvider::size" href="qmediaplaylistprovider.html#size" location="qmediaplaylistprovider.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QMediaPlaylistProvider::resources" href="qmediaplaylistprovider.html#resources" location="qmediaplaylistprovider.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaResourceList" signature="resources(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMediaPlaylistProvider::isReadOnly" href="qmediaplaylistprovider.html#isReadOnly" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendItem" fullname="QMediaPlaylistProvider::appendItem" href="qmediaplaylistprovider.html#appendItem" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="appendItem(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertItem" fullname="QMediaPlaylistProvider::insertItem" href="qmediaplaylistprovider.html#insertItem" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="insertItem(int pos, const QMediaResourceList &amp; resources)">
                <parameter left="int" right="" name="pos" default=""/>
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItem" fullname="QMediaPlaylistProvider::removeItem" href="qmediaplaylistprovider.html#removeItem" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItem(int pos)">
                <parameter left="int" right="" name="pos" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItems" fullname="QMediaPlaylistProvider::removeItems" href="qmediaplaylistprovider.html#removeItems" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItems(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMediaPlaylistProvider::clear" href="qmediaplaylistprovider.html#clear" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shuffle" fullname="QMediaPlaylistProvider::shuffle" href="qmediaplaylistprovider.html#shuffle" location="qmediaplaylistprovider.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="shuffle()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeInserted" fullname="QMediaPlaylistProvider::itemsAboutToBeInserted" href="qmediaplaylistprovider.html#itemsAboutToBeInserted" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsInserted" fullname="QMediaPlaylistProvider::itemsInserted" href="qmediaplaylistprovider.html#itemsInserted" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeRemoved" fullname="QMediaPlaylistProvider::itemsAboutToBeRemoved" href="qmediaplaylistprovider.html#itemsAboutToBeRemoved" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsRemoved" fullname="QMediaPlaylistProvider::itemsRemoved" href="qmediaplaylistprovider.html#itemsRemoved" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsChanged" fullname="QMediaPlaylistProvider::itemsChanged" href="qmediaplaylistprovider.html#itemsChanged" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsChanged(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlaylistProvider" fullname="QMediaPlaylistProvider::QMediaPlaylistProvider" href="qmediaplaylistprovider.html#QMediaPlaylistProvider-2" location="qmediaplaylistprovider.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaPlaylistProvider(QMediaPlaylistProviderPrivate &amp; dd, QObject * parent)">
                <parameter left="QMediaPlaylistProviderPrivate &amp;" right="" name="dd" default=""/>
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMetadataProviderControl" href="qmetadataprovidercontrol.html" location="qmetadataprovidercontrol.h" bases="QAbstractMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMetadataProviderControl" fullname="QMetadataProviderControl::~QMetadataProviderControl" href="qmetadataprovidercontrol.html#dtor.QMetadataProviderControl" location="qmetadataprovidercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMetadataProviderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadataAvailable" fullname="QMetadataProviderControl::metadataAvailable" href="qmetadataprovidercontrol.html#metadataAvailable" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="metadataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMetadataProviderControl::isReadOnly" href="qmetadataprovidercontrol.html#isReadOnly" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableMetadata" fullname="QMetadataProviderControl::availableMetadata" href="qmetadataprovidercontrol.html#availableMetadata" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="availableMetadata() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadata" fullname="QMetadataProviderControl::metadata" href="qmetadataprovidercontrol.html#metadata" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metadata(QString const &amp; name) const">
                <parameter left="QString const &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetadata" fullname="QMetadataProviderControl::setMetadata" href="qmetadataprovidercontrol.html#setMetadata" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMetadata(QString const &amp; name, QVariant const &amp; value)">
                <parameter left="QString const &amp;" right="" name="name" default=""/>
                <parameter left="QVariant const &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QMetadataProviderControl::resources" href="qmetadataprovidercontrol.html#resources" location="qmetadataprovidercontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaResourceList" signature="resources() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadataChanged" fullname="QMetadataProviderControl::metadataChanged" href="qmetadataprovidercontrol.html#metadataChanged" location="qmetadataprovidercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metadataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadataAvailabilityChanged" fullname="QMetadataProviderControl::metadataAvailabilityChanged" href="qmetadataprovidercontrol.html#metadataAvailabilityChanged" location="qmetadataprovidercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metadataAvailabilityChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readOnlyChanged" fullname="QMetadataProviderControl::readOnlyChanged" href="qmetadataprovidercontrol.html#readOnlyChanged" location="qmetadataprovidercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readOnlyChanged(bool readOnly)">
                <parameter left="bool" right="" name="readOnly" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMetadataProviderControl" fullname="QMetadataProviderControl::QMetadataProviderControl" href="qmetadataprovidercontrol.html#QMetadataProviderControl" location="qmetadataprovidercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMetadataProviderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QSharedMediaPlaylist" href="qsharedmediaplaylist.html" location="qsharedmediaplaylist.h" bases="QMediaPlaylist" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QSharedMediaPlaylist" fullname="QSharedMediaPlaylist::QSharedMediaPlaylist" href="qsharedmediaplaylist.html#QSharedMediaPlaylist" location="qsharedmediaplaylist.cpp" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QSharedMediaPlaylist(const QString &amp; name, QObject * parent)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QSharedMediaPlaylist" fullname="QSharedMediaPlaylist::~QSharedMediaPlaylist" href="qsharedmediaplaylist.html#dtor.QSharedMediaPlaylist" location="qsharedmediaplaylist.cpp" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QSharedMediaPlaylist()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QSharedMediaPlaylist::name" href="qsharedmediaplaylist.html#name" location="qsharedmediaplaylist.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="name() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sharedPlaylists" fullname="QSharedMediaPlaylist::sharedPlaylists" href="qsharedmediaplaylist.html#sharedPlaylists" location="qsharedmediaplaylist.cpp" virtual="non" meta="plain" const="false" static="true" overload="false" type="QStringList" signature="sharedPlaylists()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioInputDeviceControl" href="qaudioinputdevicecontrol.html" location="qaudioinputdevicecontrol.h" bases="QAbstractMediaControl" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QAudioInputDeviceControl::selectedDevice" href="qaudioinputdevicecontrol.html#selectedDevice-prop" location="qaudioinputdevicecontrol.h" type="int">
                <getter name="selectedDevice"/>
                <setter name="setSelectedDevice"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioInputDeviceControl" fullname="QAudioInputDeviceControl::~QAudioInputDeviceControl" href="qaudioinputdevicecontrol.html#dtor.QAudioInputDeviceControl" location="qaudioinputdevicecontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioInputDeviceControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceCount" fullname="QAudioInputDeviceControl::deviceCount" href="qaudioinputdevicecontrol.html#deviceCount" location="qaudioinputdevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="deviceCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QAudioInputDeviceControl::name" href="qaudioinputdevicecontrol.html#name" location="qaudioinputdevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QAudioInputDeviceControl::description" href="qaudioinputdevicecontrol.html#description" location="qaudioinputdevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="description(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QAudioInputDeviceControl::icon" href="qaudioinputdevicecontrol.html#icon" location="qaudioinputdevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultDevice" fullname="QAudioInputDeviceControl::defaultDevice" href="qaudioinputdevicecontrol.html#defaultDevice" location="qaudioinputdevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="defaultDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QAudioInputDeviceControl::selectedDevice" href="qaudioinputdevicecontrol.html#selectedDevice-prop" location="qaudioinputdevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" associated-property="selectedDevice" type="int" signature="selectedDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectedDevice" fullname="QAudioInputDeviceControl::setSelectedDevice" href="qaudioinputdevicecontrol.html#selectedDevice-prop" location="qaudioinputdevicecontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" associated-property="selectedDevice" type="void" signature="setSelectedDevice(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QAudioInputDeviceControl::selectedDeviceChanged" href="qaudioinputdevicecontrol.html#selectedDeviceChanged" location="qaudioinputdevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selectedDeviceChanged(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QAudioInputDeviceControl::selectedDeviceChanged" href="qaudioinputdevicecontrol.html#selectedDeviceChanged-2" location="qaudioinputdevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="selectedDeviceChanged(const QString &amp; deviceName)">
                <parameter left="const QString &amp;" right="" name="deviceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devicesChanged" fullname="QAudioInputDeviceControl::devicesChanged" href="qaudioinputdevicecontrol.html#devicesChanged" location="qaudioinputdevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="devicesChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAudioInputDeviceControl" fullname="QAudioInputDeviceControl::QAudioInputDeviceControl" href="qaudioinputdevicecontrol.html#QAudioInputDeviceControl" location="qaudioinputdevicecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioInputDeviceControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraControl" href="qcameracontrol.html" location="qcameracontrol.h" bases="QAbstractMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraControl" fullname="QCameraControl::~QCameraControl" href="qcameracontrol.html#dtor.QCameraControl" location="qcameracontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QCameraControl::start" href="qcameracontrol.html#start" location="qcameracontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QCameraControl::stop" href="qcameracontrol.html#stop" location="qcameracontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCameraControl::state" href="qcameracontrol.html#state" location="qcameracontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashMode" fullname="QCameraControl::flashMode" href="qcameracontrol.html#flashMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::FlashMode" signature="flashMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlashMode" fullname="QCameraControl::setFlashMode" href="qcameracontrol.html#setFlashMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFlashMode(QCamera::FlashMode mode)">
                <parameter left="QCamera::FlashMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFlashModes" fullname="QCameraControl::supportedFlashModes" href="qcameracontrol.html#supportedFlashModes" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::FlashModes" signature="supportedFlashModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashReady" fullname="QCameraControl::isFlashReady" href="qcameracontrol.html#isFlashReady" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashReady() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusMode" fullname="QCameraControl::focusMode" href="qcameracontrol.html#focusMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::FocusMode" signature="focusMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusMode" fullname="QCameraControl::setFocusMode" href="qcameracontrol.html#setFocusMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusMode(QCamera::FocusMode mode)">
                <parameter left="QCamera::FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFocusModes" fullname="QCameraControl::supportedFocusModes" href="qcameracontrol.html#supportedFocusModes" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::FocusModes" signature="supportedFocusModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatus" fullname="QCameraControl::focusStatus" href="qcameracontrol.html#focusStatus" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::FocusStatus" signature="focusStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="macroFocusingEnabled" fullname="QCameraControl::macroFocusingEnabled" href="qcameracontrol.html#macroFocusingEnabled" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="macroFocusingEnabled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMacroFocusingSupported" fullname="QCameraControl::isMacroFocusingSupported" href="qcameracontrol.html#isMacroFocusingSupported" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMacroFocusingSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMacroFocusingEnabled" fullname="QCameraControl::setMacroFocusingEnabled" href="qcameracontrol.html#setMacroFocusingEnabled" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMacroFocusingEnabled(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureMode" fullname="QCameraControl::exposureMode" href="qcameracontrol.html#exposureMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::ExposureMode" signature="exposureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureMode" fullname="QCameraControl::setExposureMode" href="qcameracontrol.html#setExposureMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureMode(QCamera::ExposureMode mode)">
                <parameter left="QCamera::ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedExposureModes" fullname="QCameraControl::supportedExposureModes" href="qcameracontrol.html#supportedExposureModes" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::ExposureModes" signature="supportedExposureModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureCompensation" fullname="QCameraControl::exposureCompensation" href="qcameracontrol.html#exposureCompensation" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="double" signature="exposureCompensation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureCompensation" fullname="QCameraControl::setExposureCompensation" href="qcameracontrol.html#setExposureCompensation" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureCompensation(double ev)">
                <parameter left="double" right="" name="ev" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="meteringMode" fullname="QCameraControl::meteringMode" href="qcameracontrol.html#meteringMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::MeteringMode" signature="meteringMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMeteringMode" fullname="QCameraControl::setMeteringMode" href="qcameracontrol.html#setMeteringMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMeteringMode(QCamera::MeteringMode mode)">
                <parameter left="QCamera::MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMeteringModes" fullname="QCameraControl::supportedMeteringModes" href="qcameracontrol.html#supportedMeteringModes" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::MeteringModes" signature="supportedMeteringModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="whiteBalanceMode" fullname="QCameraControl::whiteBalanceMode" href="qcameracontrol.html#whiteBalanceMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::WhiteBalanceMode" signature="whiteBalanceMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWhiteBalanceMode" fullname="QCameraControl::setWhiteBalanceMode" href="qcameracontrol.html#setWhiteBalanceMode" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setWhiteBalanceMode(QCamera::WhiteBalanceMode mode)">
                <parameter left="QCamera::WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedWhiteBalanceModes" fullname="QCameraControl::supportedWhiteBalanceModes" href="qcameracontrol.html#supportedWhiteBalanceModes" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QCamera::WhiteBalanceModes" signature="supportedWhiteBalanceModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manualWhiteBalance" fullname="QCameraControl::manualWhiteBalance" href="qcameracontrol.html#manualWhiteBalance" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="manualWhiteBalance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualWhiteBalance" fullname="QCameraControl::setManualWhiteBalance" href="qcameracontrol.html#setManualWhiteBalance" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualWhiteBalance(int colorTemperature)">
                <parameter left="int" right="" name="colorTemperature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isoSensitivity" fullname="QCameraControl::isoSensitivity" href="qcameracontrol.html#isoSensitivity" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="int" signature="isoSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedIsoSensitivityRange" fullname="QCameraControl::supportedIsoSensitivityRange" href="qcameracontrol.html#supportedIsoSensitivityRange" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;int, int&gt;" signature="supportedIsoSensitivityRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualIsoSensitivity" fullname="QCameraControl::setManualIsoSensitivity" href="qcameracontrol.html#setManualIsoSensitivity" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualIsoSensitivity(int iso)">
                <parameter left="int" right="" name="iso" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoIsoSensitivity" fullname="QCameraControl::setAutoIsoSensitivity" href="qcameracontrol.html#setAutoIsoSensitivity" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoIsoSensitivity()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aperture" fullname="QCameraControl::aperture" href="qcameracontrol.html#aperture" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="double" signature="aperture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedApertureRange" fullname="QCameraControl::supportedApertureRange" href="qcameracontrol.html#supportedApertureRange" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;double, double&gt;" signature="supportedApertureRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualAperture" fullname="QCameraControl::setManualAperture" href="qcameracontrol.html#setManualAperture" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualAperture(double aperture)">
                <parameter left="double" right="" name="aperture" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoAperture" fullname="QCameraControl::setAutoAperture" href="qcameracontrol.html#setAutoAperture" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoAperture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutterSpeed" fullname="QCameraControl::shutterSpeed" href="qcameracontrol.html#shutterSpeed" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="double" signature="shutterSpeed() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedShutterSpeedRange" fullname="QCameraControl::supportedShutterSpeedRange" href="qcameracontrol.html#supportedShutterSpeedRange" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;double, double&gt;" signature="supportedShutterSpeedRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualShutterSpeed" fullname="QCameraControl::setManualShutterSpeed" href="qcameracontrol.html#setManualShutterSpeed" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualShutterSpeed(double seconds)">
                <parameter left="double" right="" name="seconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoShutterSpeed" fullname="QCameraControl::setAutoShutterSpeed" href="qcameracontrol.html#setAutoShutterSpeed" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoShutterSpeed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumOpticalZoom" fullname="QCameraControl::maximumOpticalZoom" href="qcameracontrol.html#maximumOpticalZoom" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="double" signature="maximumOpticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumDigitalZoom" fullname="QCameraControl::maximumDigitalZoom" href="qcameracontrol.html#maximumDigitalZoom" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="double" signature="maximumDigitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValue" fullname="QCameraControl::zoomValue" href="qcameracontrol.html#zoomValue" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="double" signature="zoomValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomTo" fullname="QCameraControl::zoomTo" href="qcameracontrol.html#zoomTo" location="qcameracontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="zoomTo(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QCameraControl::setDevice" href="qcameracontrol.html#setDevice" location="qcameracontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(const QByteArray &amp; device)">
                <parameter left="const QByteArray &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isExposureLocked" fullname="QCameraControl::isExposureLocked" href="qcameracontrol.html#isExposureLocked" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isExposureLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusLocked" fullname="QCameraControl::isFocusLocked" href="qcameracontrol.html#isFocusLocked" location="qcameracontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockExposure" fullname="QCameraControl::lockExposure" href="qcameracontrol.html#lockExposure" location="qcameracontrol.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="lockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockExposure" fullname="QCameraControl::unlockExposure" href="qcameracontrol.html#unlockExposure" location="qcameracontrol.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockFocus" fullname="QCameraControl::lockFocus" href="qcameracontrol.html#lockFocus" location="qcameracontrol.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="lockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockFocus" fullname="QCameraControl::unlockFocus" href="qcameracontrol.html#unlockFocus" location="qcameracontrol.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QCameraControl::stateChanged" href="qcameracontrol.html#stateChanged" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QCamera::State state)">
                <parameter left="QCamera::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashReady" fullname="QCameraControl::flashReady" href="qcameracontrol.html#flashReady" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="flashReady(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatusChanged" fullname="QCameraControl::focusStatusChanged" href="qcameracontrol.html#focusStatusChanged" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusStatusChanged(QCamera::FocusStatus status)">
                <parameter left="QCamera::FocusStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValueChanged" fullname="QCameraControl::zoomValueChanged" href="qcameracontrol.html#zoomValueChanged" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="zoomValueChanged(double zoom)">
                <parameter left="double" right="" name="zoom" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureLocked" fullname="QCameraControl::exposureLocked" href="qcameracontrol.html#exposureLocked" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="exposureLocked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusLocked" fullname="QCameraControl::focusLocked" href="qcameracontrol.html#focusLocked" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusLocked()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraControl" fullname="QCameraControl::QCameraControl" href="qcameracontrol.html#QCameraControl" location="qcameracontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAbstractMediaObject" href="qabstractmediaobject.html" location="qabstractmediaobject.h" bases="QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QAbstractMediaObject::notifyInterval" href="qabstractmediaobject.html#notifyInterval-prop" location="qabstractmediaobject.h" type="int">
                <getter name="notifyInterval"/>
                <setter name="setNotifyInterval"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAbstractMediaObject" fullname="QAbstractMediaObject::~QAbstractMediaObject" href="qabstractmediaobject.html#dtor.QAbstractMediaObject" location="qabstractmediaobject.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractMediaObject()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QAbstractMediaObject::service" href="qabstractmediaobject.html#service" location="qabstractmediaobject.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QAbstractMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QAbstractMediaObject::isValid" href="qabstractmediaobject.html#isValid" location="qabstractmediaobject.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QAbstractMediaObject::notifyInterval" href="qabstractmediaobject.html#notifyInterval-prop" location="qabstractmediaobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="notifyInterval" type="int" signature="notifyInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotifyInterval" fullname="QAbstractMediaObject::setNotifyInterval" href="qabstractmediaobject.html#notifyInterval-prop" location="qabstractmediaobject.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="notifyInterval" type="void" signature="setNotifyInterval(int milliSeconds)">
                <parameter left="int" right="" name="milliSeconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyIntervalChanged" fullname="QAbstractMediaObject::notifyIntervalChanged" href="qabstractmediaobject.html#notifyIntervalChanged" location="qabstractmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notifyIntervalChanged(int milliSeconds)">
                <parameter left="int" right="" name="milliSeconds" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAbstractMediaObject" fullname="QAbstractMediaObject::QAbstractMediaObject" href="qabstractmediaobject.html#QAbstractMediaObject" location="qabstractmediaobject.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractMediaObject(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addPropertyWatch" fullname="QAbstractMediaObject::addPropertyWatch" href="qabstractmediaobject.html#addPropertyWatch" location="qabstractmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addPropertyWatch(QByteArray const &amp; name)">
                <parameter left="QByteArray const &amp;" right="" name="name" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="removePropertyWatch" fullname="QAbstractMediaObject::removePropertyWatch" href="qabstractmediaobject.html#removePropertyWatch" location="qabstractmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removePropertyWatch(QByteArray const &amp; name)">
                <parameter left="QByteArray const &amp;" right="" name="name" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QAbstractMediaObject::d_ptr" href="qabstractmediaobject.html#d_ptr-var" location="qabstractmediaobject.h" type="QAbstractMediaObjectPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoRendererControl" href="qvideorenderercontrol.html" location="qvideorenderercontrol.h" bases="QAbstractMediaControl" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="surface" fullname="QVideoRendererControl::surface" href="qvideorenderercontrol.html#surface-prop" location="qvideorenderercontrol.h" type="QAbstractVideoSurface *">
                <getter name="surface"/>
                <setter name="setSurface"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoRendererControl" fullname="QVideoRendererControl::QVideoRendererControl" href="qvideorenderercontrol.html#QVideoRendererControl" location="qvideorenderercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoRendererControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoRendererControl" fullname="QVideoRendererControl::~QVideoRendererControl" href="qvideorenderercontrol.html#dtor.QVideoRendererControl" location="qvideorenderercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoRendererControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="surface" fullname="QVideoRendererControl::surface" href="qvideorenderercontrol.html#surface-prop" location="qvideorenderercontrol.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="surface" type="QAbstractVideoSurface *" signature="surface() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSurface" fullname="QVideoRendererControl::setSurface" href="qvideorenderercontrol.html#surface-prop" location="qvideorenderercontrol.cpp" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="surface" type="void" signature="setSurface(QAbstractVideoSurface * surface)">
                <parameter left="QAbstractVideoSurface *" right="" name="surface" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaWidgetEndpoint" href="qmediawidgetendpoint.html" location="qmediawidgetendpoint.h" bases="QMediaEndpointInterface,QWidget" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="fullscreen" fullname="QMediaWidgetEndpoint::fullscreen" href="qmediawidgetendpoint.html#fullscreen-prop" location="qmediawidgetendpoint.h" type="bool">
                <getter name="isFullscreen"/>
                <setter name="setFullscreen"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="aspectRatio" fullname="QMediaWidgetEndpoint::aspectRatio" href="qmediawidgetendpoint.html#aspectRatio-prop" location="qmediawidgetendpoint.h" type="AspectRatio">
                <getter name="aspectRatio"/>
                <setter name="setAspectRatio"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="customAspectRatio" fullname="QMediaWidgetEndpoint::customAspectRatio" href="qmediawidgetendpoint.html#customAspectRatio-prop" location="qmediawidgetendpoint.h" type="QSize">
                <getter name="customAspectRatio"/>
                <setter name="setCustomAspectRatio"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AspectRatio" fullname="QMediaWidgetEndpoint::AspectRatio" href="qmediawidgetendpoint.html#AspectRatio-enum" location="qmediawidgetendpoint.h">
                <value name="AspectRatioAuto" value="0"/>
                <value name="AspectRatioWidget" value="1"/>
                <value name="AspectRatioCustom" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaWidgetEndpoint" fullname="QMediaWidgetEndpoint::QMediaWidgetEndpoint" href="qmediawidgetendpoint.html#QMediaWidgetEndpoint" location="qmediawidgetendpoint.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaWidgetEndpoint(QWidget * parent)">
                <parameter left="QWidget *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaWidgetEndpoint" fullname="QMediaWidgetEndpoint::~QMediaWidgetEndpoint" href="qmediawidgetendpoint.html#dtor.QMediaWidgetEndpoint" location="qmediawidgetendpoint.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaWidgetEndpoint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QMediaWidgetEndpoint::direction" href="qmediawidgetendpoint.html#direction" location="qmediawidgetendpoint.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="Direction" signature="direction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFullscreen" fullname="QMediaWidgetEndpoint::isFullscreen" href="qmediawidgetendpoint.html#fullscreen-prop" location="qmediawidgetendpoint.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="fullscreen" type="bool" signature="isFullscreen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatio" fullname="QMediaWidgetEndpoint::aspectRatio" href="qmediawidgetendpoint.html#aspectRatio-prop" location="qmediawidgetendpoint.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="aspectRatio" type="AspectRatio" signature="aspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="customAspectRatio" fullname="QMediaWidgetEndpoint::customAspectRatio" href="qmediawidgetendpoint.html#customAspectRatio-prop" location="qmediawidgetendpoint.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="customAspectRatio" type="QSize" signature="customAspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFullscreen" fullname="QMediaWidgetEndpoint::setFullscreen" href="qmediawidgetendpoint.html#fullscreen-prop" location="qmediawidgetendpoint.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="fullscreen" type="void" signature="setFullscreen(bool fullscreen)">
                <parameter left="bool" right="" name="fullscreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatio" fullname="QMediaWidgetEndpoint::setAspectRatio" href="qmediawidgetendpoint.html#aspectRatio-prop" location="qmediawidgetendpoint.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="aspectRatio" type="void" signature="setAspectRatio(AspectRatio ratio)">
                <parameter left="AspectRatio" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomAspectRatio" fullname="QMediaWidgetEndpoint::setCustomAspectRatio" href="qmediawidgetendpoint.html#customAspectRatio-prop" location="qmediawidgetendpoint.cpp" virtual="impure" meta="slot" const="false" static="false" overload="false" associated-property="customAspectRatio" type="void" signature="setCustomAspectRatio(const QSize &amp; customRatio)">
                <parameter left="const QSize &amp;" right="" name="customRatio" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaWidgetEndpoint::d_ptr" href="qmediawidgetendpoint.html#d_ptr-var" location="qmediawidgetendpoint.h" type="QMediaWidgetEndpointPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAbstractMediaService" href="qabstractmediaservice.html" location="qabstractmediaservice.h" bases="QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="audioOutput" fullname="QAbstractMediaService::audioOutput" href="qabstractmediaservice.html#audioOutput-prop" location="qabstractmediaservice.h" type="QObject *">
                <getter name="audioOutput"/>
                <setter name="setAudioOutput"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoOutput" fullname="QAbstractMediaService::videoOutput" href="qabstractmediaservice.html#videoOutput-prop" location="qabstractmediaservice.h" type="QObject *">
                <getter name="videoOutput"/>
                <setter name="setVideoOutput"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="dataOutput" fullname="QAbstractMediaService::dataOutput" href="qabstractmediaservice.html#dataOutput-prop" location="qabstractmediaservice.h" type="QObject *">
                <getter name="dataOutput"/>
                <setter name="setDataOutput"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="audioInput" fullname="QAbstractMediaService::audioInput" href="qabstractmediaservice.html#audioInput-prop" location="qabstractmediaservice.h" type="QObject *">
                <getter name="audioInput"/>
                <setter name="setAudioInput"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoInput" fullname="QAbstractMediaService::videoInput" href="qabstractmediaservice.html#videoInput-prop" location="qabstractmediaservice.h" type="QObject *">
                <getter name="videoInput"/>
                <setter name="setVideoInput"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="dataInput" fullname="QAbstractMediaService::dataInput" href="qabstractmediaservice.html#dataInput-prop" location="qabstractmediaservice.h" type="QObject *">
                <getter name="dataInput"/>
                <setter name="setDataInput"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioOutput" fullname="QAbstractMediaService::audioOutput" href="qabstractmediaservice.html#audioOutput-prop" location="qabstractmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="audioOutput" type="QObject *" signature="audioOutput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioOutput" fullname="QAbstractMediaService::setAudioOutput" href="qabstractmediaservice.html#audioOutput-prop" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="audioOutput" type="void" signature="setAudioOutput(QObject * output)">
                <parameter left="QObject *" right="" name="output" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoOutput" fullname="QAbstractMediaService::videoOutput" href="qabstractmediaservice.html#videoOutput-prop" location="qabstractmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoOutput" type="QObject *" signature="videoOutput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoOutput" fullname="QAbstractMediaService::setVideoOutput" href="qabstractmediaservice.html#videoOutput-prop" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="videoOutput" type="void" signature="setVideoOutput(QObject * output)">
                <parameter left="QObject *" right="" name="output" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataOutput" fullname="QAbstractMediaService::dataOutput" href="qabstractmediaservice.html#dataOutput-prop" location="qabstractmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="dataOutput" type="QObject *" signature="dataOutput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataOutput" fullname="QAbstractMediaService::setDataOutput" href="qabstractmediaservice.html#dataOutput-prop" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="dataOutput" type="void" signature="setDataOutput(QObject * output)">
                <parameter left="QObject *" right="" name="output" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioInput" fullname="QAbstractMediaService::audioInput" href="qabstractmediaservice.html#audioInput-prop" location="qabstractmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="audioInput" type="QObject *" signature="audioInput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioInput" fullname="QAbstractMediaService::setAudioInput" href="qabstractmediaservice.html#audioInput-prop" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="audioInput" type="void" signature="setAudioInput(QObject * input)">
                <parameter left="QObject *" right="" name="input" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoInput" fullname="QAbstractMediaService::videoInput" href="qabstractmediaservice.html#videoInput-prop" location="qabstractmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoInput" type="QObject *" signature="videoInput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoInput" fullname="QAbstractMediaService::setVideoInput" href="qabstractmediaservice.html#videoInput-prop" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="videoInput" type="void" signature="setVideoInput(QObject * input)">
                <parameter left="QObject *" right="" name="input" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataInput" fullname="QAbstractMediaService::dataInput" href="qabstractmediaservice.html#dataInput-prop" location="qabstractmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="dataInput" type="QObject *" signature="dataInput() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataInput" fullname="QAbstractMediaService::setDataInput" href="qabstractmediaservice.html#dataInput-prop" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="dataInput" type="void" signature="setDataInput(QObject * input)">
                <parameter left="QObject *" right="" name="input" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedEndpointInterfaces" fullname="QAbstractMediaService::supportedEndpointInterfaces" href="qabstractmediaservice.html#supportedEndpointInterfaces" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QByteArray&gt;" signature="supportedEndpointInterfaces(QMediaEndpointInterface::Direction direction) const">
                <parameter left="QMediaEndpointInterface::Direction" right="" name="direction" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="createEndpoint" fullname="QAbstractMediaService::createEndpoint" href="qabstractmediaservice.html#createEndpoint" location="qabstractmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QObject *" signature="createEndpoint(const char * interface)">
                <parameter left="const char *" right="" name="interface" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="control" fullname="QAbstractMediaService::control" href="qabstractmediaservice.html#control" location="qabstractmediaservice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QAbstractMediaControl *" signature="control(const char * name) const">
                <parameter left="const char *" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="control" fullname="QAbstractMediaService::control" href="qabstractmediaservice.html#control-2" location="qabstractmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="T" signature="control() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="createEndpoint" fullname="QAbstractMediaService::createEndpoint" href="qabstractmediaservice.html#createEndpoint-2" location="qabstractmediaservice.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="T" signature="createEndpoint()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAbstractMediaService" fullname="QAbstractMediaService::QAbstractMediaService" href="qabstractmediaservice.html#QAbstractMediaService" location="qabstractmediaservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAbstractMediaService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="~QAbstractMediaService" fullname="QAbstractMediaService::~QAbstractMediaService" href="qabstractmediaservice.html#dtor.QAbstractMediaService" location="qabstractmediaservice.cpp" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAbstractMediaService()"/>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QAbstractMediaService::d_ptr" href="qabstractmediaservice.html#d_ptr-var" location="qabstractmediaservice.h" type="QAbstractMediaServicePrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QIODeviceEndpoint" href="qiodeviceendpoint.html" location="qiodeviceendpoint.h" bases="QMediaEndpointInterface,QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QIODeviceEndpoint::device" href="qiodeviceendpoint.html#device-prop" location="qiodeviceendpoint.h" type="QIODevice *">
                <getter name="device"/>
                <setter name="setDevice"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QIODeviceEndpoint" fullname="QIODeviceEndpoint::QIODeviceEndpoint" href="qiodeviceendpoint.html#QIODeviceEndpoint" location="qiodeviceendpoint.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QIODeviceEndpoint(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QIODeviceEndpoint" fullname="QIODeviceEndpoint::~QIODeviceEndpoint" href="qiodeviceendpoint.html#dtor.QIODeviceEndpoint" location="qiodeviceendpoint.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QIODeviceEndpoint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QIODeviceEndpoint::direction" href="qiodeviceendpoint.html#direction" location="qiodeviceendpoint.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="Direction" signature="direction() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="device" fullname="QIODeviceEndpoint::device" href="qiodeviceendpoint.html#device-prop" location="qiodeviceendpoint.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="device" type="QIODevice *" signature="device() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QIODeviceEndpoint::setDevice" href="qiodeviceendpoint.html#device-prop" location="qiodeviceendpoint.h" virtual="impure" meta="plain" const="false" static="false" overload="false" associated-property="device" type="void" signature="setDevice(QIODevice * device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QIODeviceEndpoint::d_ptr" href="qiodeviceendpoint.html#d_ptr-var" location="qiodeviceendpoint.h" type="QIODeviceEndpointPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylist" href="qmediaplaylist.html" location="qmediaplaylist.h" bases="QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="playlistProvider" fullname="QMediaPlaylist::playlistProvider" href="qmediaplaylist.html#playlistProvider-prop" location="qmediaplaylist.h" type="QMediaPlaylistProvider *">
                <getter name="playlistProvider"/>
                <setter name="setPlaylistProvider"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentResources" fullname="QMediaPlaylist::currentResources" href="qmediaplaylist.html#currentResources-prop" location="qmediaplaylist.h" type="QMediaResourceList">
                <getter name="currentResources"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentPosition" fullname="QMediaPlaylist::currentPosition" href="qmediaplaylist.html#currentPosition-prop" location="qmediaplaylist.h" type="int">
                <getter name="currentPosition"/>
                <setter name="setCurrentPosition"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylist" fullname="QMediaPlaylist::QMediaPlaylist" href="qmediaplaylist.html#QMediaPlaylist" location="qmediaplaylist.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylist(QAbstractMediaObject * mediaObject, QObject * parent)">
                <parameter left="QAbstractMediaObject *" right="" name="mediaObject" default="0"/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylist" fullname="QMediaPlaylist::~QMediaPlaylist" href="qmediaplaylist.html#dtor.QMediaPlaylist" location="qmediaplaylist.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylist()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProvider" fullname="QMediaPlaylist::playlistProvider" href="qmediaplaylist.html#playlistProvider-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playlistProvider" type="QMediaPlaylistProvider *" signature="playlistProvider() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylistProvider" fullname="QMediaPlaylist::setPlaylistProvider" href="qmediaplaylist.html#playlistProvider-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="playlistProvider" type="bool" signature="setPlaylistProvider(QMediaPlaylistProvider * playlist)">
                <parameter left="QMediaPlaylistProvider *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylist::playbackMode" href="qmediaplaylist.html#playbackMode" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylistNavigator::PlaybackMode" signature="playbackMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackMode" fullname="QMediaPlaylist::setPlaybackMode" href="qmediaplaylist.html#setPlaybackMode" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaybackMode(QMediaPlaylistNavigator::PlaybackMode mode)">
                <parameter left="QMediaPlaylistNavigator::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentPosition" fullname="QMediaPlaylist::currentPosition" href="qmediaplaylist.html#currentPosition-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentPosition" type="int" signature="currentPosition() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentResource" fullname="QMediaPlaylist::currentResource" href="qmediaplaylist.html#currentResource" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaResource" signature="currentResource() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentResources" fullname="QMediaPlaylist::currentResources" href="qmediaplaylist.html#currentResources-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentResources" type="QMediaResourceList" signature="currentResources() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPosition" fullname="QMediaPlaylist::nextPosition" href="qmediaplaylist.html#nextPosition" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="nextPosition(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousPosition" fullname="QMediaPlaylist::previousPosition" href="qmediaplaylist.html#previousPosition" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="previousPosition(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resource" fullname="QMediaPlaylist::resource" href="qmediaplaylist.html#resource" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaResource" signature="resource(int position) const">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QMediaPlaylist::resources" href="qmediaplaylist.html#resources" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaResourceList" signature="resources(int position) const">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMediaPlaylist::size" href="qmediaplaylist.html#size" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMediaPlaylist::isEmpty" href="qmediaplaylist.html#isEmpty" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMediaPlaylist::isReadOnly" href="qmediaplaylist.html#isReadOnly" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendItem" fullname="QMediaPlaylist::appendItem" href="qmediaplaylist.html#appendItem" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="appendItem(const QMediaResource &amp; resource)">
                <parameter left="const QMediaResource &amp;" right="" name="resource" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendItem" fullname="QMediaPlaylist::appendItem" href="qmediaplaylist.html#appendItem-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="appendItem(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertItem" fullname="QMediaPlaylist::insertItem" href="qmediaplaylist.html#insertItem" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="insertItem(int pos, const QMediaResource &amp; resource)">
                <parameter left="int" right="" name="pos" default=""/>
                <parameter left="const QMediaResource &amp;" right="" name="resource" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertItem" fullname="QMediaPlaylist::insertItem" href="qmediaplaylist.html#insertItem-2" location="qmediaplaylist.cpp" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="insertItem(int index, const QMediaResourceList &amp; resources)">
                <parameter left="int" right="" name="index" default=""/>
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItem" fullname="QMediaPlaylist::removeItem" href="qmediaplaylist.html#removeItem" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItem(int pos)">
                <parameter left="int" right="" name="pos" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItems" fullname="QMediaPlaylist::removeItems" href="qmediaplaylist.html#removeItems" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItems(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMediaPlaylist::clear" href="qmediaplaylist.html#clear" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylist::load" href="qmediaplaylist.html#load" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="load(const QString &amp; location, const char * format)">
                <parameter left="const QString &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylist::load" href="qmediaplaylist.html#load-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="load(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylist::save" href="qmediaplaylist.html#save" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(const QString &amp; location, const char * format)">
                <parameter left="const QString &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylist::save" href="qmediaplaylist.html#save-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="save(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shuffle" fullname="QMediaPlaylist::shuffle" href="qmediaplaylist.html#shuffle" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="shuffle()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="advance" fullname="QMediaPlaylist::advance" href="qmediaplaylist.html#advance" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="advance()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="back" fullname="QMediaPlaylist::back" href="qmediaplaylist.html#back" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="back()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentPosition" fullname="QMediaPlaylist::setCurrentPosition" href="qmediaplaylist.html#currentPosition-prop" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="currentPosition" type="void" signature="setCurrentPosition(int playlistPosition)">
                <parameter left="int" right="" name="playlistPosition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProviderChanged" fullname="QMediaPlaylist::playlistProviderChanged" href="qmediaplaylist.html#playlistProviderChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistProviderChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistPositionChanged" fullname="QMediaPlaylist::playlistPositionChanged" href="qmediaplaylist.html#playlistPositionChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistPositionChanged(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackModeChanged" fullname="QMediaPlaylist::playbackModeChanged" href="qmediaplaylist.html#playbackModeChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackModeChanged(QMediaPlaylistNavigator::PlaybackMode mode)">
                <parameter left="QMediaPlaylistNavigator::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentResourcesChanged" fullname="QMediaPlaylist::currentResourcesChanged" href="qmediaplaylist.html#currentResourcesChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentResourcesChanged(const QMediaResourceList &amp; )">
                <parameter left="const QMediaResourceList &amp;" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeInserted" fullname="QMediaPlaylist::itemsAboutToBeInserted" href="qmediaplaylist.html#itemsAboutToBeInserted" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsInserted" fullname="QMediaPlaylist::itemsInserted" href="qmediaplaylist.html#itemsInserted" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeRemoved" fullname="QMediaPlaylist::itemsAboutToBeRemoved" href="qmediaplaylist.html#itemsAboutToBeRemoved" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsRemoved" fullname="QMediaPlaylist::itemsRemoved" href="qmediaplaylist.html#itemsRemoved" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsChanged" fullname="QMediaPlaylist::itemsChanged" href="qmediaplaylist.html#itemsChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsChanged(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaPlaylist::d_ptr" href="qmediaplaylist.html#d_ptr-var" location="qmediaplaylist.h" type="QMediaPlaylistPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaMetadata" href="qmediametadata.html" location="qmediametadata.h" bases="QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="metadataAvailable" fullname="QMediaMetadata::metadataAvailable" href="qmediametadata.html#metadataAvailable-prop" location="qmediametadata.h" type="bool">
                <getter name="metadataAvailable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="readOnly" fullname="QMediaMetadata::readOnly" href="qmediametadata.html#readOnly-prop" location="qmediametadata.h" type="bool">
                <getter name="isReadOnly"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QMediaMetadata::resources" href="qmediametadata.html#resources-prop" location="qmediametadata.h" type="QMediaResourceList">
                <getter name="resources"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaMetadata" fullname="QMediaMetadata::QMediaMetadata" href="qmediametadata.html#QMediaMetadata" location="qmediametadata.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaMetadata(QAbstractMediaObject * mediaObject)">
                <parameter left="QAbstractMediaObject *" right="" name="mediaObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaMetadata" fullname="QMediaMetadata::~QMediaMetadata" href="qmediametadata.html#dtor.QMediaMetadata" location="qmediametadata.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaMetadata()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadataAvailable" fullname="QMediaMetadata::metadataAvailable" href="qmediametadata.html#metadataAvailable-prop" location="qmediametadata.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="metadataAvailable" type="bool" signature="metadataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMediaMetadata::isReadOnly" href="qmediametadata.html#readOnly-prop" location="qmediametadata.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="readOnly" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="availableMetadata" fullname="QMediaMetadata::availableMetadata" href="qmediametadata.html#availableMetadata" location="qmediametadata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="availableMetadata() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadata" fullname="QMediaMetadata::metadata" href="qmediametadata.html#metadata" location="qmediametadata.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metadata(QString const &amp; name) const">
                <parameter left="QString const &amp;" right="" name="name" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetadata" fullname="QMediaMetadata::setMetadata" href="qmediametadata.html#setMetadata" location="qmediametadata.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMetadata(QString const &amp; name, QVariant const &amp; value)">
                <parameter left="QString const &amp;" right="" name="name" default=""/>
                <parameter left="QVariant const &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QMediaMetadata::resources" href="qmediametadata.html#resources-prop" location="qmediametadata.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="resources" type="QMediaResourceList" signature="resources() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadataChanged" fullname="QMediaMetadata::metadataChanged" href="qmediametadata.html#metadataChanged" location="qmediametadata.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metadataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metadataAvailabilityChanged" fullname="QMediaMetadata::metadataAvailabilityChanged" href="qmediametadata.html#metadataAvailabilityChanged" location="qmediametadata.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metadataAvailabilityChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="readOnlyChanged" fullname="QMediaMetadata::readOnlyChanged" href="qmediametadata.html#readOnlyChanged" location="qmediametadata.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="readOnlyChanged(bool readOnly)">
                <parameter left="bool" right="" name="readOnly" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaMetadata::d_ptr" href="qmediametadata.html#d_ptr-var" location="qmediametadata.h" type="QMediaMetadataPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaSink" href="qmediasink.html" location="qmediasink.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSink" fullname="QMediaSink::QMediaSink" href="qmediasink.html#QMediaSink" location="qmediasink.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaSink()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSink" fullname="QMediaSink::QMediaSink" href="qmediasink.html#QMediaSink-2" location="qmediasink.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaSink(const QVariant &amp; url)">
                <parameter left="const QVariant &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaSink" fullname="QMediaSink::~QMediaSink" href="qmediasink.html#dtor.QMediaSink" location="qmediasink.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaSink()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSink" fullname="QMediaSink::QMediaSink" href="qmediasink.html#QMediaSink-3" location="qmediasink.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaSink(const QMediaSink &amp; other)">
                <parameter left="const QMediaSink &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaSink::operator=" href="qmediasink.html#operator=" location="qmediasink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaSink &amp;" signature="operator=(const QMediaSink &amp; other)">
                <parameter left="const QMediaSink &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaSink::isNull" href="qmediasink.html#isNull" location="qmediasink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QMediaSink::mimeType" href="qmediasink.html#mimeType" location="qmediasink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="mimeType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMimeType" fullname="QMediaSink::setMimeType" href="qmediasink.html#setMimeType" location="qmediasink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMimeType(const QString &amp; mimeType)">
                <parameter left="const QString &amp;" right="" name="mimeType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="dataLocation" fullname="QMediaSink::dataLocation" href="qmediasink.html#dataLocation" location="qmediasink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="dataLocation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDataLocation" fullname="QMediaSink::setDataLocation" href="qmediasink.html#setDataLocation" location="qmediasink.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDataLocation(const QVariant &amp; url)">
                <parameter left="const QVariant &amp;" right="" name="url" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMediaSink::operator==" href="qmediasink.html#operator==" location="qmediasink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMediaSink &amp; other) const">
                <parameter left="const QMediaSink &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMediaSink::operator!=" href="qmediasink.html#operator!=" location="qmediasink.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMediaSink &amp; other) const">
                <parameter left="const QMediaSink &amp;" right="" name="other" default=""/>
            </function>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="QAudioDeviceEndpoint_iid" href="qaudiodeviceendpoint.html#QAudioDeviceEndpoint_iid" location="qaudiodeviceendpoint.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QAudioDeviceEndpoint" type="" signature="QAudioDeviceEndpoint_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QIODeviceEndpoint_iid" href="qiodeviceendpoint.html#QIODeviceEndpoint_iid" location="qiodeviceendpoint.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QIODeviceEndpoint" type="" signature="QIODeviceEndpoint_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="Q_MEDIA_DECLARE_ENDPOINT" href="qmediaendpointinterface.html#Q_MEDIA_DECLARE_ENDPOINT" location="" virtual="non" meta="macrowithparams" const="false" static="false" overload="false" relates="QMediaEndpointInterface" type="" signature="Q_MEDIA_DECLARE_ENDPOINT( Type,  IId)">
            <parameter left="" right="" name="Type" default=""/>
            <parameter left="" right="" name="IId" default=""/>
        </function>
        <function access="public" threadsafety="unspecified" status="commendable" name="QAudioInputDeviceControl_iid" href="qaudioinputdevicecontrol.html#QAudioInputDeviceControl_iid" location="qaudioinputdevicecontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QAudioInputDeviceControl" type="" signature="QAudioInputDeviceControl_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QAudioRendererEndpoint_iid" href="qaudiorendererendpoint.html#QAudioRendererEndpoint_iid" location="qaudiorendererendpoint.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QAudioRendererEndpoint" type="" signature="QAudioRendererEndpoint_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoRendererControl_iid" href="qvideorenderercontrol.html#QVideoRendererControl_iid" location="qvideorenderercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoRendererControl" type="" signature="QVideoRendererControl_iid()"/>
        <page access="public" status="commendable" name="index.html" href="index.html" subtype="page" title="Multimedia Library Developer Resources" fulltitle="Multimedia Library Developer Resources" subtitle="" location="index.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="reference-documentation" title="Reference documentation" level="1"/>
            <contents name="main-classes" title="Main classes" level="2"/>
            <contents name="classes-for-service-implementers" title="Classes for service implementers." level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QMediaWidgetEndpoint_iid" href="qmediawidgetendpoint.html#QMediaWidgetEndpoint_iid" location="qmediawidgetendpoint.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QMediaWidgetEndpoint" type="" signature="QMediaWidgetEndpoint_iid()"/>
    </namespace>
</INDEX>
