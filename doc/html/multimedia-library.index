<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="Multimedia Library Reference Documentation" version="">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="" module="">
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaService" href="qmediaservice.html" location="qmediaservice.h" bases="QObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="MediaEndpoint" fullname="QMediaService::MediaEndpoint" href="qmediaservice.html#MediaEndpoint-enum" location="qmediaservice.h">
                <value name="VideoInput" value="0"/>
                <value name="VideoOutput" value="1"/>
                <value name="AudioInput" value="2"/>
                <value name="AudioOutput" value="3"/>
                <value name="StreamInput" value="4"/>
                <value name="StreamOutput" value="5"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaService" fullname="QMediaService::~QMediaService" href="qmediaservice.html#dtor.QMediaService" location="qmediaservice.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaService()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEndpointSupported" fullname="QMediaService::isEndpointSupported" href="qmediaservice.html#isEndpointSupported" location="qmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="isEndpointSupported(QMediaService::MediaEndpoint endpointType)">
                <parameter left="QMediaService::MediaEndpoint" right="" name="endpointType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInputStream" fullname="QMediaService::setInputStream" href="qmediaservice.html#setInputStream" location="qmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setInputStream(QIODevice * stream)">
                <parameter left="QIODevice *" right="" name="stream" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="inputStream" fullname="QMediaService::inputStream" href="qmediaservice.html#inputStream" location="qmediaservice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="inputStream() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOutputStream" fullname="QMediaService::setOutputStream" href="qmediaservice.html#setOutputStream" location="qmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setOutputStream(QIODevice * stream)">
                <parameter left="QIODevice *" right="" name="stream" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="outputStream" fullname="QMediaService::outputStream" href="qmediaservice.html#outputStream" location="qmediaservice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QIODevice *" signature="outputStream() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="activeEndpoints" fullname="QMediaService::activeEndpoints" href="qmediaservice.html#activeEndpoints" location="qmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QList&lt;QString&gt;" signature="activeEndpoints(QMediaService::MediaEndpoint endpointType)">
                <parameter left="QMediaService::MediaEndpoint" right="" name="endpointType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setActiveEndpoint" fullname="QMediaService::setActiveEndpoint" href="qmediaservice.html#setActiveEndpoint" location="qmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setActiveEndpoint(QMediaService::MediaEndpoint endpointType, const QString &amp; endpoint)">
                <parameter left="QMediaService::MediaEndpoint" right="" name="endpointType" default=""/>
                <parameter left="const QString &amp;" right="" name="endpoint" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endpointDescription" fullname="QMediaService::endpointDescription" href="qmediaservice.html#endpointDescription" location="qmediaservice.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="QString" signature="endpointDescription(QMediaService::MediaEndpoint endpointType, const QString &amp; endpoint)">
                <parameter left="QMediaService::MediaEndpoint" right="" name="endpointType" default=""/>
                <parameter left="const QString &amp;" right="" name="endpoint" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedEndpoints" fullname="QMediaService::supportedEndpoints" href="qmediaservice.html#supportedEndpoints" location="qmediaservice.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QList&lt;QString&gt;" signature="supportedEndpoints(QMediaService::MediaEndpoint endpointType) const">
                <parameter left="QMediaService::MediaEndpoint" right="" name="endpointType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="control" fullname="QMediaService::control" href="qmediaservice.html#control" location="qmediaservice.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaControl *" signature="control(const char * interface) const">
                <parameter left="const char *" right="" name="interface" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="control" fullname="QMediaService::control" href="qmediaservice.html#control-2" location="qmediaservice.h" virtual="non" meta="plain" const="true" static="false" overload="true" overload-number="2" type="T" signature="control() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaService" fullname="QMediaService::QMediaService" href="qmediaservice.html#QMediaService" location="qmediaservice.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaService(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaService::d_ptr" href="qmediaservice.html#d_ptr-var" location="qmediaservice.h" type="QMediaServicePrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaImageViewer" href="qmediaimageviewer.html" location="qmediaimageviewer.h" bases="QMediaObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaImageViewer::state" href="qmediaimageviewer.html#state-prop" location="qmediaimageviewer.h" type="State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaImageViewer::mediaStatus" href="qmediaimageviewer.html#mediaStatus-prop" location="qmediaimageviewer.h" type="MediaStatus">
                <getter name="mediaStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaImageViewer::media" href="qmediaimageviewer.html#media-prop" location="qmediaimageviewer.h" type="QMediaSource">
                <getter name="media"/>
                <setter name="setMedia"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentMedia" fullname="QMediaImageViewer::currentMedia" href="qmediaimageviewer.html#currentMedia-prop" location="qmediaimageviewer.h" type="QMediaResource">
                <getter name="currentMedia"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="timeout" fullname="QMediaImageViewer::timeout" href="qmediaimageviewer.html#timeout-prop" location="qmediaimageviewer.h" type="int">
                <getter name="timeout"/>
                <setter name="setTimeout"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaImageViewer::State" href="qmediaimageviewer.html#State-enum" location="qmediaimageviewer.h">
                <value name="StoppedState" value="0"/>
                <value name="PlayingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MediaStatus" fullname="QMediaImageViewer::MediaStatus" href="qmediaimageviewer.html#MediaStatus-enum" location="qmediaimageviewer.h">
                <value name="NoMedia" value="0"/>
                <value name="LoadingMedia" value="1"/>
                <value name="LoadedMedia" value="2"/>
                <value name="InvalidMedia" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaImageViewer" fullname="QMediaImageViewer::QMediaImageViewer" href="qmediaimageviewer.html#QMediaImageViewer" location="qmediaimageviewer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaImageViewer(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaImageViewer" fullname="QMediaImageViewer::~QMediaImageViewer" href="qmediaimageviewer.html#dtor.QMediaImageViewer" location="qmediaimageviewer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaImageViewer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaImageViewer::state" href="qmediaimageviewer.html#state-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaImageViewer::mediaStatus" href="qmediaimageviewer.html#mediaStatus-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="mediaStatus" type="MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaImageViewer::media" href="qmediaimageviewer.html#media-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="media" type="QMediaSource" signature="media() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMedia" fullname="QMediaImageViewer::currentMedia" href="qmediaimageviewer.html#currentMedia-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentMedia" type="QMediaResource" signature="currentMedia() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="timeout" fullname="QMediaImageViewer::timeout" href="qmediaimageviewer.html#timeout-prop" location="qmediaimageviewer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="timeout" type="int" signature="timeout() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMedia" fullname="QMediaImageViewer::setMedia" href="qmediaimageviewer.html#media-prop" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="media" type="void" signature="setMedia(const QMediaSource &amp; media)">
                <parameter left="const QMediaSource &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaImageViewer::play" href="qmediaimageviewer.html#play" location="qmediaimageviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaImageViewer::pause" href="qmediaimageviewer.html#pause" location="qmediaimageviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaImageViewer::stop" href="qmediaimageviewer.html#stop" location="qmediaimageviewer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTimeout" fullname="QMediaImageViewer::setTimeout" href="qmediaimageviewer.html#timeout-prop" location="qmediaimageviewer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="timeout" type="void" signature="setTimeout(int timeout)">
                <parameter left="int" right="" name="timeout" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaImageViewer::stateChanged" href="qmediaimageviewer.html#stateChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaImageViewer::State state)">
                <parameter left="QMediaImageViewer::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaImageViewer::mediaStatusChanged" href="qmediaimageviewer.html#mediaStatusChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaImageViewer::MediaStatus status)">
                <parameter left="QMediaImageViewer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaChanged" fullname="QMediaImageViewer::mediaChanged" href="qmediaimageviewer.html#mediaChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaChanged(const QMediaSource &amp; media)">
                <parameter left="const QMediaSource &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMediaChanged" fullname="QMediaImageViewer::currentMediaChanged" href="qmediaimageviewer.html#currentMediaChanged" location="qmediaimageviewer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMediaChanged(const QMediaResource &amp; media)">
                <parameter left="const QMediaResource &amp;" right="" name="media" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="timerEvent" fullname="QMediaImageViewer::timerEvent" href="qmediaimageviewer.html#timerEvent" location="qmediaimageviewer.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="timerEvent(QTimerEvent * event)">
                <parameter left="QTimerEvent *" right="" name="event" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoDeviceControl" href="qvideodevicecontrol.html" location="qvideodevicecontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoDeviceControl" fullname="QVideoDeviceControl::~QVideoDeviceControl" href="qvideodevicecontrol.html#dtor.QVideoDeviceControl" location="qvideodevicecontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoDeviceControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceCount" fullname="QVideoDeviceControl::deviceCount" href="qvideodevicecontrol.html#deviceCount" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="deviceCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QVideoDeviceControl::name" href="qvideodevicecontrol.html#name" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QVideoDeviceControl::description" href="qvideodevicecontrol.html#description" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="description(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QVideoDeviceControl::icon" href="qvideodevicecontrol.html#icon" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultDevice" fullname="QVideoDeviceControl::defaultDevice" href="qvideodevicecontrol.html#defaultDevice" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="defaultDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QVideoDeviceControl::selectedDevice" href="qvideodevicecontrol.html#selectedDevice" location="qvideodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="selectedDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectedDevice" fullname="QVideoDeviceControl::setSelectedDevice" href="qvideodevicecontrol.html#setSelectedDevice" location="qvideodevicecontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="setSelectedDevice(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QVideoDeviceControl::selectedDeviceChanged" href="qvideodevicecontrol.html#selectedDeviceChanged" location="qvideodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selectedDeviceChanged(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QVideoDeviceControl::selectedDeviceChanged" href="qvideodevicecontrol.html#selectedDeviceChanged-2" location="qvideodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="selectedDeviceChanged(const QString &amp; deviceName)">
                <parameter left="const QString &amp;" right="" name="deviceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devicesChanged" fullname="QVideoDeviceControl::devicesChanged" href="qvideodevicecontrol.html#devicesChanged" location="qvideodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="devicesChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QVideoDeviceControl" fullname="QVideoDeviceControl::QVideoDeviceControl" href="qvideodevicecontrol.html#QVideoDeviceControl" location="qvideodevicecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoDeviceControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QRadioPlayerControl" href="qradioplayercontrol.html" location="qradioplayercontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRadioPlayerControl" fullname="QRadioPlayerControl::~QRadioPlayerControl" href="qradioplayercontrol.html#dtor.QRadioPlayerControl" location="qradioplayercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRadioPlayerControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioPlayerControl::band" href="qradioplayercontrol.html#band" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRadioPlayer::Band" signature="band() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBand" fullname="QRadioPlayerControl::setBand" href="qradioplayercontrol.html#setBand" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBand(QRadioPlayer::Band band)">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupportedBand" fullname="QRadioPlayerControl::isSupportedBand" href="qradioplayercontrol.html#isSupportedBand" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupportedBand(QRadioPlayer::Band band) const">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioPlayerControl::frequency" href="qradioplayercontrol.html#frequency" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QRadioPlayerControl::setFrequency" href="qradioplayercontrol.html#setFrequency" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStereo" fullname="QRadioPlayerControl::isStereo" href="qradioplayercontrol.html#isStereo" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isStereo() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStereo" fullname="QRadioPlayerControl::setStereo" href="qradioplayercontrol.html#setStereo" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setStereo(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioPlayerControl::signalStrength" href="qradioplayercontrol.html#signalStrength" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="signalStrength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QRadioPlayerControl::duration" href="qradioplayercontrol.html#duration" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioPlayerControl::volume" href="qradioplayercontrol.html#volume" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QRadioPlayerControl::setVolume" href="qradioplayercontrol.html#setVolume" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QRadioPlayerControl::isMuted" href="qradioplayercontrol.html#isMuted" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QRadioPlayerControl::setMuted" href="qradioplayercontrol.html#setMuted" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSearching" fullname="QRadioPlayerControl::isSearching" href="qradioplayercontrol.html#isSearching" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSearching() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchForward" fullname="QRadioPlayerControl::searchForward" href="qradioplayercontrol.html#searchForward" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="searchForward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchBackward" fullname="QRadioPlayerControl::searchBackward" href="qradioplayercontrol.html#searchBackward" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="searchBackward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelSearch" fullname="QRadioPlayerControl::cancelSearch" href="qradioplayercontrol.html#cancelSearch" location="qradioplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="cancelSearch()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bandChanged" fullname="QRadioPlayerControl::bandChanged" href="qradioplayercontrol.html#bandChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bandChanged(QRadioPlayer::Band band)">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyChanged" fullname="QRadioPlayerControl::frequencyChanged" href="qradioplayercontrol.html#frequencyChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="frequencyChanged(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoStatusChanged" fullname="QRadioPlayerControl::stereoStatusChanged" href="qradioplayercontrol.html#stereoStatusChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stereoStatusChanged(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchingStatusChanged" fullname="QRadioPlayerControl::searchingStatusChanged" href="qradioplayercontrol.html#searchingStatusChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchingStatusChanged(bool searching)">
                <parameter left="bool" right="" name="searching" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrengthChanged" fullname="QRadioPlayerControl::signalStrengthChanged" href="qradioplayercontrol.html#signalStrengthChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="signalStrengthChanged(int signalStrength)">
                <parameter left="int" right="" name="signalStrength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QRadioPlayerControl::durationChanged" href="qradioplayercontrol.html#durationChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QRadioPlayerControl::volumeChanged" href="qradioplayercontrol.html#volumeChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QRadioPlayerControl::mutingChanged" href="qradioplayercontrol.html#mutingChanged" location="qradioplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QRadioPlayerControl" fullname="QRadioPlayerControl::QRadioPlayerControl" href="qradioplayercontrol.html#QRadioPlayerControl" location="qradioplayercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRadioPlayerControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWidget" href="qvideowidget.html" location="qvideowidget.h" bases="QWidget" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="displayMode" fullname="QVideoWidget::displayMode" href="qvideowidget.html#displayMode-prop" location="qvideowidget.h" type="DisplayMode">
                <getter name="displayMode"/>
                <setter name="setDisplayMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="aspectRatio" fullname="QVideoWidget::aspectRatio" href="qvideowidget.html#aspectRatio-prop" location="qvideowidget.h" type="AspectRatio">
                <getter name="aspectRatio"/>
                <setter name="setAspectRatio"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="customPixelAspectRatio" fullname="QVideoWidget::customPixelAspectRatio" href="qvideowidget.html#customPixelAspectRatio-prop" location="qvideowidget.h" type="QSize">
                <getter name="customPixelAspectRatio"/>
                <setter name="setCustomPixelAspectRatio"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidget::brightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.h" type="int">
                <getter name="brightness"/>
                <setter name="setBrightness"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidget::contrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.h" type="int">
                <getter name="contrast"/>
                <setter name="setContrast"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidget::hue" href="qvideowidget.html#hue-prop" location="qvideowidget.h" type="int">
                <getter name="hue"/>
                <setter name="setHue"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidget::saturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.h" type="int">
                <getter name="saturation"/>
                <setter name="setSaturation"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DisplayMode" fullname="QVideoWidget::DisplayMode" href="qvideowidget.html#DisplayMode-enum" location="qvideowidget.h">
                <value name="WindowedDisplay" value="0"/>
                <value name="FullscreenDisplay" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="AspectRatio" fullname="QVideoWidget::AspectRatio" href="qvideowidget.html#AspectRatio-enum" location="qvideowidget.h">
                <value name="AspectRatioAuto" value="0"/>
                <value name="AspectRatioWidget" value="1"/>
                <value name="AspectRatioCustom" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWidget" fullname="QVideoWidget::QVideoWidget" href="qvideowidget.html#QVideoWidget" location="qvideowidget.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWidget(QMediaObject * object, QWidget * parent)">
                <parameter left="QMediaObject *" right="" name="object" default=""/>
                <parameter left="QWidget *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWidget" fullname="QVideoWidget::~QVideoWidget" href="qvideowidget.html#dtor.QVideoWidget" location="qvideowidget.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWidget()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayMode" fullname="QVideoWidget::displayMode" href="qvideowidget.html#displayMode-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="displayMode" type="DisplayMode" signature="displayMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatio" fullname="QVideoWidget::aspectRatio" href="qvideowidget.html#aspectRatio-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="aspectRatio" type="AspectRatio" signature="aspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="customPixelAspectRatio" fullname="QVideoWidget::customPixelAspectRatio" href="qvideowidget.html#customPixelAspectRatio-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="customPixelAspectRatio" type="QSize" signature="customPixelAspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidget::brightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="brightness" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidget::contrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="contrast" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidget::hue" href="qvideowidget.html#hue-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="hue" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidget::saturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="saturation" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="eventFilter" fullname="QVideoWidget::eventFilter" href="qvideowidget.html#eventFilter" location="qvideowidget.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="eventFilter(QObject * object, QEvent * e)">
                <parameter left="QObject *" right="" name="object" default=""/>
                <parameter left="QEvent *" right="" name="e" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVisible" fullname="QVideoWidget::setVisible" href="qvideowidget.html#setVisible" location="qvideowidget.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="setVisible(bool visible)">
                <parameter left="bool" right="" name="visible" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayMode" fullname="QVideoWidget::setDisplayMode" href="qvideowidget.html#displayMode-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="displayMode" type="void" signature="setDisplayMode(DisplayMode mode)">
                <parameter left="DisplayMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatio" fullname="QVideoWidget::setAspectRatio" href="qvideowidget.html#aspectRatio-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="aspectRatio" type="void" signature="setAspectRatio(AspectRatio ratio)">
                <parameter left="AspectRatio" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomPixelAspectRatio" fullname="QVideoWidget::setCustomPixelAspectRatio" href="qvideowidget.html#customPixelAspectRatio-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="customPixelAspectRatio" type="void" signature="setCustomPixelAspectRatio(const QSize &amp; customRatio)">
                <parameter left="const QSize &amp;" right="" name="customRatio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWidget::setBrightness" href="qvideowidget.html#brightness-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="brightness" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWidget::setContrast" href="qvideowidget.html#contrast-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="contrast" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWidget::setHue" href="qvideowidget.html#hue-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="hue" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWidget::setSaturation" href="qvideowidget.html#saturation-prop" location="qvideowidget.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="saturation" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayModeChanged" fullname="QVideoWidget::displayModeChanged" href="qvideowidget.html#displayModeChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="displayModeChanged(QVideoWidget::DisplayMode mode)">
                <parameter left="QVideoWidget::DisplayMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatioChanged" fullname="QVideoWidget::aspectRatioChanged" href="qvideowidget.html#aspectRatioChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="aspectRatioChanged(QVideoWidget::AspectRatio ratio)">
                <parameter left="QVideoWidget::AspectRatio" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customPixelAspectRatioChanged" fullname="QVideoWidget::customPixelAspectRatioChanged" href="qvideowidget.html#customPixelAspectRatioChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="customPixelAspectRatioChanged(const QSize &amp; ratio)">
                <parameter left="const QSize &amp;" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWidget::brightnessChanged" href="qvideowidget.html#brightnessChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWidget::contrastChanged" href="qvideowidget.html#contrastChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWidget::hueChanged" href="qvideowidget.html#hueChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWidget::saturationChanged" href="qvideowidget.html#saturationChanged" location="qvideowidget.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="keyPressEvent" fullname="QVideoWidget::keyPressEvent" href="qvideowidget.html#keyPressEvent" location="qvideowidget.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="keyPressEvent(QKeyEvent * event)">
                <parameter left="QKeyEvent *" right="" name="event" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QVideoWidget::d_ptr" href="qvideowidget.html#d_ptr-var" location="qvideowidget.h" type="QVideoWidgetPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QRadioPlayer" href="qradioplayer.html" location="qradioplayer.h" bases="QMediaObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioPlayer::band" href="qradioplayer.html#band-prop" location="qradioplayer.h" type="Band">
                <getter name="band"/>
                <setter name="setBand"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioPlayer::frequency" href="qradioplayer.html#frequency-prop" location="qradioplayer.h" type="int">
                <getter name="frequency"/>
                <setter name="setFrequency"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="stereo" fullname="QRadioPlayer::stereo" href="qradioplayer.html#stereo-prop" location="qradioplayer.h" type="bool">
                <getter name="isStereo"/>
                <setter name="setStereo"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioPlayer::signalStrength" href="qradioplayer.html#signalStrength-prop" location="qradioplayer.h" type="int">
                <getter name="signalStrength"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QRadioPlayer::duration" href="qradioplayer.html#duration-prop" location="qradioplayer.h" type="qint64">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioPlayer::volume" href="qradioplayer.html#volume-prop" location="qradioplayer.h" type="int">
                <getter name="volume"/>
                <setter name="setVolume"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="QRadioPlayer::muted" href="qradioplayer.html#muted-prop" location="qradioplayer.h" type="bool">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="searching" fullname="QRadioPlayer::searching" href="qradioplayer.html#searching-prop" location="qradioplayer.h" type="bool">
                <getter name="isSearching"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Band" fullname="QRadioPlayer::Band" href="qradioplayer.html#Band-enum" location="qradioplayer.h">
                <value name="AM" value="0"/>
                <value name="FM" value="1"/>
                <value name="SW" value="2"/>
                <value name="LW" value="3"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QRadioPlayer" fullname="QRadioPlayer::QRadioPlayer" href="qradioplayer.html#QRadioPlayer" location="qradioplayer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QRadioPlayer(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QRadioPlayer" fullname="QRadioPlayer::~QRadioPlayer" href="qradioplayer.html#dtor.QRadioPlayer" location="qradioplayer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QRadioPlayer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QRadioPlayer::isValid" href="qradioplayer.html#isValid" location="qradioplayer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="band" fullname="QRadioPlayer::band" href="qradioplayer.html#band-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="band" type="Band" signature="band() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSupportedBand" fullname="QRadioPlayer::isSupportedBand" href="qradioplayer.html#isSupportedBand" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSupportedBand(Band b) const">
                <parameter left="Band" right="" name="b" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QRadioPlayer::frequency" href="qradioplayer.html#frequency-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="frequency" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isStereo" fullname="QRadioPlayer::isStereo" href="qradioplayer.html#stereo-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="stereo" type="bool" signature="isStereo() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrength" fullname="QRadioPlayer::signalStrength" href="qradioplayer.html#signalStrength-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="signalStrength" type="int" signature="signalStrength() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QRadioPlayer::duration" href="qradioplayer.html#duration-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QRadioPlayer::volume" href="qradioplayer.html#volume-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="volume" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QRadioPlayer::isMuted" href="qradioplayer.html#muted-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="muted" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSearching" fullname="QRadioPlayer::isSearching" href="qradioplayer.html#searching-prop" location="qradioplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="searching" type="bool" signature="isSearching() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchForward" fullname="QRadioPlayer::searchForward" href="qradioplayer.html#searchForward" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="searchForward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchBackward" fullname="QRadioPlayer::searchBackward" href="qradioplayer.html#searchBackward" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="searchBackward()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="cancelSearch" fullname="QRadioPlayer::cancelSearch" href="qradioplayer.html#cancelSearch" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="cancelSearch()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBand" fullname="QRadioPlayer::setBand" href="qradioplayer.html#band-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="band" type="void" signature="setBand(Band band)">
                <parameter left="Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QRadioPlayer::setFrequency" href="qradioplayer.html#frequency-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="frequency" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStereo" fullname="QRadioPlayer::setStereo" href="qradioplayer.html#stereo-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="stereo" type="void" signature="setStereo(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QRadioPlayer::setVolume" href="qradioplayer.html#volume-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="volume" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QRadioPlayer::setMuted" href="qradioplayer.html#muted-prop" location="qradioplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="muted" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bandChanged" fullname="QRadioPlayer::bandChanged" href="qradioplayer.html#bandChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bandChanged(QRadioPlayer::Band band)">
                <parameter left="QRadioPlayer::Band" right="" name="band" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequencyChanged" fullname="QRadioPlayer::frequencyChanged" href="qradioplayer.html#frequencyChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="frequencyChanged(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stereoStatusChanged" fullname="QRadioPlayer::stereoStatusChanged" href="qradioplayer.html#stereoStatusChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stereoStatusChanged(bool stereo)">
                <parameter left="bool" right="" name="stereo" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="searchingStatusChanged" fullname="QRadioPlayer::searchingStatusChanged" href="qradioplayer.html#searchingStatusChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="searchingStatusChanged(bool searching)">
                <parameter left="bool" right="" name="searching" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalStrengthChanged" fullname="QRadioPlayer::signalStrengthChanged" href="qradioplayer.html#signalStrengthChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="signalStrengthChanged(int signalStrength)">
                <parameter left="int" right="" name="signalStrength" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QRadioPlayer::durationChanged" href="qradioplayer.html#durationChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QRadioPlayer::volumeChanged" href="qradioplayer.html#volumeChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QRadioPlayer::mutingChanged" href="qradioplayer.html#mutingChanged" location="qradioplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QAudioFormat" href="qaudioformat.html" location="qaudioformat.h" bases="" module="QtMultimedia">
            <enum access="public" threadsafety="unspecified" status="commendable" name="SampleType" fullname="QAudioFormat::SampleType" href="qaudioformat.html#SampleType-enum" location="qaudioformat.h">
                <value name="Unknown" value="0"/>
                <value name="SignedInt" value="1"/>
                <value name="UnSignedInt" value="2"/>
                <value name="Float" value="3"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Endian" fullname="QAudioFormat::Endian" href="qaudioformat.html#Endian-enum" location="qaudioformat.h">
                <value name="BigEndian" value="QSysInfo::BigEndian"/>
                <value name="LittleEndian" value="QSysInfo::LittleEndian"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioFormat" fullname="QAudioFormat::QAudioFormat" href="qaudioformat.html#QAudioFormat" location="qaudioformat.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioFormat" fullname="QAudioFormat::QAudioFormat" href="qaudioformat.html#QAudioFormat-2" location="qaudioformat.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QAudioFormat(const QAudioFormat &amp; other)">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioFormat" fullname="QAudioFormat::~QAudioFormat" href="qaudioformat.html#dtor.QAudioFormat" location="qaudioformat.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioFormat()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QAudioFormat::operator=" href="qaudioformat.html#operator=" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QAudioFormat &amp;" signature="operator=(const QAudioFormat &amp; other)">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QAudioFormat::operator==" href="qaudioformat.html#operator==" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QAudioFormat &amp; other) const">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QAudioFormat::operator!=" href="qaudioformat.html#operator!=" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QAudioFormat &amp; other) const">
                <parameter left="const QAudioFormat &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QAudioFormat::isNull" href="qaudioformat.html#isNull" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QAudioFormat::setFrequency" href="qaudioformat.html#setFrequency" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QAudioFormat::frequency" href="qaudioformat.html#frequency" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannels" fullname="QAudioFormat::setChannels" href="qaudioformat.html#setChannels" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannels(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QAudioFormat::channels" href="qaudioformat.html#channels" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channels() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleSize" fullname="QAudioFormat::setSampleSize" href="qaudioformat.html#setSampleSize" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleSize(int sampleSize)">
                <parameter left="int" right="" name="sampleSize" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleSize" fullname="QAudioFormat::sampleSize" href="qaudioformat.html#sampleSize" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCodec" fullname="QAudioFormat::setCodec" href="qaudioformat.html#setCodec" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCodec(QString codec)">
                <parameter left="QString" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="codec" fullname="QAudioFormat::codec" href="qaudioformat.html#codec" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="codec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setByteOrder" fullname="QAudioFormat::setByteOrder" href="qaudioformat.html#setByteOrder" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setByteOrder(QAudioFormat::Endian byteOrder)">
                <parameter left="QAudioFormat::Endian" right="" name="byteOrder" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="byteOrder" fullname="QAudioFormat::byteOrder" href="qaudioformat.html#byteOrder" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat::Endian" signature="byteOrder() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleType" fullname="QAudioFormat::setSampleType" href="qaudioformat.html#setSampleType" location="qaudioformat.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleType(QAudioFormat::SampleType sampleType)">
                <parameter left="QAudioFormat::SampleType" right="" name="sampleType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleType" fullname="QAudioFormat::sampleType" href="qaudioformat.html#sampleType" location="qaudioformat.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat::SampleType" signature="sampleType() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCamera" href="qcamera.html" location="qcamera.h" bases="QMediaObject" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QCamera::State" href="qcamera.html#State-enum" location="qcamera.h">
                <value name="ActiveState" value="0"/>
                <value name="StoppedState" value="1"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FlashMode" fullname="QCamera::FlashMode" href="qcamera.html#FlashMode-enum" location="qcamera.h" typedef="QCamera::FlashModes">
                <value name="FlashOff" value="0x1"/>
                <value name="FlashOn" value="0x2"/>
                <value name="FlashAuto" value="0x4"/>
                <value name="FlashRedEyeReduction" value="0x8"/>
                <value name="FlashFill" value="0x10"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FlashModes" fullname="QCamera::FlashModes" href="qcamera.html#FlashModes-typedef" location="qcamera.h" enum="QCamera::FlashMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FocusMode" fullname="QCamera::FocusMode" href="qcamera.html#FocusMode-enum" location="qcamera.h" typedef="QCamera::FocusModes">
                <value name="ManualFocus" value="0x1"/>
                <value name="AutoFocus" value="0x2"/>
                <value name="ContinuousFocus" value="0x4"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FocusModes" fullname="QCamera::FocusModes" href="qcamera.html#FocusModes-typedef" location="qcamera.h" enum="QCamera::FocusMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="FocusStatus" fullname="QCamera::FocusStatus" href="qcamera.html#FocusStatus-enum" location="qcamera.h">
                <value name="FocusDisabled" value="0"/>
                <value name="FocusRequested" value="1"/>
                <value name="FocusReached" value="2"/>
                <value name="FocusLost" value="3"/>
                <value name="FocusUnableToReach" value="4"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ExposureMode" fullname="QCamera::ExposureMode" href="qcamera.html#ExposureMode-enum" location="qcamera.h" typedef="QCamera::ExposureModes">
                <value name="ExposureManual" value="0x1"/>
                <value name="ExposureAuto" value="0x2"/>
                <value name="ExposureNight" value="0x4"/>
                <value name="ExposureBacklight" value="0x8"/>
                <value name="ExposureSpotlight" value="0x10"/>
                <value name="ExposureSports" value="0x20"/>
                <value name="ExposureSnow" value="0x40"/>
                <value name="ExposureBeach" value="0x80"/>
                <value name="ExposureLargeAperture" value="0x100"/>
                <value name="ExposureSmallAperture" value="0x200"/>
                <value name="ExposurePortrait" value="0x400"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="ExposureModes" fullname="QCamera::ExposureModes" href="qcamera.html#ExposureModes-typedef" location="qcamera.h" enum="QCamera::ExposureMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="ExposureStatus" fullname="QCamera::ExposureStatus" href="qcamera.html#ExposureStatus-enum" location="qcamera.h">
                <value name="CorrectExposure" value="0"/>
                <value name="UnderExposure" value="1"/>
                <value name="OverExposure" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MeteringMode" fullname="QCamera::MeteringMode" href="qcamera.html#MeteringMode-enum" location="qcamera.h" typedef="QCamera::MeteringModes">
                <value name="MeteringAverage" value="0x1"/>
                <value name="MeteringSpot" value="0x2"/>
                <value name="MeteringMatrix" value="0x4"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="MeteringModes" fullname="QCamera::MeteringModes" href="qcamera.html#MeteringModes-typedef" location="qcamera.h" enum="QCamera::MeteringMode"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="WhiteBalanceMode" fullname="QCamera::WhiteBalanceMode" href="qcamera.html#WhiteBalanceMode-enum" location="qcamera.h" typedef="QCamera::WhiteBalanceModes">
                <value name="WhiteBalanceManual" value="0x1"/>
                <value name="WhiteBalanceAuto" value="0x2"/>
                <value name="WhiteBalanceSunlight" value="0x4"/>
                <value name="WhiteBalanceCloudy" value="0x8"/>
                <value name="WhiteBalanceShade" value="0x10"/>
                <value name="WhiteBalanceTungsten" value="0x20"/>
                <value name="WhiteBalanceFluorescent" value="0x40"/>
                <value name="WhiteBalanceIncandescent" value="0x80"/>
                <value name="WhiteBalanceFlash" value="0x100"/>
                <value name="WhiteBalanceSunset" value="0x200"/>
            </enum>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="WhiteBalanceModes" fullname="QCamera::WhiteBalanceModes" href="qcamera.html#WhiteBalanceModes-typedef" location="qcamera.h" enum="QCamera::WhiteBalanceMode"/>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCamera::state" href="qcamera.html#state-prop" location="qcamera.h" type="QCamera::State">
                <getter name="state"/>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QCamera" fullname="QCamera::QCamera" href="qcamera.html#QCamera" location="qcamera.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCamera(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCamera" fullname="QCamera::~QCamera" href="qcamera.html#dtor.QCamera" location="qcamera.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCamera()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="devices" fullname="QCamera::devices" href="qcamera.html#devices" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="devices() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceDescription" fullname="QCamera::deviceDescription" href="qcamera.html#deviceDescription" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="deviceDescription(const QString &amp; device) const">
                <parameter left="const QString &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDevice" fullname="QCamera::setDevice" href="qcamera.html#setDevice" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDevice(const QString &amp; device)">
                <parameter left="const QString &amp;" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QCamera::isValid" href="qcamera.html#isValid" location="qcamera.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QCamera::start" href="qcamera.html#start" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QCamera::stop" href="qcamera.html#stop" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCamera::state" href="qcamera.html#state-prop" location="qcamera.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashMode" fullname="QCamera::flashMode" href="qcamera.html#flashMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FlashMode" signature="flashMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlashMode" fullname="QCamera::setFlashMode" href="qcamera.html#setFlashMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFlashMode(FlashMode mode)">
                <parameter left="FlashMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFlashModes" fullname="QCamera::supportedFlashModes" href="qcamera.html#supportedFlashModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FlashModes" signature="supportedFlashModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashReady" fullname="QCamera::isFlashReady" href="qcamera.html#isFlashReady" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashReady() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusMode" fullname="QCamera::focusMode" href="qcamera.html#focusMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FocusMode" signature="focusMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusMode" fullname="QCamera::setFocusMode" href="qcamera.html#setFocusMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusMode(FocusMode mode)">
                <parameter left="FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFocusModes" fullname="QCamera::supportedFocusModes" href="qcamera.html#supportedFocusModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FocusModes" signature="supportedFocusModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatus" fullname="QCamera::focusStatus" href="qcamera.html#focusStatus" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="FocusStatus" signature="focusStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="macroFocusingEnabled" fullname="QCamera::macroFocusingEnabled" href="qcamera.html#macroFocusingEnabled" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="macroFocusingEnabled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMacroFocusingSupported" fullname="QCamera::isMacroFocusingSupported" href="qcamera.html#isMacroFocusingSupported" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMacroFocusingSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMacroFocusingEnabled" fullname="QCamera::setMacroFocusingEnabled" href="qcamera.html#setMacroFocusingEnabled" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMacroFocusingEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureMode" fullname="QCamera::exposureMode" href="qcamera.html#exposureMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ExposureMode" signature="exposureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureMode" fullname="QCamera::setExposureMode" href="qcamera.html#setExposureMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureMode(ExposureMode mode)">
                <parameter left="ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedExposureModes" fullname="QCamera::supportedExposureModes" href="qcamera.html#supportedExposureModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ExposureModes" signature="supportedExposureModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureCompensation" fullname="QCamera::exposureCompensation" href="qcamera.html#exposureCompensation" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="exposureCompensation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureCompensation" fullname="QCamera::setExposureCompensation" href="qcamera.html#setExposureCompensation" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureCompensation(qreal ev)">
                <parameter left="qreal" right="" name="ev" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="meteringMode" fullname="QCamera::meteringMode" href="qcamera.html#meteringMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MeteringMode" signature="meteringMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMeteringMode" fullname="QCamera::setMeteringMode" href="qcamera.html#setMeteringMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMeteringMode(MeteringMode mode)">
                <parameter left="MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMeteringModes" fullname="QCamera::supportedMeteringModes" href="qcamera.html#supportedMeteringModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="MeteringModes" signature="supportedMeteringModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="whiteBalanceMode" fullname="QCamera::whiteBalanceMode" href="qcamera.html#whiteBalanceMode" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WhiteBalanceMode" signature="whiteBalanceMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWhiteBalanceMode" fullname="QCamera::setWhiteBalanceMode" href="qcamera.html#setWhiteBalanceMode" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setWhiteBalanceMode(WhiteBalanceMode mode)">
                <parameter left="WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedWhiteBalanceModes" fullname="QCamera::supportedWhiteBalanceModes" href="qcamera.html#supportedWhiteBalanceModes" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="WhiteBalanceModes" signature="supportedWhiteBalanceModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manualWhiteBalance" fullname="QCamera::manualWhiteBalance" href="qcamera.html#manualWhiteBalance" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="manualWhiteBalance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualWhiteBalance" fullname="QCamera::setManualWhiteBalance" href="qcamera.html#setManualWhiteBalance" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualWhiteBalance(int colorTemperature)">
                <parameter left="int" right="" name="colorTemperature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isoSensitivity" fullname="QCamera::isoSensitivity" href="qcamera.html#isoSensitivity" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="isoSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedIsoSensitivityRange" fullname="QCamera::supportedIsoSensitivityRange" href="qcamera.html#supportedIsoSensitivityRange" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;int, int&gt;" signature="supportedIsoSensitivityRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualIsoSensitivity" fullname="QCamera::setManualIsoSensitivity" href="qcamera.html#setManualIsoSensitivity" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualIsoSensitivity(int iso)">
                <parameter left="int" right="" name="iso" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoIsoSensitivity" fullname="QCamera::setAutoIsoSensitivity" href="qcamera.html#setAutoIsoSensitivity" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoIsoSensitivity()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aperture" fullname="QCamera::aperture" href="qcamera.html#aperture" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="aperture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedApertureRange" fullname="QCamera::supportedApertureRange" href="qcamera.html#supportedApertureRange" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;qreal, qreal&gt;" signature="supportedApertureRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualAperture" fullname="QCamera::setManualAperture" href="qcamera.html#setManualAperture" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualAperture(qreal aperture)">
                <parameter left="qreal" right="" name="aperture" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoAperture" fullname="QCamera::setAutoAperture" href="qcamera.html#setAutoAperture" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoAperture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutterSpeed" fullname="QCamera::shutterSpeed" href="qcamera.html#shutterSpeed" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="shutterSpeed() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedShutterSpeedRange" fullname="QCamera::supportedShutterSpeedRange" href="qcamera.html#supportedShutterSpeedRange" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPair&lt;qreal, qreal&gt;" signature="supportedShutterSpeedRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualShutterSpeed" fullname="QCamera::setManualShutterSpeed" href="qcamera.html#setManualShutterSpeed" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualShutterSpeed(qreal seconds)">
                <parameter left="qreal" right="" name="seconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoShutterSpeed" fullname="QCamera::setAutoShutterSpeed" href="qcamera.html#setAutoShutterSpeed" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoShutterSpeed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumOpticalZoom" fullname="QCamera::maximumOpticalZoom" href="qcamera.html#maximumOpticalZoom" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumOpticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumDigitalZoom" fullname="QCamera::maximumDigitalZoom" href="qcamera.html#maximumDigitalZoom" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumDigitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValue" fullname="QCamera::zoomValue" href="qcamera.html#zoomValue" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="zoomValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomTo" fullname="QCamera::zoomTo" href="qcamera.html#zoomTo" location="qcamera.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="zoomTo(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isExposureLocked" fullname="QCamera::isExposureLocked" href="qcamera.html#isExposureLocked" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isExposureLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusLocked" fullname="QCamera::isFocusLocked" href="qcamera.html#isFocusLocked" location="qcamera.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockExposure" fullname="QCamera::lockExposure" href="qcamera.html#lockExposure" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="lockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockExposure" fullname="QCamera::unlockExposure" href="qcamera.html#unlockExposure" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockFocus" fullname="QCamera::lockFocus" href="qcamera.html#lockFocus" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="lockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockFocus" fullname="QCamera::unlockFocus" href="qcamera.html#unlockFocus" location="qcamera.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashReady" fullname="QCamera::flashReady" href="qcamera.html#flashReady" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="flashReady(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatusChanged" fullname="QCamera::focusStatusChanged" href="qcamera.html#focusStatusChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusStatusChanged(QCamera::FocusStatus status)">
                <parameter left="QCamera::FocusStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValueChanged" fullname="QCamera::zoomValueChanged" href="qcamera.html#zoomValueChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="zoomValueChanged(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureLocked" fullname="QCamera::exposureLocked" href="qcamera.html#exposureLocked" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="exposureLocked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusLocked" fullname="QCamera::focusLocked" href="qcamera.html#focusLocked" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusLocked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QCamera::stateChanged" href="qcamera.html#stateChanged" location="qcamera.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QCamera::State state)">
                <parameter left="QCamera::State" right="" name="state" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaSource" href="qmediasource.html" location="qmediasource.h" bases="" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSource" fullname="QMediaSource::QMediaSource" href="qmediasource.html#QMediaSource" location="qmediasource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaSource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSource" fullname="QMediaSource::QMediaSource" href="qmediasource.html#QMediaSource-2" location="qmediasource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaSource(const QUrl &amp; contentUri)">
                <parameter left="const QUrl &amp;" right="" name="contentUri" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSource" fullname="QMediaSource::QMediaSource" href="qmediasource.html#QMediaSource-3" location="qmediasource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaSource(const QMediaResource &amp; contentResource)">
                <parameter left="const QMediaResource &amp;" right="" name="contentResource" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSource" fullname="QMediaSource::QMediaSource" href="qmediasource.html#QMediaSource-4" location="qmediasource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMediaSource(const QMediaResourceList &amp; resources)">
                <parameter left="const QMediaResourceList &amp;" right="" name="resources" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaSource" fullname="QMediaSource::QMediaSource" href="qmediasource.html#QMediaSource-5" location="qmediasource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="5" type="" signature="QMediaSource(const QMediaSource &amp; other)">
                <parameter left="const QMediaSource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaSource" fullname="QMediaSource::~QMediaSource" href="qmediasource.html#dtor.QMediaSource" location="qmediasource.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaSource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaSource::operator=" href="qmediasource.html#operator=" location="qmediasource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaSource &amp;" signature="operator=(const QMediaSource &amp; other)">
                <parameter left="const QMediaSource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMediaSource::operator==" href="qmediasource.html#operator==" location="qmediasource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMediaSource &amp; other) const">
                <parameter left="const QMediaSource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMediaSource::operator!=" href="qmediasource.html#operator!=" location="qmediasource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMediaSource &amp; other) const">
                <parameter left="const QMediaSource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaSource::isNull" href="qmediasource.html#isNull" location="qmediasource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentUri" fullname="QMediaSource::contentUri" href="qmediasource.html#contentUri" location="qmediasource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="contentUri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="contentResource" fullname="QMediaSource::contentResource" href="qmediasource.html#contentResource" location="qmediasource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaResource" signature="contentResource() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resources" fullname="QMediaSource::resources" href="qmediasource.html#resources" location="qmediasource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaResourceList" signature="resources(QMediaResource::ResourceRole role) const">
                <parameter left="QMediaResource::ResourceRole" right="" name="role" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistControl" href="qmediaplaylistcontrol.html" location="qmediaplaylistcontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistControl" fullname="QMediaPlaylistControl::~QMediaPlaylistControl" href="qmediaplaylistcontrol.html#dtor.QMediaPlaylistControl" location="qmediaplaylistcontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProvider" fullname="QMediaPlaylistControl::playlistProvider" href="qmediaplaylistcontrol.html#playlistProvider" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylistProvider *" signature="playlistProvider() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylistProvider" fullname="QMediaPlaylistControl::setPlaylistProvider" href="qmediaplaylistcontrol.html#setPlaylistProvider" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setPlaylistProvider(QMediaPlaylistProvider * playlist)">
                <parameter left="QMediaPlaylistProvider *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentPosition" fullname="QMediaPlaylistControl::currentPosition" href="qmediaplaylistcontrol.html#currentPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="currentPosition() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentPosition" fullname="QMediaPlaylistControl::setCurrentPosition" href="qmediaplaylistcontrol.html#setCurrentPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCurrentPosition(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPosition" fullname="QMediaPlaylistControl::nextPosition" href="qmediaplaylistcontrol.html#nextPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="nextPosition(int step) const">
                <parameter left="int" right="" name="step" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousPosition" fullname="QMediaPlaylistControl::previousPosition" href="qmediaplaylistcontrol.html#previousPosition" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="previousPosition(int step) const">
                <parameter left="int" right="" name="step" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="advance" fullname="QMediaPlaylistControl::advance" href="qmediaplaylistcontrol.html#advance" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="advance()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="back" fullname="QMediaPlaylistControl::back" href="qmediaplaylistcontrol.html#back" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="back()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylistControl::playbackMode" href="qmediaplaylistcontrol.html#playbackMode" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlaylist::PlaybackMode" signature="playbackMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackMode" fullname="QMediaPlaylistControl::setPlaybackMode" href="qmediaplaylistcontrol.html#setPlaybackMode" location="qmediaplaylistcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaybackMode(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProviderChanged" fullname="QMediaPlaylistControl::playlistProviderChanged" href="qmediaplaylistcontrol.html#playlistProviderChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistProviderChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistPositionChanged" fullname="QMediaPlaylistControl::playlistPositionChanged" href="qmediaplaylistcontrol.html#playlistPositionChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistPositionChanged(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMediaChanged" fullname="QMediaPlaylistControl::currentMediaChanged" href="qmediaplaylistcontrol.html#currentMediaChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMediaChanged(const QMediaSource &amp; )">
                <parameter left="const QMediaSource &amp;" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackModeChanged" fullname="QMediaPlaylistControl::playbackModeChanged" href="qmediaplaylistcontrol.html#playbackModeChanged" location="qmediaplaylistcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackModeChanged(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlaylistControl" fullname="QMediaPlaylistControl::QMediaPlaylistControl" href="qmediaplaylistcontrol.html#QMediaPlaylistControl" location="qmediaplaylistcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioDeviceControl" href="qaudiodevicecontrol.html" location="qaudiodevicecontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioDeviceControl" fullname="QAudioDeviceControl::~QAudioDeviceControl" href="qaudiodevicecontrol.html#dtor.QAudioDeviceControl" location="qaudiodevicecontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioDeviceControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="deviceCount" fullname="QAudioDeviceControl::deviceCount" href="qaudiodevicecontrol.html#deviceCount" location="qaudiodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="deviceCount() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="name" fullname="QAudioDeviceControl::name" href="qaudiodevicecontrol.html#name" location="qaudiodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="name(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="description" fullname="QAudioDeviceControl::description" href="qaudiodevicecontrol.html#description" location="qaudiodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="description(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="icon" fullname="QAudioDeviceControl::icon" href="qaudiodevicecontrol.html#icon" location="qaudiodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QIcon" signature="icon(int device) const">
                <parameter left="int" right="" name="device" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultDevice" fullname="QAudioDeviceControl::defaultDevice" href="qaudiodevicecontrol.html#defaultDevice" location="qaudiodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="defaultDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDevice" fullname="QAudioDeviceControl::selectedDevice" href="qaudiodevicecontrol.html#selectedDevice" location="qaudiodevicecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="selectedDevice() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSelectedDevice" fullname="QAudioDeviceControl::setSelectedDevice" href="qaudiodevicecontrol.html#setSelectedDevice" location="qaudiodevicecontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="setSelectedDevice(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QAudioDeviceControl::selectedDeviceChanged" href="qaudiodevicecontrol.html#selectedDeviceChanged" location="qaudiodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="selectedDeviceChanged(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="selectedDeviceChanged" fullname="QAudioDeviceControl::selectedDeviceChanged" href="qaudiodevicecontrol.html#selectedDeviceChanged-2" location="qaudiodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="selectedDeviceChanged(const QString &amp; deviceName)">
                <parameter left="const QString &amp;" right="" name="deviceName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="devicesChanged" fullname="QAudioDeviceControl::devicesChanged" href="qaudiodevicecontrol.html#devicesChanged" location="qaudiodevicecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="devicesChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAudioDeviceControl" fullname="QAudioDeviceControl::QAudioDeviceControl" href="qaudiodevicecontrol.html#QAudioDeviceControl" location="qaudiodevicecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioDeviceControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWindowControl" href="qvideowindowcontrol.html" location="qvideowindowcontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWindowControl" fullname="QVideoWindowControl::QVideoWindowControl" href="qvideowindowcontrol.html#QVideoWindowControl" location="qvideowindowcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWindowControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWindowControl" fullname="QVideoWindowControl::~QVideoWindowControl" href="qvideowindowcontrol.html#dtor.QVideoWindowControl" location="qvideowindowcontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWindowControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="winId" fullname="QVideoWindowControl::winId" href="qvideowindowcontrol.html#winId" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="WId" signature="winId() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWinId" fullname="QVideoWindowControl::setWinId" href="qvideowindowcontrol.html#setWinId" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setWinId(WId id)">
                <parameter left="WId" right="" name="id" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="displayRect" fullname="QVideoWindowControl::displayRect" href="qvideowindowcontrol.html#displayRect" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QRect" signature="displayRect() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDisplayRect" fullname="QVideoWindowControl::setDisplayRect" href="qvideowindowcontrol.html#setDisplayRect" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDisplayRect(const QRect &amp; rect)">
                <parameter left="const QRect &amp;" right="" name="rect" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFullscreen" fullname="QVideoWindowControl::isFullscreen" href="qvideowindowcontrol.html#isFullscreen" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFullscreen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFullscreen" fullname="QVideoWindowControl::setFullscreen" href="qvideowindowcontrol.html#setFullscreen" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFullscreen(bool fullscreen)">
                <parameter left="bool" right="" name="fullscreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="repaint" fullname="QVideoWindowControl::repaint" href="qvideowindowcontrol.html#repaint" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="repaint()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSize" fullname="QVideoWindowControl::nativeSize" href="qvideowindowcontrol.html#nativeSize" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="nativeSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatio" fullname="QVideoWindowControl::aspectRatio" href="qvideowindowcontrol.html#aspectRatio" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVideoWidget::AspectRatio" signature="aspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatio" fullname="QVideoWindowControl::setAspectRatio" href="qvideowindowcontrol.html#setAspectRatio" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAspectRatio(QVideoWidget::AspectRatio ratio)">
                <parameter left="QVideoWidget::AspectRatio" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customAspectRatio" fullname="QVideoWindowControl::customAspectRatio" href="qvideowindowcontrol.html#customAspectRatio" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="customAspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomAspectRatio" fullname="QVideoWindowControl::setCustomAspectRatio" href="qvideowindowcontrol.html#setCustomAspectRatio" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomAspectRatio(const QSize &amp; ratio)">
                <parameter left="const QSize &amp;" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWindowControl::brightness" href="qvideowindowcontrol.html#brightness" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWindowControl::setBrightness" href="qvideowindowcontrol.html#setBrightness" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWindowControl::contrast" href="qvideowindowcontrol.html#contrast" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWindowControl::setContrast" href="qvideowindowcontrol.html#setContrast" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWindowControl::hue" href="qvideowindowcontrol.html#hue" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWindowControl::setHue" href="qvideowindowcontrol.html#setHue" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWindowControl::saturation" href="qvideowindowcontrol.html#saturation" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWindowControl::setSaturation" href="qvideowindowcontrol.html#setSaturation" location="qvideowindowcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullscreenChanged" fullname="QVideoWindowControl::fullscreenChanged" href="qvideowindowcontrol.html#fullscreenChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fullscreenChanged(bool fullscreen)">
                <parameter left="bool" right="" name="fullscreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWindowControl::brightnessChanged" href="qvideowindowcontrol.html#brightnessChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWindowControl::contrastChanged" href="qvideowindowcontrol.html#contrastChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWindowControl::hueChanged" href="qvideowindowcontrol.html#hueChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWindowControl::saturationChanged" href="qvideowindowcontrol.html#saturationChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="nativeSizeChanged" fullname="QVideoWindowControl::nativeSizeChanged" href="qvideowindowcontrol.html#nativeSizeChanged" location="qvideowindowcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="nativeSizeChanged()"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlayerControl" href="qmediaplayercontrol.html" location="qmediaplayercontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlayerControl" fullname="QMediaPlayerControl::~QMediaPlayerControl" href="qmediaplayercontrol.html#dtor.QMediaPlayerControl" location="qmediaplayercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlayerControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayerControl::state" href="qmediaplayercontrol.html#state" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlayer::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayerControl::mediaStatus" href="qmediaplayercontrol.html#mediaStatus" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaPlayer::MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayerControl::duration" href="qmediaplayercontrol.html#duration" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayerControl::position" href="qmediaplayercontrol.html#position" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="position() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPosition" fullname="QMediaPlayerControl::setPosition" href="qmediaplayercontrol.html#setPosition" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPosition(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayerControl::volume" href="qmediaplayercontrol.html#volume" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaPlayerControl::setVolume" href="qmediaplayercontrol.html#setVolume" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaPlayerControl::isMuted" href="qmediaplayercontrol.html#isMuted" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaPlayerControl::setMuted" href="qmediaplayercontrol.html#setMuted" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMuted(bool mute)">
                <parameter left="bool" right="" name="mute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayerControl::bufferStatus" href="qmediaplayercontrol.html#bufferStatus" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="bufferStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVideoAvailable" fullname="QMediaPlayerControl::isVideoAvailable" href="qmediaplayercontrol.html#isVideoAvailable" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isVideoAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSeekable" fullname="QMediaPlayerControl::isSeekable" href="qmediaplayercontrol.html#isSeekable" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSeekable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayerControl::playbackRate" href="qmediaplayercontrol.html#playbackRate" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="float" signature="playbackRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackRate" fullname="QMediaPlayerControl::setPlaybackRate" href="qmediaplayercontrol.html#setPlaybackRate" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setPlaybackRate(float rate)">
                <parameter left="float" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlayerControl::media" href="qmediaplayercontrol.html#media" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaSource" signature="media() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStream" fullname="QMediaPlayerControl::mediaStream" href="qmediaplayercontrol.html#mediaStream" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="const QIODevice *" signature="mediaStream() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMedia" fullname="QMediaPlayerControl::setMedia" href="qmediaplayercontrol.html#setMedia" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMedia(const QMediaSource &amp; media, QIODevice * stream)">
                <parameter left="const QMediaSource &amp;" right="" name="media" default=""/>
                <parameter left="QIODevice *" right="" name="stream" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaPlayerControl::play" href="qmediaplayercontrol.html#play" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaPlayerControl::pause" href="qmediaplayercontrol.html#pause" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaPlayerControl::stop" href="qmediaplayercontrol.html#stop" location="qmediaplayercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentSourceChanged" fullname="QMediaPlayerControl::currentSourceChanged" href="qmediaplayercontrol.html#currentSourceChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentSourceChanged(const QMediaSource &amp; source)">
                <parameter left="const QMediaSource &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaPlayerControl::durationChanged" href="qmediaplayercontrol.html#durationChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaPlayerControl::positionChanged" href="qmediaplayercontrol.html#positionChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaPlayerControl::stateChanged" href="qmediaplayercontrol.html#stateChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaPlayer::State state)">
                <parameter left="QMediaPlayer::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaPlayerControl::mediaStatusChanged" href="qmediaplayercontrol.html#mediaStatusChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaPlayer::MediaStatus status)">
                <parameter left="QMediaPlayer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaPlayerControl::volumeChanged" href="qmediaplayercontrol.html#volumeChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QMediaPlayerControl::mutingChanged" href="qmediaplayercontrol.html#mutingChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool mute)">
                <parameter left="bool" right="" name="mute" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoAvailabilityChanged" fullname="QMediaPlayerControl::videoAvailabilityChanged" href="qmediaplayercontrol.html#videoAvailabilityChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoAvailabilityChanged(bool video)">
                <parameter left="bool" right="" name="video" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatusChanged" fullname="QMediaPlayerControl::bufferStatusChanged" href="qmediaplayercontrol.html#bufferStatusChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bufferStatusChanged(int progress)">
                <parameter left="int" right="" name="progress" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seekableChanged" fullname="QMediaPlayerControl::seekableChanged" href="qmediaplayercontrol.html#seekableChanged" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="seekableChanged(bool seekable)">
                <parameter left="bool" right="" name="seekable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayerControl::error" href="qmediaplayercontrol.html#error" location="qmediaplayercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaPlayerControl" fullname="QMediaPlayerControl::QMediaPlayerControl" href="qmediaplayercontrol.html#QMediaPlayerControl" location="qmediaplayercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlayerControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaRecorderControl" href="qmediarecordercontrol.html" location="qmediarecordercontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaRecorderControl" fullname="QMediaRecorderControl::~QMediaRecorderControl" href="qmediarecordercontrol.html#dtor.QMediaRecorderControl" location="qmediarecordercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaRecorderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sink" fullname="QMediaRecorderControl::sink" href="qmediarecordercontrol.html#sink" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="sink() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSink" fullname="QMediaRecorderControl::setSink" href="qmediarecordercontrol.html#setSink" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSink(const QUrl &amp; sink)">
                <parameter left="const QUrl &amp;" right="" name="sink" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaRecorderControl::state" href="qmediarecordercontrol.html#state" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaRecorder::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorderControl::duration" href="qmediarecordercontrol.html#duration" location="qmediarecordercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaRecorderControl::stateChanged" href="qmediarecordercontrol.html#stateChanged" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaRecorder::State state)">
                <parameter left="QMediaRecorder::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaRecorderControl::durationChanged" href="qmediarecordercontrol.html#durationChanged" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorderControl::error" href="qmediarecordercontrol.html#error" location="qmediarecordercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="error(int error, const QString &amp; errorString)">
                <parameter left="int" right="" name="error" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QMediaRecorderControl::record" href="qmediarecordercontrol.html#record" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="record()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaRecorderControl::pause" href="qmediarecordercontrol.html#pause" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaRecorderControl::stop" href="qmediarecordercontrol.html#stop" location="qmediarecordercontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaRecorderControl" fullname="QMediaRecorderControl::QMediaRecorderControl" href="qmediarecordercontrol.html#QMediaRecorderControl" location="qmediarecordercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaRecorderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoWidgetControl" href="qvideowidgetcontrol.html" location="qvideowidgetcontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoWidgetControl" fullname="QVideoWidgetControl::QVideoWidgetControl" href="qvideowidgetcontrol.html#QVideoWidgetControl" location="qvideowidgetcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoWidgetControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoWidgetControl" fullname="QVideoWidgetControl::~QVideoWidgetControl" href="qvideowidgetcontrol.html#dtor.QVideoWidgetControl" location="qvideowidgetcontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoWidgetControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoWidget" fullname="QVideoWidgetControl::videoWidget" href="qvideowidgetcontrol.html#videoWidget" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="QWidget *" signature="videoWidget()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aspectRatio" fullname="QVideoWidgetControl::aspectRatio" href="qvideowidgetcontrol.html#aspectRatio" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVideoWidget::AspectRatio" signature="aspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="customAspectRatio" fullname="QVideoWidgetControl::customAspectRatio" href="qvideowidgetcontrol.html#customAspectRatio" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QSize" signature="customAspectRatio() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAspectRatio" fullname="QVideoWidgetControl::setAspectRatio" href="qvideowidgetcontrol.html#setAspectRatio" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAspectRatio(QVideoWidget::AspectRatio ratio)">
                <parameter left="QVideoWidget::AspectRatio" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomAspectRatio" fullname="QVideoWidgetControl::setCustomAspectRatio" href="qvideowidgetcontrol.html#setCustomAspectRatio" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomAspectRatio(const QSize &amp; ratio)">
                <parameter left="const QSize &amp;" right="" name="ratio" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFullscreen" fullname="QVideoWidgetControl::isFullscreen" href="qvideowidgetcontrol.html#isFullscreen" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFullscreen() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFullscreen" fullname="QVideoWidgetControl::setFullscreen" href="qvideowidgetcontrol.html#setFullscreen" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFullscreen(bool fullscreen)">
                <parameter left="bool" right="" name="fullscreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightness" fullname="QVideoWidgetControl::brightness" href="qvideowidgetcontrol.html#brightness" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="brightness() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBrightness" fullname="QVideoWidgetControl::setBrightness" href="qvideowidgetcontrol.html#setBrightness" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBrightness(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QVideoWidgetControl::contrast" href="qvideowidgetcontrol.html#contrast" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QVideoWidgetControl::setContrast" href="qvideowidgetcontrol.html#setContrast" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setContrast(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hue" fullname="QVideoWidgetControl::hue" href="qvideowidgetcontrol.html#hue" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="hue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setHue" fullname="QVideoWidgetControl::setHue" href="qvideowidgetcontrol.html#setHue" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setHue(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QVideoWidgetControl::saturation" href="qvideowidgetcontrol.html#saturation" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QVideoWidgetControl::setSaturation" href="qvideowidgetcontrol.html#setSaturation" location="qvideowidgetcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaturation(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="fullscreenChanged" fullname="QVideoWidgetControl::fullscreenChanged" href="qvideowidgetcontrol.html#fullscreenChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="fullscreenChanged(bool fullscreen)">
                <parameter left="bool" right="" name="fullscreen" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="brightnessChanged" fullname="QVideoWidgetControl::brightnessChanged" href="qvideowidgetcontrol.html#brightnessChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="brightnessChanged(int brightness)">
                <parameter left="int" right="" name="brightness" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrastChanged" fullname="QVideoWidgetControl::contrastChanged" href="qvideowidgetcontrol.html#contrastChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="contrastChanged(int contrast)">
                <parameter left="int" right="" name="contrast" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="hueChanged" fullname="QVideoWidgetControl::hueChanged" href="qvideowidgetcontrol.html#hueChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="hueChanged(int hue)">
                <parameter left="int" right="" name="hue" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturationChanged" fullname="QVideoWidgetControl::saturationChanged" href="qvideowidgetcontrol.html#saturationChanged" location="qvideowidgetcontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="saturationChanged(int saturation)">
                <parameter left="int" right="" name="saturation" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioEncoderControl" href="qaudioencodercontrol.html" location="qaudioencodercontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioEncoderControl" fullname="QAudioEncoderControl::~QAudioEncoderControl" href="qaudioencodercontrol.html#dtor.QAudioEncoderControl" location="qaudioencodercontrol.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioEncoderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedAudioCodecs" fullname="QAudioEncoderControl::supportedAudioCodecs" href="qaudioencodercontrol.html#supportedAudioCodecs" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedAudioCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="QAudioEncoderControl::audioCodec" href="qaudioencodercontrol.html#audioCodec" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioCodec" fullname="QAudioEncoderControl::setAudioCodec" href="qaudioencodercontrol.html#setAudioCodec" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="bool" signature="setAudioCodec(const QString &amp; codecName)">
                <parameter left="const QString &amp;" right="" name="codecName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="codecDescription" fullname="QAudioEncoderControl::codecDescription" href="qaudioencodercontrol.html#codecDescription" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QString" signature="codecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bitrate" fullname="QAudioEncoderControl::bitrate" href="qaudioencodercontrol.html#bitrate" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="bitrate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBitrate" fullname="QAudioEncoderControl::setBitrate" href="qaudioencodercontrol.html#setBitrate" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setBitrate(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="quality" fullname="QAudioEncoderControl::quality" href="qaudioencodercontrol.html#quality" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="quality() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setQuality" fullname="QAudioEncoderControl::setQuality" href="qaudioencodercontrol.html#setQuality" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setQuality(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedEncodingOptions" fullname="QAudioEncoderControl::supportedEncodingOptions" href="qaudioencodercontrol.html#supportedEncodingOptions" location="qaudioencodercontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedEncodingOptions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="encodingOption" fullname="QAudioEncoderControl::encodingOption" href="qaudioencodercontrol.html#encodingOption" location="qaudioencodercontrol.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="encodingOption(const QString &amp; option) const">
                <parameter left="const QString &amp;" right="" name="option" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEncodingOption" fullname="QAudioEncoderControl::setEncodingOption" href="qaudioencodercontrol.html#setEncodingOption" location="qaudioencodercontrol.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="setEncodingOption(const QString &amp; option, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="option" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QAudioEncoderControl::frequency" href="qaudioencodercontrol.html#frequency" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QAudioEncoderControl::setFrequency" href="qaudioencodercontrol.html#setFrequency" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFrequencies" fullname="QAudioEncoderControl::supportedFrequencies" href="qaudioencodercontrol.html#supportedFrequencies" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedFrequencies() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFrequencyRange" fullname="QAudioEncoderControl::supportedFrequencyRange" href="qaudioencodercontrol.html#supportedFrequencyRange" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;int, int&gt;" signature="supportedFrequencyRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QAudioEncoderControl::channels" href="qaudioencodercontrol.html#channels" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="channels() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannels" fullname="QAudioEncoderControl::setChannels" href="qaudioencodercontrol.html#setChannels" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannels(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedChannelCounts" fullname="QAudioEncoderControl::supportedChannelCounts" href="qaudioencodercontrol.html#supportedChannelCounts" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedChannelCounts() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleSize" fullname="QAudioEncoderControl::sampleSize" href="qaudioencodercontrol.html#sampleSize" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleSize" fullname="QAudioEncoderControl::setSampleSize" href="qaudioencodercontrol.html#setSampleSize" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleSize(int sampleSize)">
                <parameter left="int" right="" name="sampleSize" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSampleSizes" fullname="QAudioEncoderControl::supportedSampleSizes" href="qaudioencodercontrol.html#supportedSampleSizes" location="qaudioencodercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedSampleSizes() const"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QAudioEncoderControl" fullname="QAudioEncoderControl::QAudioEncoderControl" href="qaudioencodercontrol.html#QAudioEncoderControl" location="qaudioencodercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioEncoderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QImageProcessingControl" href="qimageprocessingcontrol.html" location="qimageprocessingcontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QImageProcessingControl" fullname="QImageProcessingControl::~QImageProcessingControl" href="qimageprocessingcontrol.html#dtor.QImageProcessingControl" location="qimageprocessingcontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QImageProcessingControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="whiteBalanceMode" fullname="QImageProcessingControl::whiteBalanceMode" href="qimageprocessingcontrol.html#whiteBalanceMode" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::WhiteBalanceMode" signature="whiteBalanceMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setWhiteBalanceMode" fullname="QImageProcessingControl::setWhiteBalanceMode" href="qimageprocessingcontrol.html#setWhiteBalanceMode" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setWhiteBalanceMode(QCamera::WhiteBalanceMode mode)">
                <parameter left="QCamera::WhiteBalanceMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedWhiteBalanceModes" fullname="QImageProcessingControl::supportedWhiteBalanceModes" href="qimageprocessingcontrol.html#supportedWhiteBalanceModes" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::WhiteBalanceModes" signature="supportedWhiteBalanceModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="manualWhiteBalance" fullname="QImageProcessingControl::manualWhiteBalance" href="qimageprocessingcontrol.html#manualWhiteBalance" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="manualWhiteBalance() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualWhiteBalance" fullname="QImageProcessingControl::setManualWhiteBalance" href="qimageprocessingcontrol.html#setManualWhiteBalance" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualWhiteBalance(int colorTemperature)">
                <parameter left="int" right="" name="colorTemperature" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="contrast" fullname="QImageProcessingControl::contrast" href="qimageprocessingcontrol.html#contrast" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="contrast() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setContrast" fullname="QImageProcessingControl::setContrast" href="qimageprocessingcontrol.html#setContrast" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="void" signature="setContrast(qreal value) const">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="saturation" fullname="QImageProcessingControl::saturation" href="qimageprocessingcontrol.html#saturation" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="saturation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSaturation" fullname="QImageProcessingControl::setSaturation" href="qimageprocessingcontrol.html#setSaturation" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSaturation(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSharpeningSupported" fullname="QImageProcessingControl::isSharpeningSupported" href="qimageprocessingcontrol.html#isSharpeningSupported" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isSharpeningSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sharpeningLevel" fullname="QImageProcessingControl::sharpeningLevel" href="qimageprocessingcontrol.html#sharpeningLevel" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="sharpeningLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSharpeningLevel" fullname="QImageProcessingControl::setSharpeningLevel" href="qimageprocessingcontrol.html#setSharpeningLevel" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSharpeningLevel(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isDenoisingSupported" fullname="QImageProcessingControl::isDenoisingSupported" href="qimageprocessingcontrol.html#isDenoisingSupported" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isDenoisingSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="denoisingLevel" fullname="QImageProcessingControl::denoisingLevel" href="qimageprocessingcontrol.html#denoisingLevel" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="denoisingLevel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDenoisingLevel" fullname="QImageProcessingControl::setDenoisingLevel" href="qimageprocessingcontrol.html#setDenoisingLevel" location="qimageprocessingcontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setDenoisingLevel(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QImageProcessingControl" fullname="QImageProcessingControl::QImageProcessingControl" href="qimageprocessingcontrol.html#QImageProcessingControl" location="qimageprocessingcontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QImageProcessingControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaRecorder" href="qmediarecorder.html" location="qmediarecorder.h" bases="QMediaObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" location="qmediarecorder.h" type="qint64">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QMediaRecorder::format" href="qmediarecorder.html#format-prop" location="qmediarecorder.h" type="QString">
                <getter name="format"/>
                <setter name="setFormat"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="QMediaRecorder::audioCodec" href="qmediarecorder.html#audioCodec-prop" location="qmediarecorder.h" type="QString">
                <getter name="audioCodec"/>
                <setter name="setAudioCodec"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="audioBitrate" fullname="QMediaRecorder::audioBitrate" href="qmediarecorder.html#audioBitrate-prop" location="qmediarecorder.h" type="int">
                <getter name="audioBitrate"/>
                <setter name="setAudioBitrate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="audioQuality" fullname="QMediaRecorder::audioQuality" href="qmediarecorder.html#audioQuality-prop" location="qmediarecorder.h" type="qreal">
                <getter name="audioQuality"/>
                <setter name="setAudioQuality"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="QMediaRecorder::resolution" href="qmediarecorder.html#resolution-prop" location="qmediarecorder.h" type="QSize">
                <getter name="resolution"/>
                <setter name="setResolution"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="frameRate" fullname="QMediaRecorder::frameRate" href="qmediarecorder.html#frameRate-prop" location="qmediarecorder.h" type="QMediaRecorder::FrameRate">
                <getter name="frameRate"/>
                <setter name="setFrameRate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoCodec" fullname="QMediaRecorder::videoCodec" href="qmediarecorder.html#videoCodec-prop" location="qmediarecorder.h" type="QString">
                <getter name="videoCodec"/>
                <setter name="setVideoCodec"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoBitrate" fullname="QMediaRecorder::videoBitrate" href="qmediarecorder.html#videoBitrate-prop" location="qmediarecorder.h" type="int">
                <getter name="videoBitrate"/>
                <setter name="setVideoBitrate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoQuality" fullname="QMediaRecorder::videoQuality" href="qmediarecorder.html#videoQuality-prop" location="qmediarecorder.h" type="qreal">
                <getter name="videoQuality"/>
                <setter name="setVideoQuality"/>
            </property>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="FrameRate" fullname="QMediaRecorder::FrameRate" href="qmediarecorder.html#FrameRate-typedef" location="qmediarecorder.h"/>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaRecorder::State" href="qmediarecorder.html#State-enum" location="qmediarecorder.h">
                <value name="StoppedState" value="0"/>
                <value name="RecordingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMediaRecorder::Error" href="qmediarecorder.html#Error-enum" location="qmediarecorder.h">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaRecorder" fullname="QMediaRecorder::QMediaRecorder" href="qmediarecorder.html#QMediaRecorder" location="qmediarecorder.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaRecorder(QMediaObject * mediaObject)">
                <parameter left="QMediaObject *" right="" name="mediaObject" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaRecorder" fullname="QMediaRecorder::QMediaRecorder" href="qmediarecorder.html#QMediaRecorder-2" location="qmediarecorder.cpp" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaRecorder(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaRecorder" fullname="QMediaRecorder::~QMediaRecorder" href="qmediarecorder.html#dtor.QMediaRecorder" location="qmediarecorder.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaRecorder()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMediaRecorder::isValid" href="qmediarecorder.html#isValid" location="qmediarecorder.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="sink" fullname="QMediaRecorder::sink" href="qmediarecorder.html#sink" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="sink() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSink" fullname="QMediaRecorder::setSink" href="qmediarecorder.html#setSink" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="setSink(const QUrl &amp; sink)">
                <parameter left="const QUrl &amp;" right="" name="sink" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaRecorder::state" href="qmediarecorder.html#state" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaRecorder::errorString" href="qmediarecorder.html#errorString" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QMediaRecorder::service" href="qmediarecorder.html#service" location="qmediarecorder.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFormats" fullname="QMediaRecorder::supportedFormats" href="qmediarecorder.html#supportedFormats" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedFormats() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="formatDescription" fullname="QMediaRecorder::formatDescription" href="qmediarecorder.html#formatDescription" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="formatDescription(const QString &amp; format) const">
                <parameter left="const QString &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QMediaRecorder::format" href="qmediarecorder.html#format-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="format" type="QString" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedAudioCodecs" fullname="QMediaRecorder::supportedAudioCodecs" href="qmediarecorder.html#supportedAudioCodecs" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedAudioCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioCodecDescription" fullname="QMediaRecorder::audioCodecDescription" href="qmediarecorder.html#audioCodecDescription" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioCodecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="QMediaRecorder::audioCodec" href="qmediarecorder.html#audioCodec-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="audioCodec" type="QString" signature="audioCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioBitrate" fullname="QMediaRecorder::audioBitrate" href="qmediarecorder.html#audioBitrate-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="audioBitrate" type="int" signature="audioBitrate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioQuality" fullname="QMediaRecorder::audioQuality" href="qmediarecorder.html#audioQuality-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="audioQuality" type="int" signature="audioQuality() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedVideoCodecs" fullname="QMediaRecorder::supportedVideoCodecs" href="qmediarecorder.html#supportedVideoCodecs" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedVideoCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoCodecDescription" fullname="QMediaRecorder::videoCodecDescription" href="qmediarecorder.html#videoCodecDescription" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="videoCodecDescription(const QString &amp; codec) const">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoCodec" fullname="QMediaRecorder::videoCodec" href="qmediarecorder.html#videoCodec-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoCodec" type="QString" signature="videoCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="QMediaRecorder::resolution" href="qmediarecorder.html#resolution-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="resolution" type="QSize" signature="resolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumResolution" fullname="QMediaRecorder::minimumResolution" href="qmediarecorder.html#minimumResolution" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="minimumResolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumResolution" fullname="QMediaRecorder::maximumResolution" href="qmediarecorder.html#maximumResolution" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="maximumResolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedResolutions" fullname="QMediaRecorder::supportedResolutions" href="qmediarecorder.html#supportedResolutions" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QSize&gt;" signature="supportedResolutions() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="frameRate" fullname="QMediaRecorder::frameRate" href="qmediarecorder.html#frameRate-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="frameRate" type="FrameRate" signature="frameRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="minimumFrameRate" fullname="QMediaRecorder::minimumFrameRate" href="qmediarecorder.html#minimumFrameRate" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="FrameRate" signature="minimumFrameRate()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumFrameRate" fullname="QMediaRecorder::maximumFrameRate" href="qmediarecorder.html#maximumFrameRate" location="qmediarecorder.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="FrameRate" signature="maximumFrameRate()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFrameRates" fullname="QMediaRecorder::supportedFrameRates" href="qmediarecorder.html#supportedFrameRates" location="qmediarecorder.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;FrameRate&gt;" signature="supportedFrameRates() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoBitrate" fullname="QMediaRecorder::videoBitrate" href="qmediarecorder.html#videoBitrate-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoBitrate" type="int" signature="videoBitrate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoQuality" fullname="QMediaRecorder::videoQuality" href="qmediarecorder.html#videoQuality-prop" location="qmediarecorder.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoQuality" type="int" signature="videoQuality() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="record" fullname="QMediaRecorder::record" href="qmediarecorder.html#record" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="record()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaRecorder::pause" href="qmediarecorder.html#pause" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaRecorder::stop" href="qmediarecorder.html#stop" location="qmediarecorder.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormat" fullname="QMediaRecorder::setFormat" href="qmediarecorder.html#format-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="format" type="void" signature="setFormat(const QString &amp; formatMimeType)">
                <parameter left="const QString &amp;" right="" name="formatMimeType" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioCodec" fullname="QMediaRecorder::setAudioCodec" href="qmediarecorder.html#audioCodec-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="audioCodec" type="bool" signature="setAudioCodec(const QString &amp; codecName)">
                <parameter left="const QString &amp;" right="" name="codecName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioBitrate" fullname="QMediaRecorder::setAudioBitrate" href="qmediarecorder.html#audioBitrate-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="audioBitrate" type="void" signature="setAudioBitrate(int bitrate)">
                <parameter left="int" right="" name="bitrate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioQuality" fullname="QMediaRecorder::setAudioQuality" href="qmediarecorder.html#audioQuality-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="audioQuality" type="void" signature="setAudioQuality(int quality)">
                <parameter left="int" right="" name="quality" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QMediaRecorder::setResolution" href="qmediarecorder.html#resolution-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="resolution" type="void" signature="setResolution(const QSize &amp; )">
                <parameter left="const QSize &amp;" right="" name="" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrameRate" fullname="QMediaRecorder::setFrameRate" href="qmediarecorder.html#frameRate-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="frameRate" type="void" signature="setFrameRate(const QMediaRecorder::FrameRate &amp; rate)">
                <parameter left="const QMediaRecorder::FrameRate &amp;" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoCodec" fullname="QMediaRecorder::setVideoCodec" href="qmediarecorder.html#videoCodec-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="videoCodec" type="bool" signature="setVideoCodec(const QString &amp; codecName)">
                <parameter left="const QString &amp;" right="" name="codecName" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoBitrate" fullname="QMediaRecorder::setVideoBitrate" href="qmediarecorder.html#videoBitrate-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="videoBitrate" type="void" signature="setVideoBitrate(int bitrate)">
                <parameter left="int" right="" name="bitrate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoQuality" fullname="QMediaRecorder::setVideoQuality" href="qmediarecorder.html#videoQuality-prop" location="qmediarecorder.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="videoQuality" type="void" signature="setVideoQuality(int quality)">
                <parameter left="int" right="" name="quality" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaRecorder::stateChanged" href="qmediarecorder.html#stateChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaRecorder::State state)">
                <parameter left="QMediaRecorder::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaRecorder::durationChanged" href="qmediarecorder.html#durationChanged" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error-2" location="qmediarecorder.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QMediaRecorder::Error error)">
                <parameter left="QMediaRecorder::Error" right="" name="error" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaResource" href="qmediaresource.html" location="qmediaresource.h" bases="" module="">
            <enum access="public" threadsafety="unspecified" status="commendable" name="ResourceRole" fullname="QMediaResource::ResourceRole" href="qmediaresource.html#ResourceRole-enum" location="qmediaresource.h">
                <value name="ContentRole" value="0"/>
                <value name="PreviewRole" value="1"/>
                <value name="PosterRole" value="2"/>
                <value name="CoverArtRole" value="3"/>
                <value name="ThumbnailRole" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaResource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-2" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QMediaResource(const QUrl &amp; uri, ResourceRole role)">
                <parameter left="const QUrl &amp;" right="" name="uri" default=""/>
                <parameter left="ResourceRole" right="" name="role" default="ContentRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-3" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QMediaResource(const QUrl &amp; uri, const QString &amp; type, ResourceRole role)">
                <parameter left="const QUrl &amp;" right="" name="uri" default=""/>
                <parameter left="const QString &amp;" right="" name="type" default=""/>
                <parameter left="ResourceRole" right="" name="role" default="ContentRole"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaResource" fullname="QMediaResource::QMediaResource" href="qmediaresource.html#QMediaResource-4" location="qmediaresource.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="4" type="" signature="QMediaResource(const QMediaResource &amp; other)">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QMediaResource::operator=" href="qmediaresource.html#operator=" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QMediaResource &amp;" signature="operator=(const QMediaResource &amp; other)">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaResource" fullname="QMediaResource::~QMediaResource" href="qmediaresource.html#dtor.QMediaResource" location="qmediaresource.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaResource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isNull" fullname="QMediaResource::isNull" href="qmediaresource.html#isNull" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isNull() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QMediaResource::operator==" href="qmediaresource.html#operator==" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QMediaResource &amp; other) const">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QMediaResource::operator!=" href="qmediaresource.html#operator!=" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QMediaResource &amp; other) const">
                <parameter left="const QMediaResource &amp;" right="" name="other" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="uri" fullname="QMediaResource::uri" href="qmediaresource.html#uri" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QUrl" signature="uri() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="role" fullname="QMediaResource::role" href="qmediaresource.html#role" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="ResourceRole" signature="role() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mimeType" fullname="QMediaResource::mimeType" href="qmediaresource.html#mimeType" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="mimeType() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioCodec" fullname="QMediaResource::audioCodec" href="qmediaresource.html#audioCodec" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="audioCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioCodec" fullname="QMediaResource::setAudioCodec" href="qmediaresource.html#setAudioCodec" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoCodec" fullname="QMediaResource::videoCodec" href="qmediaresource.html#videoCodec" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QString" signature="videoCodec() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoCodec" fullname="QMediaResource::setVideoCodec" href="qmediaresource.html#setVideoCodec" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoCodec(const QString &amp; codec)">
                <parameter left="const QString &amp;" right="" name="codec" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMediaResource::size" href="qmediaresource.html#size" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSize" fullname="QMediaResource::setSize" href="qmediaresource.html#setSize" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSize(const qint64 size)">
                <parameter left="const qint64" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaResource::duration" href="qmediaresource.html#duration" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDuration" fullname="QMediaResource::setDuration" href="qmediaresource.html#setDuration" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDuration(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="audioBitRate" fullname="QMediaResource::audioBitRate" href="qmediaresource.html#audioBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="audioBitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAudioBitRate" fullname="QMediaResource::setAudioBitRate" href="qmediaresource.html#setAudioBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAudioBitRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sampleSize" fullname="QMediaResource::sampleSize" href="qmediaresource.html#sampleSize" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="sampleSize() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSampleSize" fullname="QMediaResource::setSampleSize" href="qmediaresource.html#setSampleSize" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setSampleSize(int size)">
                <parameter left="int" right="" name="size" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="frequency" fullname="QMediaResource::frequency" href="qmediaresource.html#frequency" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="frequency() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFrequency" fullname="QMediaResource::setFrequency" href="qmediaresource.html#setFrequency" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFrequency(int frequency)">
                <parameter left="int" right="" name="frequency" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="channels" fullname="QMediaResource::channels" href="qmediaresource.html#channels" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="channels() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setChannels" fullname="QMediaResource::setChannels" href="qmediaresource.html#setChannels" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setChannels(int channels)">
                <parameter left="int" right="" name="channels" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoBitRate" fullname="QMediaResource::videoBitRate" href="qmediaresource.html#videoBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="videoBitRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVideoBitRate" fullname="QMediaResource::setVideoBitRate" href="qmediaresource.html#setVideoBitRate" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setVideoBitRate(int rate)">
                <parameter left="int" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resolution" fullname="QMediaResource::resolution" href="qmediaresource.html#resolution" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QSize" signature="resolution() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QMediaResource::setResolution" href="qmediaresource.html#setResolution" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setResolution(const QSize &amp; resolution)">
                <parameter left="const QSize &amp;" right="" name="resolution" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setResolution" fullname="QMediaResource::setResolution" href="qmediaresource.html#setResolution-2" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="void" signature="setResolution(int width, int height)">
                <parameter left="int" right="" name="width" default=""/>
                <parameter left="int" right="" name="height" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bitsPerPixel" fullname="QMediaResource::bitsPerPixel" href="qmediaresource.html#bitsPerPixel" location="qmediaresource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="bitsPerPixel() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setBitsPerPixel" fullname="QMediaResource::setBitsPerPixel" href="qmediaresource.html#setBitsPerPixel" location="qmediaresource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setBitsPerPixel(int bits)">
                <parameter left="int" right="" name="bits" default=""/>
            </function>
        </class>
        <typedef access="public" threadsafety="unspecified" status="commendable" name="QMediaResourceList" href="#QMediaResourceList-typedef" location="qmediaresource.h"/>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlayer" href="qmediaplayer.html" location="qmediaplayer.h" bases="QMediaObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlayer::media" href="qmediaplayer.html#media-prop" location="qmediaplayer.h" type="QMediaSource">
                <getter name="media"/>
                <setter name="setMedia"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration-prop" location="qmediaplayer.h" type="qint64">
                <getter name="duration"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position-prop" location="qmediaplayer.h" type="qint64">
                <getter name="position"/>
                <setter name="setPosition"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayer::volume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.h" type="int">
                <getter name="volume"/>
                <setter name="setVolume"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="muted" fullname="QMediaPlayer::muted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.h" type="bool">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayer::bufferStatus" href="qmediaplayer.html#bufferStatus-prop" location="qmediaplayer.h" type="int">
                <getter name="bufferStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="videoAvailable" fullname="QMediaPlayer::videoAvailable" href="qmediaplayer.html#videoAvailable-prop" location="qmediaplayer.h" type="bool">
                <getter name="isVideoAvailable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="seekable" fullname="QMediaPlayer::seekable" href="qmediaplayer.html#seekable-prop" location="qmediaplayer.h" type="bool">
                <getter name="isSeekable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.h" type="float">
                <getter name="playbackRate"/>
                <setter name="setPlaybackRate"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayer::state" href="qmediaplayer.html#state-prop" location="qmediaplayer.h" type="State">
                <getter name="state"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" location="qmediaplayer.h" type="MediaStatus">
                <getter name="mediaStatus"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error-prop" location="qmediaplayer.h" type="QString">
                <getter name="errorString"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QMediaPlayer::State" href="qmediaplayer.html#State-enum" location="qmediaplayer.h">
                <value name="StoppedState" value="0"/>
                <value name="PlayingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MediaStatus" fullname="QMediaPlayer::MediaStatus" href="qmediaplayer.html#MediaStatus-enum" location="qmediaplayer.h">
                <value name="UnknownMediaStatus" value="0"/>
                <value name="NoMedia" value="1"/>
                <value name="LoadingMedia" value="2"/>
                <value name="LoadedMedia" value="3"/>
                <value name="StalledMedia" value="4"/>
                <value name="BufferingMedia" value="5"/>
                <value name="BufferedMedia" value="6"/>
                <value name="EndOfMedia" value="7"/>
                <value name="InvalidMedia" value="8"/>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QMediaPlayer::Error" href="qmediaplayer.html#Error-enum" location="qmediaplayer.h">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
                <value name="NetworkError" value="3"/>
                <value name="AccessDeniedError" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlayer" fullname="QMediaPlayer::QMediaPlayer" href="qmediaplayer.html#QMediaPlayer" location="qmediaplayer.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlayer(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="QMediaServiceProvider::defaultServiceProvider()"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlayer" fullname="QMediaPlayer::~QMediaPlayer" href="qmediaplayer.html#dtor.QMediaPlayer" location="qmediaplayer.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlayer()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMediaPlayer::isValid" href="qmediaplayer.html#isValid" location="qmediaplayer.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlayer::media" href="qmediaplayer.html#media-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="media" type="QMediaSource" signature="media() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStream" fullname="QMediaPlayer::mediaStream" href="qmediaplayer.html#mediaStream" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QIODevice *" signature="mediaStream() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QMediaPlayer::state" href="qmediaplayer.html#state-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="mediaStatus" type="MediaStatus" signature="mediaStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="qint64" signature="duration() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="position" type="qint64" signature="position() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="volume" fullname="QMediaPlayer::volume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="volume" type="int" signature="volume() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMuted" fullname="QMediaPlayer::isMuted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="muted" type="bool" signature="isMuted() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isVideoAvailable" fullname="QMediaPlayer::isVideoAvailable" href="qmediaplayer.html#videoAvailable-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="videoAvailable" type="bool" signature="isVideoAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatus" fullname="QMediaPlayer::bufferStatus" href="qmediaplayer.html#bufferStatus-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="bufferStatus" type="int" signature="bufferStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isSeekable" fullname="QMediaPlayer::isSeekable" href="qmediaplayer.html#seekable-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="seekable" type="bool" signature="isSeekable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playbackRate" type="float" signature="playbackRate() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error" location="qmediaplayer.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QMediaPlayer::errorString" href="qmediaplayer.html#error-prop" location="qmediaplayer.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="error" type="QString" signature="errorString() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="play" fullname="QMediaPlayer::play" href="qmediaplayer.html#play" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="play()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QMediaPlayer::pause" href="qmediaplayer.html#pause" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QMediaPlayer::stop" href="qmediaplayer.html#stop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPosition" fullname="QMediaPlayer::setPosition" href="qmediaplayer.html#position-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="position" type="void" signature="setPosition(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setVolume" fullname="QMediaPlayer::setVolume" href="qmediaplayer.html#volume-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="volume" type="void" signature="setVolume(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMuted" fullname="QMediaPlayer::setMuted" href="qmediaplayer.html#muted-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="muted" type="void" signature="setMuted(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackRate" fullname="QMediaPlayer::setPlaybackRate" href="qmediaplayer.html#playbackRate-prop" location="qmediaplayer.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="playbackRate" type="void" signature="setPlaybackRate(float rate)">
                <parameter left="float" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMedia" fullname="QMediaPlayer::setMedia" href="qmediaplayer.html#media-prop" location="qmediaplayer.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="media" type="void" signature="setMedia(const QMediaSource &amp; media, QIODevice * stream)">
                <parameter left="const QMediaSource &amp;" right="" name="media" default=""/>
                <parameter left="QIODevice *" right="" name="stream" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaChanged" fullname="QMediaPlayer::mediaChanged" href="qmediaplayer.html#mediaChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaChanged(const QMediaSource &amp; media)">
                <parameter left="const QMediaSource &amp;" right="" name="media" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QMediaPlayer::stateChanged" href="qmediaplayer.html#stateChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QMediaPlayer::State state)">
                <parameter left="QMediaPlayer::State" right="" name="state" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mediaStatusChanged" fullname="QMediaPlayer::mediaStatusChanged" href="qmediaplayer.html#mediaStatusChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mediaStatusChanged(QMediaPlayer::MediaStatus status)">
                <parameter left="QMediaPlayer::MediaStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="durationChanged" fullname="QMediaPlayer::durationChanged" href="qmediaplayer.html#durationChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="durationChanged(qint64 duration)">
                <parameter left="qint64" right="" name="duration" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="positionChanged" fullname="QMediaPlayer::positionChanged" href="qmediaplayer.html#positionChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="positionChanged(qint64 position)">
                <parameter left="qint64" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="volumeChanged" fullname="QMediaPlayer::volumeChanged" href="qmediaplayer.html#volumeChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="volumeChanged(int volume)">
                <parameter left="int" right="" name="volume" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="mutingChanged" fullname="QMediaPlayer::mutingChanged" href="qmediaplayer.html#mutingChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="mutingChanged(bool muted)">
                <parameter left="bool" right="" name="muted" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="videoAvailabilityChanged" fullname="QMediaPlayer::videoAvailabilityChanged" href="qmediaplayer.html#videoAvailabilityChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="videoAvailabilityChanged(bool videoAvailable)">
                <parameter left="bool" right="" name="videoAvailable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="bufferStatusChanged" fullname="QMediaPlayer::bufferStatusChanged" href="qmediaplayer.html#bufferStatusChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="bufferStatusChanged(int percentFilled)">
                <parameter left="int" right="" name="percentFilled" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="seekableChanged" fullname="QMediaPlayer::seekableChanged" href="qmediaplayer.html#seekableChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="seekableChanged(bool seekable)">
                <parameter left="bool" right="" name="seekable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackRateChanged" fullname="QMediaPlayer::playbackRateChanged" href="qmediaplayer.html#playbackRateChanged" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackRateChanged(float rate)">
                <parameter left="float" right="" name="rate" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error-2" location="qmediaplayer.h" virtual="non" meta="signal" const="false" static="false" overload="true" overload-number="2" type="void" signature="error(QMediaPlayer::Error error)">
                <parameter left="QMediaPlayer::Error" right="" name="error" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylistProvider" href="qmediaplaylistprovider.html" location="qmediaplaylistprovider.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylistProvider" fullname="QMediaPlaylistProvider::QMediaPlaylistProvider" href="qmediaplaylistprovider.html#QMediaPlaylistProvider" location="qmediaplaylistprovider.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylistProvider(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylistProvider" fullname="QMediaPlaylistProvider::~QMediaPlaylistProvider" href="qmediaplaylistprovider.html#dtor.QMediaPlaylistProvider" location="qmediaplaylistprovider.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylistProvider()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylistProvider::load" href="qmediaplaylistprovider.html#load" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="load(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylistProvider::load" href="qmediaplaylistprovider.html#load-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="load(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylistProvider::save" href="qmediaplaylistprovider.html#save" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylistProvider::save" href="qmediaplaylistprovider.html#save-2" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="save(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMediaPlaylistProvider::size" href="qmediaplaylistprovider.html#size" location="qmediaplaylistprovider.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlaylistProvider::media" href="qmediaplaylistprovider.html#media" location="qmediaplaylistprovider.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QMediaSource" signature="media(int index) const">
                <parameter left="int" right="" name="index" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMediaPlaylistProvider::isReadOnly" href="qmediaplaylistprovider.html#isReadOnly" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendItem" fullname="QMediaPlaylistProvider::appendItem" href="qmediaplaylistprovider.html#appendItem" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="appendItem(const QMediaSource &amp; source)">
                <parameter left="const QMediaSource &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertItem" fullname="QMediaPlaylistProvider::insertItem" href="qmediaplaylistprovider.html#insertItem" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="insertItem(int pos, const QMediaSource &amp; source)">
                <parameter left="int" right="" name="pos" default=""/>
                <parameter left="const QMediaSource &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItem" fullname="QMediaPlaylistProvider::removeItem" href="qmediaplaylistprovider.html#removeItem" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItem(int pos)">
                <parameter left="int" right="" name="pos" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItems" fullname="QMediaPlaylistProvider::removeItems" href="qmediaplaylistprovider.html#removeItems" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItems(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMediaPlaylistProvider::clear" href="qmediaplaylistprovider.html#clear" location="qmediaplaylistprovider.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="bool" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shuffle" fullname="QMediaPlaylistProvider::shuffle" href="qmediaplaylistprovider.html#shuffle" location="qmediaplaylistprovider.h" virtual="impure" meta="slot" const="false" static="false" overload="false" type="void" signature="shuffle()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeInserted" fullname="QMediaPlaylistProvider::itemsAboutToBeInserted" href="qmediaplaylistprovider.html#itemsAboutToBeInserted" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsInserted" fullname="QMediaPlaylistProvider::itemsInserted" href="qmediaplaylistprovider.html#itemsInserted" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeRemoved" fullname="QMediaPlaylistProvider::itemsAboutToBeRemoved" href="qmediaplaylistprovider.html#itemsAboutToBeRemoved" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsRemoved" fullname="QMediaPlaylistProvider::itemsRemoved" href="qmediaplaylistprovider.html#itemsRemoved" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsChanged" fullname="QMediaPlaylistProvider::itemsChanged" href="qmediaplaylistprovider.html#itemsChanged" location="qmediaplaylistprovider.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsChanged(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaPlaylistProvider::d_ptr" href="qmediaplaylistprovider.html#d_ptr-var" location="qmediaplaylistprovider.h" type="QMediaPlaylistProviderPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMetaDataProviderControl" href="qmetadataprovidercontrol.html" location="qmetadataprovidercontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMetaDataProviderControl" fullname="QMetaDataProviderControl::~QMetaDataProviderControl" href="qmetadataprovidercontrol.html#dtor.QMetaDataProviderControl" location="qmetadataprovidercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMetaDataProviderControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isWritable" fullname="QMetaDataProviderControl::isWritable" href="qmetadataprovidercontrol.html#isWritable" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isWritable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataAvailable" fullname="QMetaDataProviderControl::isMetaDataAvailable" href="qmetadataprovidercontrol.html#isMetaDataAvailable" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMetaDataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QMetaDataProviderControl::metaData" href="qmetadataprovidercontrol.html#metaData" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metaData(QMediaObject::MetaData key) const">
                <parameter left="QMediaObject::MetaData" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetaData" fullname="QMetaDataProviderControl::setMetaData" href="qmetadataprovidercontrol.html#setMetaData" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMetaData(QMediaObject::MetaData key, const QVariant &amp; value)">
                <parameter left="QMediaObject::MetaData" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extendedMetaData" fullname="QMetaDataProviderControl::extendedMetaData" href="qmetadataprovidercontrol.html#extendedMetaData" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="extendedMetaData(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtendedMetaData" fullname="QMetaDataProviderControl::setExtendedMetaData" href="qmetadataprovidercontrol.html#setExtendedMetaData" location="qmetadataprovidercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtendedMetaData(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QMetaDataProviderControl::metaDataChanged" href="qmetadataprovidercontrol.html#metaDataChanged" location="qmetadataprovidercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="writableChanged" fullname="QMetaDataProviderControl::writableChanged" href="qmetadataprovidercontrol.html#writableChanged" location="qmetadataprovidercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="writableChanged(bool writable)">
                <parameter left="bool" right="" name="writable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailableChanged" fullname="QMetaDataProviderControl::metaDataAvailableChanged" href="qmetadataprovidercontrol.html#metaDataAvailableChanged" location="qmetadataprovidercontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMetaDataProviderControl" fullname="QMetaDataProviderControl::QMetaDataProviderControl" href="qmetadataprovidercontrol.html#QMetaDataProviderControl" location="qmetadataprovidercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMetaDataProviderControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraControl" href="qcameracontrol.html" location="qcameracontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraControl" fullname="QCameraControl::~QCameraControl" href="qcameracontrol.html#dtor.QCameraControl" location="qcameracontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QCameraControl::start" href="qcameracontrol.html#start" location="qcameracontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="start()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QCameraControl::stop" href="qcameracontrol.html#stop" location="qcameracontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="stop()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QCameraControl::state" href="qcameracontrol.html#state" location="qcameracontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::State" signature="state() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QCameraControl::stateChanged" href="qcameracontrol.html#stateChanged" location="qcameracontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QCamera::State state)">
                <parameter left="QCamera::State" right="" name="state" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraControl" fullname="QCameraControl::QCameraControl" href="qcameracontrol.html#QCameraControl" location="qcameracontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QVideoRendererControl" href="qvideorenderercontrol.html" location="qvideorenderercontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QVideoRendererControl" fullname="QVideoRendererControl::QVideoRendererControl" href="qvideorenderercontrol.html#QVideoRendererControl" location="qvideorenderercontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QVideoRendererControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QVideoRendererControl" fullname="QVideoRendererControl::~QVideoRendererControl" href="qvideorenderercontrol.html#dtor.QVideoRendererControl" location="qvideorenderercontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QVideoRendererControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="surface" fullname="QVideoRendererControl::surface" href="qvideorenderercontrol.html#surface" location="qvideorenderercontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QAbstractVideoSurface *" signature="surface() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSurface" fullname="QVideoRendererControl::setSurface" href="qvideorenderercontrol.html#setSurface" location="qvideorenderercontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setSurface(QAbstractVideoSurface * surface)">
                <parameter left="QAbstractVideoSurface *" right="" name="surface" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaPlaylist" href="qmediaplaylist.html" location="qmediaplaylist.h" bases="QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="playlistProvider" fullname="QMediaPlaylist::playlistProvider" href="qmediaplaylist.html#playlistProvider-prop" location="qmediaplaylist.h" type="QMediaPlaylistProvider *">
                <getter name="playlistProvider"/>
                <setter name="setPlaylistProvider"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylist::playbackMode" href="qmediaplaylist.html#playbackMode-prop" location="qmediaplaylist.h" type="QMediaPlaylist::PlaybackMode">
                <getter name="playbackMode"/>
                <setter name="setPlaybackMode"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentMedia" fullname="QMediaPlaylist::currentMedia" href="qmediaplaylist.html#currentMedia-prop" location="qmediaplaylist.h" type="QMediaSource">
                <getter name="currentMedia"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentPosition" fullname="QMediaPlaylist::currentPosition" href="qmediaplaylist.html#currentPosition-prop" location="qmediaplaylist.h" type="int">
                <getter name="currentPosition"/>
                <setter name="setCurrentPosition"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="PlaybackMode" fullname="QMediaPlaylist::PlaybackMode" href="qmediaplaylist.html#PlaybackMode-enum" location="qmediaplaylist.h">
                <value name="CurrentItemOnce" value="0"/>
                <value name="CurrentItemInLoop" value="1"/>
                <value name="Linear" value="2"/>
                <value name="Loop" value="3"/>
                <value name="Random" value="4"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QMediaPlaylist" fullname="QMediaPlaylist::QMediaPlaylist" href="qmediaplaylist.html#QMediaPlaylist" location="qmediaplaylist.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaPlaylist(QMediaObject * parent)">
                <parameter left="QMediaObject *" right="" name="parent" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaPlaylist" fullname="QMediaPlaylist::~QMediaPlaylist" href="qmediaplaylist.html#dtor.QMediaPlaylist" location="qmediaplaylist.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaPlaylist()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProvider" fullname="QMediaPlaylist::playlistProvider" href="qmediaplaylist.html#playlistProvider-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playlistProvider" type="QMediaPlaylistProvider *" signature="playlistProvider() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaylistProvider" fullname="QMediaPlaylist::setPlaylistProvider" href="qmediaplaylist.html#playlistProvider-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="playlistProvider" type="bool" signature="setPlaylistProvider(QMediaPlaylistProvider * playlist)">
                <parameter left="QMediaPlaylistProvider *" right="" name="playlist" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackMode" fullname="QMediaPlaylist::playbackMode" href="qmediaplaylist.html#playbackMode-prop" location="qmediaplaylist.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="playbackMode" type="PlaybackMode" signature="playbackMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPlaybackMode" fullname="QMediaPlaylist::setPlaybackMode" href="qmediaplaylist.html#playbackMode-prop" location="qmediaplaylist.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="playbackMode" type="void" signature="setPlaybackMode(PlaybackMode mode)">
                <parameter left="PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentPosition" fullname="QMediaPlaylist::currentPosition" href="qmediaplaylist.html#currentPosition-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentPosition" type="int" signature="currentPosition() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMedia" fullname="QMediaPlaylist::currentMedia" href="qmediaplaylist.html#currentMedia-prop" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentMedia" type="QMediaSource" signature="currentMedia() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="nextPosition" fullname="QMediaPlaylist::nextPosition" href="qmediaplaylist.html#nextPosition" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="nextPosition(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="previousPosition" fullname="QMediaPlaylist::previousPosition" href="qmediaplaylist.html#previousPosition" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="previousPosition(int steps) const">
                <parameter left="int" right="" name="steps" default="1"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="media" fullname="QMediaPlaylist::media" href="qmediaplaylist.html#media" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QMediaSource" signature="media(int position) const">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="size" fullname="QMediaPlaylist::size" href="qmediaplaylist.html#size" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="size() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isEmpty" fullname="QMediaPlaylist::isEmpty" href="qmediaplaylist.html#isEmpty" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isEmpty() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isReadOnly" fullname="QMediaPlaylist::isReadOnly" href="qmediaplaylist.html#isReadOnly" location="qmediaplaylist.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isReadOnly() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="appendItem" fullname="QMediaPlaylist::appendItem" href="qmediaplaylist.html#appendItem" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="appendItem(const QMediaSource &amp; source)">
                <parameter left="const QMediaSource &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertItem" fullname="QMediaPlaylist::insertItem" href="qmediaplaylist.html#insertItem" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="insertItem(int pos, const QMediaSource &amp; source)">
                <parameter left="int" right="" name="pos" default=""/>
                <parameter left="const QMediaSource &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItem" fullname="QMediaPlaylist::removeItem" href="qmediaplaylist.html#removeItem" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItem(int pos)">
                <parameter left="int" right="" name="pos" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeItems" fullname="QMediaPlaylist::removeItems" href="qmediaplaylist.html#removeItems" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="removeItems(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clear" fullname="QMediaPlaylist::clear" href="qmediaplaylist.html#clear" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="clear()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylist::load" href="qmediaplaylist.html#load" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="load(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="load" fullname="QMediaPlaylist::load" href="qmediaplaylist.html#load-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="load(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylist::save" href="qmediaplaylist.html#save" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="bool" signature="save(const QUrl &amp; location, const char * format)">
                <parameter left="const QUrl &amp;" right="" name="location" default=""/>
                <parameter left="const char *" right="" name="format" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="save" fullname="QMediaPlaylist::save" href="qmediaplaylist.html#save-2" location="qmediaplaylist.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="bool" signature="save(QIODevice * device, const char * format)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const char *" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="shuffle" fullname="QMediaPlaylist::shuffle" href="qmediaplaylist.html#shuffle" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="shuffle()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="advance" fullname="QMediaPlaylist::advance" href="qmediaplaylist.html#advance" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="advance()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="back" fullname="QMediaPlaylist::back" href="qmediaplaylist.html#back" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="back()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentPosition" fullname="QMediaPlaylist::setCurrentPosition" href="qmediaplaylist.html#currentPosition-prop" location="qmediaplaylist.h" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="currentPosition" type="void" signature="setCurrentPosition(int playlistPosition)">
                <parameter left="int" right="" name="playlistPosition" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistProviderChanged" fullname="QMediaPlaylist::playlistProviderChanged" href="qmediaplaylist.html#playlistProviderChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistProviderChanged()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="playlistPositionChanged" fullname="QMediaPlaylist::playlistPositionChanged" href="qmediaplaylist.html#playlistPositionChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playlistPositionChanged(int position)">
                <parameter left="int" right="" name="position" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="playbackModeChanged" fullname="QMediaPlaylist::playbackModeChanged" href="qmediaplaylist.html#playbackModeChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="playbackModeChanged(QMediaPlaylist::PlaybackMode mode)">
                <parameter left="QMediaPlaylist::PlaybackMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentMediaChanged" fullname="QMediaPlaylist::currentMediaChanged" href="qmediaplaylist.html#currentMediaChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentMediaChanged(const QMediaSource &amp; source)">
                <parameter left="const QMediaSource &amp;" right="" name="source" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeInserted" fullname="QMediaPlaylist::itemsAboutToBeInserted" href="qmediaplaylist.html#itemsAboutToBeInserted" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsInserted" fullname="QMediaPlaylist::itemsInserted" href="qmediaplaylist.html#itemsInserted" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsInserted(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsAboutToBeRemoved" fullname="QMediaPlaylist::itemsAboutToBeRemoved" href="qmediaplaylist.html#itemsAboutToBeRemoved" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsAboutToBeRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsRemoved" fullname="QMediaPlaylist::itemsRemoved" href="qmediaplaylist.html#itemsRemoved" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsRemoved(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="itemsChanged" fullname="QMediaPlaylist::itemsChanged" href="qmediaplaylist.html#itemsChanged" location="qmediaplaylist.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="itemsChanged(int start, int end)">
                <parameter left="int" right="" name="start" default=""/>
                <parameter left="int" right="" name="end" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaPlaylist::d_ptr" href="qmediaplaylist.html#d_ptr-var" location="qmediaplaylist.h" type="QMediaPlaylistPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QAudioSource" href="qaudiosource.html" location="qaudiosource.h" bases="QMediaObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="QAudioSource" fullname="QAudioSource::QAudioSource" href="qaudiosource.html#QAudioSource" location="qaudiosource.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QAudioSource(QObject * parent, QMediaServiceProvider * provider)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
                <parameter left="QMediaServiceProvider *" right="" name="provider" default="0"/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QAudioSource" fullname="QAudioSource::~QAudioSource" href="qaudiosource.html#dtor.QAudioSource" location="qaudiosource.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QAudioSource()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QAudioSource::isValid" href="qaudiosource.html#isValid" location="qaudiosource.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="format" fullname="QAudioSource::format" href="qaudiosource.html#format" location="qaudiosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QAudioFormat" signature="format() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFormat" fullname="QAudioSource::setFormat" href="qaudiosource.html#setFormat" location="qaudiosource.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setFormat(const QAudioFormat &amp; format)">
                <parameter left="const QAudioFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFormatSupported" fullname="QAudioSource::isFormatSupported" href="qaudiosource.html#isFormatSupported" location="qaudiosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFormatSupported(const QAudioFormat &amp; format) const">
                <parameter left="const QAudioFormat &amp;" right="" name="format" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedCodecs" fullname="QAudioSource::supportedCodecs" href="qaudiosource.html#supportedCodecs" location="qaudiosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QStringList" signature="supportedCodecs() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFrequencies" fullname="QAudioSource::supportedFrequencies" href="qaudiosource.html#supportedFrequencies" location="qaudiosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedFrequencies() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedChannels" fullname="QAudioSource::supportedChannels" href="qaudiosource.html#supportedChannels" location="qaudiosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedChannels() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedSampleSizes" fullname="QAudioSource::supportedSampleSizes" href="qaudiosource.html#supportedSampleSizes" location="qaudiosource.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;int&gt;" signature="supportedSampleSizes() const"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraExposureControl" href="qcameraexposurecontrol.html" location="qcameraexposurecontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraExposureControl" fullname="QCameraExposureControl::~QCameraExposureControl" href="qcameraexposurecontrol.html#dtor.QCameraExposureControl" location="qcameraexposurecontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraExposureControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashMode" fullname="QCameraExposureControl::flashMode" href="qcameraexposurecontrol.html#flashMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::FlashMode" signature="flashMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFlashMode" fullname="QCameraExposureControl::setFlashMode" href="qcameraexposurecontrol.html#setFlashMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFlashMode(QCamera::FlashMode mode)">
                <parameter left="QCamera::FlashMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFlashModes" fullname="QCameraExposureControl::supportedFlashModes" href="qcameraexposurecontrol.html#supportedFlashModes" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::FlashModes" signature="supportedFlashModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFlashReady" fullname="QCameraExposureControl::isFlashReady" href="qcameraexposurecontrol.html#isFlashReady" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFlashReady() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureMode" fullname="QCameraExposureControl::exposureMode" href="qcameraexposurecontrol.html#exposureMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::ExposureMode" signature="exposureMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureMode" fullname="QCameraExposureControl::setExposureMode" href="qcameraexposurecontrol.html#setExposureMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureMode(QCamera::ExposureMode mode)">
                <parameter left="QCamera::ExposureMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedExposureModes" fullname="QCameraExposureControl::supportedExposureModes" href="qcameraexposurecontrol.html#supportedExposureModes" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::ExposureModes" signature="supportedExposureModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureCompensation" fullname="QCameraExposureControl::exposureCompensation" href="qcameraexposurecontrol.html#exposureCompensation" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="exposureCompensation() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExposureCompensation" fullname="QCameraExposureControl::setExposureCompensation" href="qcameraexposurecontrol.html#setExposureCompensation" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setExposureCompensation(qreal ev)">
                <parameter left="qreal" right="" name="ev" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="meteringMode" fullname="QCameraExposureControl::meteringMode" href="qcameraexposurecontrol.html#meteringMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::MeteringMode" signature="meteringMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMeteringMode" fullname="QCameraExposureControl::setMeteringMode" href="qcameraexposurecontrol.html#setMeteringMode" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMeteringMode(QCamera::MeteringMode mode)">
                <parameter left="QCamera::MeteringMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedMeteringModes" fullname="QCameraExposureControl::supportedMeteringModes" href="qcameraexposurecontrol.html#supportedMeteringModes" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::MeteringModes" signature="supportedMeteringModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isoSensitivity" fullname="QCameraExposureControl::isoSensitivity" href="qcameraexposurecontrol.html#isoSensitivity" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="int" signature="isoSensitivity() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedIsoSensitivityRange" fullname="QCameraExposureControl::supportedIsoSensitivityRange" href="qcameraexposurecontrol.html#supportedIsoSensitivityRange" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;int, int&gt;" signature="supportedIsoSensitivityRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualIsoSensitivity" fullname="QCameraExposureControl::setManualIsoSensitivity" href="qcameraexposurecontrol.html#setManualIsoSensitivity" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualIsoSensitivity(int iso)">
                <parameter left="int" right="" name="iso" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoIsoSensitivity" fullname="QCameraExposureControl::setAutoIsoSensitivity" href="qcameraexposurecontrol.html#setAutoIsoSensitivity" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoIsoSensitivity()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="aperture" fullname="QCameraExposureControl::aperture" href="qcameraexposurecontrol.html#aperture" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="aperture() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedApertureRange" fullname="QCameraExposureControl::supportedApertureRange" href="qcameraexposurecontrol.html#supportedApertureRange" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;qreal, qreal&gt;" signature="supportedApertureRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualAperture" fullname="QCameraExposureControl::setManualAperture" href="qcameraexposurecontrol.html#setManualAperture" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualAperture(qreal aperture)">
                <parameter left="qreal" right="" name="aperture" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoAperture" fullname="QCameraExposureControl::setAutoAperture" href="qcameraexposurecontrol.html#setAutoAperture" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoAperture()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="shutterSpeed" fullname="QCameraExposureControl::shutterSpeed" href="qcameraexposurecontrol.html#shutterSpeed" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="shutterSpeed() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedShutterSpeedRange" fullname="QCameraExposureControl::supportedShutterSpeedRange" href="qcameraexposurecontrol.html#supportedShutterSpeedRange" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QPair&lt;qreal, qreal&gt;" signature="supportedShutterSpeedRange() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setManualShutterSpeed" fullname="QCameraExposureControl::setManualShutterSpeed" href="qcameraexposurecontrol.html#setManualShutterSpeed" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setManualShutterSpeed(qreal seconds)">
                <parameter left="qreal" right="" name="seconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAutoShutterSpeed" fullname="QCameraExposureControl::setAutoShutterSpeed" href="qcameraexposurecontrol.html#setAutoShutterSpeed" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setAutoShutterSpeed()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isExposureLocked" fullname="QCameraExposureControl::isExposureLocked" href="qcameraexposurecontrol.html#isExposureLocked" location="qcameraexposurecontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isExposureLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockExposure" fullname="QCameraExposureControl::lockExposure" href="qcameraexposurecontrol.html#lockExposure" location="qcameraexposurecontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="lockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockExposure" fullname="QCameraExposureControl::unlockExposure" href="qcameraexposurecontrol.html#unlockExposure" location="qcameraexposurecontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockExposure()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="exposureLocked" fullname="QCameraExposureControl::exposureLocked" href="qcameraexposurecontrol.html#exposureLocked" location="qcameraexposurecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="exposureLocked()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="flashReady" fullname="QCameraExposureControl::flashReady" href="qcameraexposurecontrol.html#flashReady" location="qcameraexposurecontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="flashReady(bool ready)">
                <parameter left="bool" right="" name="ready" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraExposureControl" fullname="QCameraExposureControl::QCameraExposureControl" href="qcameraexposurecontrol.html#QCameraExposureControl" location="qcameraexposurecontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraExposureControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QCameraFocusControl" href="qcamerafocuscontrol.html" location="qcamerafocuscontrol.h" bases="QMediaControl" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QCameraFocusControl" fullname="QCameraFocusControl::~QCameraFocusControl" href="qcamerafocuscontrol.html#dtor.QCameraFocusControl" location="qcamerafocuscontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QCameraFocusControl()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusMode" fullname="QCameraFocusControl::focusMode" href="qcamerafocuscontrol.html#focusMode" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::FocusMode" signature="focusMode() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setFocusMode" fullname="QCameraFocusControl::setFocusMode" href="qcamerafocuscontrol.html#setFocusMode" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setFocusMode(QCamera::FocusMode mode)">
                <parameter left="QCamera::FocusMode" right="" name="mode" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="supportedFocusModes" fullname="QCameraFocusControl::supportedFocusModes" href="qcamerafocuscontrol.html#supportedFocusModes" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::FocusModes" signature="supportedFocusModes() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatus" fullname="QCameraFocusControl::focusStatus" href="qcamerafocuscontrol.html#focusStatus" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="QCamera::FocusStatus" signature="focusStatus() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="macroFocusingEnabled" fullname="QCameraFocusControl::macroFocusingEnabled" href="qcamerafocuscontrol.html#macroFocusingEnabled" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="macroFocusingEnabled() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMacroFocusingSupported" fullname="QCameraFocusControl::isMacroFocusingSupported" href="qcamerafocuscontrol.html#isMacroFocusingSupported" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isMacroFocusingSupported() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMacroFocusingEnabled" fullname="QCameraFocusControl::setMacroFocusingEnabled" href="qcamerafocuscontrol.html#setMacroFocusingEnabled" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="setMacroFocusingEnabled(bool enable)">
                <parameter left="bool" right="" name="enable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumOpticalZoom" fullname="QCameraFocusControl::maximumOpticalZoom" href="qcamerafocuscontrol.html#maximumOpticalZoom" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumOpticalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="maximumDigitalZoom" fullname="QCameraFocusControl::maximumDigitalZoom" href="qcamerafocuscontrol.html#maximumDigitalZoom" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="maximumDigitalZoom() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValue" fullname="QCameraFocusControl::zoomValue" href="qcamerafocuscontrol.html#zoomValue" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="qreal" signature="zoomValue() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomTo" fullname="QCameraFocusControl::zoomTo" href="qcamerafocuscontrol.html#zoomTo" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="zoomTo(qreal value)">
                <parameter left="qreal" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isFocusLocked" fullname="QCameraFocusControl::isFocusLocked" href="qcamerafocuscontrol.html#isFocusLocked" location="qcamerafocuscontrol.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isFocusLocked() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="lockFocus" fullname="QCameraFocusControl::lockFocus" href="qcamerafocuscontrol.html#lockFocus" location="qcamerafocuscontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="lockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="unlockFocus" fullname="QCameraFocusControl::unlockFocus" href="qcamerafocuscontrol.html#unlockFocus" location="qcamerafocuscontrol.h" virtual="pure" meta="slot" const="false" static="false" overload="false" type="void" signature="unlockFocus()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="zoomValueChanged" fullname="QCameraFocusControl::zoomValueChanged" href="qcamerafocuscontrol.html#zoomValueChanged" location="qcamerafocuscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="zoomValueChanged(qreal zoom)">
                <parameter left="qreal" right="" name="zoom" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusStatusChanged" fullname="QCameraFocusControl::focusStatusChanged" href="qcamerafocuscontrol.html#focusStatusChanged" location="qcamerafocuscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusStatusChanged(QCamera::FocusStatus status)">
                <parameter left="QCamera::FocusStatus" right="" name="status" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="focusLocked" fullname="QCameraFocusControl::focusLocked" href="qcamerafocuscontrol.html#focusLocked" location="qcamerafocuscontrol.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="focusLocked()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QCameraFocusControl" fullname="QCameraFocusControl::QCameraFocusControl" href="qcamerafocuscontrol.html#QCameraFocusControl" location="qcamerafocuscontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QCameraFocusControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default=""/>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaObject" href="qmediaobject.html" location="qmediaobject.h" bases="QObject" module="">
            <property access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QMediaObject::notifyInterval" href="qmediaobject.html#notifyInterval-prop" location="qmediaobject.h" type="int">
                <getter name="notifyInterval"/>
                <setter name="setNotifyInterval"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailable" fullname="QMediaObject::metaDataAvailable" href="qmediaobject.html#metaDataAvailable-prop" location="qmediaobject.h" type="bool">
                <getter name="isMetaDataAvailable"/>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="metaDataWritable" fullname="QMediaObject::metaDataWritable" href="qmediaobject.html#metaDataWritable-prop" location="qmediaobject.h" type="bool">
                <getter name="isMetaDataWritable"/>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="MetaData" fullname="QMediaObject::MetaData" href="qmediaobject.html#MetaData-enum" location="qmediaobject.h">
                <value name="Title" value="0"/>
                <value name="SubTitle" value="1"/>
                <value name="Author" value="2"/>
                <value name="Comment" value="3"/>
                <value name="Description" value="4"/>
                <value name="Category" value="5"/>
                <value name="Genre" value="6"/>
                <value name="Year" value="7"/>
                <value name="Date" value="8"/>
                <value name="UserRating" value="9"/>
                <value name="Keywords" value="10"/>
                <value name="Language" value="11"/>
                <value name="Publisher" value="12"/>
                <value name="Copyright" value="13"/>
                <value name="ParentalRating" value="14"/>
                <value name="RatingOrganisation" value="15"/>
                <value name="Size" value="16"/>
                <value name="MediaType" value="17"/>
                <value name="Duration" value="18"/>
                <value name="AudioBitrate" value="19"/>
                <value name="AudioCodec" value="20"/>
                <value name="AverageLevel" value="21"/>
                <value name="Channels" value="22"/>
                <value name="PeakValue" value="23"/>
                <value name="Frequency" value="24"/>
                <value name="AlbumTitle" value="25"/>
                <value name="AlbumArtist" value="26"/>
                <value name="ContributingArtist" value="27"/>
                <value name="Composer" value="28"/>
                <value name="Conductor" value="29"/>
                <value name="Lyrics" value="30"/>
                <value name="Mood" value="31"/>
                <value name="TrackNumber" value="32"/>
                <value name="TrackCount" value="33"/>
                <value name="CoverArtUriSmall" value="34"/>
                <value name="CoverArtUriLarge" value="35"/>
                <value name="Resolution" value="36"/>
                <value name="PixelAspectRatio" value="37"/>
                <value name="FrameRate" value="38"/>
                <value name="VideoBitRate" value="39"/>
                <value name="VideoCodec" value="40"/>
                <value name="PosterUri" value="41"/>
                <value name="ChapterNumber" value="42"/>
                <value name="Director" value="43"/>
                <value name="LeadPerformer" value="44"/>
                <value name="Writer" value="45"/>
                <value name="CameraManufacturer" value="46"/>
                <value name="CameraModel" value="47"/>
                <value name="Event" value="48"/>
                <value name="Subject" value="49"/>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaObject" fullname="QMediaObject::~QMediaObject" href="qmediaobject.html#dtor.QMediaObject" location="qmediaobject.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaObject()"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="service" fullname="QMediaObject::service" href="qmediaobject.html#service" location="qmediaobject.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QMediaService *" signature="service() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isValid" fullname="QMediaObject::isValid" href="qmediaobject.html#isValid" location="qmediaobject.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="isValid() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyInterval" fullname="QMediaObject::notifyInterval" href="qmediaobject.html#notifyInterval-prop" location="qmediaobject.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="notifyInterval" type="int" signature="notifyInterval() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="setNotifyInterval" fullname="QMediaObject::setNotifyInterval" href="qmediaobject.html#notifyInterval-prop" location="qmediaobject.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="notifyInterval" type="void" signature="setNotifyInterval(int milliSeconds)">
                <parameter left="int" right="" name="milliSeconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataAvailable" fullname="QMediaObject::isMetaDataAvailable" href="qmediaobject.html#metaDataAvailable-prop" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="metaDataAvailable" type="bool" signature="isMetaDataAvailable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="isMetaDataWritable" fullname="QMediaObject::isMetaDataWritable" href="qmediaobject.html#metaDataWritable-prop" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="metaDataWritable" type="bool" signature="isMetaDataWritable() const"/>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaData" fullname="QMediaObject::metaData" href="qmediaobject.html#metaData" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="metaData(MetaData key) const">
                <parameter left="MetaData" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMetaData" fullname="QMediaObject::setMetaData" href="qmediaobject.html#setMetaData" location="qmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setMetaData(MetaData key, const QVariant &amp; value)">
                <parameter left="MetaData" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="extendedMetaData" fullname="QMediaObject::extendedMetaData" href="qmediaobject.html#extendedMetaData" location="qmediaobject.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="extendedMetaData(const QString &amp; key) const">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setExtendedMetaData" fullname="QMediaObject::setExtendedMetaData" href="qmediaobject.html#setExtendedMetaData" location="qmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setExtendedMetaData(const QString &amp; key, const QVariant &amp; value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="notifyIntervalChanged" fullname="QMediaObject::notifyIntervalChanged" href="qmediaobject.html#notifyIntervalChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="notifyIntervalChanged(int milliSeconds)">
                <parameter left="int" right="" name="milliSeconds" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataAvailableChanged" fullname="QMediaObject::metaDataAvailableChanged" href="qmediaobject.html#metaDataAvailableChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataAvailableChanged(bool available)">
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataWritableChanged" fullname="QMediaObject::metaDataWritableChanged" href="qmediaobject.html#metaDataWritableChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataWritableChanged(bool writable)">
                <parameter left="bool" right="" name="writable" default=""/>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="metaDataChanged" fullname="QMediaObject::metaDataChanged" href="qmediaobject.html#metaDataChanged" location="qmediaobject.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="metaDataChanged()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaObject" fullname="QMediaObject::QMediaObject" href="qmediaobject.html#QMediaObject" location="qmediaobject.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaObject(QObject * parent, QMediaService * service)">
                <parameter left="QObject *" right="" name="parent" default=""/>
                <parameter left="QMediaService *" right="" name="service" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="addPropertyWatch" fullname="QMediaObject::addPropertyWatch" href="qmediaobject.html#addPropertyWatch" location="qmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addPropertyWatch(QByteArray const &amp; name)">
                <parameter left="QByteArray const &amp;" right="" name="name" default=""/>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="removePropertyWatch" fullname="QMediaObject::removePropertyWatch" href="qmediaobject.html#removePropertyWatch" location="qmediaobject.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removePropertyWatch(QByteArray const &amp; name)">
                <parameter left="QByteArray const &amp;" right="" name="name" default=""/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaObject::d_ptr" href="qmediaobject.html#d_ptr-var" location="qmediaobject.h" type="QMediaObjectPrivate *" static="false"/>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QMediaControl" href="qmediacontrol.html" location="qmediacontrol.h" bases="QObject" module="">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QMediaControl" fullname="QMediaControl::~QMediaControl" href="qmediacontrol.html#dtor.QMediaControl" location="qmediacontrol.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QMediaControl()"/>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QMediaControl" fullname="QMediaControl::QMediaControl" href="qmediacontrol.html#QMediaControl" location="qmediacontrol.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QMediaControl(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <variable access="protected" threadsafety="unspecified" status="commendable" name="d_ptr" fullname="QMediaControl::d_ptr" href="qmediacontrol.html#d_ptr-var" location="qmediacontrol.h" type="QMediaControlPrivate *" static="false"/>
        </class>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoRendererControl_iid" href="qvideorenderercontrol.html#QVideoRendererControl_iid" location="qvideorenderercontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoRendererControl" type="" signature="QVideoRendererControl_iid()"/>
        <function access="public" threadsafety="unspecified" status="commendable" name="QVideoDeviceControl_iid" href="qvideodevicecontrol.html#QVideoDeviceControl_iid" location="qvideodevicecontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QVideoDeviceControl" type="" signature="QVideoDeviceControl_iid()"/>
        <page access="public" status="commendable" name="index.html" href="index.html" subtype="page" title="Multimedia Library Developer Resources" fulltitle="Multimedia Library Developer Resources" subtitle="" location="index.qdoc">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="reference-documentation" title="Reference documentation" level="1"/>
            <contents name="main-classes" title="Main classes" level="2"/>
            <contents name="classes-for-service-implementers" title="Classes for service implementers." level="2"/>
        </page>
        <function access="public" threadsafety="unspecified" status="commendable" name="QAudioDeviceControl_iid" href="qaudiodevicecontrol.html#QAudioDeviceControl_iid" location="qaudiodevicecontrol.cpp" virtual="non" meta="macrowithoutparams" const="false" static="false" overload="false" relates="QAudioDeviceControl" type="" signature="QAudioDeviceControl_iid()"/>
    </namespace>
</INDEX>
