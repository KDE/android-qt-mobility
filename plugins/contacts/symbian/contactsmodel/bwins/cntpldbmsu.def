EXPORTS
	?ContactProperties@CPersistenceLayer@@QAEAAVMLplContactProperties@@XZ @ 1 NONAME ; class MLplContactProperties & CPersistenceLayer::ContactProperties(void)
	?ContactsFileL@CPersistenceLayer@@QAEAAVMLplContactsFile@@XZ @ 2 NONAME ; class MLplContactsFile & CPersistenceLayer::ContactsFileL(void)
	?NewLC@CPersistenceLayer@@SAPAV1@AAVRFs@@PAVMIniFileManager@@PAVMContactDbObserver@@PAVMCntFileObserver@@@Z @ 3 NONAME ; class CPersistenceLayer * CPersistenceLayer::NewLC(class RFs &, class MIniFileManager *, class MContactDbObserver *, class MCntFileObserver *)
 	?PersistenceBroker@CPersistenceLayer@@QAEAAVMLplPersistenceBroker@@XZ @ 4 NONAME ; class MLplPersistenceBroker & CPersistenceLayer::PersistenceBroker(void)
	?PersistenceLayerTestL@CPersistenceLayer@@QAEAAVMLplPersistenceLayerTest@@XZ @ 5 NONAME ; public: class MLplPersistenceLayerTest & __thiscall CPersistenceLayer::PersistenceLayerTestL(void)
	?TransactionManager@CPersistenceLayer@@QAEAAVMLplTransactionManager@@XZ @ 6 NONAME ; class MLplTransactionManager & CPersistenceLayer::TransactionManager(void)
	??1CContactSynchroniser@@UAE@XZ @ 7 NONAME ; public: virtual __thiscall CContactSynchroniser::~CContactSynchroniser(void)
	?MContactSynchroniser_Reserved_1@MContactSynchroniser@@EAEXXZ @ 8 NONAME ; private: virtual void __thiscall MContactSynchroniser::MContactSynchroniser_Reserved_1(void)
	?FactoryL@CPersistenceLayer@@QAEAAVMLplPersistenceLayerFactory@@XZ @ 9 NONAME ; class MLplPersistenceLayerFactory & CPersistenceLayer::FactoryL(void)
	?RegisterDbObserver@CPersistenceLayer@@QAEXAAVMContactDbObserver@@@Z @ 10 NONAME ; void CPersistenceLayer::RegisterDbObserver(class MContactDbObserver &)

