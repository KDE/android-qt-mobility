// This file is exported to c:/filtering/test_data.txt
//
// Usage [FilterType: Definition, Field, Value, MatchFlag, Results, Error expected]
//
// Match flags: 0 = MatchExactly;
//        		1 = MatchContains;
//				2 = MatchStartsWith;
//        		3 = MatchEndsWith;
//				default = MatchFixedString;;  ---> This not supporeted.
//												It represents a failing case
//
// Error expected:	0 = NoError (default)
//					9 = NotSupportedError
//					10 = BadArgumentError
//
// ************************************************************************************

//Name  First ,Last 
// Contact created in code.
// Stefann Fedrernn +02644424423 ste.Fed@nokia.com
// Johnn Lenonn +026434234423 Len.Jo@nokia.com
// Joronn Bondnn  29143225214423 Joronn.Bondnn@nokia.com
// Micheal Jack  +358035022423 micheal.jack@nokia.com
// Susan Daniel  +044035022423 dan.susa@nokia.com
//-----------------------------------------------------------------------
//Name - Match exactly
[ContactDetailFilter1: Name, First, Stefann, 0, 1, 0]
[ContactDetailFilter2: Name, Last, Daniel, 0, 1, 0]
         //Name - MatchContains
[ContactDetailFilter3: Name, First, nn, 1, 3, 0]
[ContactDetailFilter4: Name, Last, n, 1, 4, 0]
         //Name - MatchStartsWith
[ContactDetailFilter5: Name, First, Jo, 2, 2, 0]
[ContactDetailFilter6: Name, Last, Len, 2, 1, 0]
         //Name - MatchEndsWith
[ContactDetailFilter7: Name, First, nn, 3, 3, 0]
[ContactDetailFilter8: Name, Last, ack, 3, 1, 0]
         //Name - No results search
[ContactDetailFilter7: Name, First, King, 3, 0, 0]
[ContactDetailFilter8: Name, Last, Queen, 3, 0, 0]
//-----------------------------------------------------------------------
//Email - Match exactly
[ContactDetailFilter9: EmailAddress, EmailAddress, ste.Fed@nokia.com, 0, 1, 0]
//Email - MatchContains
[ContactDetailFilter10: EmailAddress, EmailAddress, nokia, 1, 5, 0]
//Email - MatchStartsWith
[ContactDetailFilter11: EmailAddress, EmailAddress, Joronn, 2, 1, 0]
//Email - MatchEndsWith
[ContactDetailFilter12: EmailAddress, EmailAddress, com, 3, 5, 0]
//Email - No results search
[ContactDetailFilter13: EmailAddress, EmailAddress, andrewf, 3, 0, 0]
//-----------------------------------------------------------------------
//Phonenumber - Match exactly
[ContactDetailFilter14: PhoneNumber, PhoneNumber, +026434234423, 0, 1, 0]
//Phonenumber - MatchContains
[ContactDetailFilter15: PhoneNumber, PhoneNumber, 225214, 1, 0, 0]
//Phonenumber - MatchStartsWith
[ContactDetailFilter16: PhoneNumber, PhoneNumber, +358, 2, 0, 0]
//Phonenumber - MatchEndsWith
[ContactDetailFilter17: PhoneNumber, PhoneNumber, 035022423, 3, 2, 0]
//Phonenumber - No results search
[ContactDetailFilter18: PhoneNumber, PhoneNumber, 52252361425342322, 3, 0, 0]
//-----------------------------------------------------------------------
// [ActionFilter: ActionName, Value, Vendor, 20]

// [ContactDetailRangeFilter: ActionName, Value, Vendor, 20]

// [ChangeLogFilter: Name, Fieldtype, Kiki ]

// [RelationshipFilter: ActionName, Value, Vendor, 20]

// [IntersectionFilter: (Name, First, Kiki, 1, 20) || ()]

// [UnionFilter: (Name, First, Kiki, 1, 20) && ()]

// [LocalIdFilter: Name, Fieldtype, Kiki, 1, 20]

// [DefaultFilter: Name, Fieldtype, Kiki, 1, 20]

// [InvalidFilter: Name, Fieldtype, Kiki, 1, 20]
