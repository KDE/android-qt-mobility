1.  Prerequisites & Dependencies:
    To install Qt Mobility you must already have installed
    Qt 4.6 or higher, visit http://qt.nokia.com/downloads to obtain
    a copy.

    Qt Mobility is comprised of a number of domains.
    Some of these domains have dependencies and
    these are outlined below:
    
    Messaging: 
    The linux backend depends on QMF.
    For more information on QMF visit 
    http://labs.trolltech.com/blogs/category/qtmessaging

    The Windows Mobile backend depends on ActiveSync version 4.5.

    Service Framework:
    The service framework depends on SQLite version 3 and that
    Qt has been built with an sqlite driver.  Building
    the driver by Qt is most easily achieved by 
    using one of the following configure options:
    -qt-sql-sqlite
    -plugin-sql-sqlite
    -system-sqlite
    
    Multimedia:
    The multimedia component depends on the QtMultimedia
    module in Qt.  Qt by default is configured to make this
    module with the -multimedia option.

    For more details about dependencies see:
    <TODO: QtMobility URL>

2.  Unpack the Qt Mobility archive if you have not done so already:
    On Unix (X11 and Mac):
        cd /tmp
        gunzip %DISTNAME%.tar.gz        #uncompress the archive
        tar xvf %DISTNAME%.tar          #unpack it

    This creates the directory /tmp/%DISTNAME% containing the files
    from the archive.  We only support the GNU version of the tar
    archiving utility.  Note on some systems it is called gtar.

    On windows, uncompress the zip file into the directory you want
    Qt Mobility installed, extracting to C:\QtMobility
    will create the directory C:\QtMobility\%DISTNAME%

    NOTE: The install path must not contain any spaces.

4.  Building
4.1 Building On Unix
    
    To configure the Qt Mobility libraries for your machine, run the
    ./configure script in the package directory.

    To specify the installation directory you may use the -prefix
    option.  Not passing a prefix installs the
    mobility libraries into $PWD/install.

        cd /tmp/%DISTNAME%
        ./configure -prefix $TARGET_DIR
    
    Type "./configure -help" to get a list of all available options.
    
    To create all the libraries and tools, type:

        make

    To install the libraries and tools to $TARGET_DIR type:

        make install

    If you have specified an install directory with root ownership,
    you will need to type:

    su -c "make install"
        or
    sudo make install
   
    and enter in the appropriate password.

    Note that on some systems the make utility is named differently,
    e.g. gmake.  The configure script tells you which make utility to
    use.

4.2 Building On Windows
    To configure the Qt Mobility libraries for your machine, run
    configure in the package directory.

    To specify the installation directory you may use the -prefix
    option.  Not passing a prefix installs the mobility
    libraries into an install directory within current working
    directory.

    \code
    cd c:\QtMobility\%DISTNAME%
    configure -prefix %TARGET_DIR%
    \endcode
    
    Type "configure -help" to get a list of all available options.

    The actual commands needed to build Qt Mobility depends on your
    development system.  For Microsoft Visual Studio to create and install
    libraries and tools type:
        
        nmake
        nmake install

4.3 Building Individual Qt Mobility Components

    Qt Mobility is comprised of several components but all of
    these may not need to be built.  To build a single component,
    perform the configure step as outlined in 4.1 and 4.2,
    and then perform the make step in the appropriate directory
    to create the desired library.

    The directory structure will look something like
    ./src/bearer
    ./src/contacts
    ... 
    ./src/systeminfo 

    e.g. To build bearer on Unix:
        cd ./src/bearer
        make
        make install

    or on Windows:
        cd src\bearer
        nmake

5.  Environment Variables
    In order to use QtMobility some environment variables
    need to be extended to locate the libraries, which are
    placed in the lib directory of the install path.

    On Unix:
    LD_LIBRARY_PATH should be extended to include:
    $TARGET_DIR/lib

    In .profile (if your Unix shell is bash,ksh,zsh or sh),
    add the following lines
   
        LD_LIBRARY_PATH=$TARGET_DIR/lib:$LD_LIBRARY_PATH
        export LD_LIBRARY_PATH

    In .login (incase your shell is csh or tcsh), add the following
    line:

        setenv LD_LIBRARY_PATH=$TARGET_DIR/lib:$LD_LIBRARY_PATH

    If you use a different Unix shell, please modify your
    your environment variables accordingly.

    On Windows:
    PATH should be extended to include:
    C:\%TARGET_DIR%\lib

    For newer versions of windows, PATH can be extended
    through "Start->Settings->Control Panel->System->Advanced->
    Environment variables" and for older versions by 
    editing C:\autoexec.bat

6.  Qt Mobility has been installed.
    Further information on Qt Mobility can be found
    at <TODO: QtMobility URL>

    We hope you enjoy using Qt Mobility. Good luck!
