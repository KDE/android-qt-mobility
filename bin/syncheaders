#!/usr/bin/perl

use strict;
use warnings;

use File::Basename;
use File::stat;
use File::Path;

my $allow_non_exported = 1;
if ( @ARGV && $ARGV[0] eq "-needs-export" ) {
    shift(@ARGV);
    $allow_non_exported = 0;
}

my $outdir = shift(@ARGV) or usage();
mkpath($outdir);

my $indir = shift(@ARGV) or usage();
processFile($indir);

exit 0;

sub usage
{
    print "Usage:  syncheaders [-needs-export] outdir indir\n";
    print "        Processes all public header files <indir>\n";
    exit 2;
}

sub processFile
{
    my ( $read_dir ) = @_;
    my @allFiles;
    my $filename;

    opendir( THISDIR, $read_dir) or die "Can't read $read_dir";
    #process all header files
    @allFiles = grep /\.h/,  readdir THISDIR;
    #don't include private headers
    @allFiles = grep !/_p\.h/, @allFiles;

    for $filename (@allFiles) {
        open INPUT, "$indir/$filename" or die "Can't read $filename";

        my $src_s = stat("$indir/$filename");
        my $now = $src_s->mtime;

        while (<INPUT>) {
            if ( /^\s*class\s+.*_EXPORT\s+([^\s:]+)/ ||
                 ($allow_non_exported && /^\s*class\s+([^\s:<]+)/ && index($_, ";") == -1) ||
                 /syncqtopia\s+header\s+([^\s:]+)/ )
            {
                # Skip preprocessor-related items
                next if ( $1 =~ /#/ );

                my $outfile = "$outdir/$1";

                print "Create header $outfile\n";

                #system("install", "-m", "0644", $filename, $outfile);
                open OUT, ">$outfile" or die "Can't write $outfile";
                print OUT "#include \"".basename($filename)."\"\n";
                close OUT;
            }
        }
        close INPUT;
    }
}

